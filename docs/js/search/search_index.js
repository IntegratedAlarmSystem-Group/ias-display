var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.178,1,0.641]],["body/components/AckButtonComponent.html",[0,0.356,1,1.043,2,0.115,3,0.083,4,0.68,5,1.312,6,0.65,7,0.067,8,5.111,9,5.592,10,2.505,11,0.296,12,1.399,13,0.681,14,3.166,15,2.963,16,2.84,17,2.941,18,4.285,19,0.796,20,0.919,21,4.438,22,0.71,23,1.28,24,1.221,25,1.253,26,0.796,27,3.843,28,0.796,29,3.843,30,0.275,31,0.796,32,1.2,33,3.453,34,0.739,35,6.205,36,5.364,37,4.81,38,0.996,39,3.029,40,1.477,41,0.706,42,0.498,43,3.056,44,4.591,45,6.236,46,6.236,47,0.579,48,4.285,49,0.759,50,0.833,51,0.872,52,0.017,53,0.587,54,0.739,55,0.723,56,1.337,57,3.09,58,0.739,59,3.744,60,3.166,61,2.257,62,2.676,63,4.81,64,5.364,65,2.398,66,1.675,67,1.653,68,3.536,69,2.169,70,4.957,71,0.692,72,2.257,73,1.541,74,3.536,75,1.973,76,4.81,77,1.821,78,3.536,79,1.131,80,1.477,81,3.843,82,4.285,83,3.029,84,3.843,85,4.285,86,4.285,87,0.796,88,3.536,89,3.843,90,5.364,91,3.536,92,3.791,93,2.676,94,0.919,95,2.84,96,3.536,97,0.274,98,0.131,99,3.056,100,2.16,101,1.804,102,0.741,103,0.099,104,0.047,105,1,106,1.421,107,0.995,108,3.056,109,3.056,110,3.056,111,1.908,112,1.179,113,3.056,114,2.317,115,3.536,116,2.317,117,1.038,118,2.16,119,0.421,120,0.995,121,0.995,122,0.953,123,1.246,124,0.71,125,0.995,126,0.567,127,0.71,128,0.567,129,0.71,130,0.421,131,0.71,132,0.594,133,0.71,134,0.567,135,0.862,136,1.246,137,0.567,138,0.71,139,0.594,140,1.149,141,0.594,142,1.149,143,0.594,144,1.149,145,0.594,146,0.71,147,0.594,148,0.71,149,0.594,150,0.68,151,0.594,152,0.71,153,0.594,154,0.594,155,0.567,156,0.71,157,0.594,158,0.594,159,0.71,160,0.567,161,0.71,162,0.594,163,0.541,164,0.71,165,0.541,166,0.567,167,0.995,168,0.541,169,0.65,170,0.594,171,1.036,172,0.65,173,1.053,174,0.567,175,0.71,176,0.594,177,0.399,178,0.622,179,0.594,180,0.833,181,0.71,182,0.594,183,0.594,184,0.594,185,0.541,186,0.594,187,0.594,188,0.68,189,0.71,190,0.01,191,0.01]],["title/components/AckComponent.html",[0,0.178,126,0.612]],["body/components/AckComponent.html",[0,0.352,1,0.409,2,0.079,3,0.057,4,0.468,5,0.489,6,0.448,7,0.046,11,0.289,12,0.448,13,0.672,14,2.642,15,2.589,16,2.636,17,3.082,19,0.604,20,0.738,22,0.489,23,1.243,24,1.186,25,1.189,26,0.604,28,0.604,30,0.189,31,0.604,32,1.241,33,3.252,34,0.705,38,0.831,40,0.896,41,0.746,42,0.378,44,4.156,47,0.578,51,0.662,52,0.017,53,0.49,54,0.796,55,0.549,56,1.257,57,2.794,58,0.666,59,3.536,60,1.242,61,2.036,62,3.194,65,1.82,66,1.598,71,0.696,72,1.369,73,1.142,75,1.498,77,1.351,79,0.859,80,1.233,83,2.299,87,1.002,93,2.794,94,0.604,97,0.259,98,0.091,100,1.487,101,1.242,102,0.51,103,0.068,104,0.032,105,0.945,106,1.689,107,1.457,111,2.484,112,1.255,114,2.466,116,1.595,117,1.997,118,1.487,119,0.29,120,0.756,121,0.756,122,0.723,123,1.039,124,0.489,125,0.756,126,0.831,127,0.489,128,0.391,129,0.489,130,0.29,131,0.489,132,0.409,133,0.489,134,0.391,135,0.719,136,1.039,137,0.391,138,0.489,139,0.409,140,0.924,141,0.409,142,0.924,143,0.409,144,0.924,145,0.409,146,0.489,147,0.409,148,0.489,149,0.409,150,0.468,151,0.409,152,0.489,153,0.409,154,0.409,155,0.391,156,0.489,157,0.409,158,0.409,159,0.489,160,0.391,161,0.489,162,0.409,163,0.373,164,0.489,165,0.373,166,0.391,167,0.756,168,0.373,169,0.448,170,0.409,171,0.93,172,0.448,173,0.846,174,0.391,175,0.489,176,0.409,177,0.274,178,0.428,179,0.409,180,0.633,181,0.489,182,0.409,183,0.409,184,0.409,185,0.373,186,0.409,187,0.409,188,0.468,189,0.489,190,0.011,191,0.008,192,2.104,193,2.863,194,3.26,195,3.764,196,3.764,197,5.177,198,3.194,199,5.177,200,4.379,201,4.458,202,5.177,203,5.181,204,5.177,205,5.177,206,4.588,207,4.013,208,3.668,209,4.013,210,4.193,211,4.013,212,3.764,213,2.104,214,4.941,215,1.837,216,2.708,217,3.668,218,4.339,219,4.013,220,3.764,221,0.723,222,2.334,223,3.392,224,3.215,225,1.883,226,1.883,227,2.917,228,3.331,229,2.156,230,1.82,231,2.156,232,2.434,233,3.607,234,2.434,235,2.031,236,2.434,237,2.794,238,6.542,239,2.917,240,2.434,241,4.177,242,1.285,243,2.466,244,1.201,245,2.434,246,2.917,247,4.013,248,2.917,249,3.829,250,2.504,251,2.434,252,2.667,253,2.434,254,2.156,255,2.434,256,2.434,257,2.917,258,2.434,259,2.156,260,1.92,261,2.466,262,2.299,263,2.917,264,3.764,265,2.434,266,2.299,267,2.425,268,2.468,269,4.013,270,2.917,271,1.233,272,1.076,273,2.434,274,2.434,275,5.177,276,2.434,277,1.576,278,2.434,279,3.253,280,4.013,281,2.434,282,1.82,283,2.466,284,4.783,285,2.434,286,2.434,287,3.764,288,2.604,289,1.82,290,2.917,291,2.917,292,2.604,293,2.917,294,3.567,295,2.434,296,1.395,297,1.242,298,0.778,299,2.917,300,0.58,301,1.887,302,1.887,303,1.887,304,1.887,305,1.887,306,1.887,307,1.887,308,1.887,309,1.887,310,2.434,311,1.887,312,1.887,313,4.339,314,1.887,315,1.887,316,2.917,317,2.434,318,3.764,319,1.887,320,2.434,321,2.917,322,3.015,323,1.887,324,1.887,325,1.887,326,2.434,327,0.604,328,2.434,329,3.764,330,2.434,331,3.764,332,2.434,333,2.434,334,2.031,335,2.434,336,5.177,337,2.434,338,2.434,339,2.434,340,1.725,341,1.887,342,1.725,343,1.887,344,1.887,345,1.725,346,1.887,347,1.887,348,1.887,349,1.725,350,3.253,351,3.253,352,2.031,353,2.466,354,3.253,355,2.917,356,3.764,357,3.253]],["title/modules/ActionsModule.html",[358,0.871,359,2.06]],["body/modules/ActionsModule.html",[1,1.311,2,0.154,3,0.111,7,0.09,9,3.664,25,1.012,33,3.385,52,0.017,58,0.563,97,0.334,98,0.176,100,2.888,103,0.195,104,0.063,119,0.563,126,1.252,128,1.182,130,0.563,147,1.311,162,1.311,163,1.195,187,1.311,188,0.909,190,0.012,191,0.012,226,2.41,228,2.551,296,2.708,297,2.412,358,1.374,359,4.372,360,1.576,361,2.898,362,2.068,363,4.086,364,4.086,365,4.086,366,4.086,367,4.086,368,3.385,369,3.385,370,3.385,371,2.767,372,2.172,373,2.068,374,4.727,375,2.767,376,3.072,377,2.172,378,4.727,379,4.727,380,6.626,381,3.664,382,3.664,383,3.349,384,4.727,385,1.798,386,4.668,387,4.668,388,4.668,389,1.971,390,2.551,391,2.708,392,2.708,393,2.708,394,4.727]],["title/classes/Alarm.html",[41,0.361,104,0.05]],["body/classes/Alarm.html",[2,0.147,3,0.055,7,0.045,11,0.359,13,0.512,17,2.827,25,1.231,30,0.184,31,0.59,34,0.696,41,0.758,42,0.237,47,0.596,49,0.563,50,1.026,51,0.896,52,0.017,53,0.553,54,0.853,55,0.744,58,0.903,66,1.989,71,0.756,72,2.741,73,1.371,77,1.716,80,0.562,83,4.246,93,2.75,94,1.246,95,2.107,103,0.142,104,0.083,105,1.015,106,1.451,107,2.062,112,0.788,165,0.78,166,1.221,180,0.397,190,0.008,191,0.008,201,3.831,222,3.153,225,2.296,237,3.5,242,1.451,243,3.831,244,1.346,249,1.354,267,1.938,272,1.443,277,1.434,279,3.179,282,2.464,288,2.327,292,2.197,300,1.213,327,0.913,334,1.275,360,2.104,389,2.438,395,1.831,396,5.456,397,5.846,398,4.859,399,5.846,400,6.103,401,4.515,402,5.846,403,5.054,404,3.677,405,3.677,406,5.095,407,1.985,408,3.677,409,3.308,410,1.609,411,1.779,412,2.362,413,2.362,414,3.949,415,4.532,416,2.362,417,5.054,418,2.107,419,2.362,420,3.677,421,2.362,422,3.179,423,2.828,424,2.362,425,3.911,426,2.362,427,2.605,428,2.362,429,2.107,430,1.938,431,2.362,432,1.985,433,2.362,434,2.362,435,2.197,436,1.434,437,2.362,438,5.233,439,2.362,440,2.85,441,2.075,442,3.179,443,3.677,444,7.225,445,2.362,446,5.456,447,2.125,448,2.362,449,3.677,450,2.362,451,2.85,452,2.605,453,2.229,454,2.605,455,3.677,456,2.362,457,2.247,458,2.362,459,2.362,460,2.587,461,2.958,462,2.362,463,1.548,464,3.677,465,2.362,466,2.362,467,3.677,468,2.362,469,2.362,470,2.362,471,2.362,472,2.362,473,2.362,474,2.362,475,2.362,476,3.677,477,1.779,478,2.362,479,2.362,480,5.605,481,3.677,482,4.515,483,1.674,484,2.41,485,2.042,486,2.605,487,0.985,488,3.199,489,1.831,490,2.042,491,1.548,492,0.985,493,1.831,494,3.179,495,1.033,496,3.338,497,1.033,498,1.033,499,1.033,500,1.033,501,1.275,502,2.362,503,2.362,504,2.362,505,2.362,506,2.362,507,2.362,508,2.362,509,2.362,510,2.362,511,2.362,512,2.362,513,2.362,514,2.042,515,1.831,516,2.362,517,2.362,518,2.362,519,2.362,520,2.362,521,2.362,522,2.362,523,2.362,524,2.362,525,2.362,526,2.362,527,2.362,528,2.362,529,2.362,530,2.362,531,2.362,532,2.362,533,2.362,534,2.362,535,5.095,536,2.362,537,1.674,538,2.362,539,2.362,540,2.362,541,5.095,542,4.532,543,2.362,544,2.362,545,2.362,546,2.362,547,2.362,548,2.362,549,2.362,550,2.362,551,2.362,552,2.362,553,2.362,554,2.362,555,2.362,556,2.362,557,1.674,558,2.362,559,2.362,560,2.362,561,2.362,562,2.362,563,1.674,564,1.674,565,1.674,566,1.674,567,5.095,568,2.042,569,1.831,570,2.362,571,2.362,572,2.362,573,2.362]],["title/classes/AlarmColorsSet.html",[104,0.05,574,2.704]],["body/classes/AlarmColorsSet.html",[0,0.276,2,0.103,3,0.074,7,0.06,11,0.237,13,0.779,19,0.507,20,0.735,23,0.507,24,0.484,26,0.507,28,0.507,30,0.246,31,0.735,32,1.636,38,0.507,40,1.603,41,0.735,42,0.46,47,0.561,49,0.824,50,0.904,51,0.556,52,0.017,53,0.433,54,0.836,55,0.461,56,1.134,58,0.821,61,1.15,66,1.762,67,1.054,69,2.003,71,0.703,73,0.785,79,0.722,80,1.09,94,0.864,97,0.247,98,0.118,102,0.663,103,0.128,104,0.071,105,0.959,111,1.707,134,0.507,135,1.057,166,0.735,190,0.009,191,0.009,215,1.69,221,0.608,242,1.711,244,1.312,272,1.455,288,2.68,292,1.259,298,1.01,300,1.09,327,1.465,407,2.471,409,2.746,410,2.003,418,1.812,423,1.529,430,2.244,435,2.744,436,2.119,453,2.738,477,1.529,487,2.875,492,2.875,495,2.003,496,3,497,2.855,498,2.855,499,2.855,500,2.855,501,1.707,563,3.244,564,3.244,565,3.244,566,3.244,574,4.884,575,4.359,576,2.121,577,5.055,578,5.055,579,1.932,580,6.822,581,4.578,582,3.162,583,3.162,584,2.733,585,3.162,586,3.162,587,3.162,588,3.162,589,1.613,590,2.711,591,2.733,592,2.104,593,2.072,594,2.072,595,2.603,596,3.958,597,2.471,598,2.733,599,2.733,600,2.24,601,3.958,602,3.958,603,2.733,604,3.958,605,2.733,606,2.733,607,2.733,608,2.733,609,2.733,610,4.652,611,6.543,612,2.733,613,4.652,614,6.775,615,2.733,616,1.613,617,1.101,618,1.812,619,3.958,620,2.733,621,2.733,622,2.733,623,6.167,624,2.733,625,2.733,626,6.167,627,3.958,628,5.099,629,3.958,630,3.958,631,2.451,632,3.958,633,3.958,634,1.932,635,2.733,636,2.733,637,4.172,638,2.451,639,3.958,640,3.958,641,2.451,642,2.451,643,2.733,644,2.733,645,4.853,646,2.451,647,2.733,648,2.733,649,2.451,650,2.733,651,2.733,652,2.451,653,2.733,654,2.733,655,2.451,656,2.733,657,2.733,658,2.451,659,2.733,660,2.733,661,2.733,662,3.958,663,3.244,664,2.733,665,2.733,666,2.733]],["title/components/AlarmComponent.html",[0,0.178,130,0.454]],["body/components/AlarmComponent.html",[0,0.36,1,0.604,2,0.117,3,0.084,4,0.69,5,0.721,6,0.661,7,0.068,11,0.186,12,0.661,13,0.757,17,1.995,19,0.804,20,0.927,22,0.721,23,1.281,24,1.223,25,0.842,26,0.804,28,0.804,30,0.279,31,0.804,32,1.494,34,0.597,38,1.003,40,1.696,41,0.746,42,0.58,47,0.601,49,0.55,50,0.604,52,0.017,53,0.644,54,0.744,55,0.732,58,0.687,66,1.774,67,1.671,69,2.193,71,0.644,72,1.823,73,1.551,75,1.995,79,1.144,80,1.193,87,0.499,94,0.804,95,2.872,97,0.21,98,0.134,102,0.753,103,0.14,104,0.076,105,0.55,106,1.433,117,1.471,119,0.428,120,1.006,121,1.006,122,0.963,123,1.254,124,0.721,125,1.006,126,0.576,127,0.721,128,0.576,129,0.721,130,0.744,131,0.721,132,0.604,133,0.721,134,0.576,135,0.868,136,1.254,137,0.576,138,0.721,139,0.604,140,1.159,141,0.604,142,1.159,143,0.604,144,1.159,145,0.604,146,0.721,147,0.604,148,0.721,149,0.604,150,0.69,151,0.604,152,0.721,153,0.604,154,0.604,155,0.576,156,0.721,157,0.604,158,0.604,159,0.721,160,0.576,161,0.721,162,0.604,163,0.55,164,0.721,165,0.55,166,1.003,167,1.006,168,0.55,169,0.661,170,0.604,171,1.04,172,0.661,173,1.062,174,0.576,175,0.721,176,0.604,177,0.405,178,0.632,179,0.604,180,0.842,181,0.721,182,0.604,183,0.604,184,0.604,185,0.55,186,0.604,187,0.604,188,0.69,189,0.721,190,0.01,191,0.01,221,0.963,225,2.667,242,1.632,244,1.232,271,1.564,272,1.457,300,0.855,327,0.892,360,1.198,407,1.939,409,2.946,410,1.571,411,1.737,423,1.737,430,1.906,435,1.995,436,1.759,461,3.783,487,2.09,492,2.09,495,2.193,497,2.193,498,2.193,499,2.193,500,2.193,501,1.939,592,2.303,667,2.784,668,2.733,669,4.333,670,4.333,671,5.884,672,4.475,673,5.773,674,4.991,675,4.991,676,6.656,677,4.991,678,4.091,679,4.656,680,5.012,681,3.592,682,2.839,683,3.592,684,3.592,685,3.551,686,3.551,687,3.284,688,3.551,689,3.592,690,5.401,691,3.592,692,3.592,693,3.592,694,2.354,695,3.592,696,3.592,697,3.592,698,4.333,699,4.333,700,4.333,701,2.784,702,1.366,703,2.784,704,3.105]],["title/components/AlarmHeaderComponent.html",[0,0.178,132,0.641]],["body/components/AlarmHeaderComponent.html",[0,0.361,1,0.548,2,0.106,3,0.077,4,0.627,5,0.655,6,0.6,7,0.062,11,0.169,12,0.6,13,0.699,17,2.626,19,0.752,20,0.879,22,0.655,23,1.273,24,1.215,25,0.787,26,0.752,28,0.752,30,0.254,34,0.713,38,0.961,40,1.685,41,0.755,42,0.551,47,0.608,49,0.717,50,0.787,52,0.017,53,0.716,54,0.388,55,0.683,58,0.755,66,1.264,67,1.561,71,0.719,72,2.4,73,1.784,75,2.626,77,1.757,79,1.069,80,1.115,87,0.453,94,0.961,97,0.196,98,0.121,102,0.684,103,0.091,104,0.084,107,0.918,111,3.231,112,2.2,113,2.821,117,1.375,118,1.993,119,0.388,120,0.94,121,0.94,122,0.9,123,1.202,124,0.655,125,0.94,126,0.524,127,0.655,128,0.524,129,0.655,130,0.388,131,0.655,132,1.006,133,0.655,134,0.524,135,0.832,136,1.202,137,0.524,138,0.655,139,0.548,140,1.1,141,0.548,142,1.1,143,0.548,144,1.1,145,0.548,146,0.655,147,0.548,148,0.655,149,0.548,150,0.627,151,0.548,152,0.655,153,0.548,154,0.548,155,0.524,156,0.655,157,0.548,158,0.548,159,0.655,160,0.524,161,0.655,162,0.548,163,0.5,164,0.655,165,0.5,166,0.879,167,0.94,168,0.5,169,0.6,170,0.548,171,1.015,172,0.6,173,1.007,174,0.524,175,0.655,176,0.548,177,0.368,178,0.574,179,0.548,180,0.787,181,0.655,182,0.548,183,0.548,184,0.548,185,0.5,186,0.548,187,0.548,188,0.627,189,0.655,190,0.013,191,0.01,242,1.878,244,1.109,260,3.054,267,1.781,271,1.685,272,1.336,277,1.318,288,1.299,360,1.561,396,4.048,423,1.578,441,2.152,486,2.312,631,2.529,634,3.347,637,4.246,638,2.529,641,2.529,642,2.529,645,4.913,646,2.529,649,2.529,652,2.529,655,2.529,658,2.529,668,2.049,672,4.64,674,5.174,675,5.174,678,3.881,679,3.318,685,3.318,686,4.674,687,3.069,688,3.318,705,6.287,706,5.638,707,2.821,708,4.674,709,4.683,710,4.683,711,5.986,712,6.338,713,6.338,714,4.683,715,3.263,716,4.048,717,5.986,718,4.683,719,3.263,720,5.986,721,3.263,722,3.263,723,4.683,724,4.683,725,4.048,726,3.263,727,4.683,728,3.318,729,3.263,730,3.263,731,3.263,732,5.478,733,4.683,734,4.683,735,3.263,736,4.683,737,4.683,738,4.683,739,5.986,740,4.683,741,3.263,742,4.683,743,3.263,744,4.683]],["title/classes/AlarmImageSet.html",[104,0.05,682,1.591]],["body/classes/AlarmImageSet.html",[0,0.344,2,0.134,3,0.097,7,0.078,11,0.284,13,0.789,17,1.639,19,0.661,20,0.883,23,0.661,24,0.63,26,0.661,28,0.661,30,0.32,31,0.883,32,1.668,38,0.661,40,1.689,41,0.754,42,0.553,47,0.594,49,0.843,50,0.925,51,0.724,52,0.017,53,0.586,54,0.887,55,0.803,58,0.844,66,1.955,67,1.373,69,1.801,73,1.366,75,1.639,79,0.94,80,0.98,94,0.661,95,2.359,97,0.231,98,0.153,102,0.863,103,0.154,104,0.091,105,0.63,106,1.022,117,1.209,130,0.49,166,0.661,190,0.011,191,0.011,221,0.791,225,2.855,242,1.642,244,1.337,271,0.98,272,1.509,300,1.31,327,1.366,407,2.97,409,3.518,410,2.407,411,2.662,423,1.992,430,1.566,435,2.823,436,1.549,461,4.061,487,2.958,492,2.958,495,1.801,497,3.103,498,3.103,499,3.103,500,3.103,501,2.222,592,1.892,667,3.192,668,2.407,669,3.559,670,3.559,671,4.757,676,6.838,677,3.559,678,2.917,679,3.899,682,2.958,685,2.917,686,2.917,687,2.698,688,2.917,690,4.757,698,3.559,699,3.559,700,3.559,701,4.265,702,2.093,703,4.265,704,3.559,745,5.503,746,4.117,747,4.117,748,4.117,749,4.117,750,4.117,751,4.117,752,4.117]],["title/classes/AlarmItemFlatNode.html",[104,0.05,753,2.704]],["body/classes/AlarmItemFlatNode.html",[0,0.305,2,0.093,3,0.1,6,1.363,7,0.081,8,3.984,11,0.148,13,0.604,17,1.139,19,0.459,20,0.683,23,0.459,24,0.438,25,1.01,26,0.459,28,0.459,30,0.222,31,0.683,38,0.459,40,1.013,41,0.701,47,0.437,49,0.651,52,0.017,53,0.481,54,0.669,56,0.55,66,1.7,69,1.252,71,0.72,72,2.604,73,1.664,75,2.238,77,2.01,79,0.971,87,0.591,94,0.683,97,0.281,98,0.158,102,0.6,103,0.142,104,0.074,105,1.127,106,0.71,107,2.1,112,1.693,117,0.84,128,0.459,155,0.902,177,0.755,190,0.012,191,0.009,215,1.622,221,0.55,223,2.788,224,1.315,229,2.91,230,2.72,237,3.762,239,4.883,244,1.01,262,1.748,266,1.748,267,2.396,268,2.986,269,2.218,271,0.681,272,1.081,277,1.197,282,3.047,288,2.596,292,1.139,298,0.914,300,1.63,352,2.741,360,0.954,383,3.984,410,1.861,427,3.014,429,2.438,430,1.088,432,1.544,453,2.755,454,3.598,483,3.014,537,3.014,557,2.027,576,1.915,589,2.171,694,2.788,753,5.365,754,2.218,755,4.883,756,5.308,757,6.967,758,5.402,759,6.517,760,2.861,761,2.861,762,2.861,763,3.328,764,3.678,765,0.84,766,2.473,767,2.218,768,3.678,769,2.473,770,3.678,771,3.678,772,2.218,773,2.473,774,2.72,775,1.46,776,1.384,777,4.622,778,2.473,779,2.473,780,2.473,781,2.218,782,2.473,783,2.473,784,4.861,785,3.298,786,1.544,787,2.218,788,2.473,789,4.39,790,2.473,791,2.218,792,2.473,793,2.473,794,2.473,795,4.39,796,2.473,797,2.473,798,2.218,799,2.473,800,2.218,801,2.473,802,2.473,803,2.473,804,2.473,805,2.027,806,2.473,807,3.678,808,2.473,809,3.678,810,2.473,811,2.473,812,3.678,813,2.473,814,2.473,815,2.473,816,3.298,817,2.473,818,2.473,819,2.473,820,2.473,821,2.473,822,2.218,823,2.473,824,4.39,825,2.473,826,2.218,827,2.473,828,3.678,829,2.599,830,2.473,831,2.473,832,2.473,833,2.473,834,2.473,835,2.473,836,2.473,837,3.298,838,3.678,839,2.473,840,3.298,841,2.473,842,2.473,843,2.473,844,2.473,845,2.473,846,2.473,847,2.473,848,2.473,849,2.473,850,2.473,851,2.473,852,2.473,853,3.678,854,2.473,855,2.473,856,2.218,857,3.678,858,2.473,859,3.937,860,5.196,861,2.473,862,4.861,863,2.473,864,3.678,865,2.473,866,2.473,867,3.298,868,2.473,869,2.218,870,5.793,871,2.473,872,3.678,873,2.473,874,2.473,875,2.473,876,3.678,877,2.473,878,2.473,879,3.298,880,6.189,881,2.473,882,4.861,883,2.473,884,3.678,885,2.218,886,2.473,887,4.39,888,4.861,889,2.473,890,2.473,891,2.473,892,2.473,893,2.473,894,1.639,895,2.473,896,2.473,897,2.473,898,2.473,899,2.473,900,2.473,901,2.473,902,2.473,903,2.473,904,2.473,905,2.473,906,2.473]],["title/classes/AlarmItemNode.html",[104,0.05,777,2.704]],["body/classes/AlarmItemNode.html",[0,0.306,2,0.094,3,0.1,6,1.365,7,0.082,8,3.618,11,0.149,13,0.607,17,1.15,19,0.464,20,0.688,23,0.464,24,0.442,25,1.014,26,0.464,28,0.464,30,0.224,31,0.688,38,0.464,40,1.02,41,0.707,47,0.397,49,0.656,52,0.017,53,0.483,54,0.608,56,0.555,66,1.706,69,1.263,71,0.72,72,2.541,73,1.624,75,2.249,77,1.973,79,0.978,87,0.595,94,0.688,97,0.282,98,0.159,102,0.605,103,0.143,104,0.075,105,1.129,106,0.717,107,2.103,112,1.703,117,0.848,128,0.464,155,0.907,177,0.758,190,0.012,191,0.009,215,1.629,221,0.555,223,2.807,224,1.327,229,2.926,230,2.733,237,3.627,239,5.415,244,1.014,262,1.764,266,1.764,267,2.489,268,2.991,269,2.239,271,0.688,272,1.086,277,1.206,282,3.057,288,2.604,292,1.15,298,0.923,300,1.634,352,2.312,360,0.963,383,3.618,410,1.874,427,3.035,429,2.455,430,1.099,432,1.559,453,2.765,454,3.618,483,3.035,537,3.035,557,2.046,576,1.921,589,2.186,694,2.807,753,5.348,754,2.239,755,4.677,756,5.321,757,6.967,758,4.677,759,6.323,763,3.346,764,3.703,765,0.848,766,2.497,767,2.239,768,3.703,769,2.497,770,3.703,771,3.703,772,2.239,773,2.497,774,2.733,775,1.474,776,1.397,777,4.949,778,2.497,779,2.497,780,2.497,781,2.239,782,2.497,783,2.497,784,4.884,785,3.321,786,1.559,787,2.239,788,2.497,789,4.415,790,2.497,791,2.239,792,2.497,793,2.497,794,2.497,795,4.415,796,2.497,797,2.497,798,2.239,799,2.497,800,2.239,801,2.497,802,2.497,803,2.497,804,2.497,805,2.046,806,2.497,807,3.703,808,2.497,809,3.703,810,2.497,811,2.497,812,3.703,813,2.497,814,2.497,815,2.497,816,3.321,817,2.497,818,2.497,819,2.497,820,2.497,821,2.497,822,2.239,823,2.497,824,4.415,825,2.497,826,2.239,827,2.497,828,3.703,829,2.617,830,2.497,831,2.497,832,2.497,833,2.497,834,2.497,835,2.497,836,2.497,837,3.321,838,3.703,839,2.497,840,3.321,841,2.497,842,2.497,843,2.497,844,2.497,845,2.497,846,2.497,847,2.497,848,2.497,849,2.497,850,2.497,851,2.497,852,2.497,853,3.703,854,2.497,855,2.497,856,2.239,857,3.703,858,2.497,859,3.959,860,5.216,861,2.497,862,4.884,863,2.497,864,3.703,865,2.497,866,2.497,867,3.321,868,2.497,869,2.239,870,5.809,871,2.497,872,3.703,873,2.497,874,2.497,875,2.497,876,3.703,877,2.497,878,2.497,879,3.321,880,6.201,881,2.497,882,4.884,883,2.497,884,3.703,885,2.239,886,2.497,887,4.415,888,4.884,889,2.497,890,2.497,891,2.497,892,2.497,893,2.497,894,1.655,895,2.497,896,2.497,897,2.497,898,2.497,899,2.497,900,2.497,901,2.497,902,2.497,903,2.497,904,2.497,905,2.497,906,2.497,907,2.888,908,2.888]],["title/classes/AntennaConfig.html",[104,0.05,909,2.187]],["body/classes/AntennaConfig.html",[0,0.284,2,0.129,3,0.093,7,0.075,11,0.204,13,0.539,30,0.416,31,0.86,32,1.612,34,0.471,41,0.734,42,0.398,47,0.528,49,0.606,50,0.665,52,0.017,54,0.723,56,1.251,58,0.638,61,1.44,67,1.786,71,0.507,73,0.983,77,1.573,80,1.619,87,0.844,94,1.125,97,0.301,98,0.147,102,0.83,103,0.15,104,0.08,105,0.606,106,1.33,107,1.915,130,0.471,135,1.109,171,0.95,177,0.604,185,0.93,190,0.011,191,0.011,193,1.914,222,3.083,224,2.462,225,1.949,233,3.279,235,3.87,244,1.277,254,2.268,260,2.019,277,2.123,289,2.938,300,1.276,334,3.671,358,0.903,385,1.505,410,1.731,435,2.133,436,1.974,447,1.65,453,2.344,477,1.914,487,2.234,492,2.234,495,2.344,497,2.344,498,2.344,499,2.344,500,2.344,576,2.058,590,1.819,595,3.149,597,2.136,616,2.019,617,2.266,668,2.975,682,2.837,702,2.038,765,1.573,774,3.149,775,2.019,776,1.914,909,3.73,910,3.068,911,4.266,912,3.958,913,3.07,914,3.958,915,3.958,916,2.418,917,2.418,918,1.575,919,2.938,920,2.593,921,2.418,922,2.418,923,3.068,924,2.136,925,3.068,926,2.593,927,3.511,928,3.421,929,2.418,930,3.421,931,3.421,932,2.136,933,3.421,934,3.421,935,3.421,936,2.593,937,2.804,938,3.273,939,2.136,940,2.136,941,3.796,942,3.421,943,2.804,944,2.418,945,3.421,946,3.421,947,3.421,948,3.421,949,3.421,950,3.421,951,3.421,952,3.421,953,3.421,954,2.804,955,2.804,956,3.421,957,2.804,958,2.804,959,3.421,960,4.447,961,4.266,962,5.627,963,4.266,964,3.796,965,3.796,966,3.421]],["title/components/AntennaMarkerComponent.html",[0,0.178,134,0.612]],["body/components/AntennaMarkerComponent.html",[0,0.311,1,0.436,2,0.084,3,0.061,4,0.499,5,0.521,6,0.477,7,0.049,11,0.247,12,0.477,13,0.764,19,0.634,20,0.768,22,0.521,23,1.25,24,1.193,25,0.664,26,0.634,28,0.634,30,0.202,31,0.634,32,1.502,34,0.471,38,0.859,40,1.587,41,0.716,42,0.397,47,0.583,49,0.733,50,0.805,51,0.695,52,0.017,53,0.574,54,0.775,55,0.577,56,1.347,58,0.686,61,1.742,66,1.445,67,1.318,69,1.135,71,0.703,73,0.644,79,0.902,80,1.274,87,0.549,94,0.859,97,0.224,98,0.096,102,0.544,103,0.11,104,0.052,105,0.882,111,1.4,119,0.309,120,0.793,121,0.793,122,0.76,123,1.075,124,0.521,125,0.793,126,0.416,127,0.521,128,0.416,129,0.521,130,0.309,131,0.521,132,0.436,133,0.521,134,0.859,135,1.089,136,1.075,137,0.416,138,0.521,139,0.436,140,0.961,141,0.436,142,0.961,143,0.436,144,0.961,145,0.436,146,0.521,147,0.436,148,0.521,149,0.436,150,0.499,151,0.436,152,0.521,153,0.436,154,0.436,155,0.416,156,0.521,157,0.436,158,0.436,159,0.521,160,0.416,161,0.521,162,0.436,163,0.397,164,0.521,165,0.397,166,0.634,167,0.793,168,0.397,169,0.477,170,0.436,171,0.949,172,0.477,173,0.88,174,0.416,175,0.521,176,0.436,177,0.292,178,0.456,179,0.436,180,0.664,181,0.521,182,0.436,183,0.436,184,0.436,185,0.397,186,0.436,187,0.436,188,0.499,189,0.521,190,0.008,191,0.008,215,1.935,221,0.76,242,1.761,244,1.143,271,1.372,272,1.378,288,2.824,292,1.573,298,0.829,300,0.941,327,1.43,407,1.4,409,2.017,410,1.135,418,2.265,423,1.255,430,2.475,435,2.131,436,2.017,453,2.761,477,1.912,487,2.232,492,2.232,495,2.342,496,3.508,497,2.094,498,2.094,499,2.094,500,2.094,501,1.4,563,1.838,564,1.838,565,1.838,566,1.838,574,5.124,575,4.515,576,2.193,577,5.236,578,5.236,579,1.585,580,6.694,589,1.324,590,3.063,591,2.243,592,2.46,593,2.59,594,2.59,595,3.053,596,4.627,597,2.889,598,3.417,599,3.417,600,3.392,601,4.627,602,4.627,603,3.417,604,4.627,605,4.139,606,3.417,607,4.139,608,3.417,609,4.139,610,5.247,611,6.589,612,4.627,613,5.247,614,6.766,615,4.627,616,2.443,617,1.667,618,2.265,619,5.247,620,2.243,621,3.417,622,4.627,623,5.877,624,2.243,625,2.243,626,5.877,627,3.417,628,4.627,629,3.417,630,3.417,631,2.011,632,3.417,633,3.417,634,1.585,635,2.243,636,2.243,637,3.711,638,2.011,639,3.417,640,3.417,641,2.011,642,2.011,643,2.243,644,2.243,645,4.466,646,2.011,647,2.243,648,2.243,649,2.011,650,2.243,651,2.243,652,2.011,653,2.243,654,2.243,655,2.011,656,2.243,657,2.243,658,2.011,659,2.243,660,2.243,661,2.243,662,3.417,663,2.8,664,2.243,665,2.243,666,2.243,967,3.952,968,2.243,969,3.952,970,2.594,971,2.594,972,2.594,973,2.594,974,2.594,975,2.594,976,2.594,977,2.594,978,2.594,979,2.594,980,2.594,981,2.594,982,2.594,983,2.594,984,2.594]],["title/components/AntennasComponent.html",[0,0.178,137,0.612]],["body/components/AntennasComponent.html",[0,0.365,1,0.726,2,0.14,3,0.101,4,0.83,5,0.867,6,0.794,7,0.082,11,0.223,12,0.794,13,0.678,15,2.484,19,0.911,20,1.018,22,0.867,23,1.296,24,1.236,25,0.955,26,0.911,28,0.911,30,0.336,31,0.911,34,0.676,38,1.082,41,0.601,42,0.638,47,0.524,49,0.87,50,0.955,51,0.76,52,0.017,53,0.694,54,0.676,55,0.63,58,0.514,71,0.537,79,1.296,87,0.882,94,1.082,97,0.238,98,0.161,103,0.121,104,0.057,105,0.661,112,1.894,119,0.514,120,1.14,121,1.14,122,1.092,123,1.353,124,0.867,125,1.14,126,0.693,127,0.867,128,0.693,129,0.867,130,0.514,131,0.867,132,0.726,133,0.867,134,0.693,135,1.033,136,1.353,137,1.082,138,0.867,139,0.726,140,1.274,141,0.726,142,1.274,143,0.726,144,1.274,145,0.726,146,0.867,147,0.726,148,0.867,149,0.726,150,0.83,151,0.726,152,0.867,153,0.726,154,0.726,155,0.693,156,0.867,157,0.726,158,0.726,159,0.867,160,0.693,161,0.867,162,0.726,163,0.661,164,0.867,165,0.661,166,0.693,167,1.14,168,0.661,169,0.794,170,0.726,171,1.085,172,0.794,173,1.167,174,0.693,175,0.867,176,0.726,177,0.487,178,0.76,179,0.726,180,0.955,181,0.867,182,0.726,183,0.726,184,0.726,185,0.661,186,0.726,187,0.726,188,0.83,189,0.867,190,0.012,191,0.012,221,1.382,242,1.41,250,2.747,266,3.47,268,2.811,270,5.226,271,1.028,272,0.83,576,1.979,595,3.261,909,4.261,985,3.734,986,4.403,987,5.68,988,5.68,989,5.68,990,5.68,991,5.573,992,5.68,993,5.68,994,4.319,995,5.68,996,4.319,997,4.403,998,4.91,999,2.83,1000,3.348]],["title/components/AntennasMapComponent.html",[0,0.178,139,0.641]],["body/components/AntennasMapComponent.html",[0,0.341,1,0.407,2,0.079,3,0.144,4,0.465,5,0.486,6,0.445,7,0.046,11,0.329,12,0.445,13,0.683,15,1.059,19,0.602,20,0.736,22,0.486,23,1.242,24,1.185,25,0.63,26,0.602,28,0.602,30,0.434,31,0.602,32,1.619,34,0.703,38,0.829,39,2.29,40,1.229,41,0.729,42,0.377,47,0.587,49,0.855,50,0.63,51,1.083,52,0.017,53,0.696,54,0.875,55,0.899,56,1.413,57,2.787,58,0.288,66,1.908,71,0.715,72,2.148,73,1.529,77,1.734,79,0.856,80,1.714,87,0.637,92,2.29,93,2.023,94,0.736,97,0.248,98,0.09,102,0.508,103,0.068,104,0.074,105,1,107,1.572,112,1.862,117,1.1,119,0.288,120,0.753,121,1.34,122,0.721,123,1.037,124,0.486,125,0.753,126,0.389,127,0.486,128,0.389,129,0.486,130,0.288,131,0.486,132,0.407,133,0.486,134,0.389,135,1.047,136,1.037,137,0.389,138,0.486,139,0.868,140,0.921,141,0.407,142,0.921,143,0.407,144,0.921,145,0.407,146,0.486,147,0.407,148,0.486,149,0.407,150,0.465,151,0.407,152,0.486,153,0.407,154,0.407,155,0.389,156,0.486,157,0.407,158,0.407,159,0.486,160,0.389,161,0.486,162,0.407,163,0.371,164,0.486,165,0.371,166,0.389,167,0.753,168,0.371,169,0.445,170,0.407,171,0.929,172,0.445,173,0.843,174,0.389,175,0.486,176,0.407,177,0.694,178,0.426,179,0.407,180,0.63,181,0.486,182,0.407,183,0.407,184,0.407,185,0.371,186,0.407,187,0.407,188,0.465,189,0.486,190,0.008,191,0.008,198,2.023,215,1.908,221,0.721,226,1.364,244,1.22,267,2.539,268,2.654,271,1.555,272,1.283,277,1.942,282,2.497,292,0.964,298,0.774,300,1.092,414,2.906,423,1.171,440,2.906,447,1.913,477,1.813,575,4.601,576,2.159,589,2.634,590,3.002,592,2.714,595,3.691,600,2.656,616,1.913,617,2.588,618,2.148,702,2.42,763,3.005,774,1.171,775,1.236,776,1.171,909,4.279,913,2.148,916,1.48,917,1.48,927,4.373,929,3.154,940,2.787,968,2.094,991,3.555,999,1.587,1000,4.002,1001,5.838,1002,2.094,1003,3.241,1004,3.241,1005,5.163,1006,4.463,1007,4.463,1008,5.163,1009,4.318,1010,4.463,1011,4.463,1012,4.463,1013,3.749,1014,1.813,1015,5.163,1016,3.749,1017,3.749,1018,2.906,1019,4.586,1020,3.749,1021,3.965,1022,3.87,1023,3.749,1024,2.422,1025,2.422,1026,3.749,1027,2.422,1028,3.749,1029,4.184,1030,6.674,1031,2.456,1032,2.422,1033,2.422,1034,3.749,1035,2.422,1036,6.159,1037,4.002,1038,3.749,1039,2.422,1040,2.422,1041,3.749,1042,3.749,1043,2.422,1044,3.241,1045,2.422,1046,3.749,1047,2.422,1048,2.422,1049,2.422,1050,2.422,1051,3.241,1052,2.422,1053,3.749,1054,2.422,1055,2.422,1056,3.658,1057,2.422,1058,2.422,1059,2.422,1060,2.422,1061,2.906,1062,3.749,1063,2.422,1064,2.422,1065,2.422,1066,2.422,1067,2.422,1068,2.422,1069,2.422,1070,2.422,1071,2.422,1072,2.422,1073,2.422,1074,2.422,1075,2.422,1076,2.422,1077,2.422,1078,3.555,1079,2.422,1080,2.422,1081,2.422,1082,2.422,1083,2.422,1084,2.422,1085,2.422,1086,2.422,1087,2.422,1088,3.749,1089,2.422,1090,1.587,1091,2.422,1092,3.749,1093,2.422,1094,2.422,1095,2.094,1096,2.094,1097,2.422]],["title/modules/AntennasModule.html",[358,0.871,924,2.06]],["body/modules/AntennasModule.html",[2,0.164,3,0.119,7,0.096,52,0.017,97,0.332,98,0.188,103,0.2,104,0.067,119,0.602,134,1.202,135,0.993,137,1.202,139,1.259,141,1.259,143,1.323,190,0.013,191,0.013,226,2.485,358,1.433,360,1.685,361,2.989,362,2.21,368,3.443,369,3.443,370,3.443,371,2.886,372,2.322,373,2.21,375,2.886,376,3.204,377,2.322,389,2.107,390,2.727,391,2.895,392,2.895,393,2.895,576,1.483,577,3.58,578,3.58,590,3.443,924,4.364,999,3.311,1001,3.917,1098,4.368,1099,4.368,1100,4.368,1101,4.368,1102,4.368,1103,4.292,1104,5.053,1105,5.053,1106,4.368,1107,3.917,1108,4.368,1109,3.917,1110,4.368,1111,3.917,1112,3.917]],["title/injectables/AntennasService.html",[590,1.754,765,1.12]],["body/injectables/AntennasService.html",[0,0.318,2,0.116,3,0.084,7,0.068,11,0.258,13,0.627,30,0.448,31,0.802,32,1.619,34,0.742,41,0.707,42,0.502,47,0.592,49,0.765,50,0.84,51,0.629,52,0.017,53,0.339,54,0.831,55,0.522,56,1.368,58,0.595,61,1.818,67,1.193,71,0.643,73,0.888,77,1.691,80,1.779,87,0.945,94,1.12,97,0.293,98,0.133,102,0.75,103,0.14,104,0.066,105,0.548,106,1.548,107,1.847,130,0.426,135,1.099,171,0.958,177,0.703,185,0.882,190,0.01,191,0.01,193,2.417,222,3.016,224,2.866,225,1.818,233,3.109,235,3.766,244,1.196,254,2.864,260,2.55,271,1.371,272,1.107,277,2.062,289,2.786,300,1.19,334,3.669,358,1.141,385,1.361,410,2.186,435,1.989,436,2.004,447,2.084,453,2.728,477,2.417,487,2.084,492,2.084,495,2.52,497,2.186,498,2.186,499,2.186,500,2.186,576,1.996,590,2.297,595,1.73,597,2.698,616,2.55,617,2.478,668,3.114,682,3.016,702,1.361,765,1.691,774,3.288,775,1.825,776,1.73,909,3.301,910,2.773,911,3.275,913,2.049,916,2.185,917,2.185,918,1.424,919,3.174,920,2.344,921,2.185,922,2.185,923,2.773,924,2.698,925,2.773,926,2.344,927,3.775,928,5.391,929,3.053,930,5.391,931,4.32,932,2.698,933,5.391,934,5.391,935,5.391,936,3.275,937,4.419,938,3.519,939,2.698,940,2.698,941,3.541,942,3.092,943,2.534,944,3.053,945,5.391,946,3.092,947,3.092,948,3.092,949,3.092,950,3.092,951,3.092,952,3.092,953,3.092,954,4.419,955,2.534,956,3.092,957,2.534,958,4.419,959,3.092,960,4.389,961,4.087,962,5.391,963,4.087,964,3.541,965,3.541,966,3.092,1113,3.092,1114,4.998,1115,3.577,1116,3.577,1117,3.577,1118,3.577,1119,3.577,1120,3.577,1121,4.998,1122,3.577,1123,3.577,1124,3.577]],["title/components/AntennasSidebarComponent.html",[0,0.178,141,0.641]],["body/components/AntennasSidebarComponent.html",[0,0.337,1,0.497,2,0.096,3,0.069,4,0.568,5,0.593,6,0.544,7,0.056,11,0.341,12,0.544,13,0.725,15,2.264,19,0.699,20,0.831,22,0.593,23,1.264,24,1.206,25,0.732,26,0.699,28,0.699,30,0.23,31,0.699,32,1.336,34,0.519,38,0.917,39,2.662,40,1.36,41,0.73,42,0.438,47,0.579,49,0.875,50,0.732,51,1.159,52,0.017,53,0.689,54,0.836,55,0.962,56,1.3,58,0.352,66,1.176,67,1.453,71,0.732,72,1.883,73,1.082,77,1.279,79,0.995,80,1.36,87,0.794,92,3.49,94,1.023,97,0.255,98,0.11,102,0.619,103,0.083,104,0.039,105,1.036,106,0.734,112,2.125,117,1.279,119,0.352,120,0.875,121,0.875,122,0.838,123,1.147,124,0.593,125,0.875,126,0.474,127,0.593,128,0.474,129,0.593,130,0.352,131,0.593,132,0.497,133,0.593,134,0.474,135,1.097,136,1.147,137,0.474,138,0.593,139,0.497,140,1.039,141,0.96,142,1.039,143,0.497,144,1.039,145,0.497,146,0.593,147,0.497,148,0.593,149,0.497,150,0.568,151,0.497,152,0.593,153,0.497,154,0.497,155,0.474,156,0.593,157,0.497,158,0.497,159,0.593,160,0.474,161,0.593,162,0.497,163,0.453,164,0.593,165,0.453,166,0.474,167,0.875,168,0.453,169,0.544,170,0.497,171,0.987,172,0.544,173,0.952,174,0.474,175,0.593,176,0.497,177,0.333,178,0.52,179,0.497,180,0.732,181,0.593,182,0.497,183,0.497,184,0.497,185,0.453,186,0.497,187,0.497,188,0.568,189,0.593,190,0.009,191,0.009,193,2.108,198,2.352,215,2.011,216,2.763,221,0.838,242,1.582,244,1.26,250,2.108,259,2.497,260,2.223,267,2.741,268,3.006,271,0.704,272,0.568,277,1.977,298,0.944,300,0.704,327,1.082,441,2.929,447,2.159,460,3.652,575,4.521,589,2.915,590,3.401,617,2.535,618,2.497,694,2.855,763,3.392,786,2.352,909,4.295,911,2.855,927,4.433,991,4.013,997,3.378,999,1.937,1000,4.722,1014,2.108,1018,3.378,1031,2.855,1090,1.937,1095,4.939,1096,2.555,1107,5.737,1125,2.094,1126,3.378,1127,3.378,1128,4.358,1129,4.358,1130,5.713,1131,3.087,1132,5.713,1133,5.176,1134,2.955,1135,3.108,1136,4.358,1137,3.743,1138,3.252,1139,4.358,1140,2.555,1141,3.767,1142,2.955,1143,4.358,1144,2.955,1145,4.358,1146,4.358,1147,3.378,1148,5.713,1149,4.358,1150,2.955,1151,2.955,1152,2.955,1153,3.087,1154,2.955,1155,2.352,1156,2.855,1157,3.087,1158,2.855,1159,3.087,1160,4.358,1161,2.955,1162,6.092,1163,2.955,1164,4.358,1165,2.955,1166,2.955,1167,3.767,1168,2.555,1169,2.291,1170,2.094,1171,2.555,1172,2.955,1173,2.955,1174,2.955,1175,2.955,1176,4.358,1177,4.358,1178,2.094,1179,4.358,1180,4.358,1181,4.358,1182,4.358,1183,3.087]],["title/components/AntennasSummaryComponent.html",[0,0.178,143,0.641]],["body/components/AntennasSummaryComponent.html",[0,0.343,1,0.646,2,0.125,3,0.09,4,0.739,5,0.772,6,0.707,7,0.073,11,0.309,12,0.707,13,0.739,19,0.843,20,0.96,22,0.772,23,1.287,24,1.228,25,0.883,26,0.843,28,0.843,30,0.299,31,0.843,32,1.254,34,0.625,38,1.032,41,0.725,42,0.528,47,0.54,49,0.804,50,1.081,51,0.924,52,0.017,53,0.609,54,0.712,55,0.767,56,1.368,58,0.458,71,0.686,79,1.199,80,1.531,87,0.831,94,0.96,97,0.298,98,0.143,102,0.806,103,0.107,104,0.051,105,0.985,106,1.304,119,0.458,120,1.055,121,1.055,122,1.01,123,1.291,124,0.772,125,1.055,126,0.617,127,0.772,128,0.617,129,0.772,130,0.625,131,0.772,132,0.646,133,0.772,134,0.617,135,1.079,136,1.291,137,0.617,138,0.772,139,0.646,140,1.201,141,0.646,142,1.201,143,1.081,144,1.201,145,0.646,146,0.772,147,0.646,148,0.772,149,0.646,150,0.739,151,0.646,152,0.772,153,0.646,154,0.646,155,0.617,156,0.772,157,0.646,158,0.646,159,0.772,160,0.617,161,0.772,162,0.646,163,0.589,164,0.772,165,0.589,166,0.96,167,1.055,168,0.589,169,0.707,170,0.646,171,1.085,172,0.707,173,1.1,174,0.617,175,0.772,176,0.646,177,0.433,178,0.676,179,0.646,180,0.883,181,0.772,182,0.646,183,0.646,184,0.646,185,0.589,186,0.646,187,0.646,188,0.739,189,0.772,190,0.011,191,0.011,215,1.955,216,3.111,221,1.01,244,1.132,298,1.228,327,1.304,385,1.462,430,1.998,436,1.082,441,2.955,460,3.983,463,2.519,575,4.347,590,3.553,617,2.083,618,3.01,682,1.603,728,3.722,918,1.53,932,2.835,999,2.519,1014,1.859,1111,5.516,1131,3.722,1135,3.436,1137,4.87,1138,3.696,1153,3.722,1155,2.835,1156,3.442,1157,3.722,1158,3.442,1159,3.722,1170,2.723,1171,3.323,1178,2.723,1184,2.723,1185,3.442,1186,4.072,1187,4.072,1188,2.519,1189,3.323,1190,4.072,1191,3.323,1192,3.844,1193,3.323,1194,3.323,1195,3.844,1196,3.844,1197,3.844]],["title/components/AppComponent.html",[0,0.178,145,0.641]],["body/components/AppComponent.html",[0,0.333,1,0.565,2,0.109,3,0.079,4,0.647,5,0.961,6,0.619,7,0.064,11,0.247,12,0.619,13,0.56,19,0.768,20,0.894,22,0.675,23,1.276,24,1.217,25,0.804,26,0.768,28,0.768,30,0.261,31,0.768,32,1.397,33,3.151,34,0.57,38,0.974,41,0.649,42,0.481,47,0.554,51,0.842,52,0.017,53,0.574,54,0.793,55,0.699,56,1.318,58,0.401,59,4.144,60,3.097,62,3.462,65,1.627,71,0.649,72,2.027,73,1.796,87,0.467,94,1.144,97,0.279,98,0.125,103,0.094,104,0.044,105,0.929,106,1.383,112,1.122,117,1.782,119,0.401,120,0.961,121,0.961,122,0.92,123,1.218,124,0.675,125,0.961,126,0.54,127,0.675,128,0.54,129,0.675,130,0.401,131,0.675,132,0.565,133,0.675,134,0.54,135,0.974,136,1.218,137,0.54,138,0.675,139,0.565,140,1.119,141,0.565,142,1.119,143,0.565,144,1.119,145,1.02,146,0.675,147,0.565,148,0.675,149,0.565,150,0.647,151,0.565,152,0.675,153,0.565,154,0.565,155,0.974,156,0.675,157,0.565,158,1.078,159,0.675,160,0.54,161,0.675,162,0.565,163,0.515,164,0.675,165,0.515,166,0.54,167,0.961,168,0.515,169,1.025,170,0.565,171,1.078,172,0.619,173,1.025,174,0.54,175,0.675,176,0.565,177,0.379,178,0.592,179,0.565,180,1.12,181,0.675,182,0.565,183,0.565,184,0.565,185,0.515,186,0.565,187,0.565,188,0.647,189,0.675,190,0.01,191,0.01,215,1.952,221,1.167,230,2.695,231,3.819,244,0.804,250,2.315,271,1.326,272,1.233,298,1.075,430,1.821,441,2.2,557,2.384,668,3.304,702,1.821,756,2.608,758,3.71,894,2.742,913,3.819,926,3.136,1022,3.136,1188,2.204,1198,2.908,1199,4.786,1200,4.786,1201,6.069,1202,6.857,1203,6.665,1204,6.069,1205,5.819,1206,4.786,1207,6.069,1208,7.232,1209,7.009,1210,3.364,1211,4.786,1212,4.786,1213,4.705,1214,4.786,1215,3.364,1216,5.247,1217,3.364,1218,3.364,1219,4.786,1220,5.247,1221,2.908,1222,4.138,1223,3.364,1224,3.364,1225,3.364,1226,5.572,1227,7.131,1228,5.572,1229,5.572,1230,5.572,1231,3.364,1232,6.069,1233,4.786,1234,6.069,1235,3.364,1236,2.204,1237,3.364,1238,2.908,1239,2.384,1240,2.384,1241,3.364,1242,3.364,1243,2.384,1244,3.364,1245,3.364,1246,6.069,1247,6.069,1248,6.069,1249,3.364,1250,3.364,1251,3.364,1252,3.364,1253,3.364,1254,3.364,1255,3.364,1256,4.786,1257,5.572,1258,6.069,1259,4.786]],["title/modules/AppModule.html",[358,0.871,1260,2.704]],["body/modules/AppModule.html",[0,0.348,2,0.141,3,0.102,7,0.083,52,0.017,97,0.337,98,0.161,101,2.215,103,0.178,104,0.057,107,1.222,117,1.673,119,0.517,126,0.914,130,0.517,135,0.603,137,0.914,145,1.295,154,1.233,155,0.697,158,0.958,160,0.914,163,0.872,168,0.974,169,0.798,171,0.633,174,0.914,190,0.012,191,0.012,216,3.077,226,2.314,228,2.343,231,3.265,296,2.487,297,2.215,358,1.452,359,3.886,360,1.447,361,2.783,362,2.783,368,3.309,369,3.309,370,3.309,371,2.619,372,1.995,373,1.899,375,2.619,377,2.619,385,1.651,386,4.417,387,4.417,388,4.417,389,1.81,390,2.343,391,2.487,392,2.487,393,2.487,924,3.886,1056,5.335,1103,4.125,1109,3.365,1216,4.926,1239,3.075,1240,3.075,1260,5.696,1261,3.752,1262,3.752,1263,3.752,1264,3.752,1265,4.398,1266,4.718,1267,4.718,1268,3.886,1269,4.341,1270,5.698,1271,5.698,1272,4.341,1273,4.926,1274,3.075,1275,3.752,1276,4.341,1277,4.341,1278,3.752,1279,3.752,1280,4.341,1281,4.341,1282,3.075,1283,3.365,1284,4.341,1285,4.341,1286,4.341,1287,4.341,1288,4.341,1289,5.698,1290,3.752,1291,3.365,1292,4.341,1293,4.341,1294,4.341,1295,4.341,1296,4.341,1297,4.341,1298,4.341,1299,4.341,1300,3.752,1301,4.341,1302,4.341]],["title/components/ButtonsComponent.html",[0,0.178,147,0.641]],["body/components/ButtonsComponent.html",[0,0.355,1,1.093,2,0.148,3,0.107,4,0.873,5,0.912,6,0.835,7,0.086,11,0.235,12,1.364,13,0.59,14,2.994,19,0.942,20,1.043,22,0.912,23,1.299,24,1.239,25,0.986,26,0.942,28,0.942,30,0.353,34,0.818,38,1.103,40,1.636,41,0.719,42,0.654,47,0.505,49,0.899,50,0.986,52,0.017,53,0.555,54,0.541,58,0.541,66,1.584,67,1.957,71,0.43,79,1.339,80,1.397,87,0.631,97,0.246,98,0.169,102,0.952,103,0.127,104,0.06,117,1.723,119,0.541,120,1.178,121,1.178,122,1.128,123,1.38,124,0.912,125,1.178,126,0.729,127,0.912,128,0.729,129,0.912,130,0.541,131,0.912,132,0.763,133,0.912,134,0.729,135,0.955,136,1.38,137,0.729,138,0.912,139,0.763,140,1.305,141,0.763,142,1.305,143,0.763,144,1.305,145,0.763,146,0.912,147,1.155,148,0.912,149,0.763,150,0.873,151,0.763,152,0.912,153,0.763,154,0.763,155,0.729,156,0.912,157,0.763,158,0.763,159,0.912,160,0.729,161,0.912,162,1.093,163,0.695,164,0.912,165,0.695,166,0.729,167,1.178,168,0.695,169,0.835,170,0.763,171,1.097,172,0.835,173,1.196,174,0.729,175,0.912,176,0.763,177,0.512,178,0.799,179,0.763,180,0.986,181,0.912,182,0.763,183,0.763,184,0.763,185,0.695,186,0.763,187,0.763,188,0.873,189,0.912,190,0.012,191,0.012,215,1.584,327,1.457,340,4.158,436,1.652,1303,3.926,1304,5.869,1305,5.869,1306,5.869,1307,5.869,1308,5.869,1309,5.869,1310,4.541]],["title/injectables/CdbService.html",[765,1.12,1311,2.331]],["body/injectables/CdbService.html",[0,0.273,2,0.147,3,0.106,7,0.086,11,0.302,13,0.588,14,2.986,30,0.351,31,0.939,32,1.36,34,0.697,42,0.588,47,0.576,51,1.141,52,0.017,53,0.428,54,0.538,55,0.66,56,1.443,71,0.711,80,1.633,93,3.159,97,0.311,98,0.168,103,0.126,104,0.06,105,0.692,106,1.123,107,1.273,177,0.863,190,0.012,191,0.012,193,2.831,221,1.125,224,3.517,225,2.129,271,1.393,272,1.319,289,2.831,300,1.393,327,1.453,352,3.159,389,3.305,418,3.353,429,3.353,436,1.273,453,2.56,515,4.536,576,1.327,617,2.699,702,2.226,765,1.905,774,2.187,775,2.307,776,2.187,919,3.632,920,2.963,921,2.763,922,2.763,939,3.704,940,4.053,1022,3.835,1051,5.059,1141,5.059,1311,3.575,1312,3.909,1313,6.861,1314,6.861,1315,6.861,1316,6.861,1317,6.861,1318,4.522,1319,5.852,1320,4.522,1321,4.522,1322,7.28,1323,7.28,1324,5.852,1325,5.852,1326,6.861,1327,6.861,1328,4.522,1329,5.059,1330,4.522,1331,5.852,1332,4.522,1333,4.522,1334,4.522,1335,4.522,1336,4.522,1337,3.204,1338,4.522,1339,4.522,1340,5.852,1341,4.522,1342,4.522,1343,4.522,1344,4.522,1345,4.522,1346,4.522]],["title/modules/DataModule.html",[358,0.871,368,1.754]],["body/modules/DataModule.html",[2,0.178,3,0.129,7,0.104,11,0.283,52,0.017,56,1.269,97,0.327,98,0.204,103,0.198,104,0.073,119,0.653,177,0.744,190,0.014,191,0.014,215,2.062,226,2.577,327,1.639,358,1.678,360,1.829,361,2.888,362,2.399,368,3.655,371,3.034,372,2.52,373,2.399,375,3.034,376,3.369,377,2.52,701,5.118,919,3.695,921,3.351,938,4.033,939,2.96,1135,3.898,1311,4.667,1347,4.741,1348,4.741,1349,5.484,1350,7.083,1351,4.741,1352,5.484,1353,5.484,1354,5.484]],["title/modules/HealthModule.html",[358,0.871,1265,2.331]],["body/modules/HealthModule.html",[0,0.31,2,0.18,3,0.13,7,0.105,11,0.286,52,0.017,67,2.214,97,0.325,98,0.206,103,0.206,104,0.073,119,0.659,149,1.338,150,1.367,190,0.014,191,0.014,226,2.014,327,1.648,358,1.683,360,1.846,361,3.111,362,2.422,368,3.519,370,3.519,371,3.051,372,2.544,373,2.422,375,3.051,376,3.388,377,2.544,389,2.769,392,3.172,393,3.172,1112,4.292,1265,4.846,1355,4.786,1356,4.786,1357,5.537,1358,4.786,1359,5.537,1360,4.292]],["title/components/HealthSummaryComponent.html",[0,0.178,149,0.641]],["body/components/HealthSummaryComponent.html",[0,0.344,1,0.582,2,0.113,3,0.081,4,0.666,5,0.695,6,0.637,7,0.066,11,0.292,12,0.637,13,0.676,19,0.784,20,0.908,22,0.695,23,1.278,24,1.22,25,0.821,26,0.784,28,0.784,30,0.269,31,0.784,32,1.505,34,0.582,38,0.987,41,0.734,42,0.491,47,0.565,49,0.748,50,1.033,51,0.859,52,0.017,53,0.582,54,0.772,55,0.713,56,1.182,58,0.674,71,0.668,87,0.787,94,0.908,97,0.282,98,0.129,102,0.726,103,0.097,104,0.046,105,0.867,106,1.213,119,0.412,120,0.981,121,0.981,122,0.939,123,1.234,124,0.695,125,0.981,126,0.556,127,0.695,128,0.556,129,0.695,130,0.582,131,0.695,132,0.582,133,0.695,134,0.556,135,0.854,136,1.234,137,0.556,138,0.695,139,0.582,140,1.136,141,0.582,142,1.136,143,0.582,144,1.136,145,0.582,146,0.695,147,0.582,148,0.695,149,1.033,150,1.428,151,0.582,152,0.695,153,0.582,154,0.582,155,0.556,156,0.695,157,0.582,158,0.582,159,0.695,160,0.556,161,0.695,162,0.582,163,0.53,164,0.695,165,0.53,166,0.556,167,0.981,168,0.53,169,0.637,170,0.582,171,1.062,172,0.637,173,1.041,174,0.556,175,0.695,176,0.582,177,0.39,178,0.609,179,0.582,180,0.821,181,0.695,182,0.582,183,0.582,184,0.582,185,0.53,186,0.582,187,0.582,188,0.666,189,0.695,190,0.01,191,0.01,215,1.964,216,2.974,222,2.944,235,3.811,244,1.187,277,1.375,298,1.106,300,1.464,327,1.213,385,1.317,389,2.704,411,2.363,430,1.858,435,1.945,436,1.946,441,2.825,460,3.855,463,2.269,487,2.037,492,2.037,495,2.476,497,2.137,498,2.137,499,2.137,500,2.137,668,3.089,682,2.994,918,1.378,932,2.637,944,2.985,960,4.37,961,4.029,963,4.029,1014,1.675,1131,3.461,1135,3.308,1137,4.029,1138,3.433,1153,3.461,1155,2.637,1156,3.201,1157,3.461,1158,3.201,1159,3.461,1170,2.453,1178,2.453,1184,2.453,1185,3.201,1186,3.787,1187,3.787,1188,2.269,1190,3.787,1360,5.565,1361,6.206,1362,4.029,1363,6.148,1364,6.148,1365,6.148,1366,4.885,1367,3.463,1368,3.463,1369,2.993,1370,4.223,1371,3.463,1372,3.463,1373,3.463,1374,3.463,1375,3.463,1376,3.463,1377,3.463,1378,3.463,1379,7.627,1380,4.356,1381,3.787,1382,3.787,1383,3.463]],["title/injectables/HttpClientService.html",[765,1.12,919,1.846]],["body/injectables/HttpClientService.html",[2,0.134,3,0.096,7,0.078,11,0.366,30,0.319,34,0.91,42,0.622,47,0.562,51,1.273,52,0.017,53,0.685,54,0.862,55,1.056,56,1.056,57,2.965,66,1.483,69,2.403,71,0.74,97,0.277,98,0.153,103,0.115,104,0.054,105,1.108,106,1.537,107,1.86,117,1.613,177,0.871,190,0.011,191,0.011,224,3.512,225,2.914,233,4.125,244,1.275,268,2.291,277,1.546,300,1.573,322,4.645,425,3.892,453,2.891,461,2.692,702,2.09,708,4.682,765,1.817,805,2.91,840,5.123,919,2.657,938,4.038,939,3.826,1213,5.833,1351,4.749,1384,6.358,1385,3.551,1386,5.494,1387,5.494,1388,5.713,1389,5.494,1390,6.609,1391,6.609,1392,5.494,1393,4.108,1394,4.108,1395,5.494,1396,4.108,1397,7.643,1398,5.494,1399,4.108,1400,5.494,1401,4.108,1402,6.19,1403,5.494,1404,5.494,1405,4.108,1406,5.494,1407,4.108,1408,5.494,1409,4.108,1410,5.494,1411,5.494,1412,4.749,1413,6.888,1414,3.184,1415,4.108,1416,4.108,1417,4.108,1418,4.108,1419,4.108,1420,4.108,1421,7.355,1422,6.609,1423,4.108,1424,4.108,1425,4.108,1426,4.108,1427,4.108]],["title/modules/IasMaterialModule.html",[358,0.871,369,1.754]],["body/modules/IasMaterialModule.html",[0,0.297,2,0.168,3,0.121,7,0.098,11,0.266,52,0.017,97,0.338,98,0.192,103,0.178,104,0.068,155,1.02,190,0.013,191,0.013,228,2.781,230,3.074,283,3.377,353,4.165,358,1.573,361,2.254,369,2.921,375,2.921,390,2.781,772,3.995,894,2.953,1238,4.455,1239,3.651,1428,5.153,1429,5.153,1430,6.892,1431,5.153,1432,6.892,1433,5.153,1434,6.892,1435,5.153,1436,6.892,1437,5.153,1438,6.892,1439,5.153,1440,6.892,1441,5.153,1442,6.892,1443,5.153,1444,6.892,1445,5.153,1446,6.892,1447,6.892,1448,5.153,1449,6.892,1450,5.153,1451,6.892,1452,5.153,1453,6.892,1454,6.892,1455,5.153,1456,6.892,1457,5.153,1458,6.892,1459,5.153,1460,6.892,1461,5.153,1462,6.892,1463,5.153,1464,6.892,1465,5.153,1466,4.455,1467,6.892,1468,4.455,1469,3.995]],["title/classes/Iasio.html",[104,0.05,1337,2.704]],["body/classes/Iasio.html",[2,0.148,3,0.107,7,0.087,11,0.377,30,0.353,31,0.943,34,0.868,41,0.651,42,0.457,47,0.584,49,0.9,50,1.094,51,1.144,52,0.017,53,0.616,54,0.904,55,0.95,63,5.044,66,2.145,67,1.959,71,0.719,72,2.59,73,1.459,77,1.335,94,1.044,95,2.607,103,0.127,104,0.098,105,1.053,107,1.936,112,1.517,180,0.765,190,0.012,191,0.012,225,2.137,237,2.456,244,1.304,277,1.654,282,3.327,300,1.549,327,1.459,334,2.456,403,6.304,407,3.171,409,3.633,410,2.57,411,2.842,415,4.554,422,5.079,432,3.171,451,4.554,452,4.163,453,3.008,454,4.163,457,3.589,501,2.456,514,3.933,515,3.527,1337,5.68,1470,3.933,1471,6.507,1472,7.292,1473,7.292,1474,7.292,1475,7.292,1476,5.875,1477,5.875,1478,5.875,1479,4.549,1480,5.875,1481,4.554,1482,4.549,1483,4.549,1484,5.875,1485,4.549,1486,5.875,1487,4.549,1488,4.549,1489,4.549,1490,4.549,1491,4.549,1492,4.549,1493,4.549,1494,4.549,1495,4.549,1496,4.549]],["title/components/LegendComponent.html",[0,0.178,151,0.641]],["body/components/LegendComponent.html",[0,0.343,1,0.577,2,0.112,3,0.081,4,0.66,5,0.689,6,0.631,7,0.065,11,0.177,12,0.631,13,0.783,19,0.779,20,0.904,22,0.689,23,1.278,24,1.219,25,0.816,26,0.779,28,0.779,30,0.267,31,0.779,34,0.578,38,0.983,41,0.743,42,0.566,47,0.581,49,0.743,50,0.816,52,0.017,53,0.46,58,0.409,65,3.768,71,0.325,87,0.477,97,0.204,98,0.128,103,0.096,104,0.045,119,0.821,120,0.975,121,0.975,122,0.933,123,1.23,124,0.689,125,0.975,126,0.551,127,0.689,128,0.551,129,0.689,130,0.409,131,0.689,132,0.577,133,0.689,134,0.551,135,0.851,136,1.23,137,0.551,138,0.689,139,0.577,140,1.131,141,0.577,142,1.131,143,0.577,144,1.131,145,0.577,146,0.689,147,0.577,148,0.689,149,0.577,150,0.66,151,1.029,152,0.689,153,0.577,154,0.577,155,0.551,156,0.689,157,0.577,158,0.577,159,0.689,160,0.551,161,0.689,162,0.577,163,0.526,164,0.689,165,0.526,166,0.551,167,0.975,168,0.526,169,0.631,170,0.577,171,1.028,172,0.631,173,1.036,174,0.551,175,0.689,176,0.577,177,0.387,178,0.604,179,0.577,180,0.816,181,0.689,182,0.577,183,0.577,184,0.577,185,0.526,186,0.577,187,0.577,188,0.66,189,0.689,190,0.01,191,0.01,221,0.933,222,2.938,235,3.803,242,1.944,271,1.749,272,1.412,430,2.821,435,2.998,436,2.105,438,6.003,441,2.231,487,3.029,492,3.029,563,4.339,564,4.339,565,4.339,566,4.339,668,3.408,918,1.367,960,4.464,1497,2.968,1498,4.856,1499,4.856,1500,6.125,1501,6.125,1502,6.125,1503,6.125,1504,6.125,1505,6.125,1506,6.125,1507,6.125,1508,6.125,1509,4.856,1510,3.433,1511,5.295,1512,3.433,1513,6.09,1514,3.433,1515,3.433,1516,4.198,1517,3.433,1518,4.856,1519,4.198,1520,3.433,1521,4.198,1522,3.433,1523,4.198,1524,3.433,1525,4.198,1526,3.433,1527,3.433,1528,3.433]],["title/components/MapComponent.html",[0,0.178,153,0.641]],["body/components/MapComponent.html",[0,0.36,1,0.76,2,0.147,3,0.106,4,0.869,5,0.908,6,0.832,7,0.086,11,0.234,12,0.832,13,0.588,19,0.939,20,1.041,22,0.908,23,1.299,24,1.239,25,0.984,26,0.939,28,0.939,30,0.351,34,0.697,38,1.101,40,1.692,41,0.428,42,0.652,47,0.566,49,0.896,50,0.984,52,0.017,53,0.554,58,0.538,71,0.428,75,2.329,77,1.718,80,1.393,87,0.628,97,0.19,98,0.168,103,0.126,104,0.06,119,0.538,120,1.175,121,1.175,122,1.125,123,1.378,124,0.908,125,1.175,126,0.726,127,0.908,128,0.726,129,0.908,130,0.538,131,0.908,132,0.76,133,0.908,134,0.726,135,0.953,136,1.378,137,0.726,138,0.908,139,0.76,140,1.303,141,0.76,142,1.303,143,0.76,144,1.303,145,0.76,146,0.908,147,0.76,148,0.908,149,0.76,150,0.869,151,0.76,152,0.908,153,1.153,154,0.76,155,0.726,156,0.908,157,0.76,158,0.76,159,0.908,160,0.726,161,0.908,162,0.76,163,0.692,164,0.908,165,0.692,166,0.726,167,1.175,168,0.692,169,0.832,170,0.76,171,1.096,172,0.832,173,1.193,174,0.726,175,0.908,176,0.76,177,0.731,178,0.795,179,0.76,180,0.984,181,0.908,182,0.76,183,0.76,184,0.76,185,0.692,186,0.76,187,0.76,188,0.869,189,0.908,190,0.012,191,0.012,242,1.703,271,1.393,272,1.125,327,1.453,576,2.204,589,2.307,597,3.704,617,2.037,1003,5.059,1004,5.059,1006,5.609,1007,5.609,1029,4.146,1529,3.909,1530,4.536,1531,5.852,1532,4.522,1533,4.522]],["title/modules/MapModule.html",[358,0.871,1103,2.187]],["body/modules/MapModule.html",[2,0.186,3,0.134,7,0.109,52,0.017,97,0.319,98,0.212,103,0.208,104,0.075,119,0.679,153,1.343,190,0.014,191,0.014,226,2.621,358,1.543,360,1.903,361,3.151,362,2.496,371,3.107,372,2.623,373,2.496,375,3.107,376,3.45,377,2.623,1009,4.71,1103,4.523,1534,4.933,1535,4.933,1536,4.933,1537,4.933,1538,5.707,1539,5.707,1540,5.707]],["title/injectables/MapService.html",[765,1.12,1009,2.331]],["body/injectables/MapService.html",[2,0.176,3,0.127,7,0.103,11,0.364,13,0.708,30,0.42,34,0.779,42,0.708,47,0.568,49,1.002,50,1.1,51,1.151,52,0.017,53,0.619,55,0.955,56,1.406,61,2.38,71,0.666,97,0.227,98,0.201,103,0.151,104,0.071,105,0.828,107,1.521,190,0.013,191,0.013,237,2.917,267,2.677,272,1.039,288,2.802,488,3.829,576,2.066,595,2.614,600,3.829,679,3.829,716,4.672,765,2.066,859,5.073,867,5.073,927,4.989,1009,3.998,1010,6.323,1011,4.672,1012,6.476,1056,5.308,1541,4.672,1542,6.544,1543,6.544,1544,5.405,1545,6.544,1546,5.405,1547,5.405,1548,5.405,1549,5.405,1550,5.405,1551,4.672,1552,5.405,1553,5.405,1554,5.405]],["title/components/MaterialSandboxComponent.html",[0,0.178,154,0.641]],["body/components/MaterialSandboxComponent.html",[0,0.345,1,0.596,2,0.115,3,0.083,4,0.682,5,0.712,6,0.652,7,0.068,11,0.183,12,1.453,13,0.5,19,0.797,20,0.92,22,0.712,23,1.28,24,1.224,25,0.835,26,0.797,28,0.797,30,0.276,34,0.592,38,0.997,41,0.336,42,0.658,47,0.386,52,0.016,53,0.47,55,0.725,58,0.422,69,2.174,71,0.336,76,6.088,79,1.134,80,1.183,87,0.493,94,1.088,97,0.149,98,0.132,103,0.099,104,0.047,119,0.422,120,0.998,121,1.361,122,0.955,123,1.248,124,0.712,125,0.998,126,0.569,127,0.712,128,0.569,129,0.712,130,0.422,131,0.712,132,0.596,133,0.712,134,0.569,135,0.864,136,1.248,137,0.569,138,0.712,139,0.596,140,1.151,141,0.596,142,1.151,143,0.596,144,1.151,145,0.596,146,0.712,147,0.596,148,0.712,149,0.596,150,0.682,151,0.596,152,0.712,153,0.596,154,1.044,155,1.186,156,0.712,157,0.596,158,0.596,159,0.712,160,0.569,161,0.712,162,0.596,163,0.543,164,0.712,165,0.543,166,0.92,167,0.998,168,0.543,169,0.652,170,0.596,171,1.037,172,0.652,173,1.055,174,0.569,175,0.712,176,0.596,177,0.4,178,0.624,179,0.596,180,1.286,181,0.712,182,0.596,183,0.596,184,0.596,185,0.543,186,0.596,187,0.596,188,0.682,189,0.712,190,0.01,191,0.01,230,2.404,231,2.847,241,4.655,242,1.234,267,1.89,268,2.591,271,0.845,282,2.404,668,2.862,755,2.75,894,3.286,1078,5.256,1167,4.296,1291,4.446,1300,4.296,1466,5.372,1551,4.296,1555,4.958,1556,3.067,1557,4.969,1558,4.296,1559,4.969,1560,4.969,1561,4.969,1562,3.548,1563,3.548,1564,6.78,1565,6.78,1566,6.78,1567,6.78,1568,6.78,1569,6.78,1570,6.78,1571,6.78,1572,6.78,1573,6.78,1574,6.78,1575,6.78,1576,7.569,1577,7.518,1578,6.214,1579,3.852,1580,4.296,1581,4.969,1582,5.735,1583,4.969,1584,4.969,1585,4.969,1586,6.214,1587,4.969,1588,4.969,1589,6.78,1590,4.296,1591,7.393,1592,7.569,1593,6.214,1594,3.548,1595,6.78,1596,6.78,1597,6.78,1598,6.214,1599,4.969,1600,4.969,1601,6.214,1602,4.969,1603,4.969,1604,4.969,1605,4.296,1606,4.969,1607,4.969,1608,4.969,1609,4.296,1610,4.969,1611,4.969,1612,4.969,1613,4.969,1614,3.852,1615,3.548,1616,3.548,1617,3.548,1618,3.548,1619,3.548,1620,3.548]],["title/components/OverviewCardComponent.html",[0,0.178,157,0.641]],["body/components/OverviewCardComponent.html",[0,0.357,1,0.787,2,0.152,3,0.11,4,0.9,5,0.94,6,0.861,7,0.089,11,0.242,12,0.861,19,0.96,20,1.058,22,0.94,23,1.301,24,1.241,25,1.006,26,0.96,28,0.96,30,0.364,34,0.712,38,1.116,41,0.443,42,0.663,47,0.465,49,0.916,50,1.006,52,0.017,53,0.566,58,0.557,71,0.443,87,0.65,97,0.196,98,0.174,103,0.131,104,0.062,119,0.557,120,1.201,121,1.201,122,1.15,123,1.395,124,0.94,125,1.201,126,0.751,127,0.94,128,0.751,129,0.94,130,0.557,131,0.94,132,0.787,133,0.94,134,0.751,135,0.966,136,1.395,137,0.751,138,0.94,139,0.787,140,1.324,141,0.787,142,1.324,143,0.787,144,1.324,145,0.787,146,0.94,147,0.787,148,0.94,149,0.787,150,0.9,151,0.787,152,0.94,153,0.787,154,0.787,155,0.751,156,0.94,157,1.168,158,1.284,159,0.94,160,0.751,161,0.94,162,0.787,163,0.717,164,0.94,165,0.717,166,0.751,167,1.201,168,0.717,169,0.861,170,0.787,171,1.104,172,0.861,173,1.213,174,0.751,175,0.94,176,0.787,177,0.528,178,0.823,179,0.787,180,1.006,181,0.94,182,0.787,183,0.787,184,0.787,185,0.717,186,0.787,187,0.787,188,0.9,189,0.94,190,0.012,191,0.012,221,1.15,259,3.428,430,2.276,1185,3.921,1530,4.638,1580,6.009,1621,5.701,1622,5.113,1623,4.046,1624,5.172,1625,5.983,1626,5.983,1627,4.68,1628,4.68]],["title/components/OverviewComponent.html",[0,0.178,160,0.612]],["body/components/OverviewComponent.html",[0,0.362,1,0.784,2,0.152,3,0.109,4,0.897,5,0.937,6,0.858,7,0.089,11,0.241,12,0.858,19,0.959,20,1.057,22,0.937,23,1.301,24,1.241,25,1.004,26,0.959,28,0.959,30,0.363,34,0.711,38,1.114,41,0.442,42,0.662,47,0.464,49,0.915,50,1.004,52,0.016,53,0.565,58,0.556,71,0.442,87,0.649,97,0.196,98,0.174,103,0.13,104,0.062,119,0.556,120,1.199,121,1.199,122,1.148,123,1.394,124,0.937,125,1.199,126,0.749,127,0.937,128,0.749,129,0.937,130,0.556,131,0.937,132,0.784,133,0.937,134,0.749,135,1.02,136,1.394,137,0.749,138,0.937,139,0.784,140,1.322,141,0.784,142,1.322,143,0.784,144,1.322,145,0.784,146,0.937,147,0.784,148,0.937,149,0.784,150,1.266,151,0.784,152,0.937,153,0.784,154,0.784,155,0.749,156,0.937,157,0.784,158,1.107,159,0.937,160,1.114,161,0.937,162,0.784,163,0.715,164,0.937,165,0.715,166,0.749,167,1.199,168,0.715,169,0.858,170,0.784,171,1.123,172,0.858,173,1.211,174,0.749,175,0.937,176,0.784,177,0.526,178,0.821,179,0.784,180,1.004,181,0.937,182,0.784,183,0.784,184,0.784,185,0.715,186,0.784,187,0.784,188,0.897,189,0.937,190,0.012,191,0.012,221,1.148,327,1.483,389,2.491,774,2.889,913,3.422,1044,5.163,1137,3.914,1138,3.543,1629,4.035,1630,5.163,1631,5.973,1632,5.973,1633,4.668,1634,4.668,1635,5.973,1636,5.973]],["title/modules/OverviewModule.html",[358,0.871,1266,2.501]],["body/modules/OverviewModule.html",[0,0.293,2,0.164,3,0.118,7,0.096,11,0.261,47,0.487,52,0.017,60,3.644,67,2.091,97,0.33,98,0.188,103,0.2,104,0.067,119,0.6,157,1.323,158,1.235,160,1.263,190,0.013,191,0.013,226,1.835,327,1.557,358,1.709,360,1.681,361,2.986,362,2.206,368,3.441,369,3.441,370,3.441,371,2.882,372,2.318,373,2.206,375,2.882,376,3.2,377,2.318,389,2.103,390,2.722,391,2.89,392,2.89,393,2.89,418,3.594,924,4.042,1037,4.862,1265,4.575,1266,5.279,1268,4.042,1275,4.36,1278,4.36,1279,4.36,1622,3.909,1637,4.36,1638,4.36,1639,5.043,1640,4.36,1641,5.043,1642,6.272,1643,5.422,1644,5.043,1645,5.043]],["title/injectables/RoutingService.html",[765,1.12,1135,1.947]],["body/injectables/RoutingService.html",[2,0.168,3,0.121,7,0.099,11,0.357,13,0.641,30,0.402,34,0.759,42,0.521,44,4.749,47,0.56,50,1.071,51,1.121,52,0.017,53,0.603,54,0.759,55,0.93,56,1.385,61,1.884,62,3.441,71,0.654,84,4.014,87,0.96,93,3.441,94,0.831,97,0.267,98,0.193,101,2.642,103,0.145,104,0.068,105,0.976,135,0.886,168,1.104,171,0.93,190,0.013,191,0.013,216,2.505,221,1.225,225,2.742,230,3.084,244,1.211,272,1.385,460,4.375,765,2.028,805,3.669,837,4.014,1135,3.253,1138,3.678,1183,5.34,1243,3.669,1646,4.477,1647,6.375,1648,6.375,1649,7.208,1650,7.208,1651,6.375,1652,5.179,1653,5.179,1654,5.179,1655,5.179,1656,6.375,1657,5.179,1658,5.588,1659,5.179,1660,5.179,1661,5.179,1662,5.179,1663,5.179]],["title/modules/SharedModule.html",[358,0.871,370,1.754]],["body/modules/SharedModule.html",[0,0.349,2,0.162,3,0.117,7,0.095,11,0.258,12,1.145,13,0.626,17,2.831,41,0.643,52,0.017,58,0.847,97,0.329,98,0.185,103,0.199,104,0.066,117,1.828,119,0.593,130,0.942,132,1.331,165,1.212,166,0.8,190,0.013,191,0.013,226,1.813,228,2.691,296,2.856,297,2.544,327,1.546,358,1.704,359,2.691,360,1.662,361,2.97,362,2.181,368,3.431,369,3.431,370,3.667,371,2.862,372,2.291,373,2.181,375,2.862,376,3.177,377,2.291,386,4.827,387,4.827,388,4.827,389,2.079,390,2.691,391,2.856,392,2.856,706,3.864,1274,3.532,1283,3.864,1614,4.827,1664,4.31,1665,4.31,1666,4.985,1667,4.31,1668,4.985,1669,6.227,1670,6.227,1671,5.383,1672,6.227,1673,4.985,1674,3.532,1675,4.985]],["title/components/ShelveButtonComponent.html",[0,0.178,162,0.641]],["body/components/ShelveButtonComponent.html",[0,0.356,1,0.596,2,0.115,3,0.083,4,0.682,5,1.313,6,0.652,7,0.068,10,2.514,11,0.296,12,1.425,13,0.682,14,3.171,15,2.966,16,2.847,17,2.283,18,4.296,19,0.797,20,0.92,21,4.446,22,0.712,23,1.28,24,1.222,25,0.835,26,0.797,27,3.852,28,0.797,29,3.852,30,0.276,31,0.797,32,1.202,33,3.455,34,0.74,36,5.372,37,4.817,38,0.997,39,3.036,40,1.479,41,0.683,42,0.5,43,3.067,44,4.517,45,6.241,46,6.241,47,0.568,48,4.296,51,0.874,52,0.017,53,0.588,54,0.74,55,0.725,56,1.257,57,3.096,58,0.925,59,3.286,60,3.171,61,2.261,62,2.682,63,4.817,64,5.372,65,2.404,66,1.677,67,1.657,71,0.711,72,1.808,73,1.234,75,1.978,76,4.817,77,1.459,79,1.134,80,1.479,81,3.852,82,4.296,83,3.036,84,3.852,85,4.296,86,4.296,87,0.797,89,3.852,90,5.372,92,3.797,95,2.847,97,0.274,98,0.132,99,3.067,100,2.167,101,1.81,102,0.744,103,0.099,104,0.047,105,1.002,106,1.424,107,0.999,108,3.067,109,3.067,110,3.067,111,1.915,112,1.183,114,2.325,116,2.325,117,1.041,118,2.167,119,0.422,120,0.998,121,0.998,122,0.955,123,1.248,124,0.712,125,0.998,126,0.569,127,0.712,128,0.569,129,0.712,130,0.422,131,0.712,132,0.596,133,0.712,134,0.569,135,0.864,136,1.248,137,0.569,138,0.712,139,0.596,140,1.151,141,0.596,142,1.151,143,0.596,144,1.151,145,0.596,146,0.712,147,0.596,148,0.712,149,0.596,150,0.682,151,0.596,152,0.712,153,0.596,154,0.596,155,0.569,156,0.712,157,0.596,158,0.596,159,0.712,160,0.569,161,0.712,162,1.044,163,0.543,164,0.712,165,0.543,166,0.569,167,0.998,168,0.543,169,0.652,170,0.596,171,1.037,172,0.652,173,1.055,174,0.569,175,0.712,176,0.596,177,0.4,178,0.624,179,0.596,180,0.835,181,0.712,182,0.596,183,0.596,184,0.596,185,0.543,186,0.596,187,0.596,188,0.682,189,0.712,190,0.01,191,0.01,221,0.955,241,4.072,242,1.543,243,3.758,244,0.964,250,2.404,381,5.596,634,2.167,1676,6.241,1677,6.214,1678,3.548,1679,3.852,1680,4.969,1681,3.548,1682,3.548,1683,3.548,1684,3.548,1685,3.548]],["title/components/ShelveComponent.html",[0,0.178,163,0.584]],["body/components/ShelveComponent.html",[0,0.335,1,0.366,2,0.071,3,0.051,4,0.418,5,0.437,6,0.4,7,0.041,11,0.252,12,0.976,13,0.651,14,1.759,16,3.041,17,1.938,19,0.553,20,0.687,22,0.437,23,1.229,24,1.173,25,0.579,26,0.553,28,0.553,30,0.169,31,0.553,32,0.897,33,3.173,34,0.58,38,0.781,40,0.821,41,0.738,42,0.347,44,4.035,47,0.581,51,0.383,52,0.017,53,0.405,54,0.752,55,0.711,56,1.214,57,2.628,58,0.924,59,3.62,60,1.11,61,1.931,62,3.048,65,1.667,66,1.524,69,1.508,71,0.735,72,1.557,73,1.063,75,1.938,77,1.257,79,0.787,80,0.821,83,2.975,87,0.98,93,2.628,94,0.349,97,0.248,98,0.081,100,1.329,101,1.11,102,0.456,103,0.096,104,0.029,105,0.865,106,1.64,107,0.97,111,2.628,112,1.624,114,2.259,116,1.426,117,1.939,118,3.243,119,0.259,120,0.692,121,0.692,122,0.663,123,0.978,124,0.437,125,0.692,126,0.349,127,0.437,128,0.349,129,0.437,130,0.259,131,0.437,132,0.366,133,0.437,134,0.349,135,0.677,136,0.978,137,0.349,138,0.437,139,0.366,140,0.859,141,0.366,142,0.859,143,0.366,144,0.859,145,0.366,146,0.437,147,0.366,148,0.437,149,0.366,150,0.418,151,0.366,152,0.437,153,0.366,154,0.366,155,0.349,156,0.437,157,0.366,158,0.366,159,0.437,160,0.349,161,0.437,162,0.366,163,0.746,164,0.437,165,0.333,166,0.687,167,0.692,168,0.333,169,0.4,170,0.366,171,0.895,172,0.4,173,0.787,174,0.349,175,0.437,176,0.366,177,0.245,178,0.383,179,0.366,180,0.579,181,0.437,182,0.366,183,0.366,184,0.366,185,0.333,186,0.366,187,0.366,188,0.418,189,0.437,190,0.013,191,0.007,193,2.355,194,3.033,198,2.628,200,4.525,201,4.467,203,5.017,206,4.377,207,3.775,208,3.45,209,3.775,210,4,211,3.775,213,1.881,214,4.756,215,1.783,216,2.567,217,3.45,218,4.114,219,3.775,221,0.663,222,2.467,223,3.191,224,3.087,225,1.771,226,1.771,227,2.672,228,3.193,229,1.975,230,1.667,231,1.975,233,3.41,237,1.861,241,4.621,242,1.766,243,4.733,244,1.196,246,2.672,247,4.756,248,2.672,249,3.708,250,2.355,252,2.442,257,2.672,259,2.79,260,1.759,261,2.805,262,2.106,263,2.672,268,1.437,271,1.264,272,1.378,277,1.371,280,3.775,282,1.667,283,2.259,284,5.208,288,2.113,289,1.667,290,2.672,291,3.318,292,2.674,293,2.672,294,3.775,296,1.247,297,1.11,298,0.695,299,2.672,300,0.821,301,2.672,302,1.687,303,1.687,304,1.687,305,1.687,306,1.687,307,1.687,308,1.687,309,1.687,311,1.687,312,1.687,313,4.586,314,1.687,315,2.672,316,1.687,319,1.687,321,4.377,322,3.7,323,2.672,324,1.687,325,1.687,341,2.672,342,1.542,343,1.687,344,1.687,345,1.542,346,1.687,347,1.687,348,1.687,349,3.033,350,2.98,351,2.98,352,1.861,353,2.259,355,2.672,357,2.98,411,1.667,477,2.355,484,2.259,491,2.259,542,1.687,569,2.672,634,3.614,663,2.442,687,2.259,940,2.628,1155,2.628,1205,4.756,1243,2.442,1362,2.259,1481,2.672,1679,3.775,1686,1.687,1687,2.98,1688,2.98,1689,4.21,1690,6.151,1691,4.21,1692,4.881,1693,4.881,1694,4.881,1695,4.21,1696,3.447,1697,2.176,1698,2.672,1699,2.176,1700,2.176,1701,2.176,1702,2.176,1703,2.98,1704,2.176,1705,2.176,1706,2.176,1707,2.176,1708,2.176,1709,2.176,1710,2.176,1711,2.176,1712,2.176,1713,2.176,1714,2.176,1715,2.98,1716,2.176,1717,2.176,1718,2.176,1719,2.176,1720,2.176,1721,3.45,1722,2.98,1723,5.893,1724,2.98,1725,4.21,1726,2.98,1727,2.98,1728,2.98,1729,5.304,1730,2.98,1731,2.98,1732,2.98,1733,2.176,1734,1.687,1735,1.329,1736,1.881,1737,1.542,1738,2.98,1739,1.881,1740,1.881,1741,1.881,1742,1.881,1743,1.881,1744,2.98,1745,1.881,1746,1.881,1747,2.98,1748,2.98,1749,1.881,1750,1.881,1751,1.881,1752,1.881,1753,3.447,1754,3.447,1755,2.98]],["title/injectables/SidenavService.html",[33,1.754,765,1.12]],["body/injectables/SidenavService.html",[2,0.162,3,0.116,7,0.095,11,0.321,13,0.624,16,4.274,17,2.473,30,0.386,31,0.997,32,1.664,33,2.855,34,0.74,42,0.681,47,0.6,49,0.951,50,1.044,51,0.873,52,0.017,53,0.47,54,0.74,55,0.725,56,1.365,58,0.74,59,4.604,61,2.26,65,3.608,71,0.706,73,1.542,75,2.473,87,0.942,97,0.26,98,0.185,103,0.139,104,0.066,105,0.76,106,1.683,117,1.823,190,0.013,191,0.013,242,1.542,249,4.384,271,1.182,272,0.955,436,1.748,765,1.99,894,4.274,925,3.85,926,3.254,1220,6.614,1236,3.254,1756,4.293,1757,6.212,1758,6.212,1759,7.103,1760,6.212,1761,4.966,1762,4.966,1763,4.966,1764,6.212,1765,4.966,1766,4.966,1767,6.212,1768,4.966,1769,4.966,1770,4.966,1771,4.966,1772,4.966,1773,4.966]],["title/components/StatusViewComponent.html",[0,0.178,165,0.584]],["body/components/StatusViewComponent.html",[0,0.353,1,0.571,2,0.111,3,0.08,4,0.653,5,0.682,6,0.625,7,0.065,11,0.176,12,0.625,17,1.919,19,0.774,20,0.899,22,0.682,23,1.277,24,1.218,25,0.81,26,0.774,28,0.774,30,0.264,31,0.774,32,1.498,34,0.574,38,0.979,40,1.673,41,0.742,42,0.563,47,0.597,52,0.017,53,0.456,54,0.767,58,0.726,66,1.302,67,1.608,71,0.456,73,1.514,75,1.919,87,0.67,94,0.774,97,0.256,98,0.126,102,0.713,103,0.095,104,0.045,106,1.391,117,1.415,119,0.405,120,0.968,121,0.968,122,0.927,123,1.224,124,0.682,125,0.968,126,0.546,127,0.682,128,0.546,129,0.682,130,0.574,131,0.682,132,0.571,133,0.682,134,0.546,135,0.847,136,1.224,137,0.546,138,0.682,139,0.571,140,1.125,141,0.571,142,1.125,143,0.571,144,1.125,145,0.571,146,0.682,147,0.571,148,0.682,149,0.571,150,0.653,151,0.571,152,0.682,153,0.571,154,0.571,155,0.546,156,0.682,157,0.571,158,0.571,159,0.682,160,0.546,161,0.682,162,0.571,163,0.52,164,0.682,165,0.934,166,1.104,167,0.968,168,0.52,169,0.625,170,0.571,171,1.026,172,0.625,173,1.031,174,0.546,175,0.682,176,0.571,177,0.383,178,0.598,179,0.571,180,0.81,181,0.682,182,0.571,183,0.571,184,0.571,185,0.52,186,0.571,187,0.571,188,0.653,189,0.682,190,0.01,191,0.01,221,0.927,222,2.011,235,2.603,242,1.197,244,0.81,259,2.763,267,1.834,271,1.533,272,1.351,300,1.334,385,1.293,423,1.644,430,2.544,435,2.738,436,2.161,438,5.684,446,5.781,487,2.685,492,2.685,495,2.451,496,2.227,497,2.451,498,2.451,499,2.451,500,2.451,668,3.266,678,3.97,682,3.113,685,3.416,686,3.416,687,3.16,688,3.416,703,3.738,918,1.353,944,2.946,960,4.482,1138,2.46,1158,3.16,1380,4.32,1412,4.168,1511,5.566,1513,5.945,1516,5.271,1519,2.939,1521,2.939,1523,2.939,1525,2.939,1530,3.738,1674,5.195,1774,6.339,1775,2.635,1776,4.822,1777,4.168,1778,6.098,1779,6.098,1780,6.098,1781,6.688,1782,6.098,1783,4.822,1784,3.399,1785,4.822,1786,3.399,1787,3.399,1788,3.738,1789,3.399,1790,4.822,1791,4.822,1792,3.399,1793,3.399,1794,3.399,1795,3.399,1796,3.399,1797,3.399,1798,3.399,1799,3.399]],["title/modules/TabularModule.html",[358,0.871,1267,2.501]],["body/modules/TabularModule.html",[0,0.303,2,0.174,3,0.125,7,0.102,11,0.276,52,0.017,97,0.329,98,0.198,103,0.204,104,0.071,119,0.635,151,1.276,165,0.817,168,1.214,169,0.982,190,0.013,191,0.013,226,1.942,327,1.612,358,1.662,359,4.098,360,1.78,361,3.062,362,2.335,369,3.489,370,3.489,371,2.985,372,2.453,373,2.335,375,2.985,376,3.314,377,2.453,389,2.226,390,2.881,391,3.059,393,3.059,441,2.985,702,2.47,1138,3.314,1267,5.24,1274,3.782,1282,3.782,1283,5.035,1674,3.782,1800,4.615,1801,4.615,1802,5.338,1803,4.615,1804,5.338,1805,5.338,1806,5.338]],["title/components/TabularViewComponent.html",[0,0.178,168,0.584]],["body/components/TabularViewComponent.html",[0,0.343,1,0.4,2,0.077,3,0.056,4,0.457,5,0.477,6,0.437,7,0.045,11,0.316,12,0.437,13,0.372,14,2.609,15,2.422,19,0.593,20,0.727,21,3.514,22,0.477,23,1.24,24,1.183,25,0.621,26,0.593,28,0.593,30,0.185,31,0.593,32,1.491,34,0.44,37,3.963,38,0.82,40,1.546,41,0.711,42,0.372,47,0.596,51,0.797,52,0.017,53,0.615,54,0.829,55,0.662,56,0.71,58,0.283,65,2.835,66,0.998,71,0.679,72,2.014,73,1.455,75,1.471,77,1.857,79,0.843,80,1.217,83,2.258,87,0.85,92,2.258,94,1.043,97,0.265,98,0.088,101,1.213,102,0.498,103,0.066,104,0.031,105,0.783,106,1.748,107,1.829,112,0.793,117,1.501,119,0.283,120,0.742,121,0.742,122,0.71,123,1.026,124,0.477,125,0.742,126,0.382,127,0.477,128,0.382,129,0.477,130,0.283,131,0.477,132,0.4,133,0.477,134,0.382,135,0.71,136,1.026,137,0.382,138,0.477,139,0.4,140,0.91,141,0.4,142,0.91,143,0.4,144,0.91,145,0.4,146,0.477,147,0.4,148,0.477,149,0.4,150,0.457,151,0.4,152,0.477,153,0.4,154,0.4,155,0.382,156,0.477,157,0.4,158,0.4,159,0.477,160,0.382,161,0.477,162,0.4,163,0.364,164,0.477,165,0.364,166,0.982,167,0.742,168,0.783,169,1.125,170,0.4,171,0.923,172,0.437,173,0.834,174,0.382,175,0.477,176,0.4,177,0.576,178,0.418,179,0.4,180,0.621,181,0.477,182,0.4,183,0.4,184,0.4,185,0.364,186,0.4,187,0.4,188,0.457,189,0.477,190,0.008,191,0.009,194,3.212,200,2.421,208,3.622,215,1.901,216,2.678,217,3.622,221,0.71,222,0.991,225,1.86,229,3.358,242,1.269,244,1.276,249,2.117,252,2.618,259,2.117,261,4.145,271,1.546,272,1.249,277,0.669,283,4.257,288,1.471,289,3.059,292,1.804,298,0.759,300,1.079,327,0.59,334,1.995,349,2.618,355,2.865,398,3.622,409,1.886,411,1.787,417,3.195,423,1.15,429,3.358,430,1.406,435,2.035,436,2.13,441,3.439,442,5.74,460,4.497,463,1.558,477,1.787,480,5.067,537,2.618,616,1.886,708,2.618,728,3.212,765,0.698,767,1.843,774,1.15,775,1.213,776,1.15,798,2.865,800,4.742,816,1.843,822,3.963,826,2.865,894,3.173,916,1.453,917,3.123,1138,1.886,1155,3.757,1183,2.618,1188,1.558,1213,2.865,1221,3.195,1222,3.919,1236,1.558,1282,5.278,1311,2.258,1329,3.195,1370,3.195,1388,3.195,1590,4.787,1658,2.865,1775,1.843,1777,3.195,1807,6.44,1808,3.695,1809,3.695,1810,5.112,1811,5.112,1812,5.862,1813,5.112,1814,5.112,1815,6.118,1816,5.112,1817,6.325,1818,3.695,1819,5.862,1820,3.695,1821,5.112,1822,2.378,1823,3.695,1824,2.378,1825,3.695,1826,2.378,1827,3.695,1828,3.695,1829,2.378,1830,3.695,1831,2.378,1832,3.695,1833,2.378,1834,3.695,1835,2.378,1836,5.112,1837,4.787,1838,3.695,1839,4.533,1840,2.378,1841,3.695,1842,2.378,1843,5.112,1844,3.695,1845,3.695,1846,3.695,1847,2.378,1848,3.695,1849,5.537,1850,2.378,1851,2.378,1852,2.378,1853,3.695,1854,3.695,1855,3.695,1856,3.695,1857,3.695,1858,2.378,1859,5.537,1860,3.695,1861,2.378,1862,3.195,1863,3.695,1864,2.378,1865,6.118,1866,2.378,1867,5.862,1868,2.378,1869,2.378,1870,2.378,1871,2.378,1872,2.378,1873,2.378,1874,2.378,1875,2.378,1876,1.843,1877,2.378,1878,2.378,1879,2.378,1880,2.378,1881,2.378,1882,2.378,1883,2.378,1884,1.843,1885,2.378,1886,3.695,1887,2.378,1888,2.378,1889,2.378,1890,2.378,1891,5.537,1892,2.378,1893,2.378,1894,2.378,1895,2.378,1896,2.378,1897,2.378,1898,2.378,1899,2.378,1900,2.378,1901,5.112,1902,2.378,1903,3.695,1904,2.378,1905,3.695,1906,4.533,1907,4.533,1908,2.378,1909,2.378,1910,2.378,1911,2.378,1912,4.533,1913,2.378,1914,3.695,1915,3.695,1916,3.695,1917,3.695,1918,3.695]],["title/interfaces/TimeoutOption.html",[1721,2.704,1735,2.331]],["body/interfaces/TimeoutOption.html",[0,0.321,2,0.101,3,0.073,7,0.059,11,0.161,12,0.834,13,0.626,14,1.592,16,2.598,17,1.805,19,0.501,20,0.728,23,0.501,24,0.478,26,0.501,28,0.501,30,0.242,31,0.728,32,0.654,33,2.862,34,0.371,38,0.501,40,0.743,41,0.732,42,0.314,44,3.969,47,0.242,52,0.017,54,0.54,55,0.779,56,1.127,57,2.447,58,0.908,59,3.359,60,1.592,61,1.649,62,2.883,65,1.509,66,1.442,69,1.365,71,0.734,72,1.649,73,1.126,75,1.805,77,1.331,79,0.712,80,0.743,87,0.932,93,2.447,94,0.501,97,0.281,98,0.116,100,1.906,101,1.592,102,0.654,103,0.127,104,0.041,105,0.995,106,1.664,107,1.276,111,3.164,112,1.955,114,2.971,116,2.045,117,1.907,118,3.805,163,0.478,166,0.501,190,0.013,191,0.009,193,2.193,194,3.212,198,1.684,200,4.257,201,4.393,203,4.545,206,2.419,207,2.419,208,2.211,209,2.419,210,3.212,211,2.419,214,4.827,215,1.754,216,2.583,217,3.212,218,4.14,219,3.515,221,0.6,222,2.445,223,2.971,224,3.081,225,1.649,226,1.649,227,2.419,228,3.164,229,1.788,230,1.509,231,1.788,233,3.707,241,4.501,242,1.766,243,4.722,244,1.255,246,2.419,247,4.545,248,2.419,249,3.359,250,2.193,252,2.211,257,2.419,259,3.06,260,1.592,261,3.5,262,1.906,263,2.419,271,0.743,272,1.425,277,0.878,280,3.515,282,1.509,283,2.045,284,5.036,288,2.126,289,1.509,290,2.419,291,4.14,292,2.787,293,2.419,294,4.14,296,1.788,297,1.592,298,0.997,299,3.515,300,1.079,301,3.515,302,2.419,303,2.419,304,2.419,305,2.419,306,2.419,307,2.419,308,2.419,309,2.419,311,2.419,312,2.419,313,5.197,314,2.419,315,3.515,316,2.419,319,2.419,321,5.036,322,4.257,323,3.515,324,2.419,325,2.419,341,3.515,342,2.211,343,2.419,344,2.419,345,2.211,346,2.419,347,2.419,348,2.419,411,1.509,477,2.193,484,2.045,491,2.045,542,2.419,569,2.419,634,4.096,663,3.212,940,2.447,1155,2.447,1205,4.545,1243,3.212,1362,2.045,1481,3.515,1679,3.515,1686,2.419,1687,2.697,1688,2.697,1689,2.697,1690,6.053,1691,2.697,1692,2.697,1693,2.697,1694,2.697,1695,2.697,1698,2.419,1703,2.697,1715,2.697,1721,3.784,1722,2.697,1723,6.149,1724,2.697,1725,3.92,1726,2.697,1727,2.697,1728,2.697,1729,5.068,1730,2.697,1731,2.697,1732,2.697,1734,3.515,1735,2.77,1736,3.92,1737,3.212,1738,3.92,1739,2.697,1740,2.697,1741,2.697,1742,2.697,1743,2.697,1744,3.92,1745,2.697,1746,2.697,1747,3.92,1748,3.92,1749,2.697,1750,2.697,1751,2.697,1752,2.697]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.178,170,0.641]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.357,1,0.64,2,0.124,3,0.089,4,0.732,5,0.765,6,0.701,7,0.073,11,0.27,12,0.701,13,0.697,19,0.838,20,0.956,22,0.765,23,1.286,24,1.227,25,0.877,26,0.838,28,0.838,30,0.296,31,0.838,32,1.537,34,0.622,38,1.028,40,1.525,41,0.72,42,0.525,47,0.552,49,0.799,50,0.877,51,0.67,52,0.017,53,0.564,54,0.799,55,0.556,56,1.332,58,0.454,71,0.656,79,1.192,87,0.529,94,0.838,97,0.298,98,0.142,102,0.799,103,0.107,104,0.05,105,0.799,119,0.454,120,1.048,121,1.048,122,1.003,123,1.286,124,0.765,125,1.048,126,0.611,127,0.765,128,0.611,129,0.765,130,0.622,131,0.765,132,0.64,133,0.765,134,0.611,135,0.89,136,1.286,137,0.611,138,0.765,139,0.64,140,1.196,141,0.64,142,1.196,143,0.64,144,1.196,145,0.64,146,0.765,147,0.64,148,0.765,149,0.64,150,0.732,151,0.64,152,0.765,153,0.64,154,0.64,155,0.611,156,0.765,157,0.64,158,0.64,159,0.765,160,0.611,161,0.765,162,0.64,163,0.583,164,0.765,165,0.583,166,0.611,167,1.048,168,0.583,169,0.701,170,1.077,171,1.136,172,1.456,173,1.456,174,0.611,175,0.765,176,0.64,177,0.43,178,0.67,179,0.64,180,0.877,181,0.765,182,0.64,183,0.64,184,0.64,185,1.087,186,0.64,187,0.64,188,0.732,189,0.765,190,0.011,191,0.011,215,2.065,221,1.003,242,1.296,244,1.001,277,1.47,298,1.217,385,1.986,436,1.072,447,2.484,457,3.19,576,2.178,579,2.328,592,2.945,593,3.421,594,3.421,617,2.074,682,1.589,702,1.986,918,1.517,1014,3.099,1362,4.199,1919,3.902,1920,4.416,1921,4.737,1922,3.326,1923,3.903,1924,2.497,1925,4.513,1926,4.047,1927,2.881,1928,3.294,1929,3.294,1930,3.294,1931,3.294,1932,3.294,1933,2.056,1934,3.294]],["title/components/WeatherComponent.html",[0,0.178,174,0.612]],["body/components/WeatherComponent.html",[0,0.365,1,0.724,2,0.14,3,0.101,4,0.828,5,0.865,6,0.792,7,0.082,11,0.223,12,0.792,13,0.677,15,2.48,19,0.91,20,1.017,22,0.865,23,1.295,24,1.236,25,0.953,26,0.91,28,0.91,30,0.335,31,0.91,34,0.675,38,1.081,40,1.026,41,0.6,42,0.637,47,0.523,49,0.868,50,0.953,51,0.758,52,0.017,53,0.693,54,0.675,55,0.629,58,0.513,71,0.537,79,1.294,87,0.881,94,1.081,97,0.238,98,0.16,103,0.12,104,0.057,105,0.66,112,1.891,119,0.513,120,1.138,121,1.138,122,1.09,123,1.352,124,0.865,125,1.138,126,0.691,127,0.865,128,0.691,129,0.865,130,0.513,131,0.865,132,0.724,133,0.865,134,0.691,135,0.936,136,1.352,137,0.691,138,0.865,139,0.724,140,1.272,141,0.724,142,1.272,143,0.724,144,1.272,145,0.724,146,0.865,147,0.724,148,0.865,149,0.724,150,0.828,151,0.724,152,0.865,153,0.724,154,0.724,155,0.691,156,0.865,157,0.724,158,0.724,159,0.865,160,0.691,161,0.865,162,0.724,163,0.66,164,0.865,165,0.66,166,0.691,167,1.138,168,0.66,169,0.792,170,0.724,171,1.124,172,0.792,173,1.166,174,1.081,175,0.865,176,0.724,177,0.486,178,0.758,179,0.724,180,0.953,181,0.865,182,0.724,183,0.724,184,0.724,185,0.66,186,0.724,187,0.724,188,0.828,189,0.865,190,0.012,191,0.012,221,1.381,242,1.408,250,2.743,266,3.464,268,2.809,270,5.221,271,1.026,272,0.828,576,1.977,589,2.198,595,3.258,986,4.396,997,4.396,998,4.902,1927,3.595,1933,2.325,1935,3.724,1936,5.67,1937,5.67,1938,5.67,1939,5.67,1940,6.211,1941,5.67,1942,5.67,1943,5.67,1944,4.308,1945,4.308,1946,3.724]],["title/components/WeatherDataMarkerComponent.html",[0,0.178,176,0.641]],["body/components/WeatherDataMarkerComponent.html",[0,0.36,1,0.627,2,0.121,3,0.088,4,0.717,5,0.749,6,0.686,7,0.071,11,0.304,12,0.686,13,0.692,19,0.826,20,0.945,22,0.749,23,1.284,24,1.226,25,0.865,26,0.826,28,0.826,30,0.29,31,0.826,32,1.444,34,0.613,38,1.019,40,1.64,41,0.712,42,0.517,47,0.559,49,0.788,50,0.865,51,0.905,52,0.017,53,0.601,54,0.793,55,0.751,56,1.324,57,3.428,58,0.444,71,0.652,77,1.864,79,1.175,87,0.518,94,1.019,97,0.279,98,0.139,102,0.782,103,0.104,104,0.049,105,0.902,119,0.444,120,1.033,121,1.033,122,0.989,123,1.275,124,0.749,125,1.033,126,0.599,127,0.749,128,0.599,129,0.749,130,0.613,131,0.749,132,0.627,133,0.749,134,0.599,135,0.882,136,1.275,137,0.599,138,0.749,139,0.627,140,1.183,141,0.627,142,1.183,143,0.627,144,1.183,145,0.627,146,0.749,147,0.627,148,0.749,149,0.627,150,0.717,151,0.627,152,0.749,153,0.627,154,0.627,155,0.599,156,0.749,157,0.627,158,0.627,159,0.749,160,0.599,161,0.749,162,0.627,163,0.571,164,0.749,165,0.571,166,0.599,167,1.033,168,0.571,169,0.686,170,0.627,171,1.124,172,0.686,173,1.083,174,0.599,175,0.749,176,1.067,177,0.891,178,0.656,179,0.627,180,0.865,181,0.749,182,0.627,183,0.627,184,0.627,185,1.02,186,0.627,187,0.627,188,0.717,189,0.749,190,0.011,191,0.011,198,2.778,215,2.079,221,0.989,242,1.278,244,1.067,268,2.778,271,1.225,272,0.989,277,1.788,298,1.192,352,2.778,385,1.419,427,3.646,447,2.457,576,2.19,579,2.279,584,3.225,592,3.305,593,3.372,594,3.372,617,2.051,702,1.957,786,2.778,932,2.778,1014,2.489,1022,4.161,1031,3.372,1090,2.445,1579,3.989,1671,4.449,1919,3.94,1920,4.46,1921,4.783,1922,3.315,1923,3.86,1924,2.445,1926,3.989,1927,2.849,1933,2.014,1947,5.093,1948,5.146,1949,4.923,1950,3.731,1951,3.731,1952,3.731,1953,3.731,1954,3.731]],["title/modules/WeatherModule.html",[358,0.871,1268,2.06]],["body/modules/WeatherModule.html",[0,0.274,2,0.147,3,0.106,7,0.086,11,0.234,52,0.017,60,2.991,97,0.334,98,0.169,103,0.192,104,0.06,119,0.54,170,1.224,171,1.117,172,1.078,173,1.34,174,1.169,176,1.224,177,0.661,178,1.281,179,1.224,180,1.154,182,1.224,183,1.224,184,1.224,185,0.898,186,1.303,190,0.012,191,0.012,226,2.363,297,2.313,327,1.455,358,1.568,359,3.932,360,1.512,361,2.842,362,1.983,368,3.348,369,3.348,370,3.348,371,2.694,372,2.083,373,1.983,375,2.694,376,2.991,377,2.083,389,1.891,390,2.447,391,2.598,392,2.598,393,2.598,576,2.016,702,2.23,1103,4.174,1106,3.919,1108,5.067,1109,3.514,1110,5.616,1112,3.514,1268,4.372,1274,3.212,1920,4.196,1921,4.257,1922,3.187,1933,2.447,1955,3.919,1956,3.919,1957,4.534,1958,3.919,1959,3.919,1960,4.534,1961,5.862,1962,3.514,1963,3.514,1964,3.919,1965,4.534,1966,4.153,1967,3.514,1968,4.534]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.178,179,0.641]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.344,1,0.655,2,0.127,3,0.091,4,0.749,5,0.782,6,0.716,7,0.074,11,0.201,12,0.716,13,0.533,15,2.319,19,0.851,20,0.967,22,0.782,23,1.288,24,1.229,25,0.891,26,0.851,28,0.851,30,0.303,34,0.631,38,1.038,40,1.661,41,0.369,42,0.606,47,0.542,49,0.812,50,0.891,52,0.017,53,0.502,54,0.464,58,0.464,71,0.66,77,1.556,79,1.21,87,0.541,95,3.037,97,0.163,98,0.145,103,0.109,104,0.052,107,1.097,119,0.464,120,1.064,121,1.064,122,1.019,123,1.298,124,0.782,125,1.064,126,0.625,127,0.782,128,0.625,129,0.782,130,0.464,131,0.782,132,0.655,133,0.782,134,0.625,135,0.899,136,1.298,137,0.625,138,0.782,139,0.655,140,1.21,141,0.655,142,1.21,143,0.655,144,1.21,145,0.655,146,0.782,147,0.655,148,0.782,149,0.655,150,0.749,151,0.655,152,0.782,153,0.655,154,0.655,155,0.625,156,0.782,157,0.655,158,0.655,159,0.782,160,0.625,161,0.782,162,0.655,163,0.596,164,0.782,165,0.596,166,0.625,167,1.064,168,0.596,169,0.716,170,0.655,171,1.139,172,0.716,173,1.454,174,0.625,175,0.782,176,0.655,177,0.439,178,0.685,179,1.087,180,1.326,181,0.782,182,0.655,183,0.655,184,0.655,185,0.923,186,0.655,187,0.655,188,0.749,189,0.782,190,0.011,191,0.011,221,1.019,244,1.013,268,2.513,272,1.243,288,2.574,292,1.551,352,2.861,576,2.207,592,2.972,597,2.861,702,2.016,728,3.756,929,3.238,1056,4.945,1061,5.013,1185,3.473,1579,4.109,1919,3.854,1920,4.362,1947,5.209,1949,5.013,1967,5.535,1969,3.368,1970,6.033,1971,7.451,1972,5.301,1973,5.301,1974,5.301,1975,6.467,1976,6.467,1977,5.301,1978,3.896,1979,3.896,1980,3.896,1981,3.896,1982,6.467,1983,6.025,1984,3.896,1985,3.896,1986,5.301,1987,5.301,1988,3.896]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.178,182,0.641]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.357,1,0.64,2,0.124,3,0.089,4,0.732,5,0.764,6,0.7,7,0.072,11,0.27,12,0.7,13,0.697,19,0.837,20,0.956,22,0.764,23,1.286,24,1.227,25,0.877,26,0.837,28,0.837,30,0.296,31,0.837,32,1.537,34,0.621,38,1.028,40,1.525,41,0.719,42,0.525,47,0.551,49,0.799,50,0.877,51,0.67,52,0.017,53,0.563,54,0.799,55,0.556,56,1.332,58,0.453,71,0.656,79,1.191,87,0.529,94,0.956,97,0.298,98,0.142,102,0.798,103,0.106,104,0.05,105,0.799,119,0.453,120,1.048,121,1.048,122,1.003,123,1.286,124,0.764,125,1.048,126,0.611,127,0.764,128,0.611,129,0.764,130,0.621,131,0.764,132,0.64,133,0.764,134,0.611,135,0.89,136,1.286,137,0.611,138,0.764,139,0.64,140,1.195,141,0.64,142,1.195,143,0.64,144,1.195,145,0.64,146,0.764,147,0.64,148,0.764,149,0.64,150,0.732,151,0.64,152,0.764,153,0.64,154,0.64,155,0.611,156,0.764,157,0.64,158,0.64,159,0.764,160,0.611,161,0.764,162,0.64,163,0.583,164,0.764,165,0.583,166,0.611,167,1.048,168,0.583,169,0.7,170,0.64,171,1.127,172,0.7,173,1.456,174,0.611,175,0.764,176,0.64,177,0.429,178,0.67,179,0.64,180,1.333,181,0.764,182,1.077,183,0.64,184,0.64,185,1.028,186,0.64,187,0.64,188,0.732,189,0.764,190,0.011,191,0.011,215,2.085,221,1.003,242,1.296,244,1.001,277,1.803,298,1.216,385,1.985,436,1.072,447,2.483,576,2.177,579,2.326,592,2.944,593,3.419,594,3.419,617,2.073,682,1.588,702,1.985,786,2.817,918,1.515,1014,3.098,1362,4.197,1919,3.901,1920,4.416,1921,4.736,1922,3.326,1923,3.901,1924,2.495,1925,4.511,1926,4.045,1927,2.88,1928,3.291,1929,3.291,1930,3.291,1931,3.291,1932,3.291,1933,2.055,1934,3.291]],["title/injectables/WeatherService.html",[765,1.12,1922,1.669]],["body/injectables/WeatherService.html",[0,0.283,2,0.084,3,0.06,7,0.049,11,0.246,13,0.395,30,0.37,31,0.631,32,1.642,34,0.468,41,0.684,42,0.395,47,0.585,49,0.395,50,0.433,51,0.692,52,0.017,53,0.505,54,0.833,55,0.574,56,1.248,58,0.773,61,1.431,66,1.44,67,1.59,71,0.653,73,0.64,77,1.4,80,1.546,87,0.663,94,1.011,97,0.264,98,0.096,102,0.54,103,0.11,104,0.052,105,0.73,106,1.325,107,0.726,130,0.307,135,0.741,171,1.063,177,0.601,185,1.137,190,0.008,191,0.008,193,1.902,221,0.756,222,3.257,224,2.452,225,0.938,233,2.123,235,4.147,244,1.176,254,2.253,260,2.007,267,2.029,271,0.936,272,0.756,277,2.015,289,2.306,300,1.584,327,0.64,334,2.123,385,0.98,407,1.391,409,2.433,410,2.086,411,1.247,435,2.584,436,2.151,447,1.64,453,2.334,487,2.708,492,2.708,495,3.062,497,2.84,498,2.84,499,2.84,500,2.84,501,1.391,576,1.992,592,2.783,595,2.306,597,2.123,616,2.007,617,2.108,668,3.342,682,3.24,765,1.4,774,2.929,775,1.315,776,1.247,829,2.403,911,1.689,913,1.477,916,1.575,917,1.575,918,1.026,919,2.779,920,1.689,921,1.575,922,1.575,929,2.403,932,2.123,936,2.577,937,3.78,938,2.913,939,2.123,940,2.123,941,2.786,943,1.826,944,3.259,954,3.78,955,1.826,957,1.826,958,3.78,960,4.592,961,4.772,963,4.772,964,2.786,965,2.786,1113,2.228,1268,2.123,1380,4.959,1381,4.694,1382,4.694,1788,3.049,1922,1.72,1927,3.283,1989,1.998,1990,4.612,1991,4.612,1992,4.612,1993,4.612,1994,4.612,1995,4.612,1996,4.612,1997,4.612,1998,4.612,1999,4.612,2000,4.612,2001,3.4,2002,4.612,2003,3.933,2004,3.049,2005,2.578,2006,3.049,2007,2.578,2008,2.578,2009,2.578,2010,2.578,2011,2.578,2012,5.033,2013,2.578,2014,2.578,2015,2.578,2016,2.578,2017,5.033,2018,2.578,2019,3.4,2020,2.578,2021,2.578,2022,2.578,2023,2.578,2024,4.694,2025,4.694,2026,2.578,2027,1.998,2028,2.228,2029,3.4,2030,2.228,2031,2.228,2032,2.228,2033,2.228,2034,2.228,2035,2.228,2036,2.228,2037,2.228,2038,2.228,2039,2.228,2040,6.296,2041,2.228,2042,6.296,2043,2.228,2044,6.296,2045,2.228,2046,2.228,2047,2.228,2048,2.228,2049,6.296,2050,4.612,2051,2.228]],["title/components/WeatherSidebarComponent.html",[0,0.178,183,0.641]],["body/components/WeatherSidebarComponent.html",[0,0.347,1,0.53,2,0.103,3,0.074,4,0.607,5,0.634,6,0.58,7,0.06,11,0.323,12,0.58,13,0.693,15,1.381,19,0.734,20,0.863,22,0.634,23,1.27,24,1.212,25,0.768,26,0.734,28,0.734,30,0.245,31,0.734,32,1.472,34,0.544,38,0.946,39,2.793,40,1.403,41,0.703,42,0.46,47,0.573,49,0.7,50,0.768,51,1.183,52,0.017,53,0.684,54,0.869,55,0.982,56,1.254,58,0.376,67,1.965,71,0.72,72,2.144,73,1.135,77,1.342,79,1.043,80,1.088,87,0.747,94,0.946,97,0.289,98,0.117,102,0.662,103,0.088,104,0.042,105,0.958,106,0.784,107,1.513,112,1.792,117,1.73,119,0.376,120,0.918,121,0.918,122,0.879,123,1.183,124,0.634,125,0.918,126,0.507,127,0.634,128,0.507,129,0.634,130,0.544,131,0.634,132,0.53,133,0.634,134,0.507,135,1.061,136,1.183,137,0.507,138,0.634,139,0.53,140,1.079,141,0.53,142,1.079,143,0.53,144,1.079,145,0.53,146,0.634,147,0.53,148,0.634,149,0.53,150,0.607,151,0.53,152,0.634,153,0.53,154,0.53,155,0.507,156,0.634,157,0.53,158,0.53,159,0.634,160,0.507,161,0.634,162,0.53,163,0.483,164,0.634,165,0.483,166,0.946,167,0.918,168,0.483,169,0.58,170,0.53,171,1.144,172,0.58,173,0.989,174,0.507,175,0.634,176,0.53,177,0.606,178,0.555,179,0.53,180,0.768,181,0.634,182,0.53,183,0.991,184,0.53,185,1.159,186,0.53,187,0.53,188,0.607,189,0.634,190,0.011,191,0.009,198,2.468,201,3.862,215,2.032,221,0.879,242,1.135,244,1.293,250,2.851,267,2.481,271,0.751,272,0.607,277,1.939,297,1.61,298,1.008,300,0.751,322,2.068,385,1.2,436,0.888,447,2.242,452,4.882,589,3.007,617,2.178,763,3.523,786,2.468,829,3.601,918,1.256,1014,2.211,1018,3.544,1021,3.952,1031,2.996,1090,2.068,1125,2.236,1126,3.544,1127,3.544,1168,2.728,1169,2.447,1236,2.068,1698,2.447,1755,2.728,1919,4.009,1922,3.272,1923,3.523,1924,2.068,1927,3.397,1933,1.704,1940,4.647,1946,5.095,1962,4.569,1966,5.263,2001,3.952,2004,3.544,2006,4.569,2052,6.728,2053,4.572,2054,4.572,2055,5.376,2056,6.728,2057,6.523,2058,4.572,2059,3.156,2060,4.572,2061,3.156,2062,3.156,2063,3.156,2064,4.572,2065,3.156,2066,3.156,2067,3.952,2068,4.572,2069,4.572,2070,3.156,2071,4.572,2072,3.156,2073,3.156,2074,2.728,2075,3.156,2076,3.156,2077,3.156,2078,3.156,2079,3.156,2080,4.572,2081,4.572,2082,3.156,2083,3.156,2084,3.156,2085,3.156,2086,3.156]],["title/classes/WeatherStationConfig.html",[104,0.05,1927,1.846]],["body/classes/WeatherStationConfig.html",[0,0.237,2,0.093,3,0.067,7,0.054,11,0.22,13,0.287,30,0.33,31,0.682,32,1.62,41,0.706,42,0.427,47,0.521,49,0.651,50,0.714,51,0.503,52,0.017,53,0.402,54,0.75,55,0.417,56,1.08,58,0.798,61,1.04,66,1.808,67,1.692,71,0.569,73,0.71,77,1.248,80,1.208,94,1.046,97,0.273,98,0.106,102,0.599,103,0.119,104,0.067,105,0.777,106,1.055,107,0.804,130,0.34,135,0.591,171,1.065,177,0.479,185,1.154,190,0.009,191,0.009,193,1.382,221,0.549,222,3.284,224,1.953,225,1.04,233,2.294,235,4.191,244,1.267,254,1.638,260,1.458,267,1.617,277,2.086,289,2.455,300,1.659,327,1.055,334,1.543,385,1.087,407,2.294,409,3.065,410,2.22,411,2.056,435,2.667,436,2.111,447,1.192,453,1.859,487,2.794,492,2.794,495,2.931,497,2.931,498,2.931,499,2.931,500,2.931,501,1.543,576,1.967,592,2.583,595,2.906,597,1.543,616,1.458,617,1.767,668,3.262,682,3.11,765,1.248,774,2.719,775,1.458,776,1.382,829,1.746,911,2.785,913,2.436,916,1.746,917,1.746,918,1.138,919,2.455,920,1.873,921,1.746,922,1.746,929,1.746,932,1.543,936,1.873,937,2.025,938,2.597,939,1.543,940,1.543,941,3.012,943,2.025,944,2.597,954,2.025,955,2.025,957,2.025,958,2.025,960,4.614,961,4.856,963,4.856,964,3.012,965,3.012,1268,1.543,1380,5.071,1381,4.881,1382,4.881,1788,2.215,1922,1.25,1927,3.241,1989,2.215,1990,2.471,1991,2.471,1992,2.471,1993,2.471,1994,2.471,1995,2.471,1996,2.471,1997,2.471,1998,2.471,1999,2.471,2000,2.471,2002,2.471,2004,2.215,2006,2.215,2012,5.401,2017,5.401,2019,2.471,2024,4.357,2025,4.357,2027,2.215,2028,3.675,2029,5.443,2030,2.471,2031,2.471,2032,2.471,2033,2.471,2034,2.471,2035,2.471,2036,2.471,2037,2.471,2038,2.471,2039,2.471,2040,6.407,2041,2.471,2042,6.407,2043,2.471,2044,6.407,2045,2.471,2046,2.471,2047,2.471,2048,2.471,2049,6.407,2050,4.859,2051,2.471,2087,4.251,2088,2.858,2089,2.858,2090,2.858,2091,2.858]],["title/components/WeatherStationSidebarComponent.html",[0,0.178,184,0.641]],["body/components/WeatherStationSidebarComponent.html",[0,0.353,1,0.644,2,0.125,3,0.09,4,0.737,5,0.769,6,0.705,7,0.073,11,0.271,12,0.705,13,0.698,19,0.841,20,0.959,22,0.769,23,1.287,24,1.228,25,0.881,26,0.841,28,0.841,30,0.298,31,0.841,32,1.456,34,0.624,38,1.031,40,1.601,41,0.72,42,0.527,47,0.562,49,0.803,50,0.881,51,0.922,52,0.017,53,0.608,54,0.827,55,0.765,56,1.335,58,0.456,71,0.715,87,0.533,94,1.031,97,0.291,98,0.143,102,0.803,103,0.107,104,0.089,105,0.915,112,1.748,119,0.456,120,1.052,121,1.052,122,1.008,123,1.29,124,0.769,125,1.052,126,0.615,127,0.769,128,0.615,129,0.769,130,0.624,131,0.769,132,0.644,133,0.769,134,0.615,135,0.893,136,1.29,137,0.615,138,0.769,139,0.644,140,1.199,141,0.644,142,1.199,143,0.644,144,1.199,145,0.644,146,0.769,147,0.644,148,0.769,149,0.644,150,0.737,151,0.644,152,0.769,153,0.644,154,0.644,155,0.615,156,0.769,157,0.644,158,0.644,159,0.769,160,0.615,161,0.769,162,0.644,163,0.587,164,0.769,165,0.587,166,0.615,167,1.052,168,0.587,169,0.705,170,0.644,171,1.123,172,0.705,173,1.099,174,0.615,175,0.769,176,0.644,177,0.432,178,0.674,179,0.644,180,0.881,181,0.769,182,0.644,183,0.644,184,1.08,185,1.215,186,0.644,187,0.644,188,0.737,189,0.769,190,0.011,191,0.011,198,2.829,215,2.087,244,1.13,250,2.536,268,2.186,271,0.912,272,0.737,277,1.893,298,1.224,385,1.458,436,1.079,447,2.491,457,3.203,617,2.08,672,4.979,781,4.631,786,2.829,918,1.526,1014,2.536,1031,3.435,1090,2.511,1125,2.715,1126,4.064,1127,4.064,1140,4.532,1169,2.971,1919,3.963,1922,3.329,1923,3.915,1924,2.511,1927,3.254,1933,2.069,1949,5.384,1966,5.202,2092,3.832,2093,3.832,2094,3.832,2095,3.832,2096,3.832,2097,3.832,2098,3.832,2099,3.832]],["title/components/WeatherSummaryComponent.html",[0,0.178,186,0.641]],["body/components/WeatherSummaryComponent.html",[0,0.342,1,0.634,2,0.123,3,0.089,4,0.725,5,0.758,6,0.694,7,0.072,11,0.306,12,0.694,13,0.736,19,0.832,20,0.951,22,0.758,23,1.285,24,1.226,25,0.872,26,0.832,28,0.832,30,0.293,31,0.832,32,1.242,34,0.618,38,1.024,41,0.723,42,0.521,47,0.537,49,0.794,50,1.073,51,1.042,52,0.017,53,0.633,54,0.76,55,0.865,56,1.361,58,0.449,61,2.156,71,0.683,80,1.646,87,0.824,94,0.951,97,0.297,98,0.14,102,0.791,103,0.106,104,0.05,105,0.977,106,1.288,119,0.449,120,1.041,121,1.041,122,0.997,123,1.281,124,0.758,125,1.041,126,0.606,127,0.758,128,0.606,129,0.758,130,0.618,131,0.758,132,0.634,133,0.758,134,0.606,135,0.887,136,1.281,137,0.606,138,0.758,139,0.634,140,1.19,141,0.634,142,1.19,143,0.634,144,1.19,145,0.634,146,0.758,147,0.634,148,0.758,149,0.634,150,0.725,151,0.634,152,0.758,153,0.634,154,0.634,155,0.606,156,0.758,157,0.634,158,0.634,159,0.758,160,0.606,161,0.758,162,0.634,163,0.578,164,0.758,165,0.578,166,0.606,167,1.041,168,0.578,169,0.694,170,0.634,171,1.15,172,0.694,173,1.09,174,0.606,175,0.758,176,0.634,177,0.719,178,0.664,179,0.634,180,0.872,181,0.758,182,0.634,183,0.634,184,0.634,185,0.578,186,1.073,187,0.634,188,0.725,189,0.758,190,0.011,191,0.011,215,1.947,216,3.087,244,1.212,298,1.206,327,1.288,385,1.436,430,1.973,436,1.062,441,2.933,460,3.961,616,3.024,617,2.063,618,2.972,918,1.502,932,2.8,1014,2.509,1131,3.675,1135,3.414,1137,4.852,1138,3.68,1153,3.675,1155,2.8,1156,3.399,1157,3.675,1158,3.399,1159,3.675,1170,2.674,1178,2.674,1184,2.674,1185,3.399,1186,4.021,1187,4.021,1188,2.473,1189,3.263,1190,4.021,1191,3.263,1193,3.263,1194,3.263,1369,3.263,1624,4.484,1837,3.263,1919,3.822,1922,3.375,1933,2.037,1963,5.489,2012,4.021,2017,4.021,2024,4.021,2025,4.021,2074,3.263,2100,5.187,2101,3.774,2102,3.774,2103,3.774,2104,3.774]],["title/components/WikiButtonComponent.html",[0,0.178,187,0.641]],["body/components/WikiButtonComponent.html",[0,0.353,1,0.739,2,0.143,3,0.103,4,0.845,5,0.882,6,0.808,7,0.084,10,3.114,11,0.227,12,1.354,13,0.578,14,2.932,15,2.8,16,3.889,19,0.922,20,1.027,22,0.882,23,1.297,24,1.237,25,0.966,26,0.922,27,4.454,28,0.922,29,4.454,30,0.342,34,0.684,38,1.089,39,3.51,40,1.616,41,0.606,42,0.643,47,0.527,49,0.88,50,0.966,51,0.773,52,0.017,53,0.606,54,0.523,55,0.642,58,0.523,61,2.09,71,0.544,87,0.798,89,4.454,92,3.51,97,0.184,98,0.163,103,0.123,104,0.058,119,0.523,120,1.153,121,1.153,122,1.104,123,1.363,124,0.882,125,1.153,126,0.705,127,0.882,128,0.705,129,0.882,130,0.523,131,0.882,132,0.739,133,0.882,134,0.705,135,0.943,136,1.363,137,0.705,138,0.882,139,0.739,140,1.285,141,0.739,142,1.285,143,0.739,144,1.285,145,0.739,146,0.882,147,0.739,148,0.882,149,0.739,150,0.845,151,0.739,152,0.882,153,0.739,154,0.739,155,0.705,156,0.882,157,0.739,158,0.739,159,0.882,160,0.705,161,0.882,162,0.739,163,0.673,164,0.882,165,0.673,166,0.705,167,1.153,168,0.673,169,0.808,170,0.739,171,1.089,172,0.808,173,1.177,174,0.705,175,0.882,176,0.739,177,0.496,178,0.773,179,0.739,180,0.966,181,0.882,182,0.739,183,0.739,184,0.739,185,0.673,186,0.739,187,1.141,188,1.475,189,0.882,190,0.012,191,0.012,221,1.104,225,2.677,244,0.966,382,5.46,432,3.664,939,2.373,2105,6.089,2106,5.745,2107,5.745,2108,4.396,2109,4.396,2110,5.745,2111,5.745,2112,4.396,2113,5.745,2114,4.396,2115,4.396]],["title/coverage.html",[2116,4.518]],["body/coverage.html",[0,0.373,1,0.633,7,0.072,8,4.895,9,2.921,10,4.196,33,1.732,41,0.357,52,0.017,54,0.449,104,0.095,126,0.605,128,0.605,130,0.449,132,0.633,134,0.605,137,0.605,139,0.633,141,0.633,143,0.633,145,0.633,147,0.633,149,0.633,151,0.633,153,0.633,154,0.633,157,0.633,160,0.605,162,0.633,163,0.577,165,0.577,168,0.577,170,0.633,172,0.953,173,1.271,174,0.605,176,0.633,177,0.584,178,0.663,179,0.633,180,1.072,182,0.633,183,0.633,184,0.633,185,0.793,186,0.633,187,0.633,190,0.011,191,0.011,192,3.258,215,1.017,300,0.897,381,2.921,382,2.921,383,4.196,395,2.921,414,2.921,432,2.034,441,1.732,574,2.67,575,4.085,576,2.078,577,3.671,578,3.671,579,4.085,590,1.732,667,4.017,682,1.572,705,4.48,706,2.921,707,3.258,753,2.67,754,4.591,765,2.116,777,2.67,909,2.159,910,4.017,918,1.5,919,1.823,922,2.302,923,2.921,985,3.258,1001,2.921,1002,4.48,1009,2.302,1022,5.21,1078,6.322,1107,2.921,1111,2.921,1125,4.196,1135,1.923,1184,4.196,1198,3.258,1273,3.258,1282,2.67,1291,2.921,1303,3.258,1311,2.302,1312,3.258,1337,2.67,1360,2.921,1361,3.258,1384,3.258,1385,3.258,1414,4.591,1470,3.258,1497,3.258,1529,3.258,1541,3.258,1555,3.258,1556,3.258,1621,3.258,1622,2.921,1623,3.258,1629,3.258,1646,3.258,1674,2.67,1676,3.258,1686,4.017,1721,2.67,1735,2.302,1756,3.258,1774,3.258,1775,4.017,1807,6.119,1876,2.921,1919,3.892,1920,3.897,1921,3.881,1922,1.649,1927,1.823,1935,3.258,1963,2.921,1964,3.258,1966,3.671,1967,2.921,1969,3.258,1989,4.017,2027,2.921,2105,3.258,2116,3.258,2117,3.258,2118,5.922,2119,3.769,2120,6.378,2121,6.687,2122,5.182,2123,3.769,2124,7.951,2125,3.769,2126,5.182,2127,3.769,2128,7.078,2129,6.687,2130,3.769,2131,5.182,2132,3.769,2133,3.769,2134,3.769,2135,3.769,2136,3.769,2137,3.769,2138,3.769,2139,3.769,2140,3.769,2141,7.078,2142,3.769,2143,3.769,2144,5.182,2145,3.769,2146,6.378,2147,3.769,2148,3.769,2149,5.922,2150,3.769,2151,3.769,2152,3.769,2153,6.91,2154,3.769,2155,3.769,2156,3.769,2157,3.769,2158,3.769,2159,6.687,2160,3.769,2161,3.769,2162,3.769,2163,3.769,2164,5.922,2165,3.769,2166,3.769,2167,3.769,2168,3.769,2169,3.769,2170,3.769,2171,3.769,2172,3.769,2173,3.769,2174,3.769,2175,3.769]],["title/dependencies.html",[360,1.532,2176,3.178]],["body/dependencies.html",[52,0.017,98,0.212,101,2.906,190,0.014,191,0.014,228,3.074,296,3.263,297,3.445,360,1.899,362,2.953,377,2.617,415,4.414,776,3.266,1236,3.731,1239,5.099,1240,4.784,1290,4.922,1468,4.922,1469,4.414,1737,4.034,1962,4.414,2177,5.694,2178,7.93,2179,5.694,2180,6.752,2181,5.694,2182,6.752,2183,5.694,2184,5.694,2185,4.922,2186,5.694,2187,5.694,2188,5.694,2189,5.694,2190,5.694,2191,5.694,2192,5.694,2193,5.694,2194,5.694,2195,5.694,2196,5.694,2197,5.694,2198,5.694,2199,5.694,2200,5.694,2201,5.694,2202,5.694,2203,6.752,2204,4.922,2205,5.694,2206,5.694]],["title/miscellaneous/enumerations.html",[2207,2.747,2208,3.972]],["body/miscellaneous/enumerations.html",[30,0.453,41,0.552,52,0.014,80,1.389,190,0.014,191,0.014,222,3.032,249,3.343,267,2.766,272,1.559,288,2.894,292,2.894,395,4.523,398,4.134,423,3.313,425,4.853,435,2.323,483,4.134,484,4.488,485,5.044,486,4.853,487,2.433,488,4.853,489,4.523,490,5.044,491,3.823,492,2.433,493,4.523,494,6.286,495,2.552,496,3.823,497,2.552,498,2.552,499,2.552,500,2.552,2207,5.044,2208,5.044,2209,7.271]],["title/index.html",[30,0.247,254,1.821,1884,2.464]],["body/index.html",[0,0.326,3,0.124,7,0.101,13,0.701,24,0.811,49,1.14,52,0.013,53,0.501,62,2.858,79,1.475,81,5.01,190,0.013,191,0.013,210,3.751,230,3.513,242,1.803,266,3.235,282,2.561,289,2.561,300,1.26,340,3.751,342,3.751,353,3.469,373,2.316,389,3.029,418,4.162,429,3.034,432,3.921,457,3.235,493,4.104,694,3.469,702,2.014,785,5.407,926,3.469,936,3.469,1029,3.751,1147,4.104,1183,3.751,1414,4.104,1630,4.577,1643,4.577,1737,4.579,1862,6.439,1876,4.104,2185,6.632,2210,5.295,2211,6.975,2212,7.264,2213,5.587,2214,5.295,2215,6.463,2216,5.295,2217,4.577,2218,5.295,2219,5.295,2220,5.295,2221,5.295,2222,5.295,2223,5.295,2224,5.295,2225,5.295,2226,6.55,2227,4.577,2228,5.295,2229,6.463,2230,7.448,2231,6.975,2232,6.463,2233,5.295,2234,5.295,2235,4.577,2236,5.295,2237,6.744,2238,5.295,2239,5.295,2240,5.295,2241,5.295,2242,5.295,2243,5.295,2244,5.295,2245,5.295,2246,5.295,2247,5.295,2248,5.295,2249,6.463,2250,6.463,2251,5.295,2252,7.264,2253,5.295,2254,5.295,2255,5.295,2256,5.295,2257,5.295]],["title/license.html",[254,1.821,1884,2.464,2258,2.747]],["body/license.html",[3,0.165,4,0.663,7,0.093,13,0.746,15,1.509,32,1.556,47,0.439,51,0.607,52,0.01,55,0.824,60,2.486,65,3.131,66,1.814,69,2.832,79,1.112,94,1.108,104,0.046,122,0.663,155,0.906,177,0.692,190,0.01,191,0.01,193,1.668,200,3.701,226,2.512,229,3.236,231,4.368,237,3.049,242,0.856,261,3.192,262,2.107,267,1.312,288,1.939,292,1.939,300,1.345,327,0.856,340,4.587,345,2.444,349,4.002,352,3.494,353,2.26,354,2.981,398,2.444,418,4.213,425,3.452,429,1.976,432,3.313,440,2.674,447,1.438,451,4.378,452,5.259,457,4.382,461,2.26,463,2.26,477,1.668,484,2.26,486,4.998,488,3.452,489,2.674,491,4.022,618,1.976,708,3.452,725,2.981,786,1.862,787,5.468,791,3.776,829,2.107,856,2.674,869,3.776,879,2.674,885,4.378,986,3.776,1037,4.758,1147,5.7,1155,2.629,1156,4.242,1469,2.674,1558,4.211,1605,2.981,1609,2.981,1614,2.674,1658,2.674,1734,2.674,1735,3.451,1970,2.981,2067,2.981,2117,2.981,2204,2.981,2213,6.867,2217,6.285,2226,5.305,2227,2.981,2235,6.899,2237,2.981,2258,6.787,2259,7.772,2260,7.173,2261,3.449,2262,3.449,2263,4.872,2264,5.648,2265,4.872,2266,6.137,2267,6.137,2268,6.137,2269,3.449,2270,3.449,2271,3.449,2272,4.872,2273,3.449,2274,3.449,2275,3.449,2276,6.137,2277,7.054,2278,4.872,2279,3.449,2280,5.648,2281,4.872,2282,4.872,2283,3.449,2284,7.271,2285,6.474,2286,7.851,2287,3.449,2288,7.794,2289,4.872,2290,4.872,2291,3.449,2292,3.449,2293,5.648,2294,3.449,2295,3.449,2296,5.648,2297,4.872,2298,4.872,2299,4.872,2300,3.449,2301,4.872,2302,3.449,2303,3.449,2304,3.449,2305,3.449,2306,6.719,2307,7.271,2308,3.449,2309,3.449,2310,5.648,2311,6.906,2312,4.872,2313,3.449,2314,3.449,2315,3.449,2316,3.449,2317,3.449,2318,3.449,2319,3.449,2320,3.449,2321,3.449,2322,6.474,2323,3.449,2324,6.719,2325,5.648,2326,3.449,2327,3.449,2328,3.449,2329,3.449,2330,3.449,2331,3.449,2332,5.648,2333,5.648,2334,6.719,2335,6.474,2336,4.872,2337,3.449,2338,3.449,2339,3.449,2340,3.449,2341,3.449,2342,3.449,2343,3.449,2344,4.872,2345,5.648,2346,4.872,2347,4.872,2348,4.872,2349,4.872,2350,4.872,2351,3.449,2352,3.449,2353,3.449,2354,3.449,2355,3.449,2356,3.449,2357,3.449,2358,3.449,2359,4.872,2360,3.449,2361,4.872,2362,3.449,2363,4.872,2364,6.137,2365,3.449,2366,3.449,2367,3.449,2368,3.449,2369,3.449,2370,3.449,2371,3.449,2372,3.449,2373,4.872,2374,3.449,2375,3.449,2376,3.449,2377,3.449,2378,3.449,2379,3.449,2380,3.449,2381,3.449]],["title/modules.html",[358,1.193]],["body/modules.html",[52,0.014,190,0.014,191,0.014,358,1.354,359,3.203,368,2.727,369,2.727,370,2.727,924,3.203,1029,4.205,1061,6.182,1103,3.4,1240,5.65,1260,4.205,1265,3.626,1266,3.889,1267,3.889,1268,3.203,2382,7.975,2383,8.003,2384,5.935]],["title/overview.html",[158,0.878]],["body/overview.html",[0,0.176,1,1.189,33,2.719,52,0.017,103,0.105,104,0.05,119,0.448,126,1.135,128,0.949,130,0.842,132,1.189,134,0.949,137,0.949,139,0.994,141,0.994,143,1.189,145,1.189,147,1.189,149,1.189,151,0.994,153,1.189,154,0.994,157,1.189,158,0.632,160,1.135,162,1.189,163,1.083,165,1.083,168,1.083,170,0.994,174,0.949,176,0.994,178,1.04,179,0.994,182,0.994,183,0.994,184,0.994,186,1.189,187,1.189,190,0.011,191,0.011,215,1.597,226,1.368,292,1.497,358,1.181,359,4.318,360,1.254,361,1.645,362,1.645,363,3.251,364,3.251,365,3.251,366,3.251,367,3.251,368,3.558,369,3.361,370,3.613,371,2.378,372,1.728,373,1.645,568,4.473,590,2.719,765,1.104,919,2.861,924,4.27,1009,3.614,1098,3.251,1099,3.251,1100,3.251,1101,3.251,1102,3.251,1103,4.24,1135,3.018,1260,5.624,1261,3.251,1262,3.251,1263,3.251,1264,3.251,1265,4.566,1266,5.138,1267,5.003,1268,4.327,1311,3.614,1347,3.251,1348,3.251,1355,3.251,1356,3.251,1358,3.251,1534,3.251,1535,3.251,1536,3.251,1537,3.251,1637,3.251,1638,3.251,1640,3.251,1664,3.251,1665,3.251,1667,3.251,1735,2.297,1800,3.251,1801,3.251,1803,3.251,1922,2.588,1955,3.251,1956,3.251,1958,3.251,1959,3.251,2385,3.76,2386,3.76]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":288,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.8.26",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["0.svg",{"_index":1516,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["0:15:00",{"_index":1722,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["0:30:00",{"_index":1726,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["1",{"_index":292,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1.0",{"_index":1553,"title":{},"body":{"injectables/MapService.html":{}}}],["1.1.8",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2214,"title":{},"body":{"index.html":{}}}],["1.svg",{"_index":1519,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":601,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["10/10",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1078,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["11",{"_index":2385,"title":{},"body":{"overview.html":{}}}],["11.1.3",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":569,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["12/12",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["12:00:00",{"_index":1732,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["14/14",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1724,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["15/15",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":570,"title":{},"body":{"classes/Alarm.html":{}}}],["17",{"_index":571,"title":{},"body":{"classes/Alarm.html":{}}}],["18",{"_index":572,"title":{},"body":{"classes/Alarm.html":{}}}],["18/18",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":573,"title":{},"body":{"classes/Alarm.html":{}}}],["19/19",{"_index":2171,"title":{},"body":{"coverage.html":{}}}],["1:00:00",{"_index":1728,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["2",{"_index":484,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.0.8",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["2.svg",{"_index":1521,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":717,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["20/20",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1571,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["20000",{"_index":2084,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["2007",{"_index":2263,"title":{},"body":{"license.html":{}}}],["22/22",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["24/24",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1093,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["25/25",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["27/28",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":2261,"title":{},"body":{"license.html":{}}}],["2:00:00",{"_index":1730,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["3",{"_index":486,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0.0",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1523,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/3",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1727,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["300",{"_index":1570,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["32",{"_index":2386,"title":{},"body":{"overview.html":{}}}],["4",{"_index":488,"title":{},"body":{"classes/Alarm.html":{},"injectables/MapService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.1",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":1525,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1569,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["4d0",{"_index":2357,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":2358,"title":{},"body":{"license.html":{}}}],["5",{"_index":489,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/5",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2170,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1572,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["500",{"_index":1568,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["55",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":491,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.0.0",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1567,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["69",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["6:00:00",{"_index":1731,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["7",{"_index":493,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["7/7",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1566,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["8",{"_index":568,"title":{},"body":{"classes/Alarm.html":{},"overview.html":{}}}],["8/10",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1565,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["9/13",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1564,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["96",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":837,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":2115,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getalarmstatusord",{"_index":401,"title":{},"body":{"classes/Alarm.html":{}}}],["_getalarmstatusorder(valu",{"_index":437,"title":{},"body":{"classes/Alarm.html":{}}}],["_getalarmstatustagsstr",{"_index":402,"title":{},"body":{"classes/Alarm.html":{}}}],["_getsubtree(alarm",{"_index":847,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initi",{"_index":937,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["_nodedata",{"_index":838,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":839,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":842,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_setfilteractiv",{"_index":1810,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["a001",{"_index":2032,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a002",{"_index":2033,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a003",{"_index":2034,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a100",{"_index":1575,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a400",{"_index":1574,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a700",{"_index":1573,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accent",{"_index":1576,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accept",{"_index":2379,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":463,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["accompani",{"_index":2335,"title":{},"body":{"license.html":{}}}],["accord",{"_index":279,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{}}}],["ack",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'nam",{"_index":127,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack.component.html",{"_index":196,"title":{},"body":{"components/AckComponent.html":{}}}],["ack.component.scss",{"_index":195,"title":{},"body":{"components/AckComponent.html":{}}}],["ack/ack.compon",{"_index":378,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcompon",{"_index":126,"title":{"components/AckComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":783,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledg",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1298,"title":{},"body":{"modules/AppModule.html":{}}}],["acknowledge/unacknowledg",{"_index":275,"title":{},"body":{"components/AckComponent.html":{}}}],["acknowledgedalarm",{"_index":197,"title":{},"body":{"components/AckComponent.html":{}}}],["acktre",{"_index":326,"title":{},"body":{"components/AckComponent.html":{}}}],["acktreecompon",{"_index":128,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions/ack/ack.compon",{"_index":1285,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/actions.modul",{"_index":1274,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.compon",{"_index":1286,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/sidenav.servic",{"_index":1237,"title":{},"body":{"components/AppComponent.html":{}}}],["actionsmodul",{"_index":359,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1201,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservic",{"_index":1202,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":1590,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/TabularViewComponent.html":{}}}],["activatedrout",{"_index":217,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["actual",{"_index":1736,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["actual_compon",{"_index":189,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ad",{"_index":1411,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["add",{"_index":1747,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["addit",{"_index":2280,"title":{},"body":{"license.html":{}}}],["address",{"_index":2369,"title":{},"body":{"license.html":{}}}],["addsvgicon",{"_index":1246,"title":{},"body":{"components/AppComponent.html":{}}}],["administr",{"_index":348,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["again",{"_index":344,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["agil",{"_index":1606,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["alarm",{"_index":41,"title":{"classes/Alarm.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'nam",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.component.html",{"_index":670,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":669,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.depend",{"_index":850,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.length",{"_index":848,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.descript",{"_index":1918,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.mod",{"_index":529,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.nam",{"_index":1914,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.operationalmod",{"_index":1915,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.servic",{"_index":1352,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.state_change_timestamp",{"_index":481,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.timestamp",{"_index":1917,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.valu",{"_index":531,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm/alarm.compon",{"_index":1673,"title":{},"body":{"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":350,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["alarm?.descript",{"_index":351,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["alarm_id",{"_index":198,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["alarm_typ",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["alarmcolorsset",{"_index":574,"title":{"classes/AlarmColorsSet.html":{}},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"coverage.html":{}}}],["alarmcompon",{"_index":130,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmconfig",{"_index":1162,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmconfig.placemark",{"_index":1177,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmheadercompon",{"_index":132,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":1778,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":1779,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":1780,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":1362,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":682,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["alarmitemflatnod",{"_index":753,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":777,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":896,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmnam",{"_index":739,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.length",{"_index":741,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.substring(0",{"_index":743,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmnamemaxs",{"_index":712,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarms_d",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["alarmsconfig",{"_index":1005,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["alarmservic",{"_index":215,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservicesubscript",{"_index":1811,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarmstoack",{"_index":199,"title":{},"body":{"components/AckComponent.html":{}}}],["alarmstoackfromselect",{"_index":782,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":1781,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmvalid",{"_index":464,"title":{},"body":{"classes/Alarm.html":{}}}],["alarmvalu",{"_index":467,"title":{},"body":{"classes/Alarm.html":{}}}],["allow",{"_index":2275,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":618,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":2301,"title":{},"body":{"license.html":{}}}],["angular",{"_index":230,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["angular/anim",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collect",{"_index":767,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["angular/cdk/tre",{"_index":769,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":2234,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":377,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1351,"title":{},"body":{"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1468,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":296,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1290,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":1236,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1445,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1448,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1455,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expans",{"_index":1463,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":1457,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1238,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1433,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1452,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1435,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1437,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":1459,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1450,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1439,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":1465,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1441,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1443,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1461,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":772,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1239,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":101,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/AppModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["anoth",{"_index":2110,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna'",{"_index":1146,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antenna.svg",{"_index":1251,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclick",{"_index":1133,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig",{"_index":909,"title":{"classes/AntennaConfig.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["antennaconfig.antenna",{"_index":1173,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig.placemark",{"_index":1096,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":934,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":935,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennamarkercompon",{"_index":134,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas'},{'nam",{"_index":138,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":990,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":989,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.join",{"_index":2076,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["antennas.servic",{"_index":999,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.compon",{"_index":1105,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.modul",{"_index":1279,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.servic",{"_index":591,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.compon",{"_index":1288,"title":{},"body":{"modules/AppModule.html":{}}}],["antennascompon",{"_index":137,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":928,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmap",{"_index":988,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennasmapcompon",{"_index":139,"title":{"components/AntennasMapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapnam",{"_index":930,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmodul",{"_index":924,"title":{"modules/AntennasModule.html":{}},"body":{"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservic",{"_index":590,"title":{"injectables/AntennasService.html":{}},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasset",{"_index":923,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":931,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennassidebar",{"_index":987,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennassidebarcompon",{"_index":141,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycompon",{"_index":143,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":933,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.compon",{"_index":1280,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1200,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1199,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1270,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1155,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":231,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["application/json",{"_index":1422,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["applyfilt",{"_index":1818,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["applyfilter(filt",{"_index":1823,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["appmodul",{"_index":1260,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":1293,"title":{},"body":{"modules/AppModule.html":{}}}],["argument",{"_index":2313,"title":{},"body":{"license.html":{}}}],["array",{"_index":728,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["arrayoffilt",{"_index":1903,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.indexof(this.filtervalueforsetalarm",{"_index":1905,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.splice(indexofset",{"_index":1913,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["artifact",{"_index":2244,"title":{},"body":{"index.html":{}}}],["asalarm",{"_index":404,"title":{},"body":{"classes/Alarm.html":{}}}],["asalarm(json",{"_index":449,"title":{},"body":{"classes/Alarm.html":{}}}],["asc",{"_index":1885,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["asiasio",{"_index":1476,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1484,"title":{},"body":{"classes/Iasio.html":{}}}],["asset",{"_index":918,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icon",{"_index":960,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["assets/img/ia",{"_index":1248,"title":{},"body":{"components/AppComponent.html":{}}}],["associ",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["asterisc",{"_index":1748,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["attribut",{"_index":409,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["author",{"_index":2381,"title":{},"body":{"license.html":{}}}],["automat",{"_index":2241,"title":{},"body":{"index.html":{}}}],["auxiliari",{"_index":846,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["avail",{"_index":1029,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{},"index.html":{},"modules.html":{}}}],["axi",{"_index":604,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":2322,"title":{},"body":{"license.html":{}}}],["backendurl",{"_index":922,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["backendurls.antennas_summari",{"_index":951,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":946,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.cdb_ia",{"_index":1331,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":955,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["background",{"_index":1578,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["backup",{"_index":172,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["badg",{"_index":685,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":1466,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["base",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":1591,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["be",{"_index":262,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["becom",{"_index":1843,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["befor",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":775,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(fals",{"_index":1051,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/CdbService.html":{}}}],["below",{"_index":2282,"title":{},"body":{"license.html":{}}}],["besid",{"_index":688,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["beta.17",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1972,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["bind",{"_index":1844,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["block",{"_index":263,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["boolean",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["bootstrap",{"_index":362,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":613,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolor",{"_index":614,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstous",{"_index":629,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.clear",{"_index":648,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.mainten",{"_index":644,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_crit",{"_index":660,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_high",{"_index":657,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_low",{"_index":651,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_medium",{"_index":654,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.shelv",{"_index":636,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.unknown",{"_index":640,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorsunreli",{"_index":615,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["both",{"_index":986,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["bound",{"_index":2309,"title":{},"body":{"license.html":{}}}],["box",{"_index":1838,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["branch",{"_index":2225,"title":{},"body":{"index.html":{}}}],["bred",{"_index":1612,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["breed",{"_index":1598,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["broadcastfactor",{"_index":1327,"title":{},"body":{"injectables/CdbService.html":{}}}],["brows",{"_index":2383,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1240,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1431,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":1430,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browsermodul",{"_index":1271,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":1670,"title":{},"body":{"modules/SharedModule.html":{}}}],["build",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":858,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["built",{"_index":1145,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["button",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":125,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":380,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":2106,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:20",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2108,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:28",{"_index":2109,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:30",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:31",{"_index":1685,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:39",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:40",{"_index":1683,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:46",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:47",{"_index":1682,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:55",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:56",{"_index":1678,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:67",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:71",{"_index":1681,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:75",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:79",{"_index":1684,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":381,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":382,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons'},{'nam",{"_index":148,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1307,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1308,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.compon",{"_index":394,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscompon",{"_index":147,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":2265,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":1550,"title":{},"body":{"injectables/MapService.html":{}}}],["call",{"_index":477,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["canacknowledg",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["cancel",{"_index":357,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["canclos",{"_index":1759,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":1691,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["card",{"_index":1580,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card'},{'nam",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":1645,"title":{},"body":{"modules/OverviewModule.html":{}}}],["card.component.html",{"_index":1626,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":1625,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":1623,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1627,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:18",{"_index":1628,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card/overview",{"_index":1622,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["case",{"_index":720,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["cdb.servic",{"_index":1353,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservic",{"_index":1311,"title":{"injectables/CdbService.html":{}},"body":{"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cento",{"_index":2218,"title":{},"body":{"index.html":{}}}],["central",{"_index":1647,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":2372,"title":{},"body":{"license.html":{}}}],["chang",{"_index":429,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"index.html":{},"license.html":{}}}],["changeselectedst",{"_index":1941,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedst",{"_index":1943,"title":{},"body":{"components/WeatherComponent.html":{}}}],["channel",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["charact",{"_index":718,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["check",{"_index":282,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"classes/Iasio.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["checkbox",{"_index":778,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":801,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":802,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chevron_left",{"_index":1179,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":269,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm",{"_index":851,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":849,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":239,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chip",{"_index":1584,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["choic",{"_index":2325,"title":{},"body":{"license.html":{}}}],["choos",{"_index":2373,"title":{},"body":{"license.html":{}}}],["class",{"_index":104,"title":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"classes/Iasio.html":{},"classes/WeatherStationConfig.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["class=\"sect",{"_index":356,"title":{},"body":{"components/AckComponent.html":{}}}],["clean",{"_index":257,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["clear",{"_index":435,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["clear.svg",{"_index":961,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["clear_invalid",{"_index":1500,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":1501,"title":{},"body":{"components/LegendComponent.html":{}}}],["clearfilt",{"_index":1819,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["cli",{"_index":2212,"title":{},"body":{"index.html":{}}}],["click",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["clickedantennamark",{"_index":1019,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["client",{"_index":1386,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":921,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["client.service.t",{"_index":1385,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:13",{"_index":1394,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:22",{"_index":1401,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:32",{"_index":1399,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:48",{"_index":1405,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:63",{"_index":1407,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:77",{"_index":1396,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:91",{"_index":1409,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":1962,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["clipboardmodul",{"_index":1961,"title":{},"body":{"modules/WeatherModule.html":{}}}],["clipboardservic",{"_index":2056,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["close",{"_index":249,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_actionsmodul",{"_index":363,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declar",{"_index":364,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_export",{"_index":366,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_import",{"_index":365,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_provid",{"_index":367,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodul",{"_index":1098,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declar",{"_index":1099,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_export",{"_index":1101,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_import",{"_index":1100,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_provid",{"_index":1102,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":1261,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":1262,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":1263,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1347,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1348,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1355,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1356,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1358,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1357,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodul",{"_index":1534,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":1535,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":1536,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_provid",{"_index":1537,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_overviewmodul",{"_index":1637,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":1638,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":1640,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":1639,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":1664,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1665,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1667,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1666,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":1800,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":1801,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":1803,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":1802,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":1955,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":1956,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":1958,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":1957,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_provid",{"_index":1959,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":1147,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collectionview",{"_index":1875,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["color",{"_index":580,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["column",{"_index":443,"title":{},"body":{"classes/Alarm.html":{}}}],["combin",{"_index":2288,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":376,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["compar",{"_index":1860,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["compat",{"_index":2204,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["complement",{"_index":1211,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc",{"_index":2255,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["comput",{"_index":2352,"title":{},"body":{"license.html":{}}}],["concern",{"_index":2370,"title":{},"body":{"license.html":{}}}],["condit",{"_index":2278,"title":{},"body":{"license.html":{}}}],["config",{"_index":1926,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["configur",{"_index":617,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connector",{"_index":1971,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'nam",{"_index":181,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.compon",{"_index":1968,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":1974,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":1973,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.t",{"_index":1969,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":1978,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":1979,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":1977,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":1981,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":1980,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weath",{"_index":1967,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["consid",{"_index":2227,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1416,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.log('error",{"_index":323,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["console.log('http",{"_index":1420,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["const",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservic",{"_index":1188,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["constructor(antennasservic",{"_index":1134,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attribut",{"_index":407,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor(formbuild",{"_index":213,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["constructor(http",{"_index":1393,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["constructor(httpcli",{"_index":1113,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["constructor(httpclientservic",{"_index":1318,"title":{},"body":{"injectables/CdbService.html":{}}}],["constructor(priv",{"_index":805,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":1652,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(servic",{"_index":968,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{}}}],["constructor(sidenavservic",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservic",{"_index":1924,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["contact",{"_index":347,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["contain",{"_index":327,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["content",{"_index":840,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{}}}],["contract",{"_index":1219,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":793,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["convert",{"_index":454,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":2307,"title":{},"body":{"license.html":{}}}],["coord",{"_index":1976,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":1986,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":1987,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordin",{"_index":929,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["cope",{"_index":1607,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["copi",{"_index":452,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["copyantenna",{"_index":2053,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyantennas(st",{"_index":2060,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyright",{"_index":2264,"title":{},"body":{"license.html":{}}}],["core",{"_index":415,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":396,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{}}}],["core_id'",{"_index":420,"title":{},"body":{"classes/Alarm.html":{}}}],["core_timestamp",{"_index":397,"title":{},"body":{"classes/Alarm.html":{}}}],["correspond",{"_index":457,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["coulmn",{"_index":1853,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["count",{"_index":336,"title":{},"body":{"components/AckComponent.html":{}}}],["counter",{"_index":1983,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["cover",{"_index":2285,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":2116,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":411,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["critic",{"_index":563,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["critical.svg",{"_index":963,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["crud",{"_index":1387,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["css",{"_index":727,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["current",{"_index":694,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"index.html":{}}}],["custom",{"_index":1213,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["cx",{"_index":605,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":607,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["d",{"_index":2343,"title":{},"body":{"license.html":{}}}],["darkcyan",{"_index":666,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["dash",{"_index":1785,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":177,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data.push(nod",{"_index":866,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data.tostringforfiltering().tolowercas",{"_index":1855,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["data/alarm",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":298,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/data.modul",{"_index":392,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":920,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["data/iasio",{"_index":1338,"title":{},"body":{"injectables/CdbService.html":{}}}],["data/routing.servic",{"_index":1170,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["databas",{"_index":515,"title":{},"body":{"classes/Alarm.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodul",{"_index":368,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":800,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["datastr",{"_index":1854,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datastr.indexof(filt",{"_index":1857,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["date",{"_index":480,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["date(t",{"_index":540,"title":{},"body":{"classes/Alarm.html":{}}}],["dateformat",{"_index":1812,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datepip",{"_index":1273,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["deactiv",{"_index":1907,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["debug",{"_index":2341,"title":{},"body":{"license.html":{}}}],["decid",{"_index":2375,"title":{},"body":{"license.html":{}}}],["declar",{"_index":361,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1221,"title":{},"body":{"components/AppComponent.html":{},"components/TabularViewComponent.html":{}}}],["deem",{"_index":2292,"title":{},"body":{"license.html":{}}}],["default",{"_index":271,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":1689,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["defin",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["definealarmcolor",{"_index":619,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["definealarmsandicon",{"_index":1365,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":1782,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["definit",{"_index":1734,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["defit",{"_index":1062,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["degrad",{"_index":490,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["delet",{"_index":1388,"title":{},"body":{"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["delete(url",{"_index":1395,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1418,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deped",{"_index":1703,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["depend",{"_index":360,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":880,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":883,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":893,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":881,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":886,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describ",{"_index":596,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destroy",{"_index":252,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":2368,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2239,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2216,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1581,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dictionari",{"_index":410,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["differ",{"_index":2367,"title":{},"body":{"license.html":{}}}],["direct",{"_index":122,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":2243,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2246,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["disableacknowledg",{"_index":204,"title":{},"body":{"components/AckComponent.html":{}}}],["dispay",{"_index":1808,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["display",{"_index":242,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":2223,"title":{},"body":{"index.html":{}}}],["displayedcolumn",{"_index":1813,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["dist",{"_index":2245,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":1602,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["distinguish",{"_index":2371,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":2273,"title":{},"body":{"license.html":{}}}],["divid",{"_index":1586,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["django",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["doc_url",{"_index":1472,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":432,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":1597,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanit",{"_index":1209,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":1698,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["doubl",{"_index":1480,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":597,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["durat",{"_index":1755,"title":{},"body":{"components/ShelveComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["dure",{"_index":2342,"title":{},"body":{"license.html":{}}}],["dy",{"_index":1552,"title":{},"body":{"injectables/MapService.html":{}}}],["dynam",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2354,"title":{},"body":{"license.html":{}}}],["e2",{"_index":2253,"title":{},"body":{"index.html":{}}}],["each",{"_index":1037,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/OverviewModule.html":{},"license.html":{}}}],["effect",{"_index":2337,"title":{},"body":{"license.html":{}}}],["effort",{"_index":2317,"title":{},"body":{"license.html":{}}}],["element",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["emit",{"_index":997,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{}}}],["empti",{"_index":1827,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["end",{"_index":2252,"title":{},"body":{"index.html":{}}}],["engin",{"_index":2340,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2067,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["entrycompon",{"_index":1672,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":482,"title":{},"body":{"classes/Alarm.html":{}}}],["enumer",{"_index":2208,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1414,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":1427,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environments/environ",{"_index":1415,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["error",{"_index":322,"title":{},"body":{"components/AckComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["escap",{"_index":1839,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["etc",{"_index":1481,"title":{},"body":{"classes/Iasio.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["event",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["event.key",{"_index":1898,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["eventemitt",{"_index":763,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["everyon",{"_index":2271,"title":{},"body":{"license.html":{}}}],["everytim",{"_index":821,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["exampl",{"_index":1671,"title":{},"body":{"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["except",{"_index":2305,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":2298,"title":{},"body":{"license.html":{}}}],["execut",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["existsplacemarkdata",{"_index":1013,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["existsplacemarkdata(placemark",{"_index":1026,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["expand",{"_index":758,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":794,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expectedfilteredtablerow",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["expectedtablerow",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["explain",{"_index":2362,"title":{},"body":{"license.html":{}}}],["export",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extent",{"_index":2355,"title":{},"body":{"license.html":{}}}],["extern",{"_index":1023,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["fab",{"_index":1593,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["facil",{"_index":2311,"title":{},"body":{"license.html":{}}}],["factor",{"_index":1325,"title":{},"body":{"injectables/CdbService.html":{}}}],["fail",{"_index":294,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["faith",{"_index":2316,"title":{},"body":{"license.html":{}}}],["fals",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["favorit",{"_index":1592,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["fewer",{"_index":2331,"title":{},"body":{"license.html":{}}}],["field",{"_index":283,"title":{},"body":{"components/AckComponent.html":{},"modules/IasMaterialModule.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":610,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolor",{"_index":611,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstous",{"_index":627,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.clear",{"_index":647,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.mainten",{"_index":643,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_crit",{"_index":659,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_high",{"_index":656,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_low",{"_index":650,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_medium",{"_index":653,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.shelv",{"_index":635,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.unknown",{"_index":639,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorsunreli",{"_index":612,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["filter",{"_index":460,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replac",{"_index":1659,"title":{},"body":{"injectables/RoutingService.html":{}}}],["filter.split",{"_index":1904,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.tolowercas",{"_index":1909,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.trim",{"_index":1908,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterpred",{"_index":1814,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstr",{"_index":1815,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstring.tolowercase().split",{"_index":1856,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalu",{"_index":1891,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalue.replace('_",{"_index":1893,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalueforsetalarm",{"_index":1816,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["find",{"_index":786,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["fix",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":936,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["flat",{"_index":755,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialSandboxComponent.html":{}}}],["flatnod",{"_index":870,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":876,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":874,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":875,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":788,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":789,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":768,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":815,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flexlayoutmodul",{"_index":1467,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["fo",{"_index":328,"title":{},"body":{"components/AckComponent.html":{}}}],["focu",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focus",{"_index":1583,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["focusmonitor",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":2228,"title":{},"body":{"index.html":{}}}],["follow",{"_index":340,"title":{},"body":{"components/AckComponent.html":{},"components/ButtonsComponent.html":{},"index.html":{},"license.html":{}}}],["foreground",{"_index":1585,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["forkjoin",{"_index":1333,"title":{},"body":{"injectables/CdbService.html":{}}}],["form",{"_index":200,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":537,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["formbuild",{"_index":214,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":284,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":1739,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":280,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formsmodul",{"_index":386,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":2268,"title":{},"body":{"license.html":{}}}],["free",{"_index":2266,"title":{},"body":{"license.html":{}}}],["full",{"_index":1296,"title":{},"body":{"modules/AppModule.html":{}}}],["fullheight",{"_index":1077,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["function",{"_index":229,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["further",{"_index":2256,"title":{},"body":{"index.html":{}}}],["futur",{"_index":2376,"title":{},"body":{"license.html":{}}}],["g",{"_index":2233,"title":{},"body":{"index.html":{}}}],["gencolorstyl",{"_index":967,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["gencolorstyle(fillcolor",{"_index":621,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["gener",{"_index":418,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":254,"title":{"index.html":{},"license.html":{}},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["get(url",{"_index":1398,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":1692,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1206,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1214,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":1014,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["getalarm(alarm_id",{"_index":1031,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getalarm(keyword",{"_index":2100,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["getalarmnam",{"_index":711,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["getalarmvalid",{"_index":465,"title":{},"body":{"classes/Alarm.html":{}}}],["getalarmvalu",{"_index":468,"title":{},"body":{"classes/Alarm.html":{}}}],["getantenna",{"_index":2001,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["getantennagroup",{"_index":1015,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getantennanam",{"_index":1128,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(antennaconfig",{"_index":1143,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(this.selectedantenna",{"_index":1180,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennas(st",{"_index":2004,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["getantennasbygroup",{"_index":1129,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennasbygroup(groupid",{"_index":1149,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennasgroup",{"_index":1130,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getbuttontooltiptext",{"_index":1677,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":834,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getclass",{"_index":672,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getcolor",{"_index":622,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["getconfigurationdata",{"_index":1316,"title":{},"body":{"injectables/CdbService.html":{}}}],["getfilt",{"_index":1870,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getimag",{"_index":673,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getlevel",{"_index":830,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":954,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getmissingacksinfo",{"_index":205,"title":{},"body":{"components/AckComponent.html":{}}}],["getnam",{"_index":470,"title":{},"body":{"classes/Alarm.html":{}}}],["getopacityclass",{"_index":1016,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getopacityclass(antennaconfig",{"_index":1034,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getoperationalmod",{"_index":472,"title":{},"body":{"classes/Alarm.html":{}}}],["getpath",{"_index":1975,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getplacemarkobject",{"_index":1017,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getplacemarkobject(placemark",{"_index":1038,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getrefreshrateparamet",{"_index":1317,"title":{},"body":{"injectables/CdbService.html":{}}}],["getresponsemessagetext",{"_index":206,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitl",{"_index":1693,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getstatu",{"_index":474,"title":{},"body":{"classes/Alarm.html":{}}}],["getsvgpath",{"_index":1542,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":1545,"title":{},"body":{"injectables/MapService.html":{}}}],["getter",{"_index":476,"title":{},"body":{"classes/Alarm.html":{}}}],["gettimestamp",{"_index":478,"title":{},"body":{"classes/Alarm.html":{}}}],["gettitletext",{"_index":1694,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["gettogglestatu",{"_index":1873,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["gettreedata",{"_index":843,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["give",{"_index":2332,"title":{},"body":{"license.html":{}}}],["given",{"_index":829,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["global",{"_index":1377,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["gnu",{"_index":2259,"title":{},"body":{"license.html":{}}}],["go",{"_index":1183,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"index.html":{}}}],["good",{"_index":2315,"title":{},"body":{"license.html":{}}}],["gotoantenna",{"_index":1649,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gototablefilteredbi",{"_index":1131,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1153,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweath",{"_index":1650,"title":{},"body":{"injectables/RoutingService.html":{}}}],["govern",{"_index":2287,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2284,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2384,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1030,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["gray",{"_index":665,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["green",{"_index":661,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["group",{"_index":927,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{}}}],["group.github.io/ia",{"_index":2222,"title":{},"body":{"index.html":{}}}],["groupid",{"_index":1151,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["hammerj",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1389,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1400,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["haschild",{"_index":836,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":841,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["header",{"_index":708,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["header'},{'nam",{"_index":133,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.compon",{"_index":1675,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":710,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":709,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.t",{"_index":707,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:105",{"_index":722,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":715,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":721,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":719,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":714,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":729,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:50",{"_index":726,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:86",{"_index":730,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:94",{"_index":731,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":706,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.t",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["health",{"_index":150,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":1275,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":1265,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":149,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":785,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":2283,"title":{},"body":{"license.html":{}}}],["hide",{"_index":246,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hidespinn",{"_index":207,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["high",{"_index":564,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["highlight",{"_index":1949,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":1587,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["hour",{"_index":1729,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":1579,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["html",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":939,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":2240,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":938,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["httpclientmodul",{"_index":1350,"title":{},"body":{"modules/DataModule.html":{}}}],["httpclientservic",{"_index":919,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1413,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httpmodul",{"_index":1289,"title":{},"body":{"modules/AppModule.html":{}}}],["httpoption",{"_index":1421,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1402,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":2270,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":2221,"title":{},"body":{"index.html":{}}}],["hum",{"_index":2040,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humid",{"_index":2012,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["humidityimageset",{"_index":1990,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humidityimageunreliableset",{"_index":1991,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["hunt",{"_index":1613,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["i.",{"_index":1828,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["ia",{"_index":389,"title":{},"body":{"modules/ActionsModule.html":{},"classes/Alarm.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["ias_antenna",{"_index":1229,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1379,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1226,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_tabl",{"_index":1230,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_typ",{"_index":1473,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weath",{"_index":1228,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfigur",{"_index":1313,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasconfigurationdata",{"_index":1340,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":1314,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":2210,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":1337,"title":{"classes/Iasio.html":{}},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodul",{"_index":369,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1315,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":668,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["iconset",{"_index":1363,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1364,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":277,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["identifi",{"_index":414,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"coverage.html":{}}}],["imag",{"_index":676,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":677,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["implement",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":2269,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1558,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["incorpor",{"_index":2276,"title":{},"body":{"license.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indexofset",{"_index":1912,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["indic",{"_index":260,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inform",{"_index":352,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"license.html":{}}}],["init",{"_index":1790,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initi",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":1329,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["inject",{"_index":765,"title":{"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":2329,"title":{},"body":{"license.html":{}}}],["inner",{"_index":270,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["input",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instal",{"_index":2226,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":2236,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":221,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["instead",{"_index":808,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["instruct",{"_index":2215,"title":{},"body":{"index.html":{}}}],["integr",{"_index":1234,"title":{},"body":{"components/AppComponent.html":{}}}],["interact",{"_index":1021,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["interfac",{"_index":1735,"title":{"interfaces/TimeoutOption.html":{}},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["intern",{"_index":998,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["inu",{"_index":1596,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["invalid",{"_index":235,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["invalid.svg",{"_index":1511,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["invok",{"_index":2314,"title":{},"body":{"license.html":{}}}],["involv",{"_index":1041,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["io_id",{"_index":1474,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicon",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["isdis",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isexpand",{"_index":832,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isnavigationcompact",{"_index":1203,"title":{},"body":{"components/AppComponent.html":{}}}],["isol",{"_index":2300,"title":{},"body":{"license.html":{}}}],["isselect",{"_index":1018,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":1160,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(antennaconfig",{"_index":1042,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["isselected(stationconfig",{"_index":2064,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["issu",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isubscript",{"_index":917,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["isvalidalarm",{"_index":405,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidalarm(json",{"_index":455,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidiasio",{"_index":1477,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1486,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":756,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["item.icon",{"_index":1258,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1256,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":1259,"title":{},"body":{"components/AppComponent.html":{}}}],["japan",{"_index":1604,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["join",{"_index":535,"title":{},"body":{"classes/Alarm.html":{}}}],["jqueri",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":453,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["json.hasownproperty('ack",{"_index":511,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_id",{"_index":503,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_timestamp",{"_index":506,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('depend",{"_index":513,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('descript",{"_index":509,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('doc_url",{"_index":1491,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1490,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1488,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('mod",{"_index":505,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('running_id",{"_index":504,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('shelv",{"_index":512,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('short_desc",{"_index":1489,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('state_change_timestamp",{"_index":507,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('url",{"_index":510,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valid",{"_index":508,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valu",{"_index":502,"title":{},"body":{"classes/Alarm.html":{}}}],["json['ack",{"_index":526,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_id",{"_index":518,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_timestamp",{"_index":521,"title":{},"body":{"classes/Alarm.html":{}}}],["json['depend",{"_index":528,"title":{},"body":{"classes/Alarm.html":{}}}],["json['descript",{"_index":524,"title":{},"body":{"classes/Alarm.html":{}}}],["json['doc_url",{"_index":1496,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1495,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1493,"title":{},"body":{"classes/Iasio.html":{}}}],["json['mod",{"_index":520,"title":{},"body":{"classes/Alarm.html":{}}}],["json['running_id",{"_index":519,"title":{},"body":{"classes/Alarm.html":{}}}],["json['shelv",{"_index":527,"title":{},"body":{"classes/Alarm.html":{}}}],["json['short_desc",{"_index":1494,"title":{},"body":{"classes/Iasio.html":{}}}],["json['state_change_timestamp",{"_index":522,"title":{},"body":{"classes/Alarm.html":{}}}],["json['url",{"_index":525,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valid",{"_index":523,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valu",{"_index":517,"title":{},"body":{"classes/Alarm.html":{}}}],["june",{"_index":2262,"title":{},"body":{"license.html":{}}}],["k",{"_index":859,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":2251,"title":{},"body":{"index.html":{}}}],["keep",{"_index":790,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["key",{"_index":334,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["keyword",{"_index":1837,"title":{},"body":{"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["l",{"_index":1985,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["last",{"_index":1916,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["later",{"_index":869,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1469,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{},"license.html":{}}}],["left",{"_index":1233,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":152,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1498,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1499,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":1805,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":151,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":725,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"license.html":{}}}],["lesser",{"_index":2260,"title":{},"body":{"license.html":{}}}],["level",{"_index":759,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":700,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["librari",{"_index":2235,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":2258,"title":{"license.html":{}},"body":{"license.html":{}}}],["lightblu",{"_index":664,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["limit",{"_index":2326,"title":{},"body":{"license.html":{}}}],["line",{"_index":1970,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"license.html":{}}}],["link",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linkflat",{"_index":1618,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkicon",{"_index":1619,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkmini",{"_index":1620,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkrais",{"_index":1617,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linux",{"_index":2219,"title":{},"body":{"index.html":{}}}],["list",{"_index":267,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":944,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["liter",{"_index":1121,"title":{},"body":{"injectables/AntennasService.html":{}}}],["load",{"_index":227,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["loadalarmsconfig",{"_index":945,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["loadimag",{"_index":958,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadweatherstationsconfig",{"_index":2002,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["local",{"_index":1876,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["locale.date_format",{"_index":1880,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locale.timezon",{"_index":1882,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locat",{"_index":911,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["look",{"_index":1557,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["low",{"_index":566,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["low.svg",{"_index":1380,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["m",{"_index":1988,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macro",{"_index":2328,"title":{},"body":{"license.html":{}}}],["made",{"_index":2295,"title":{},"body":{"license.html":{}}}],["main",{"_index":913,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["maint.svg",{"_index":1382,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mainten",{"_index":487,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":965,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["make",{"_index":2289,"title":{},"body":{"license.html":{}}}],["manag",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":2348,"title":{},"body":{"license.html":{}}}],["map",{"_index":576,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["map'},{'nam",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map.compon",{"_index":1106,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":1004,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1003,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["map.component.t",{"_index":1002,"title":{},"body":{"components/AntennasMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:103",{"_index":1027,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:118",{"_index":1032,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:126",{"_index":1033,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:135",{"_index":1035,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:152",{"_index":1039,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:163",{"_index":1043,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:176",{"_index":1047,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:20",{"_index":1024,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:23",{"_index":1025,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:26",{"_index":1052,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:30",{"_index":1057,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:33",{"_index":1058,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:36",{"_index":1055,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:39",{"_index":1060,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:42",{"_index":1050,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:45",{"_index":1048,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:48",{"_index":1020,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:58",{"_index":1059,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:59",{"_index":1049,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:60",{"_index":1054,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:67",{"_index":1045,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:75",{"_index":1040,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.servic",{"_index":1540,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antenna",{"_index":1001,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.compon",{"_index":1539,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.modul",{"_index":1109,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/map.servic",{"_index":1063,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map/weath",{"_index":1964,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapantennaconfig",{"_index":1172,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["mapcompon",{"_index":153,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":1006,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["mapdata['placemark",{"_index":1068,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapdata['placemarks']['pad",{"_index":1069,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapdataavail",{"_index":1007,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["mapdataprocess",{"_index":1543,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroup",{"_index":1547,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodul",{"_index":1103,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["mapplacemark",{"_index":1008,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapservic",{"_index":1009,"title":{"injectables/MapService.html":{}},"body":{"components/AntennasMapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":592,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["marker'},{'nam",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.compon",{"_index":1110,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":593,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":594,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.t",{"_index":579,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:109",{"_index":977,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:12",{"_index":582,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:120",{"_index":978,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:15",{"_index":586,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:178",{"_index":976,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:18",{"_index":587,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:19",{"_index":1950,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":1930,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:21",{"_index":585,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:23",{"_index":1925,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":584,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:27",{"_index":588,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:28",{"_index":1948,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:30",{"_index":583,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:31",{"_index":1932,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":1931,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:33",{"_index":581,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:36",{"_index":1954,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":1953,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:38",{"_index":1929,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:43",{"_index":1952,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:45",{"_index":1928,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:50",{"_index":1951,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:55",{"_index":970,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:58",{"_index":973,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:61",{"_index":975,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:64",{"_index":971,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:67",{"_index":972,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:70",{"_index":974,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:73",{"_index":982,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:76",{"_index":983,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:79",{"_index":981,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:82",{"_index":969,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:90",{"_index":984,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:91",{"_index":980,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:99",{"_index":979,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker/antenna",{"_index":578,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weath",{"_index":1921,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markerimageset",{"_index":1992,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markerimageunreliableset",{"_index":1993,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markers/antenna",{"_index":577,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weath",{"_index":1920,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":2224,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":1444,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1447,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":191,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matcheckboxmodul",{"_index":1454,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":155,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.modul",{"_index":391,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.t",{"_index":1429,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":390,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialsandboxcompon",{"_index":154,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":1462,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodul",{"_index":1456,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":1446,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistri",{"_index":1208,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":1432,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1451,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1434,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1436,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodul",{"_index":1458,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1220,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodul",{"_index":1449,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1438,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbar",{"_index":2057,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["matsnackbarmodul",{"_index":1464,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsort",{"_index":1865,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["matsortmodul",{"_index":1440,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattabl",{"_index":1867,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattabledatasourc",{"_index":1849,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattablemodul",{"_index":1442,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1460,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":771,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":817,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":770,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":810,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1453,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":716,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/MapService.html":{}}}],["maxci",{"_index":1554,"title":{},"body":{"injectables/MapService.html":{}}}],["maximum",{"_index":724,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["md",{"_index":690,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["mean",{"_index":2297,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":2321,"title":{},"body":{"license.html":{}}}],["meant",{"_index":1669,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":2349,"title":{},"body":{"license.html":{}}}],["medium",{"_index":565,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["medium.svg",{"_index":2050,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mention",{"_index":287,"title":{},"body":{"components/AckComponent.html":{}}}],["menu",{"_index":1232,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":201,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["min",{"_index":1551,"title":{},"body":{"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{}}}],["mini",{"_index":1594,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["minim",{"_index":2296,"title":{},"body":{"license.html":{}}}],["minut",{"_index":1725,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["miscellan",{"_index":2207,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":238,"title":{},"body":{"components/AckComponent.html":{}}}],["missedack",{"_index":202,"title":{},"body":{"components/AckComponent.html":{}}}],["mockalarm",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["mockalarmdata",{"_index":2125,"title":{},"body":{"coverage.html":{}}}],["mockiasio",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["mockimagesset",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":398,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["model",{"_index":701,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"modules/DataModule.html":{}}}],["modif",{"_index":2310,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":787,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["modul",{"_index":358,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["more",{"_index":1630,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountain",{"_index":1610,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["mouseev",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["multipl",{"_index":804,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["multipli",{"_index":1324,"title":{},"body":{"injectables/CdbService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["navig",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["navigationsidenavitem",{"_index":1204,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":2086,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["nearbi",{"_index":2006,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["necessari",{"_index":2356,"title":{},"body":{"license.html":{}}}],["need",{"_index":447,"title":{},"body":{"classes/Alarm.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nest",{"_index":784,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":792,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["network",{"_index":1636,"title":{},"body":{"components/OverviewComponent.html":{}}}],["new",{"_index":300,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["ng",{"_index":2185,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["ngmodul",{"_index":375,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":807,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ngondestroy",{"_index":208,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":297,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":388,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":219,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["noalarmstoack",{"_index":329,"title":{},"body":{"components/AckComponent.html":{}}}],["node",{"_index":757,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":864,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":833,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":862,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":831,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":2229,"title":{},"body":{"index.html":{}}}],["none",{"_index":2323,"title":{},"body":{"license.html":{}}}],["normal",{"_index":798,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["noselecteddescendants(nod",{"_index":892,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":1643,"title":{},"body":{"modules/OverviewModule.html":{},"index.html":{}}}],["noth",{"_index":1139,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["notic",{"_index":2334,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":1141,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{}}}],["npm",{"_index":2230,"title":{},"body":{"index.html":{}}}],["null",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":237,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/ShelveComponent.html":{},"license.html":{}}}],["numer",{"_index":2327,"title":{},"body":{"license.html":{}}}],["object",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["object.assign(thi",{"_index":501,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["object.entries(respons",{"_index":335,"title":{},"body":{"components/AckComponent.html":{}}}],["object.keys(this.alarmsconfig",{"_index":1091,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["object.keys(this.antennasservice.antennasconfig",{"_index":1174,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["object.keys(this.placemarks).indexof(placemark_id",{"_index":1089,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["observ",{"_index":774,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/OverviewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["observableforkjoin",{"_index":1334,"title":{},"body":{"injectables/CdbService.html":{}}}],["obtain",{"_index":1053,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["occur",{"_index":1417,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["ofobserv",{"_index":773,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":835,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["on",{"_index":2344,"title":{},"body":{"license.html":{}}}],["on/off",{"_index":1841,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["onchang",{"_index":764,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["onclick",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":1164,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclick(antennaconfig",{"_index":1046,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["onclick(ev",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(stationconfig",{"_index":2069,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["onclos",{"_index":209,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":194,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["onhov",{"_index":1947,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onkeyup",{"_index":1820,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["onkeyup(ev",{"_index":1834,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["opac",{"_index":1036,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["open/clos",{"_index":1767,"title":{},"body":{"injectables/SidenavService.html":{}}}],["opensnackbar",{"_index":2054,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["opensnackbar(messag",{"_index":2071,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["oper",{"_index":425,"title":{},"body":{"classes/Alarm.html":{},"injectables/HttpClientService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":423,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.mainten",{"_index":641,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode.shuttedown",{"_index":642,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode.unknown",{"_index":638,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode[this.mod",{"_index":534,"title":{},"body":{"classes/Alarm.html":{}}}],["opt_ci",{"_index":599,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["opt_cx",{"_index":598,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["optionalalarmnam",{"_index":713,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["order",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{}}}],["origin",{"_index":1601,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["ot",{"_index":1825,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["otherwis",{"_index":2290,"title":{},"body":{"license.html":{}}}],["out",{"_index":373,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1216,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["output",{"_index":589,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MapComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["over",{"_index":1304,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["overview",{"_index":158,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":161,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":1632,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1631,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1249,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.compon",{"_index":1644,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":1276,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":1284,"title":{},"body":{"modules/AppModule.html":{}}}],["overviewcardcompon",{"_index":157,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":160,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":1266,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["packag",{"_index":2176,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1148,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["page",{"_index":2107,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["panel",{"_index":1758,"title":{},"body":{"injectables/SidenavService.html":{}}}],["panelclass",{"_index":2085,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panelclick",{"_index":2055,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["param",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["paramet",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["parammap",{"_index":305,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":307,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":427,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["part",{"_index":885,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":2294,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1658,"title":{},"body":{"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["path",{"_index":1056,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/AppModule.html":{},"injectables/MapService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1295,"title":{},"body":{"modules/AppModule.html":{}}}],["pathsgroup",{"_index":1010,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["pathstr",{"_index":1982,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pend",{"_index":686,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":193,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["perman",{"_index":2380,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":2281,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2272,"title":{},"body":{"license.html":{}}}],["persist",{"_index":346,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["pk",{"_index":514,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["place",{"_index":440,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"license.html":{}}}],["placemark",{"_index":595,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/MapService.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["placemark_id",{"_index":1088,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["placemarksgroup",{"_index":1011,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["pleas",{"_index":342,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":1471,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.j",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":2299,"title":{},"body":{"license.html":{}}}],["posit",{"_index":602,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["possibl",{"_index":494,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["post",{"_index":1390,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1404,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["power",{"_index":1635,"title":{},"body":{"components/OverviewComponent.html":{}}}],["present",{"_index":2350,"title":{},"body":{"license.html":{}}}],["press",{"_index":1836,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["primari",{"_index":180,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["prioriti",{"_index":438,"title":{},"body":{"classes/Alarm.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priorities.indexof(prior",{"_index":567,"title":{},"body":{"classes/Alarm.html":{}}}],["priority_0",{"_index":1502,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":1503,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":1504,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":1505,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":1506,"title":{},"body":{"components/LegendComponent.html":{}}}],["privat",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":345,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["process",{"_index":1412,"title":{},"body":{"injectables/HttpClientService.html":{},"components/StatusViewComponent.html":{}}}],["prod",{"_index":2247,"title":{},"body":{"index.html":{}}}],["produc",{"_index":2293,"title":{},"body":{"license.html":{}}}],["product",{"_index":2248,"title":{},"body":{"index.html":{}}}],["proess",{"_index":1410,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["program",{"_index":2303,"title":{},"body":{"license.html":{}}}],["project",{"_index":2211,"title":{},"body":{"index.html":{}}}],["promin",{"_index":2333,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1403,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1419,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properli",{"_index":2353,"title":{},"body":{"license.html":{}}}],["properti",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["protractor",{"_index":2254,"title":{},"body":{"index.html":{}}}],["provid",{"_index":226,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":925,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/SidenavService.html":{}}}],["proxi",{"_index":2374,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":2378,"title":{},"body":{"license.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":2364,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":461,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":1791,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1391,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1406,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":609,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["radiu",{"_index":608,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["rais",{"_index":1582,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["rate",{"_index":1323,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":387,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":822,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["read_url",{"_index":1392,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":1408,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readi",{"_index":2068,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["readm",{"_index":2257,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1753,"title":{},"body":{"components/ShelveComponent.html":{}}}],["receiv",{"_index":451,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"license.html":{}}}],["recombin",{"_index":2346,"title":{},"body":{"license.html":{}}}],["record",{"_index":868,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":796,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":663,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":1137,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":1294,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["refresh",{"_index":1322,"title":{},"body":{"injectables/CdbService.html":{}}}],["refreshr",{"_index":1326,"title":{},"body":{"injectables/CdbService.html":{}}}],["registri",{"_index":1212,"title":{},"body":{"components/AppComponent.html":{}}}],["relat",{"_index":702,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"index.html":{}}}],["releas",{"_index":2220,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":496,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":2347,"title":{},"body":{"license.html":{}}}],["reload",{"_index":210,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["remain",{"_index":2320,"title":{},"body":{"license.html":{}}}],["repres",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["represent",{"_index":444,"title":{},"body":{"classes/Alarm.html":{}}}],["reproduc",{"_index":2304,"title":{},"body":{"license.html":{}}}],["request",{"_index":224,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["requeststatu",{"_index":203,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requeststatusli",{"_index":290,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requir",{"_index":353,"title":{},"body":{"components/AckComponent.html":{},"modules/IasMaterialModule.html":{},"components/ShelveComponent.html":{},"index.html":{},"license.html":{}}}],["res[0",{"_index":1341,"title":{},"body":{"injectables/CdbService.html":{}}}],["reset",{"_index":372,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["respect",{"_index":1788,"title":{},"body":{"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["respons",{"_index":233,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["response[key",{"_index":949,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["restrict",{"_index":2338,"title":{},"body":{"license.html":{}}}],["result",{"_index":190,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["result.push('blu",{"_index":732,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":735,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":734,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('r",{"_index":737,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('unreli",{"_index":733,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":736,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["retriev",{"_index":616,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["retun",{"_index":828,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":1530,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":2339,"title":{},"body":{"license.html":{}}}],["revis",{"_index":2363,"title":{},"body":{"license.html":{}}}],["right",{"_index":1241,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":926,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":216,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{}}}],["router",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["routermodul",{"_index":1272,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1301,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.servic",{"_index":1354,"title":{},"body":{"modules/DataModule.html":{}}}],["routingservic",{"_index":1135,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["row",{"_index":1859,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["run",{"_index":2237,"title":{},"body":{"index.html":{},"license.html":{}}}],["running_id",{"_index":399,"title":{},"body":{"classes/Alarm.html":{}}}],["rxj",{"_index":776,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":1335,"title":{},"body":{"injectables/CdbService.html":{}}}],["rxjs/rx",{"_index":1336,"title":{},"body":{"injectables/CdbService.html":{}}}],["s",{"_index":338,"title":{},"body":{"components/AckComponent.html":{}}}],["s_low.svg",{"_index":962,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["same",{"_index":791,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sandbox",{"_index":1300,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["sandbox'},{'nam",{"_index":156,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.compon",{"_index":1292,"title":{},"body":{"modules/AppModule.html":{}}}],["sandbox.component.html",{"_index":1561,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.scss",{"_index":1560,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.t",{"_index":1556,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sandbox.component.ts:12",{"_index":1562,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.ts:22",{"_index":1563,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox/materi",{"_index":1291,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sanit",{"_index":1244,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffold",{"_index":2242,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1549,"title":{},"body":{"injectables/MapService.html":{}}}],["secondari",{"_index":1588,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["section",{"_index":2306,"title":{},"body":{"license.html":{}}}],["select",{"_index":268,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["select/deselect",{"_index":895,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":904,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":781,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":991,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescend",{"_index":887,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedst",{"_index":1940,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["selectionmodel",{"_index":766,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":803,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["send",{"_index":223,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sent",{"_index":291,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["separ",{"_index":1158,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serv",{"_index":2238,"title":{},"body":{"index.html":{}}}],["server",{"_index":1737,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":436,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set_crit",{"_index":500,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":499,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":1507,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":497,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":498,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":1508,"title":{},"body":{"components/LegendComponent.html":{}}}],["setsidenav",{"_index":1760,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":1764,"title":{},"body":{"injectables/SidenavService.html":{}}}],["shall",{"_index":2377,"title":{},"body":{"license.html":{}}}],["share",{"_index":1614,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":385,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":393,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["shared/statu",{"_index":1806,"title":{},"body":{"modules/TabularModule.html":{}}}],["sharedmodul",{"_index":370,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":687,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{}}}],["shelv",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'nam",{"_index":164,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":1688,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":1687,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1299,"title":{},"body":{"modules/AppModule.html":{}}}],["shelve/shelve.compon",{"_index":379,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelv",{"_index":1679,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvebuttoncompon",{"_index":162,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecompon",{"_index":163,"title":{"components/ShelveComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":247,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shiba",{"_index":1595,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["short",{"_index":422,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["short_desc",{"_index":1475,"title":{},"body":{"classes/Iasio.html":{}}}],["shorten",{"_index":723,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["show",{"_index":259,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["showactionbadg",{"_index":678,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":674,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showasshelv",{"_index":675,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showspinn",{"_index":211,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shuttedown",{"_index":485,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":2359,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":250,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.compon",{"_index":1108,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":1127,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1126,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":1125,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:112",{"_index":1154,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:16",{"_index":2092,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:18",{"_index":1140,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2059,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:21",{"_index":1136,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":2058,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:26",{"_index":2096,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:27",{"_index":2095,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":1169,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1168,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:33",{"_index":2073,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":2093,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:39",{"_index":1163,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:40",{"_index":2066,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:46",{"_index":2094,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:48",{"_index":1142,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:49",{"_index":2061,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:57",{"_index":1144,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:65",{"_index":1152,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:68",{"_index":2063,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:73",{"_index":1150,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:77",{"_index":2062,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:80",{"_index":1166,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:81",{"_index":2065,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:85",{"_index":2070,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:90",{"_index":1161,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:94",{"_index":2072,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:98",{"_index":1165,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar/antenna",{"_index":1107,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weath",{"_index":1966,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenav.servic",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavservic",{"_index":33,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["sidenv",{"_index":1757,"title":{},"body":{"injectables/SidenavService.html":{}}}],["similar",{"_index":2365,"title":{},"body":{"license.html":{}}}],["singl",{"_index":2360,"title":{},"body":{"license.html":{}}}],["six",{"_index":1600,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["size",{"_index":679,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/MapService.html":{}}}],["sizeopt",{"_index":671,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["slide",{"_index":1845,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["slider",{"_index":1589,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sm",{"_index":699,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["small",{"_index":1605,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["smallest",{"_index":1599,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["snackbar",{"_index":2052,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["softwar",{"_index":2267,"title":{},"body":{"license.html":{}}}],["sort",{"_index":442,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1157,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["special",{"_index":1190,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":1044,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/OverviewComponent.html":{}}}],["specifi",{"_index":1156,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["speed",{"_index":2025,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["spinner",{"_index":228,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":218,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":2366,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":1603,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["src/.../alarm.t",{"_index":2209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.t",{"_index":192,"title":{},"body":{"components/AckComponent.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.ts:106",{"_index":256,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:115",{"_index":255,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:123",{"_index":232,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:147",{"_index":258,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:156",{"_index":245,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:165",{"_index":265,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:173",{"_index":234,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:182",{"_index":236,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:206",{"_index":240,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:22",{"_index":276,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:27",{"_index":274,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:32",{"_index":281,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:37",{"_index":285,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:42",{"_index":278,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:47",{"_index":273,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:52",{"_index":286,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:60",{"_index":220,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:75",{"_index":295,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:83",{"_index":253,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:99",{"_index":251,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/actions.module.t",{"_index":374,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.t",{"_index":1303,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1309,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:28",{"_index":1310,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelv",{"_index":1676,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.t",{"_index":1686,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.ts:103",{"_index":1706,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:120",{"_index":1705,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:127",{"_index":1708,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:137",{"_index":1707,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:144",{"_index":1711,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:155",{"_index":1709,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:181",{"_index":1712,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:207",{"_index":1710,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:216",{"_index":1704,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:225",{"_index":1697,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:233",{"_index":1702,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:248",{"_index":1699,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:263",{"_index":1701,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:275",{"_index":1700,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:34",{"_index":1733,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:46",{"_index":1716,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:51",{"_index":1714,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:56",{"_index":1713,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:61",{"_index":1717,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:66",{"_index":1718,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:71",{"_index":1720,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:79",{"_index":1696,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:94",{"_index":1719,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/sidenav.service.t",{"_index":1756,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:10",{"_index":1761,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:18",{"_index":1769,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:21",{"_index":1768,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:27",{"_index":1765,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:34",{"_index":1763,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:41",{"_index":1762,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:48",{"_index":1766,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":2105,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antenna",{"_index":575,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.t",{"_index":1104,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.t",{"_index":910,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:107",{"_index":1118,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:15",{"_index":914,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":915,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":912,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:34",{"_index":1122,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:37",{"_index":1123,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:40",{"_index":1124,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:43",{"_index":1119,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:46",{"_index":1120,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:49",{"_index":1114,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:63",{"_index":1116,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:74",{"_index":1117,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:99",{"_index":1115,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.t",{"_index":985,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:16",{"_index":993,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":994,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:32",{"_index":996,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/app.component.t",{"_index":1198,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":1223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":1235,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":1225,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":1231,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":1210,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":1224,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":1217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":1215,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:99",{"_index":1218,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":1269,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/data/alarm.service.t",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["src/app/data/alarm.t",{"_index":395,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/alarm.ts:115",{"_index":450,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:139",{"_index":466,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:148",{"_index":469,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:154",{"_index":471,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:159",{"_index":473,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:168",{"_index":475,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:176",{"_index":479,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:187",{"_index":448,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:197",{"_index":458,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:206",{"_index":462,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:215",{"_index":459,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:226",{"_index":445,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:270",{"_index":439,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:43",{"_index":434,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:46",{"_index":413,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:49",{"_index":426,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:52",{"_index":424,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:55",{"_index":433,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:58",{"_index":416,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:61",{"_index":428,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:64",{"_index":419,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:67",{"_index":421,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:70",{"_index":431,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:73",{"_index":412,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:76",{"_index":408,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:92",{"_index":456,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/cdb.service.t",{"_index":1312,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:18",{"_index":1332,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:23",{"_index":1330,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:28",{"_index":1319,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:42",{"_index":1328,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:54",{"_index":1320,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:63",{"_index":1321,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":1349,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1384,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":1470,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":1483,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":1479,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":1478,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":1487,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":1485,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":1482,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/routing.service.t",{"_index":1646,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/data/routing.service.ts:20",{"_index":1657,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:28",{"_index":1654,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:35",{"_index":1655,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:8",{"_index":1653,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/health/health",{"_index":1361,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1359,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":1428,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.t",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.t",{"_index":1538,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.t",{"_index":1541,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":1546,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:44",{"_index":1548,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":1544,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.t",{"_index":1529,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":1532,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":1531,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":1533,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/materi",{"_index":1555,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":1621,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":1641,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":1629,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":1633,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":1634,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":705,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":667,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:12",{"_index":750,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:127",{"_index":696,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:131",{"_index":697,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:135",{"_index":692,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:15",{"_index":751,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:18",{"_index":749,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:21",{"_index":748,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:24",{"_index":752,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:27",{"_index":747,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:30",{"_index":745,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:56",{"_index":681,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:61",{"_index":683,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:66",{"_index":684,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:72",{"_index":689,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:77",{"_index":691,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:79",{"_index":680,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:89",{"_index":695,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:9",{"_index":746,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:98",{"_index":693,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1668,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/statu",{"_index":1774,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":1497,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:15",{"_index":1514,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":1512,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":1528,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":1515,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":1527,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":1526,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:33",{"_index":1517,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:36",{"_index":1520,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:39",{"_index":1522,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:42",{"_index":1524,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:45",{"_index":1509,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:51",{"_index":1510,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/tabular",{"_index":1807,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":1804,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/test_fixtures.t",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weath",{"_index":1919,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":1960,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.t",{"_index":1989,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["src/app/weather/weather.service.ts:105",{"_index":2007,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:115",{"_index":2005,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:122",{"_index":2010,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:134",{"_index":2009,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:16",{"_index":2088,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:19",{"_index":2089,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:22",{"_index":2090,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:25",{"_index":2091,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:28",{"_index":2087,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:47",{"_index":2011,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:50",{"_index":2016,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:53",{"_index":2023,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:56",{"_index":2014,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:59",{"_index":2013,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:62",{"_index":2018,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:65",{"_index":2026,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:68",{"_index":2015,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:71",{"_index":2022,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:74",{"_index":2021,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:77",{"_index":2020,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:80",{"_index":2003,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:93",{"_index":2008,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather/weather.component.t",{"_index":1935,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:16",{"_index":1942,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:27",{"_index":1945,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:33",{"_index":1944,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.t",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":1884,"title":{"index.html":{},"license.html":{}},"body":{"components/TabularViewComponent.html":{}}}],["startup",{"_index":483,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":430,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state_change_timestamp",{"_index":400,"title":{},"body":{"classes/Alarm.html":{}}}],["statement",{"_index":2117,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":403,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["station",{"_index":185,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":1923,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["stationconfig.placemark",{"_index":2081,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["statu",{"_index":166,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":703,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcompon",{"_index":165,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":2318,"title":{},"body":{"license.html":{}}}],["stop",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["storageitem",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":289,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["stream",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":244,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["structur",{"_index":856,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["styleurl",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":857,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subclass",{"_index":2291,"title":{},"body":{"license.html":{}}}],["subcompon",{"_index":1305,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["subscrib",{"_index":1370,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{}}}],["subscript",{"_index":1848,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["subscriptionlik",{"_index":916,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["subsubtre",{"_index":853,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":1624,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":795,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":855,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesfulli",{"_index":341,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["successfulli",{"_index":293,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["such",{"_index":2324,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":2231,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":2345,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1185,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":932,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":1112,"title":{},"body":{"modules/AntennasModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1187,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1186,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1184,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:17",{"_index":1189,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:19",{"_index":1371,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:22",{"_index":1372,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:25",{"_index":1366,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":1194,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:34",{"_index":2101,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":1192,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":1369,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:43",{"_index":1195,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:48",{"_index":1373,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:52",{"_index":1191,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:55",{"_index":1367,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:59",{"_index":1193,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:88",{"_index":1368,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antenna",{"_index":1111,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1360,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":1963,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":950,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["supplement",{"_index":2279,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":2312,"title":{},"body":{"license.html":{}}}],["support",{"_index":2382,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1061,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1227,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpath",{"_index":1012,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["switch",{"_index":1846,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["system",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.valu",{"_index":1751,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["tabl",{"_index":441,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table'",{"_index":1830,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["table.svg",{"_index":1252,"title":{},"body":{"components/AppComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":1651,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":1656,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":169,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":1297,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular",{"_index":1281,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular.modul",{"_index":1277,"title":{},"body":{"modules/AppModule.html":{}}}],["tabularmodul",{"_index":1267,"title":{"modules/TabularModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":168,"title":{"components/TabularViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":446,"title":{},"body":{"classes/Alarm.html":{},"components/StatusViewComponent.html":{}}}],["tags.join",{"_index":562,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push('ack",{"_index":560,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push('shelv",{"_index":561,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(ord",{"_index":554,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(prior",{"_index":558,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(this.operationalmod",{"_index":555,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(valid",{"_index":559,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(valu",{"_index":556,"title":{},"body":{"classes/Alarm.html":{}}}],["taken",{"_index":354,"title":{},"body":{"components/AckComponent.html":{},"license.html":{}}}],["target",{"_index":1397,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["temp",{"_index":2042,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["temperatur",{"_index":2017,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["tempimageset",{"_index":1994,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["tempimageunreliableset",{"_index":1995,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":2330,"title":{},"body":{"license.html":{}}}],["term",{"_index":2277,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":1611,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["test",{"_index":1862,"title":{},"body":{"components/TabularViewComponent.html":{},"index.html":{}}}],["text",{"_index":241,"title":{},"body":{"components/AckComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["textfield",{"_index":1863,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this._getalarmstatusorder(valu",{"_index":553,"title":{},"body":{"classes/Alarm.html":{}}}],["this._getalarmstatustagsstr",{"_index":536,"title":{},"body":{"classes/Alarm.html":{}}}],["this._getsubtree(childalarm",{"_index":854,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":845,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initi",{"_index":941,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this._setfilteractiv",{"_index":1906,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.ack",{"_index":541,"title":{},"body":{"classes/Alarm.html":{}}}],["this.acklist",{"_index":902,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":905,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acknowledgedalarm",{"_index":320,"title":{},"body":{"components/AckComponent.html":{}}}],["this.actionssidenavservice.canclos",{"_index":1255,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1254,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarm",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.core_id",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mod",{"_index":637,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelv",{"_index":634,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.valid",{"_index":631,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valu",{"_index":645,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm_id",{"_index":306,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmiconspriorityset",{"_index":1799,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":1797,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":1798,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmid",{"_index":1376,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmnamemaxs",{"_index":742,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.alarmsconfig",{"_index":1086,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.alarmservice.acknowledgealarm",{"_index":317,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.alarmchangestream.subscribe(notif",{"_index":1890,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservice.alarmsarray",{"_index":1886,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1090,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":852,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":312,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmid",{"_index":1375,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.antennasservice.antennassummaryconfig",{"_index":1196,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.st",{"_index":1934,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.get(this.weatherservice.weathersummaryconfig[keyword",{"_index":2103,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.getmissingacks(this.alarm.core_id).subscrib",{"_index":333,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.initi",{"_index":1253,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.shelvealarm(this.alarm.core_id",{"_index":1745,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":1749,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservicesubscript",{"_index":1889,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservicesubscription.unsubscrib",{"_index":1897,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmstoack",{"_index":318,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoack.length",{"_index":330,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":906,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmvalid",{"_index":552,"title":{},"body":{"classes/Alarm.html":{}}}],["this.alarmvalue.split('_",{"_index":549,"title":{},"body":{"classes/Alarm.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1176,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":959,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":966,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasconfig[key",{"_index":948,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasmapnam",{"_index":956,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig[groupid",{"_index":1175,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initi",{"_index":1171,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":953,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.applyfilter(event.target.valu",{"_index":1900,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.applyfilter(filtervalu",{"_index":1894,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.applyfilter(this.filterstr",{"_index":1902,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.bordercolor",{"_index":630,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.bordercolorsunreli",{"_index":633,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.bordercolorsunreliable.unknown",{"_index":625,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.buildfiletree(tree_data",{"_index":827,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":865,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":1744,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":900,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":891,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":884,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descend",{"_index":889,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":898,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe(data",{"_index":818,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":903,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":899,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":890,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":897,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.clearfilt",{"_index":1899,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.clickedantennamarker.emit(this.selectedantenna",{"_index":1097,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.clipboardservice.copyfromcontent(result",{"_index":2077,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.coord",{"_index":1984,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.core_id",{"_index":533,"title":{},"body":{"classes/Alarm.html":{}}}],["this.datasourc",{"_index":816,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.data",{"_index":826,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.filt",{"_index":1910,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.filterpred",{"_index":1887,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.sort",{"_index":1895,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.dateformat",{"_index":1879,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.definealarmcolor",{"_index":620,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.definealarmsandicon",{"_index":1374,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":1796,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.descript",{"_index":544,"title":{},"body":{"classes/Alarm.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1247,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.fillcolor",{"_index":628,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.fillcolorsunreli",{"_index":632,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.fillcolorsunreliable.unknown",{"_index":624,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.filterpred",{"_index":1888,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstr",{"_index":1901,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstring.split",{"_index":1911,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":877,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":302,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').value).subscrib",{"_index":319,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":316,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":303,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.gencolorstyle(fillcolor",{"_index":626,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.getalarmnam",{"_index":744,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.getantennas(st",{"_index":2075,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.getchildren",{"_index":813,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().subscribe((r",{"_index":1339,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getlevel",{"_index":811,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmissingacksinfo",{"_index":310,"title":{},"body":{"components/AckComponent.html":{}}}],["this.gettreedata",{"_index":825,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.hidespinn",{"_index":321,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":1426,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":1423,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(this.read_url(url",{"_index":1424,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.put(this.read_url(url",{"_index":1425,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(backendurls.weather_summary).subscribe((respons",{"_index":2037,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(backendurls.weather_view).subscribe((respons",{"_index":2035,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(summary_url).subscribe((respons",{"_index":952,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclient.get(url",{"_index":957,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(url).subscribe((respons",{"_index":947,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1344,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.humidityimageset",{"_index":2039,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.humidityimageunreliableset",{"_index":2045,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.iasconfigur",{"_index":1342,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['broadcast_factor",{"_index":1346,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['refresh_r",{"_index":1345,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(tru",{"_index":1343,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1378,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1383,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.initi",{"_index":1064,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.isexpand",{"_index":812,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isnavigationcompact",{"_index":1257,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isselected(antennaconfig",{"_index":1092,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.isvalidalarm(json",{"_index":516,"title":{},"body":{"classes/Alarm.html":{}}}],["this.isvalidiasio(json",{"_index":1492,"title":{},"body":{"classes/Iasio.html":{}}}],["this.loadalarmsconfig",{"_index":942,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.loadimag",{"_index":943,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadweatherstationsconfig",{"_index":2030,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.mapconfig",{"_index":1076,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapdataavailable.next(tru",{"_index":1085,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapplacemark",{"_index":1067,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapservice.getsvgpaths(mapdata['path",{"_index":1084,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapservice.mapdataprocessing(this.placemarksgroup",{"_index":1074,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.markerimageset",{"_index":2048,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.markerimageunreliableset",{"_index":2051,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.maticonregistri",{"_index":1245,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messag",{"_index":299,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":314,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.valu",{"_index":1742,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.missedack",{"_index":332,"title":{},"body":{"components/AckComponent.html":{}}}],["this.missedacks.push(text",{"_index":339,"title":{},"body":{"components/AckComponent.html":{}}}],["this.nam",{"_index":545,"title":{},"body":{"classes/Alarm.html":{}}}],["this.nestednodemap.get(nod",{"_index":872,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":873,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":871,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":878,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.ngonchang",{"_index":820,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.opensnackbar(messag",{"_index":2078,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.operationalmod",{"_index":546,"title":{},"body":{"classes/Alarm.html":{}}}],["this.optionalalarmnam",{"_index":740,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.panelclicked.emit(this.selectedst",{"_index":2082,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.pathsgroup",{"_index":1075,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.pathsgroups.push(mapdata['path",{"_index":1073,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarks[placemark.nam",{"_index":1070,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarks[placemark_id",{"_index":1094,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarksgroups.push(mapdata['placemarks']['pad",{"_index":1071,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarksgroups.push(mapdata['placemarks']['wst",{"_index":1072,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.reload",{"_index":308,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.requeststatu",{"_index":313,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.route.parammap.subscrib",{"_index":304,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.route.snapshot.parammap.get('filt",{"_index":1892,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.router.navigate(['/tabular",{"_index":1661,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antenna",{"_index":1662,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weath",{"_index":1663,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([{outlet",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.routing.gotoantenna",{"_index":1197,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweath",{"_index":2104,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1178,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.selectedalarm",{"_index":2097,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.st",{"_index":2098,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":1000,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm",{"_index":1181,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.antenna",{"_index":1182,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1095,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedst",{"_index":1946,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["this.selectedstation.placemark",{"_index":2080,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.service.antennasconfig",{"_index":1087,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.service.getmapdata().subscribe((mapdata",{"_index":1066,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.service.initi",{"_index":1065,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.shelv",{"_index":542,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.showactionbadg",{"_index":738,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.showspinn",{"_index":315,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenav",{"_index":1770,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.clos",{"_index":1772,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":1771,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggl",{"_index":1773,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavservice.canclos",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.clos",{"_index":311,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.open",{"_index":309,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.s",{"_index":704,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.snackbar.open(messag",{"_index":2083,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.sort",{"_index":1896,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.sort.sort",{"_index":1883,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.spinnerservice.hid",{"_index":325,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":324,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.state_change_timestamp",{"_index":539,"title":{},"body":{"classes/Alarm.html":{}}}],["this.stationconfig.st",{"_index":2099,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.statu",{"_index":543,"title":{},"body":{"classes/Alarm.html":{}}}],["this.svgpath",{"_index":1083,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.tempimageset",{"_index":2041,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.tempimageunreliableset",{"_index":2046,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.timeout",{"_index":1738,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":1740,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.valu",{"_index":1743,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalu",{"_index":1752,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":1750,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].valu",{"_index":1715,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timestamp",{"_index":547,"title":{},"body":{"classes/Alarm.html":{}}}],["this.timezon",{"_index":1881,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.treecontrol",{"_index":814,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":882,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":809,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.unshelv",{"_index":1741,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":819,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.url",{"_index":2113,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.startswith('http",{"_index":2112,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.weathermapnam",{"_index":2031,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weatherservice.getantennas(st",{"_index":2079,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.initi",{"_index":2074,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.weatherservice.weathersummaryconfig",{"_index":2102,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.weatherstationsconfig",{"_index":2036,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weathersummaryconfig",{"_index":2038,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageset",{"_index":2043,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageunreliableset",{"_index":2047,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["thorugh",{"_index":1648,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":1559,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["through",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["time",{"_index":349,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["timeout",{"_index":1690,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["timeout).subscrib",{"_index":1746,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["timeout.viewvalu",{"_index":1754,"title":{},"body":{"components/ShelveComponent.html":{}}}],["timeoutopt",{"_index":1721,"title":{"interfaces/TimeoutOption.html":{}},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timestamp",{"_index":417,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["timezon",{"_index":1817,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["titl",{"_index":1205,"title":{},"body":{"components/AppComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["todo",{"_index":1243,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["togeth",{"_index":2336,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":894,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{}}}],["toggledefault",{"_index":1615,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["togglefilteronlysetalarm",{"_index":1821,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["toggleshelveunshelv",{"_index":1695,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1207,"title":{},"body":{"components/AppComponent.html":{}}}],["togglestatu",{"_index":1872,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["tooltip",{"_index":1680,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["tostringforfilt",{"_index":406,"title":{},"body":{"classes/Alarm.html":{}}}],["transform",{"_index":867,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["transpar",{"_index":623,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":384,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":779,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":780,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":754,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":907,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":908,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":761,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":762,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":760,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":383,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.t",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":824,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":844,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":797,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":799,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":343,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["trigger",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["true",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["ts",{"_index":538,"title":{},"body":{"classes/Alarm.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["typeof",{"_index":863,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unblock",{"_index":248,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["uncombin",{"_index":2361,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":557,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["under",{"_index":2217,"title":{},"body":{"index.html":{},"license.html":{}}}],["unit",{"_index":2249,"title":{},"body":{"index.html":{}}}],["unkn.svg",{"_index":1381,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unknown",{"_index":492,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":964,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unreli",{"_index":495,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unselect",{"_index":1167,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["unselectantenna",{"_index":1132,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselecteddescend",{"_index":888,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unshelv",{"_index":243,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unsubscrib",{"_index":1832,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["unus",{"_index":806,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updat",{"_index":266,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["updateacklist",{"_index":901,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatealarmstoack",{"_index":212,"title":{},"body":{"components/AckComponent.html":{}}}],["updatealarmstoack(ev",{"_index":264,"title":{},"body":{"components/AckComponent.html":{}}}],["updateselectedantenna",{"_index":992,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":995,"title":{},"body":{"components/AntennasComponent.html":{}}}],["url",{"_index":225,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":261,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["user'",{"_index":2351,"title":{},"body":{"license.html":{}}}],["usevalu",{"_index":1302,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":2302,"title":{},"body":{"license.html":{}}}],["v",{"_index":860,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":222,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["valid.svg",{"_index":1513,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["validators.requir",{"_index":301,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validform",{"_index":331,"title":{},"body":{"components/AckComponent.html":{}}}],["validity[this.valid",{"_index":530,"title":{},"body":{"classes/Alarm.html":{}}}],["valu",{"_index":272,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.clear",{"_index":646,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.length",{"_index":337,"title":{},"body":{"components/AckComponent.html":{}}}],["value.set_crit",{"_index":658,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":655,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":649,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":652,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":861,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["value[this.valu",{"_index":532,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tag",{"_index":548,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tags[0",{"_index":550,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tags[1",{"_index":551,"title":{},"body":{"classes/Alarm.html":{}}}],["var",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":1022,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"coverage.html":{}}}],["verbatim",{"_index":2274,"title":{},"body":{"license.html":{}}}],["veri",{"_index":1608,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["verifi",{"_index":1028,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["version",{"_index":2213,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":2250,"title":{},"body":{"index.html":{}}}],["view",{"_index":1138,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":1283,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":1776,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":1777,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.scss",{"_index":1809,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.t",{"_index":1775,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:112",{"_index":1829,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:120",{"_index":1831,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:129",{"_index":1835,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:140",{"_index":1826,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:149",{"_index":1824,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:167",{"_index":1840,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:19",{"_index":1784,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:192",{"_index":1871,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:200",{"_index":1874,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:22",{"_index":1786,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:24",{"_index":1868,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:25",{"_index":1795,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:27",{"_index":1866,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:28",{"_index":1793,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":1794,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":1792,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:35",{"_index":1842,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:38",{"_index":1861,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:40",{"_index":1783,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:43",{"_index":1852,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:46",{"_index":1851,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:49",{"_index":1869,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:50",{"_index":1789,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:52",{"_index":1864,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:55",{"_index":1850,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:57",{"_index":1787,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:58",{"_index":1847,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:64",{"_index":1858,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:74",{"_index":1822,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:91",{"_index":1833,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view/fixtures.t",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["view/statu",{"_index":1674,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1282,"title":{},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["viewbox",{"_index":600,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["viewbox[0",{"_index":1079,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[1",{"_index":1080,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[2",{"_index":1081,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[3]].join",{"_index":1082,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewchild",{"_index":1222,"title":{},"body":{"components/AppComponent.html":{},"components/TabularViewComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1242,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matsort",{"_index":1878,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewchild(matt",{"_index":1877,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewvalu",{"_index":1723,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["visual",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":1577,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["warnbas",{"_index":1616,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["weather",{"_index":171,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'nam",{"_index":175,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":1939,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1938,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1933,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1250,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.compon",{"_index":1965,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.modul",{"_index":1278,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.compon",{"_index":1287,"title":{},"body":{"modules/AppModule.html":{}}}],["weather_",{"_index":2049,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherbackupwsmarkercompon",{"_index":170,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercompon",{"_index":174,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercompon",{"_index":176,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":1937,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcompon",{"_index":178,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermapnam",{"_index":1996,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathermodul",{"_index":1268,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcompon",{"_index":179,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercompon",{"_index":182,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservic",{"_index":1922,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherset",{"_index":2027,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["weathersettings.mapkey",{"_index":2019,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathersidebar",{"_index":1936,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcompon",{"_index":183,"title":{"components/WeatherSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherst",{"_index":2028,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationconfig",{"_index":1927,"title":{"classes/WeatherStationConfig.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["weatherstationsconfig",{"_index":1997,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationsidebarcompon",{"_index":184,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":186,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummaryconfig",{"_index":1998,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["webserv",{"_index":940,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["well",{"_index":1609,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["wether",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatev",{"_index":2319,"title":{},"body":{"license.html":{}}}],["whether",{"_index":879,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["whevenv",{"_index":823,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["wikbuttoncompon",{"_index":1306,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["wiki",{"_index":188,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncompon",{"_index":187,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wind",{"_index":2024,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["wind_",{"_index":2044,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["window",{"_index":2111,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":2114,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["windsimageset",{"_index":1999,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windsimageunreliableset",{"_index":2000,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windspe",{"_index":2029,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["without",{"_index":2308,"title":{},"body":{"license.html":{}}}],["word",{"_index":1159,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":2286,"title":{},"body":{"license.html":{}}}],["worth",{"_index":1642,"title":{},"body":{"modules/OverviewModule.html":{}}}],["write",{"_index":355,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{}}}],["wrong",{"_index":1660,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":173,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":603,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":698,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["y",{"_index":606,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["yellow",{"_index":662,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":2232,"title":{},"body":{"index.html":{}}}],["zero",{"_index":1518,"title":{},"body":{"components/LegendComponent.html":{}}}],["zone.j",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":371,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, router: Router, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system Router to handle navigation\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Router } from '@angular/router';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   * @param {SidenavService} sidenavService Service to manage the Acknowledge and Shelve sidenav\n   * @param {Router} router system Router to handle navigation\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private router: Router,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @return {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  canAcknowledge() {\n    if (this.alarm != null) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose || !this.canAcknowledge();\n  }\n\n  /**\n  * Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', this.alarm.core_id]}}]);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AckComponent.html":{"url":"components/AckComponent.html","title":"component - AckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack/ack.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to perform acknowledgement of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack\n            \n\n            \n                styleUrls\n                ack.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ack.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledgedAlarms\n                            \n                            \n                                alarm\n                            \n                            \n                                alarm_id\n                            \n                            \n                                alarmsToAck\n                            \n                            \n                                form\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                missedAcks\n                            \n                            \n                                requestStatus\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                disableAcknowledgment\n                            \n                            \n                                getMissingAcksInfo\n                            \n                            \n                                getResponseMessageText\n                            \n                            \n                                    Private\n                                hideSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                reload\n                            \n                            \n                                    Private\n                                showSpinner\n                            \n                            \n                                updateAlarmsToAck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, alarmService: AlarmService, route: ActivatedRoute, sidenavService: SidenavService, spinnerService: NgxSpinnerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack/ack.component.ts:60\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to handle the sidenav where the component is opened\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular Router used to navigate through the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Send the acknowledge request through the method provided by the\nAlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableAcknowledgment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableAcknowledgment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:173\n                            \n                        \n\n\n                \n                    \n                            Method to invalidate ack action\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if ack action can be performed and false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcksInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcksInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:182\n                            \n                        \n\n\n                \n                    \n                            Get the number of missed acknowledgements of the alarm and its children\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:206\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:156\n                            \n                        \n\n\n                \n                    \n                            Hides the spinner after the Alarm has been shelved/unshelved\nIt also unblocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, by getting the alarm_id from the url.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reload\n                            \n                            \n                        \n                    \n                \n                \n                    \nreload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Cleans the component and reloads the Alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\nIt also blocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAlarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAlarmsToAck(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:165\n                            \n                        \n\n\n                \n                    \n                            Update the list of alarms to ack from the selection on the child component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                event triggered by the inner {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledgedAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        acknowledgedAlarms:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:47\n                            \n                        \n\n                \n                    \n                        List of alarms that were acknowledged by the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:27\n                            \n                        \n\n                \n                    \n                        Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:22\n                            \n                        \n\n                \n                    \n                        Id of the Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsToAck:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:42\n                            \n                        \n\n                \n                    \n                        List of alarms to ack according to selection from child component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:32\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:37\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            missedAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        missedAcks:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:52\n                            \n                        \n\n                \n                    \n                        List of messages to mention the alarms with missed acknowledgments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestStatus:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:60\n                            \n                        \n\n                \n                    \n                        Stores wether or not the action has been executed requestStatusly\nIf requestStatus = 0, the request has not been sent yet\nIf requestStatus = 1, the request was successfully\nIf requestStatus = -1, the request has failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:75\n                            \n                        \n\n                \n                    \n                        Service to handle the sidenav where the component is opened\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Component used to perform acknowledgement of an Alarm\n*/\n@Component({\n  selector: 'app-ack',\n  templateUrl: './ack.component.html',\n  styleUrls: ['./ack.component.scss']\n})\nexport class AckComponent implements OnInit, OnDestroy {\n\n  /**\n   * Id of the Alarm object to be acknowledge/unacknowledge\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be acknowledge/unacknowledge\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * List of alarms to ack according to selection from child component\n  */\n  alarmsToAck: string[] = [];\n\n  /**\n  * List of alarms that were acknowledged by the request\n  */\n  acknowledgedAlarms: string[] = [];\n\n  /**\n  * List of messages to mention the alarms with missed acknowledgments\n  */\n  public missedAcks: string[] = [];\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Router} router Angular Router used to navigate through the application\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) { }\n\n  /**\n  * Initiates the component, by getting the alarm_id from the url.\n  */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n    this.getMissingAcksInfo();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the acknowledge request through the method provided by the\n   * {@link AlarmService} and handle the response.\n   */\n  acknowledge(): void {\n    this.showSpinner();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        this.alarmsToAck, this.form.get('message').value).subscribe(\n          (response) => {\n            this.acknowledgedAlarms =  response;\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Update the list of alarms to ack from the selection on the child component\n   * @param {Event} event event triggered by the inner {@link AckTree}, containing the IDs fo the alarms to acknowledge\n   */\n  updateAlarmsToAck(event): void {\n    this.alarmsToAck = event;\n  }\n\n  /**\n  * Method to invalidate ack action\n  * @returns {boolean} True if ack action can be performed and false if not\n  */\n  disableAcknowledgment() {\n    const noAlarmsToAck = (this.alarmsToAck.length === 0);\n    const validForm = this.form.valid;\n    return (noAlarmsToAck || !validForm);\n  }\n\n  /**\n  * Get the number of missed acknowledgements of the alarm and its children\n  */\n  getMissingAcksInfo(): void {\n    if (this.alarm) {\n      this.missedAcks = [];\n      this.alarmService.getMissingAcks(this.alarm.core_id).subscribe(\n        (response) => {\n          for (const [key, value] of Object.entries(response)) {\n            const count = value.length;\n            if (count > 0) {\n              let text = key + ' has ' + count + ' missed acknowledgement';\n              if (count > 1) {\n                text += 's';\n              }\n              this.missedAcks.push(text);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      response = 'The following alarms have been acknowledged succesfully:';\n\n    } else if (this.requestStatus === -1) {\n      response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been acknowledged.';\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    }\n    return response;\n  }\n}\n\n    \n\n    \n        \n  \n     ALARM ACKNOWLEDGEMENT \n    \n      &times;\n    \n  \n\n  \n    \n\n      \n        \n          \n            Alarm ID\n            {{alarm?.core_id}}\n          \n          \n            Description\n            {{ alarm?.description }}\n          \n        \n      \n\n       \n      \n        \n           Acknowledgement results \n           {{ getResponseMessageText() }} \n          \n            \n              {{ alarm }}\n            \n          \n        \n      \n\n      \n        \n          Information required to acknowledge the Alarm\n          \n             Action to be taken \n            \n             You must write a message in order to Acknowledge \n          \n        \n\n        \n           Select alarms for acknowledgment \n          \n        \n\n         0\" class=\"section missed-acks\">\n           Missed acknowledgements \n          \n            \n              {{text}}\n            \n          \n        \n      \n    \n  \n\n  \n     \n    \n      Close\n    \n\n    \n      Cancel\n      Acknowledge\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       ALARM ACKNOWLEDGEMENT           ×                                                Alarm ID            {{alarm?.core_id}}                                Description            {{ alarm?.description }}                                                        Acknowledgement results            {{ getResponseMessageText() }}                                     {{ alarm }}                                                            Information required to acknowledge the Alarm                       Action to be taken                          You must write a message in order to Acknowledge                                      Select alarms for acknowledgment                            0\" class=\"section missed-acks\">           Missed acknowledgements                                     {{text}}                                                           Close              Cancel      Acknowledge      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AckButtonComponent\n                            \n                            \n                                AckComponent\n                            \n                            \n                                AckTreeComponent\n                            \n                            \n                                ButtonsComponent\n                            \n                            \n                                ShelveButtonComponent\n                            \n                            \n                                ShelveComponent\n                            \n                            \n                                WikiButtonComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SidenavService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AckButtonComponent\n                            \n                            \n                                    AckComponent\n                            \n                            \n                                    ButtonsComponent\n                            \n                            \n                                    ShelveButtonComponent\n                            \n                            \n                                    ShelveComponent\n                            \n                            \n                                    WikiButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { AlarmComponent } from '../shared/alarm/alarm.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarm.html":{"url":"classes/Alarm.html","title":"class - Alarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Alarm objects\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ack\n                            \n                            \n                                core_id\n                            \n                            \n                                core_timestamp\n                            \n                            \n                                dependencies\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                running_id\n                            \n                            \n                                shelved\n                            \n                            \n                                state_change_timestamp\n                            \n                            \n                                url\n                            \n                            \n                                validity\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getAlarmStatusOrder\n                            \n                            \n                                    Private\n                                _getAlarmStatusTagsString\n                            \n                            \n                                acknowledge\n                            \n                            \n                                    Static\n                                asAlarm\n                            \n                            \n                                    Static\n                                isValidAlarm\n                            \n                            \n                                shelve\n                            \n                            \n                                toStringForFiltering\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/alarm.ts:76\n                            \n                        \n\n                \n                    \n                            Builds a new Alarm instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ack:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:73\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:46\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:58\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm was generated by the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dependencies:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:64\n                            \n                        \n\n                \n                    \n                        List of core_id's of dependent alarms *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:67\n                            \n                        \n\n                \n                    \n                        Short description of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     OperationalMode\n\n                    \n                \n                    \n                        \n                            Type :     OperationalMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:52\n                            \n                        \n\n                \n                    \n                        Operational mode of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        running_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:49\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm and its parents in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:76\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state_change_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state_change_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:61\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm changed the state or the mode \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:70\n                            \n                        \n\n                \n                    \n                        Documentation url of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validity:     Validity\n\n                    \n                \n                    \n                        \n                            Type :     Validity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:55\n                            \n                        \n\n                \n                    \n                        Validity of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     Value\n\n                    \n                \n                    \n                        \n                            Type :     Value\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:43\n                            \n                        \n\n                \n                    \n                        Value that represents the state of the Alarm.\nCan be either 0 (CLEARED) or 1 (SET)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getAlarmStatusOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getAlarmStatusOrder(value: string, priority: string, validity: string, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:270\n                            \n                        \n\n\n                \n                    \n                            Returns a string with a number that defines the place where the Alarm should be displayed on the Table according to the\nsorting by \"Status\" column\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the value of the {\n\n                                                        \n                                                \n                                                \n                                                        priority\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the priority of the {\n\n                                                        \n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the validity of the {\n\n                                                        \n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ack status of the {\n\n                                                        \n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    order for the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getAlarmStatusTagsString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getAlarmStatusTagsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:226\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    tags of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:187\n                            \n                        \n\n\n                \n                    \n                            Acknowledges the Alarm and returns the acknowledge status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the acknowledgement status\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:115\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:92\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Alarm object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:197\n                            \n                        \n\n\n                \n                    \n                            Shelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving message\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toStringForFiltering\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoStringForFiltering()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:215\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the Alarm for filtering purposes\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    info of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:206\n                            \n                        \n\n\n                \n                    \n                            Unshelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving status\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarmValidity\n                    \n                \n\n                \n                    \n                        getalarmValidity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:139\n                                \n                            \n                    \n                        \n                                Returns a string representation of the validity of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        alarmValue\n                    \n                \n\n                \n                    \n                        getalarmValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:148\n                                \n                            \n                    \n                        \n                                Returns a string representation of the value of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:154\n                                \n                            \n                    \n                        \n                                Returns the core_id of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        operationalMode\n                    \n                \n\n                \n                    \n                        getoperationalMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:159\n                                \n                            \n                    \n                        \n                                Returns the operational mode of the Alarm as a string\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n\n                \n                    \n                        getstatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:168\n                                \n                            \n                    \n                        \n                                Getter that returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent. Calls {@link _getAlarmStatusTagsString()}\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timestamp\n                    \n                \n\n                \n                    \n                        gettimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:176\n                                \n                            \n                    \n                        \n                                Returns a Date representation of the {@link Alarm.state_change_timestamp} attribute\n\n\n                                \n                                \n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export enum OperationalMode {\n  startup = 0,\n  initialization = 1,\n  closing = 2,\n  shuttedown = 3,\n  maintenance = 4,\n  operational = 5,\n  degraded = 6,\n  unknown = 7,\n}\n\n/**\n* List of the possible Validity values\n*/\nexport enum Validity {\n  unreliable = 0,\n  reliable = 1\n}\n\n/**\n* List of the possible Values of an Alarm\n*/\nexport enum Value {\n  cleared = 0,\n  set_low = 1,\n  set_medium = 2,\n  set_high = 3,\n  set_critical = 4,\n}\n\n/**\n* Class to define Alarm objects\n*/\nexport class Alarm {\n\n  /**\n  * Value that represents the state of the {@link Alarm}.\n  * Can be either 0 (CLEARED) or 1 (SET)\n  */\n  value: Value;\n\n  /** Id used to identify the {@link Alarm} in the IAS Core */\n  core_id: string;\n\n  /** Id used to identify the {@link Alarm} and its parents in the IAS Core */\n  running_id: string;\n\n  /** Operational mode of the {@link Alarm} */\n  mode: OperationalMode;\n\n  /** Validity of the {@link Alarm} */\n  validity: Validity;\n\n  /** Timestamp at which the {@link Alarm} was generated by the IAS Core */\n  core_timestamp: number;\n\n  /** Timestamp at which the {@link Alarm} changed the state or the mode */\n  state_change_timestamp: number;\n\n  /** List of core_id's of dependent alarms **/\n  dependencies: string[];\n\n  /** Short description of the {@link Alarm} */\n  description: string;\n\n  /** Documentation url of the {@link Alarm} */\n  url: string;\n\n  /** Acknowledgement status */\n  ack: boolean;\n\n  /** Acknowledgement status */\n  shelved: boolean;\n\n  /**\n  * Builds a new Alarm instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Alarm object\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Alarm}, false if not\n  */\n  static isValidAlarm(json: any): boolean {\n    return (\n      json.hasOwnProperty('value') &&\n      json.hasOwnProperty('core_id') &&\n      json.hasOwnProperty('running_id') &&\n      json.hasOwnProperty('mode') &&\n      json.hasOwnProperty('core_timestamp') &&\n      json.hasOwnProperty('state_change_timestamp') &&\n      json.hasOwnProperty('validity') &&\n      json.hasOwnProperty('description') &&\n      json.hasOwnProperty('url') &&\n      json.hasOwnProperty('ack') &&\n      json.hasOwnProperty('shelved') &&\n      json.hasOwnProperty('dependencies')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Alarm}\n  * @param {any} json the object to convert to an Alarm\n  * @param {number} pk the primary key of the Alarm in the database\n  * @returns {Alarm} the object as an {@link Alarm} instance\n  */\n  static asAlarm(json: any): Alarm {\n    if (!this.isValidAlarm(json)) {\n      return null;\n    }\n    const value = json['value'];\n    const core_id = json['core_id'];\n    const running_id = json['running_id'];\n    const mode = json['mode'];\n    const core_timestamp = json['core_timestamp'];\n    const state_change_timestamp = json['state_change_timestamp'];\n    const validity = json['validity'];\n    const description = json['description'];\n    const url = json['url'];\n    const ack = json['ack'];\n    const shelved = json['shelved'];\n    const dependencies = json['dependencies'];\n    return new Alarm({ value, core_id, running_id, mode, core_timestamp,\n      state_change_timestamp, validity, description, url, ack, shelved, dependencies });\n  }\n\n  /**\n  * Returns a string representation of the validity of the Alarm\n  * @returns {string} a string representation of the {@link Alarm.mode} attribute\n  */\n  get alarmValidity(): string {\n    return Validity[this.validity];\n  }\n\n  /**\n  * Returns a string representation of the value of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.value} attribute\n  */\n  get alarmValue(): string {\n    return Value[this.value];\n  }\n\n  /**\n  * Returns the core_id of the {@link Alarm}*/\n  get name(): string {\n    return this.core_id;\n  }\n\n  /** Returns the operational mode of the {@link Alarm} as a string*/\n  get operationalMode(): string {\n    return OperationalMode[this.mode];\n  }\n\n  /**\n  * Getter that returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}. Calls {@link _getAlarmStatusTagsString()}\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  get status(): string {\n    return this._getAlarmStatusTagsString();\n  }\n\n  /**\n  * Returns a Date representation of the {@link Alarm.state_change_timestamp} attribute\n  * @returns {Date} a date format representation of the Alarm state_change_timestamp\n  */\n  get timestamp(): Date {\n    const ts = this.state_change_timestamp;\n    const date: Date = new Date(ts);\n    return date;\n  }\n\n  /**\n  * Acknowledges the {@link Alarm} and returns the acknowledge status\n  * @param {message} string string message of the acknowledgement\n  * @returns {boolean} a the acknowledgement status\n  */\n  acknowledge(): boolean {\n    this.ack = true;\n    return this.ack;\n  }\n\n  /**\n  * Shelves the {@link Alarm} and returns the shelve status\n  * @param {message} string string message of the shelving\n  * @returns {boolean} a the shelving message\n  */\n  shelve(): boolean {\n    this.shelved = true;\n    return this.shelved;\n  }\n\n  /**\n  * Unshelves the {@link Alarm} and returns the shelve status\n  * @returns {boolean} a the shelving status\n  */\n  unshelve(): boolean {\n    this.shelved = false;\n    return this.shelved;\n  }\n\n  /**\n  * Returns a string representation of the {@link Alarm} for filtering purposes\n  * @returns {string} info of the {@link Alarm} for filtering purposes, joined by \" \"\n  */\n  toStringForFiltering(): string {\n    return [\n      this.status, this.description, this.name, this.operationalMode, this.timestamp\n    ].join(' ');\n  }\n\n  /**\n  * Returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  private _getAlarmStatusTagsString(): string {\n    const shelved = this.shelved;\n    const value_tags = this.alarmValue.split('_');\n    let value = value_tags[0];\n    let priority = value_tags[1];\n    let validity = this.alarmValidity;\n    let ack = this.ack;\n\n    if (shelved) {\n      value = 'cleared';\n      priority = '';\n      validity = 'reliable';\n      ack = true;\n    }\n\n    const order = this._getAlarmStatusOrder(value, priority, validity, ack, shelved);\n\n    const tags = [];\n    tags.push(order);\n    tags.push(this.operationalMode);\n    tags.push(value);\n    if (priority !== undefined) {\n      tags.push(priority);\n    }\n    tags.push(validity);\n    if (this.ack) {\n      tags.push('ack');\n    }\n    if (this.shelved) {\n      tags.push('shelved');\n    }\n    return tags.join('-');\n  }\n\n  /**\n  * Returns a string with a number that defines the place where the {@link Alarm} should be displayed on the Table according to the\n  * sorting by \"Status\" column\n  *\n  * @param {string} value string representation of the value of the {@link Alarm}\n  * @param {string} priority string representation of the priority of the {@link Alarm}\n  * @param {string} validity string representation of the validity of the {@link Alarm}\n  * @param {boolean} ack the ack status of the {@link Alarm}\n  * @returns {string} order for the {@link Alarm} in the Table\n  */\n  private _getAlarmStatusOrder(\n    value: string, priority: string, validity: string, ack: boolean, shelved: boolean): string {\n    let order = 0;\n    const priorities = ['critical', 'high', 'medium', 'low'];\n\n    // SET:\n    if (value === 'set') {\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = priorities.indexOf(priority);\n        } else {\n          order = 4 + priorities.indexOf(priority);\n        }\n      } else {\n        if (ack === false) {\n          order = 8 + priorities.indexOf(priority);\n        } else {\n          order = 12 + priorities.indexOf(priority);\n        }\n      }\n    } else {\n    // CLEARED:\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = 16;\n        } else {\n          order = 17;\n        }\n      } else {\n        if (ack === false) {\n          order = 18;\n        } else {\n          order = 19;\n        }\n      }\n    }\n    if (order \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmColorsSet.html":{"url":"classes/AlarmColorsSet.html","title":"class - AlarmColorsSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmColorsSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n        \n\n            \n                Description\n            \n            \n                Set of colors to display the antenna based on its alarm status\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                            Builds an instance of the color set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                JSON containing the colors as a dictionary\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:12\n                            \n                        \n\n                \n                    \n                        Color to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:30\n                            \n                        \n\n                \n                    \n                        Color to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:15\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:18\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Color to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:27\n                            \n                        \n\n                \n                    \n                        Color to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Set of colors to display the antenna based on its alarm status\n */\nexport class AlarmColorsSet {\n\n  /** Color to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** Color to use for the \"set-low\" Alarm value  */\n  public set_low: string;\n\n  /** Color to use for the \"set-medium\" Alarm value  */\n  public set_medium: string;\n\n  /** Color to use for the \"set-high\" Alarm value  */\n  public set_high: string;\n\n  /** Color to use for the \"set-critical\" Alarm value  */\n  public set_critical: string;\n\n  /** Color to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** Color to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** Color to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n   * Builds an instance of the color set\n   * @param {Object} attributes JSON containing the colors as a dictionary\n   */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /** Set of colors to display antennas fill in reliable state */\n  fillColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas fill in unreliable state */\n  fillColorsUnreliable: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in reliable state */\n  borderColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in unreliable state */\n  borderColorsUnreliable: AlarmColorsSet;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   * Defines alarms colors by calling the {@link defineAlarmColors}\n   */\n  ngOnInit() {\n    this.defineAlarmColors();\n  }\n\n  /**\n   * Generates a JSON with the colors to be used\n   * @param {string} fillColor the color to be used for fill\n   * @param {string} borderColor the color to be used for border\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  genColorStyle(fillColor, borderColor) {\n    return {\n      'fillColor': fillColor,\n      'borderColor': borderColor\n    };\n  }\n\n  /**\n   * Returns the colors to be used\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  getColors() {\n\n    let fillColor = 'transparent';\n    let borderColor = 'transparent';\n\n    if (!this.alarm) {\n      fillColor = this.fillColorsUnreliable.unknown;\n      borderColor = this.borderColorsUnreliable.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n    let fillColorsToUse = this.fillColors;\n    let borderColorsToUse = this.borderColors;\n    if (this.alarm.validity === 0) {\n      fillColorsToUse = this.fillColorsUnreliable;\n      borderColorsToUse = this.borderColorsUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      fillColor = fillColorsToUse.shelved;\n      borderColor = borderColorsToUse.shelved;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      fillColor = fillColorsToUse.maintenance;\n      borderColor = borderColorsToUse.maintenance;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.cleared) {\n      fillColor = fillColorsToUse.clear;\n      borderColor = borderColorsToUse.clear;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_low) {\n      fillColor = fillColorsToUse.set_low;\n      borderColor = borderColorsToUse.set_low;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_medium) {\n      fillColor = fillColorsToUse.set_medium;\n      borderColor = borderColorsToUse.set_medium;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_high) {\n      fillColor = fillColorsToUse.set_high;\n      borderColor = borderColorsToUse.set_high;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_critical) {\n      fillColor = fillColorsToUse.set_critical;\n      borderColor = borderColorsToUse.set_critical;\n      return this.genColorStyle(fillColor, borderColor);\n    } else {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n  }\n\n  /**\n   * Defines colors to be used to display the antennas\n   */\n  defineAlarmColors() {\n\n    this.fillColors = new AlarmColorsSet({\n      clear: 'green',\n      set_low: 'yellow',\n      set_medium: 'yellow',\n      set_high: 'red',\n      set_critical: 'red',\n      unknown: 'lightblue',\n      maintenance: 'gray',\n      shelved: 'DarkCyan'\n    });\n\n    this.fillColorsUnreliable = new AlarmColorsSet({\n      clear: 'transparent',\n      set_low: 'transparent',\n      set_medium: 'transparent',\n      set_high: 'transparent',\n      set_critical: 'transparent',\n      unknown: 'transparent',\n      maintenance: 'transparent',\n      shelved: 'transparent',\n    });\n\n    this.borderColors = this.fillColors;\n    this.borderColorsUnreliable = this.fillColors;\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:79\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n\n                        \n                            Default value: 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:77\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n    \n        \n  \n    \n  \n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as headers in a table or list\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value: 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input {@link optionalAlarmName} is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as headers in a table or list\n */\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName;\n    if (this.alarm) {\n      if (this.optionalAlarmName) {\n        alarmName = this.optionalAlarmName;\n      } else {\n        alarmName = this.alarm.core_id;\n      }\n      if (alarmName.length > this.alarmNameMaxSize) {\n        return alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n      } else {\n        return alarmName;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    {{this.getAlarmName()}}\n\n\n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{this.getAlarmName()}}                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AntennaConfig.html":{"url":"classes/AntennaConfig.html","title":"class - AntennaConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AntennaConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the antennas and location related to an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                            \n                                    Public\n                                antenna\n                            \n                            \n                                    Public\n                                placemark\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antenna:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:15\n                            \n                        \n\n                \n                    \n                        ID of the Antenna associated with the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** Dictionary of Alarm configuration indexed by antennas group ID **/\n  public antennasConfig: {[group: string]: AntennaConfig [] } = {};\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasConfig[key] = response[key] as AntennaConfig[];\n        }\n      }\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                borderColors\n                            \n                            \n                                borderColorsUnreliable\n                            \n                            \n                                fillColors\n                            \n                            \n                                fillColorsUnreliable\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmColors\n                            \n                            \n                                genColorStyle\n                            \n                            \n                                getColors\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:82\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        The Alarm to associate to the antenna \n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                    \n                        The position of the antenna in the X axis \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                    \n                        The position of the antenna in the Y axis \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value: {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                    \n                        Radius of the antenna \n\n                        \n                            Default value: 1\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value: '0 0 10 10'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmColors\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmColors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            Defines colors to be used to display the antennas\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genColorStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenColorStyle(fillColor: , borderColor: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Generates a JSON with the colors to be used\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fillColor\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the color to be used for fill\n\n                                                        \n                                                \n                                                \n                                                        borderColor\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the color to be used for border\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'fillColor': any; 'borderColor': any; }\n\n                            \n                                \n                                    a JSON containing the fillColor and the borderColor\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColors\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Returns the colors to be used\n\n\n                            \n                            \n                            \n                                Returns :     { 'fillColor': any; 'borderColor': any; }\n\n                            \n                                \n                                    a JSON containing the fillColor and the borderColor\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\nDefines alarms colors by calling the {@link defineAlarmColors}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:91\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borderColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        borderColors:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:79\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas border in reliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borderColorsUnreliable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        borderColorsUnreliable:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:82\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas border in unreliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillColors:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:73\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas fill in reliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillColorsUnreliable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillColorsUnreliable:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:76\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas fill in unreliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:90\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Set of colors to display the antenna based on its alarm status\n */\nexport class AlarmColorsSet {\n\n  /** Color to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** Color to use for the \"set-low\" Alarm value  */\n  public set_low: string;\n\n  /** Color to use for the \"set-medium\" Alarm value  */\n  public set_medium: string;\n\n  /** Color to use for the \"set-high\" Alarm value  */\n  public set_high: string;\n\n  /** Color to use for the \"set-critical\" Alarm value  */\n  public set_critical: string;\n\n  /** Color to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** Color to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** Color to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n   * Builds an instance of the color set\n   * @param {Object} attributes JSON containing the colors as a dictionary\n   */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /** Set of colors to display antennas fill in reliable state */\n  fillColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas fill in unreliable state */\n  fillColorsUnreliable: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in reliable state */\n  borderColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in unreliable state */\n  borderColorsUnreliable: AlarmColorsSet;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   * Defines alarms colors by calling the {@link defineAlarmColors}\n   */\n  ngOnInit() {\n    this.defineAlarmColors();\n  }\n\n  /**\n   * Generates a JSON with the colors to be used\n   * @param {string} fillColor the color to be used for fill\n   * @param {string} borderColor the color to be used for border\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  genColorStyle(fillColor, borderColor) {\n    return {\n      'fillColor': fillColor,\n      'borderColor': borderColor\n    };\n  }\n\n  /**\n   * Returns the colors to be used\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  getColors() {\n\n    let fillColor = 'transparent';\n    let borderColor = 'transparent';\n\n    if (!this.alarm) {\n      fillColor = this.fillColorsUnreliable.unknown;\n      borderColor = this.borderColorsUnreliable.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n    let fillColorsToUse = this.fillColors;\n    let borderColorsToUse = this.borderColors;\n    if (this.alarm.validity === 0) {\n      fillColorsToUse = this.fillColorsUnreliable;\n      borderColorsToUse = this.borderColorsUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      fillColor = fillColorsToUse.shelved;\n      borderColor = borderColorsToUse.shelved;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      fillColor = fillColorsToUse.maintenance;\n      borderColor = borderColorsToUse.maintenance;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.cleared) {\n      fillColor = fillColorsToUse.clear;\n      borderColor = borderColorsToUse.clear;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_low) {\n      fillColor = fillColorsToUse.set_low;\n      borderColor = borderColorsToUse.set_low;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_medium) {\n      fillColor = fillColorsToUse.set_medium;\n      borderColor = borderColorsToUse.set_medium;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_high) {\n      fillColor = fillColorsToUse.set_high;\n      borderColor = borderColorsToUse.set_high;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_critical) {\n      fillColor = fillColorsToUse.set_critical;\n      borderColor = borderColorsToUse.set_critical;\n      return this.genColorStyle(fillColor, borderColor);\n    } else {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n  }\n\n  /**\n   * Defines colors to be used to display the antennas\n   */\n  defineAlarmColors() {\n\n    this.fillColors = new AlarmColorsSet({\n      clear: 'green',\n      set_low: 'yellow',\n      set_medium: 'yellow',\n      set_high: 'red',\n      set_critical: 'red',\n      unknown: 'lightblue',\n      maintenance: 'gray',\n      shelved: 'DarkCyan'\n    });\n\n    this.fillColorsUnreliable = new AlarmColorsSet({\n      clear: 'transparent',\n      set_low: 'transparent',\n      set_medium: 'transparent',\n      set_high: 'transparent',\n      set_critical: 'transparent',\n      unknown: 'transparent',\n      maintenance: 'transparent',\n      shelved: 'transparent',\n    });\n\n    this.borderColors = this.fillColors;\n    this.borderColorsUnreliable = this.fillColors;\n\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\nand a map (instantiated by a {@link AntennasMap})\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAntenna:     AntennaConfig\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AntennaConfig } from '../antennas.service';\n\n/**\n* Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\n* and a map (instantiated by a {@link AntennasMap})\n*/\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna: AntennaConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AntennaConfig}\n   */\n  updateSelectedAntenna(selectedAntenna: AntennaConfig): void {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasMapComponent.html":{"url":"components/AntennasMapComponent.html","title":"component - AntennasMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map/antennas-map.component.ts\n\n\n    \n        Description\n    \n    \n        Main component for the antennas map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-map\n            \n\n            \n                styleUrls\n                antennas-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmsConfig\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                mapdataAvailable\n                            \n                            \n                                    Public\n                                mapPlacemarks\n                            \n                            \n                                    Public\n                                mapService\n                            \n                            \n                                    Public\n                                pathsGroups\n                            \n                            \n                                    Public\n                                placemarks\n                            \n                            \n                                    Public\n                                placemarksGroups\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                svgPaths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                existsPlacemarkData\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaGroups\n                            \n                            \n                                getOpacityClass\n                            \n                            \n                                getPlacemarkObject\n                            \n                            \n                                initialize\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickedAntennaMarker\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService, mapService: MapService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map/antennas-map.component.ts:48\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to build the interactive map\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Variable to manage a placemark selection\nfrom the map, or from an external component \n\n                            \n                            Type:    AntennaConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickedAntennaMarker\n                    \n                    \n                        Variable to manage a placemark selection from the map \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            existsPlacemarkData\n                            \n                            \n                        \n                    \n                \n                \n                    \nexistsPlacemarkData(placemark: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Method to verify if there is data available for the placemark id\nfrom the alarm configuration\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemark\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Id of a graphical element in the map source\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if there is configuration available, false if there is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Get alarm from the alarms service using id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                id of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    Alarm object retrieved from the service\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Get antenna groups from the alarms configuration\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    List with the names of the antennas groups\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOpacityClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOpacityClass(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Opacity class name for each antenna marker\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    class name that defines the opacity of the graphical element\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlacemarkObject\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlacemarkObject(placemark: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Get a placemark graphical object from an id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemark\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Id of a graphical element in the map source\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    placemark graphical element\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Component initialization that involves the initialization of the AntennasService\nif not already initialized and the initialization of the related map data source\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Check if an specific antenna marker was selected through its related\nalarm configuration\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the antenna alarm is selected, false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated and initializes it\ncalling the {@link initialize} method\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:176\n                            \n                        \n\n\n                \n                    \n                            On click action for the antenna markers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:45\n                            \n                        \n\n                \n                    \n                        Alarms Configuration  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:59\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:42\n                            \n                        \n\n                \n                    \n                        Map Configuration  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapdataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapdataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:48\n                            \n                        \n\n                \n                    \n                        Variable to check if the data from the webserver is available  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapPlacemarks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapPlacemarks:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:26\n                            \n                        \n\n                \n                    \n                        Placemarks list obtained from the webserver \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapService:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:60\n                            \n                        \n\n                \n                    \n                        Service used to build the interactive map\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pathsGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathsGroups:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:36\n                            \n                        \n\n                \n                    \n                        Coordinates related with paths, listed by group \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemarks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemarks:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:30\n                            \n                        \n\n                \n                    \n                        Placemarks objects indexed by name to provide the name and coordinates\nof each identified place \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemarksGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemarksGroups:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:33\n                            \n                        \n\n                \n                    \n                        Placemarks listed by group \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:58\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            svgPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        svgPaths:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:39\n                            \n                        \n\n                \n                    \n                        SVG defitions for the related paths, listed by group \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { MapService } from '../../map/map.service';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\n\n/**\n* Main component for the antennas map\n*/\n@Component({\n  selector: 'app-antennas-map',\n  templateUrl: './antennas-map.component.html',\n  styleUrls: ['./antennas-map.component.scss']\n})\nexport class AntennasMapComponent implements OnInit {\n\n  /** Variable to manage a placemark selection\n   * from the map, or from an external component */\n  @Input() selectedAntenna: AntennaConfig = null;\n\n  /** Variable to manage a placemark selection from the map */\n  @Output() clickedAntennaMarker = new EventEmitter();\n\n  /** Placemarks list obtained from the webserver */\n  public mapPlacemarks = {};\n\n  /** Placemarks objects indexed by name to provide the name and coordinates\n  * of each identified place */\n  public placemarks = {};\n\n  /** Placemarks listed by group */\n  public placemarksGroups = [];\n\n  /** Coordinates related with paths, listed by group */\n  public pathsGroups = [];\n\n  /** SVG defitions for the related paths, listed by group */\n  public svgPaths = [];\n\n  /** Map Configuration  */\n  public mapConfig = {};\n\n  /** Alarms Configuration  */\n  public alarmsConfig = {};\n\n   /** Variable to check if the data from the webserver is available  */\n  public mapdataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to get the configuration needed by the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {MapService} mapService Service used to build the interactive map\n   *\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n    public mapService: MapService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated and initializes it\n   * calling the {@link initialize} method\n   */\n  ngOnInit() {\n    this.initialize();\n  }\n\n  /**\n   * Component initialization that involves the initialization of the {@link AntennasService}\n   * if not already initialized and the initialization of the related map data source\n   */\n  initialize() {\n    this.service.initialize();\n    this.service.getMapData().subscribe((mapdata) => {\n      this.mapPlacemarks = mapdata['placemarks'];\n      for (const placemark of mapdata['placemarks']['pads']) {\n        this.placemarks[placemark.name] = placemark;\n      }\n      this.placemarksGroups.push(mapdata['placemarks']['pads']);\n      this.placemarksGroups.push(mapdata['placemarks']['wstations']);\n      this.pathsGroups.push(mapdata['paths']);\n      const viewbox = this.mapService.mapdataProcessing(this.placemarksGroups, this.pathsGroups);\n      this.mapConfig = {\n        'fullHeight': true,\n        'viewbox':\n          [-100 + viewbox[0], viewbox[1], viewbox[2], viewbox[3]].join(' ')\n      };\n      this.svgPaths = this.mapService.getSVGPaths(mapdata['paths']);\n      this.mapdataAvailable.next(true);\n    });\n    this.alarmsConfig = this.service.antennasConfig;\n  }\n\n  /**\n   * Method to verify if there is data available for the placemark id\n   * from the alarm configuration\n   * @param {string} placemark Id of a graphical element in the map source\n   * @return {boolean} True if there is configuration available, false if there is not\n   */\n  existsPlacemarkData(placemark: string): boolean {\n    const placemark_id = placemark;\n    const index = Object.keys(this.placemarks).indexOf(placemark_id);\n    if (index > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Get alarm from the alarms service using id\n   * @param {string} alarm_id id of the alarm\n   * @return {Alarm} Alarm object retrieved from the service\n   */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Get antenna groups from the alarms configuration\n   * @return {string[]} List with the names of the antennas groups\n   */\n  getAntennaGroups(): string[] {\n    return Object.keys(this.alarmsConfig);\n  }\n\n  /**\n   * Opacity class name for each antenna marker\n   * @param {AntennaConfig} antennaConfig configuration of the alarm\n   * @return class name that defines the opacity of the graphical element\n   */\n  getOpacityClass(antennaConfig: AntennaConfig): string {\n    if (this.selectedAntenna === null) {\n      return 'opacity-100';\n    } else {\n      if ( this.isSelected(antennaConfig) === true ) {\n        return 'opacity-100';\n      } else {\n        return 'opacity-25';\n      }\n    }\n  }\n\n /**\n  * Get a placemark graphical object from an id\n  * @param {string} placemark Id of a graphical element in the map source\n  * @return {any} placemark graphical element\n  */\n  getPlacemarkObject(placemark: string): any {\n    const placemark_id = placemark;\n    return this.placemarks[placemark_id];\n  }\n\n  /**\n   * Check if an specific antenna marker was selected through its related\n   * alarm configuration\n   * @param {AntennaConfig} antennaConfig configuration of the alarm\n   * @return {boolean} True if the antenna alarm is selected, false if it is not\n   */\n  isSelected(antennaConfig: AntennaConfig): boolean {\n    if (this.selectedAntenna === null) {\n      return false;\n    } else {\n      return this.selectedAntenna.placemark === antennaConfig.placemark;\n    }\n\n  }\n\n  /**\n   * On click action for the antenna markers\n   * @param {AntennaConfig} antennaConfig configuration of the alarm\n   */\n  onClick(antennaConfig: AntennaConfig) {\n    if (this.isSelected(antennaConfig)) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = antennaConfig;\n    }\n    this.clickedAntennaMarker.emit(this.selectedAntenna);\n  }\n\n}\n\n    \n\n    \n        \n\n   \n\n     \n\n     \n\n     \n       \n         \n\n           \n\n             \n               \n                \n                \n              \n            \n\n          \n\n         \n\n       \n     \n\n\n\n   \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n  Modules\n  AntennasModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AntennaMarkerComponent\n                            \n                            \n                                AntennasComponent\n                            \n                            \n                                AntennasMapComponent\n                            \n                            \n                                AntennasSidebarComponent\n                            \n                            \n                                AntennasSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AntennasService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AntennasSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the AntennasModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:49\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the {@link initialize} method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:49\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:43\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:46\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasConfig:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:34\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm configuration indexed by antennas group ID *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:37\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasSummaryConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:40\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** Dictionary of Alarm configuration indexed by antennas group ID **/\n  public antennasConfig: {[group: string]: AntennaConfig [] } = {};\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasConfig[key] = response[key] as AntennaConfig[];\n        }\n      }\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Display used to show the list of antennas' alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaName\n                            \n                            \n                                getAntennasByGroup\n                            \n                            \n                                getAntennasGroups\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to other views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Selected antenna object, null if it is nothing selected \n\n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                    \n                        Event emitted to notify when an antenna is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaName(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the Antenna configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the antenna name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennasByGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennasByGroup(groupID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration by group\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AntennaConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennasGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennasGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas groups Ids defined in the configuration\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    List of groups IDS\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked antenna\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { RoutingService } from '../../data/routing.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Display used to show the list of antennas' alarms\n */\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit {\n\n  /** Selected antenna object, null if it is nothing selected */\n  @Input() selectedAntenna = null;\n\n  /** Event emitted to notify when an antenna is selected */\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {RoutingService} routing Service used to redirect to other views\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n   * @param {MapAntennaConfig} antennaConfig the Antenna configuration\n   * @returns {string} the antenna name to display\n   */\n  getAntennaName(antennaConfig: AntennaConfig ): string {\n    return  antennaConfig.antenna + ' (' + antennaConfig.placemark + ')';\n  }\n\n  /**\n  * Return the list of antennas groups Ids defined in the configuration\n  * @returns {list} List of groups IDS\n  */\n  getAntennasGroups(): string [] {\n    return Object.keys(this.antennasService.antennasConfig);\n  }\n\n  /**\n  * Return the list of Alarm configuration by group\n  * @returns {list} list of {@link AntennaConfig}\n  */\n  getAntennasByGroup(groupID: string): AntennaConfig [] {\n    return this.antennasService.antennasConfig[groupID];\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AntennaConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AntennaConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  * @param {AntennaConfig} alarmConfig configuration of the clicked antenna\n  */\n  onClick(alarmConfig: AntennaConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n     chevron_left  {{getAntennaName(this.selectedAntenna)}}  \n\n\n\n\n  \n     {{group}} \n    \n      \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Alarm ID\n        {{this.selectedAntenna.alarm}}\n      \n      \n        Antenna\n        {{this.selectedAntenna.antenna}}\n      \n      \n        Location (PAD)\n        {{this.selectedAntenna.placemark}}\n      \n    \n  \n  \n    Go to Table\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS      chevron_left  {{getAntennaName(this.selectedAntenna)}}         {{group}}                                                   Alarm ID        {{this.selectedAntenna.alarm}}                    Antenna        {{this.selectedAntenna.antenna}}                    Location (PAD)        {{this.selectedAntenna.placemark}}                  Go to Table  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get Antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to get Antennas configuration\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:43\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {AntennasService} antennasService Service used to get Antennas configuration\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.antennasService.antennasSummaryConfig);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              STATUS\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    STATUS                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                            Instantiates the related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { outlets: { primary: any; actions: any; }; } | { outlets: { primary: any; actions?: undefined; }...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Instantiates the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNavigationCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navigationSidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Overview', link: 'overview', icon: 'ias_overview', svgIcon: true},\n    { title: 'Weather', link: 'weather', icon: 'ias_weather', svgIcon: true},\n    { title: 'Antennas', link: 'antennas', icon: 'ias_antenna', svgIcon: true},\n    { title: 'Table', link: 'tabular', icon: 'ias_table', svgIcon: true}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /*\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  // TODO: Use only custom svgIcons\n  navigationSidenavItems = [\n    { title: 'Overview', link: 'overview', icon: 'ias_overview', svgIcon: true},\n    { title: 'Weather', link: 'weather', icon: 'ias_weather', svgIcon: true},\n    { title: 'Antennas', link: 'antennas', icon: 'ias_antenna', svgIcon: true},\n    { title: 'Table', link: 'tabular', icon: 'ias_table', svgIcon: true}\n  ];\n\n  /**\n   * Instantiates the related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Instantiates the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n  }\n\n  getActionsLink(item: any) {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n  \n\n  \n    \n      \n        \n          \n            \n              {{ item.icon }}\n            \n            \n              {{ item.icon }}\n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                                                               {{ item.icon }}                                      {{ item.icon }}                        {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppModule -->\n\nMaterialSandboxComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                MaterialSandboxComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    OverviewModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TabularModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_BASE_HREF } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { HealthModule } from './health/health.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { MapModule } from './map/map.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppComponent } from './app.component';\nimport { TabularViewComponent } from './tabular/tabular-view/tabular-view.component';\nimport { OverviewComponent } from './overview/overview/overview.component';\nimport { AckComponent } from './actions/ack/ack.component';\nimport { ShelveComponent } from './actions/shelve/shelve.component';\nimport { WeatherComponent } from './weather/weather/weather.component';\nimport { AlarmComponent } from './shared/alarm/alarm.component';\nimport { AntennasComponent } from './antennas/antennas/antennas.component';\n\nimport { HttpModule } from '@angular/http';\nimport { MaterialSandboxComponent } from './material-sandbox/material-sandbox.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'overview', component: OverviewComponent },\n  { path: 'tabular', component: TabularViewComponent },\n  { path: 'tabular/:filter', component: TabularViewComponent },\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions'},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions'},\n  { path: 'weather', component: WeatherComponent},\n  { path: 'sandbox', component: MaterialSandboxComponent},\n  { path: 'antennas', component: AntennasComponent},\n];\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent,\n    MaterialSandboxComponent,\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    HttpModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Set of buttons used to trigger actions over AlarmService\nContains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the buttons\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Set of buttons used to trigger actions over AlarmService\n * Contains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n */\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfigurationData\n                            \n                            \n                                getRefreshRateParameters\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRefreshRateParameters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRefreshRateParameters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Get refresh rate parameters from IAS configuration data\nThese are refresh rate value and related multiplier factor\n\n\n                            \n                            \n                            \n                                Returns :     { 'refreshRate': any; 'broadcastFactor': any; }\n\n                            \n                                \n                                    contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:23\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:18\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {forkJoin as observableForkJoin,  BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Rx';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { Iasio } from '../data/iasio';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      const iasConfigurationData = res[0];\n      this.iasConfiguration = iasConfigurationData;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh rate parameters from IAS configuration data\n  * These are refresh rate value and related multiplier factor\n  * @returns {json} contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n  */\n  getRefreshRateParameters() {\n    return {\n      'refreshRate': this.iasConfiguration['refresh_rate'],\n      'broadcastFactor': this.iasConfiguration['broadcast_factor']\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the services and data models\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AlarmService\n                            \n                            \n                                     CdbService\n                            \n                            \n                                     HttpClientService\n                            \n                            \n                                     RoutingService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { RoutingService } from './routing.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    RoutingService,\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n  Modules\n  HealthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the components associated to the health of the IAS\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HealthSummaryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HealthSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:19\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:48\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.alarmId);\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n    this.alarmId = 'IAS-Health-Global';\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-valid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-valid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-valid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-invalid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-invalid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              IAS HEALTH\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    IAS HEALTH                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:13\n                            \n                        \n\n                \n                    \n                            The \"constructor\" \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /** The \"constructor\" */\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    console.log('HTTP GET FROM URL: ', url);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  IasMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for the required Angular Material components\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in maintenance state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_0:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority zero (clear) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_1:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority low \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_2:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority medium \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_3:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority high \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_4:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority critical \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in unknown state \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Reference to the icon used to display Alarms in clear and valid states */\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n\n  /** Reference to the icon used to display Alarms in clear and invalid states */\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n\n  /** Reference to the icon used to display Alarms in unknown state */\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n\n  /** Reference to the icon used to display Alarms in maintenance state */\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and valid states */\n  set_valid = Assets.ICONS + 'set-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and invalid states */\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n\n  /** Reference to the icon used to display Alarms with priority zero (clear) */\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n\n  /** Reference to the icon used to display Alarms with priority low */\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n\n  /** Reference to the icon used to display Alarms with priority medium */\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n\n  /** Reference to the icon used to display Alarms with priority high */\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n\n  /** Reference to the icon used to display Alarms with priority critical */\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                    \n                        contains the configuration to draw the map\n\n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                    \n                        Defines wether or no there is data available to draw the map\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n  Modules\n  MapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MapComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: , pathsGroups: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Scaling and calculation of max and min values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of groups of placemarks\n\n                                                        \n                                                \n                                                \n                                                        pathsGroups\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    The viewbox: list of 4 numbers used to define the size of the map\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup) {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                material-sandbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/material-sandbox/material-sandbox.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Executed when initiating the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that displays some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.component.html',\n  styleUrls: ['./material-sandbox.component.scss']\n})\nexport class MaterialSandboxComponent implements OnInit {\n\n  /**\n  * Constructor of the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when initiating the component\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Primary\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nAccent\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nWarn\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nBackground\n\n   status-bar \n   app-bar \n   background \n   hover \n   card \n   dialog \n   disabled-button \n\n\n   raised-button \n   focused-button \n   selected-button \n   selected-disabled-button \n   disabled-button-toggle \n   unselected-chip \n   disabled-list-option \n\n\nForeground\n\n   base \n   divider \n   dividers \n   disabled \n   disabled-button \n   disabled-text \n\n\n   hint-text \n   secondary-text \n   icon \n   icons \n   text \n   slider-min \n   slider-off \n   slider-off-active \n\n\n\n\n\n\nMaterial Toggle\nDefault \nPrimary \nAccent \nWarn\n\nBasic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\n\n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Primary   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Accent   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Warn   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Background   status-bar    app-bar    background    hover    card    dialog    disabled-button    raised-button    focused-button    selected-button    selected-disabled-button    disabled-button-toggle    unselected-chip    disabled-list-option Foreground   base    divider    dividers    disabled    disabled-button    disabled-text    hint-text    secondary-text    icon    icons    text    slider-min    slider-off    slider-off-active Material ToggleDefault Primary Accent WarnBasic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    Link          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n      \n         POWER \n          \n          \n      \n      \n         OBSERVATIONS \n          \n          \n      \n    \n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n      \n         NETWORK \n          \n        \n\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     ANTENNAS                                                          POWER                                          OBSERVATIONS                                                  WEATHER                                                                  IAS HEALTH                                                          NETWORK                                       '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n  Modules\n  OverviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OverviewCardComponent\n                            \n                            \n                                OverviewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    OverviewCardComponent\n                            \n                            \n                                    OverviewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToAntennas\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TabularViewComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TabularViewComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TabularViewComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TabularViewComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AlarmComponent\n                            \n                            \n                                    AlarmHeaderComponent\n                            \n                            \n                                    StatusViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, router: Router, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system Router to handle navigation\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Router } from '@angular/router';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n\n  /**\n   * Instantiates the component\n   * @param {SidenavService} sidenavService Service to manage the Acknowledge and Shelve sidenav\n   * @param {Router} router system Router to handle navigation\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private router: Router,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.router.navigate([{outlets: {actions: ['shelve', this.alarm.core_id]}}]);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveComponent.html":{"url":"components/ShelveComponent.html","title":"component - ShelveComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve/shelve.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to acknowledge alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve\n            \n\n            \n                styleUrls\n                shelve.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shelve.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarm_id\n                            \n                            \n                                defaultTimeout\n                            \n                            \n                                form\n                            \n                            \n                                message\n                            \n                            \n                                requestStatus\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                            \n                                timeout\n                            \n                            \n                                timeouts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSend\n                            \n                            \n                                getActionButtonText\n                            \n                            \n                                getResponseMessageText\n                            \n                            \n                                getResponseMessageTitle\n                            \n                            \n                                getTitleText\n                            \n                            \n                                    Private\n                                hideSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                reload\n                            \n                            \n                                shelve\n                            \n                            \n                                    Private\n                                showSpinner\n                            \n                            \n                                toggleShelveUnshelve\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, alarmService: AlarmService, route: ActivatedRoute, sidenavService: SidenavService, spinnerService: NgxSpinnerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve/shelve.component.ts:79\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to handle the sidenav where the component is opened\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular Router used to navigate through the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canSend\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanSend()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:225\n                            \n                        \n\n\n                \n                    \n                            Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if shelve action can be performed and false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionButtonText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionButtonText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:248\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the action button\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button, either \"Shelve\" or \"Unshelve\"\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:275\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageTitle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:263\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the title\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitleText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitleText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:233\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the title\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:216\n                            \n                        \n\n\n                \n                    \n                            Hides the spinner after the Alarm has been shelved/unshelved\nIt also unblocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Get the alarmID from the url, create the form and open the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reload\n                            \n                            \n                        \n                    \n                \n                \n                    \nreload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Cleans the component and reloads the Alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the shelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:207\n                            \n                        \n\n\n                \n                    \n                            Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\nIt also blocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleShelveUnshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleShelveUnshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            Send the shelve/unshelve request through the method provided by the AlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the unshelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:56\n                            \n                        \n\n                \n                    \n                        Alarm object to be shelved/unshelved\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:51\n                            \n                        \n\n                \n                    \n                        Id of the Alarm object to be shelved/unshelved\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTimeout:     \n\n                    \n                \n                    \n                        \n                            Default value : this.timeouts[0].value\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:46\n                            \n                        \n\n                \n                    \n                        Default timeout for shelving\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:61\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:66\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestStatus:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:79\n                            \n                        \n\n                \n                    \n                        Stores wether or not the action has been executed requestStatusly\nIf requestStatus = 0, the request has not been sent yet\nIf requestStatus = 1, the request was successfully\nIf requestStatus = -1, the request has failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:94\n                            \n                        \n\n                \n                    \n                        Service to handle the sidenav where the component is opened\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:71\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve timeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeouts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeouts:     TimeoutOption[]\n\n                    \n                \n                    \n                        \n                            Type :     TimeoutOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:34\n                            \n                        \n\n                \n                    \n                        Timeout options for shelving alarms\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {Router} router Angular Router used to navigate through the application\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(this.alarm.core_id, message, timeout).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    if (!this.alarm.shelved) {\n      return 'Shelving results';\n    } else {\n      return 'Unshelving results';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        return 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        return 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      let response = '';\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n      return response;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n     {{ getTitleText() }} \n    \n      &times;\n    \n  \n\n  \n    \n      \n        \n          \n            Alarm ID\n            {{alarm?.core_id}}\n          \n          \n            Description\n            {{ alarm?.description }}\n          \n        \n      \n\n       \n\n      \n        \n           {{ getResponseMessageTitle() }} \n           {{ getResponseMessageText() }} \n        \n      \n\n      \n        \n          \n\n          \n             Information required to shelve the Alarm \n\n            \n               Reason for shelving \n              \n               You must write a message in order to Shelve \n            \n\n            \n               Time in shelf \n              \n                \n                  {{timeout.viewValue}}\n                \n              \n               You must select a duration in order to Shelve \n            \n          \n\n        \n      \n    \n  \n\n  \n     \n    \n      Close\n    \n\n    \n      Cancel\n      {{ getActionButtonText() }}\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ getTitleText() }}           ×                                                Alarm ID            {{alarm?.core_id}}                                Description            {{ alarm?.description }}                                                        {{ getResponseMessageTitle() }}            {{ getResponseMessageText() }}                                                              Information required to shelve the Alarm                            Reason for shelving                              You must write a message in order to Shelve                                        Time in shelf                                                 {{timeout.viewValue}}                                             You must select a duration in order to Shelve                                                            Close              Cancel      {{ getActionButtonText() }}      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:10\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Opens the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Sets the reference to the sidenav\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Reference to the sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Toggles the sidenav (open/close)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:21\n                            \n                        \n\n                \n                    \n                        Defines wether or not the sidenav can be closed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the sidenav \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\n\n/**\n* Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  /**\n   * Builds an instance of the service\n   */\n  constructor() { }\n\n  /** Reference to the sidenav */\n  private sidenav: MatSidenav;\n\n  /** Defines wether or not the sidenav can be closed */\n  public canClose = true;\n\n  /**\n  * Sets the reference to the sidenav\n  * @param {MatSidenav} sidenav Reference to the sidenav\n  */\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  /**\n  * Opens the sidenav\n  */\n  public open() {\n    return this.sidenav.open();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  public close() {\n    return this.sidenav.close();\n  }\n\n  /**\n  * Toggles the sidenav (open/close)\n  */\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the {@link alarmTags}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsPrioritySet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid.svg',\n      set_critical: Assets.ICONS + 'set-valid.svg',\n      unknown: Assets.ICONS + 'unknown-valid.svg',\n      maintenance: Assets.ICONS + 'maintenance-valid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid.svg',\n      set_critical: Assets.ICONS + 'set-invalid.svg',\n      unknown: Assets.ICONS + 'unknown-invalid.svg',\n      maintenance: Assets.ICONS + 'maintenance-invalid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n  Modules\n  TabularModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Table view\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LegendComponent\n                            \n                            \n                                TabularViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TabularViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { StatusViewComponent } from '../shared/status-view/status-view.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TabularViewComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabularViewComponent.html":{"url":"components/TabularViewComponent.html","title":"component - TabularViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabularViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/tabular-view/tabular-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component that dispays all the Alarms in a table\nThe user can change the default sorting by clicking on the headers and filter\nby typing in an input field\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabular-view\n            \n\n            \n                styleUrls\n                tabular-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabular-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _setFilterActivated\n                            \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Private\n                                dateFormat\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                filterPredicate\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Private\n                                filterValueForSetAlarms\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                            \n                                    Private\n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clearFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                toggleFilterOnlySetAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/tabular-view/tabular-view.component.ts:74\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Applies the filter ot the Table\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Clears the filter and applies this empty filtering (i.e. no filtering)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Applies the table's default sorting after its initialization \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from CdbService and AlarmService\nwhen the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Create the table when the component is initializated\nSubscribes to new alarms from the AlarmService\nRetrieves filter values passed by the URL and applies them to the table\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onKeyUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nonKeyUp(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            This function is executed after a key is pressed in the keywords input box\nIf the user pressed \"Escape\", then the filters are cleared by calling {@link clearFilter}, if not, the filters are applied normally\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the event that triggered the function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFilterOnlySetAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFilterOnlySetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Toggle the filtering for only set Alarm objects ON/OFF\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _setFilterActivated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _setFilterActivated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:35\n                            \n                        \n\n                \n                    \n                        Defines wether the filter for only SET Alarm is activated or not.\nWhen the user writes either \"set\", \" set\" or \"set \" this field becomes true\nIf the user deletes \"set\" from the input field then this field becomes false\nThis attribute is binded to the state of the toggle slide switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:58\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     MatTableDataSource\n\n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:55\n                            \n                        \n\n                \n                    \n                        DataSource of the Table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:46\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['status', 'name',  'mode', 'timestamp', 'description', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:43\n                            \n                        \n\n                \n                    \n                        Array that defines which coulmns are going to be displayed and in which order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterPredicate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPredicate:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: Alarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:64\n                            \n                        \n\n                \n                    \n                        Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterString:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:38\n                            \n                        \n\n                \n                    \n                        String that stores the test input in the filter textfield \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterValueForSetAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterValueForSetAlarms:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'set'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:52\n                            \n                        \n\n                \n                    \n                        String to define the keyword to filter SET Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the MatSort, the component that defines the sorting of the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        table:     MatTable\n\n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the MatTable, the component that defines the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:192\n                                \n                            \n                    \n                        \n                                Returns the filters applied to the Table\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toggleStatus\n                    \n                \n\n                \n                    \n                        gettoggleStatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:200\n                                \n                            \n                    \n                        \n                                Returns the status of the Toggle for the filtering of set Alarms\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Injectable, OnInit, ViewChild, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Observable ,  BehaviorSubject ,  SubscriptionLike as ISubscription } from 'rxjs';\nimport { MatTableDataSource, MatSort, MatSortable, MatTable } from '@angular/material';\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { ActivatedRoute } from '@angular/router';\nimport { Alarm, OperationalMode, Validity } from '../../data/alarm';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Locale } from '../../settings';\n\n/**\n* Component that dispays all the Alarms in a table\n*\n* The user can change the default sorting by clicking on the headers and filter\n* by typing in an input field\n*/\n@Component({\n  selector: 'app-tabular-view',\n  templateUrl: './tabular-view.component.html',\n  styleUrls: ['./tabular-view.component.scss']\n})\nexport class TabularViewComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  /** Reference to the MatTable, the component that defines the table */\n  @ViewChild(MatTable) table: MatTable;\n\n  /** Reference to the MatSort, the component that defines the sorting of the table */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n  * Defines wether the filter for only SET {@link Alarm} is activated or not.\n  * When the user writes either \"set\", \" set\" or \"set \" this field becomes true\n  * If the user deletes \"set\" from the input field then this field becomes false\n  * This attribute is binded to the state of the toggle slide switch\n  */\n  public _setFilterActivated = false;\n\n  /** String that stores the test input in the filter textfield */\n  public filterString = '';\n\n  /**\n  * Array that defines which coulmns are going to be displayed and in which order\n  */\n  public displayedColumns = ['status', 'name',  'mode', 'timestamp', 'description', 'actions'];\n\n  /** String to store the formatting of dates, read form the settings */\n  private dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  private timezone: string;\n\n  /** String to define the keyword to filter SET {@link Alarm} */\n  private filterValueForSetAlarms = 'set';\n\n  /** DataSource of the Table */\n  public dataSource: MatTableDataSource;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /**\n  * Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n  * @returns {boolean} true if the row matches the filter, false if not\n  */\n  public filterPredicate: (\n    (data: Alarm, filterString: string) => boolean) = (data: Alarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private route: ActivatedRoute\n  ) {}\n\n  /**\n   * Create the table when the component is initializated\n   * Subscribes to new alarms from the {@link AlarmService}\n   * Retrieves filter values passed by the URL and applies them to the table\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n    this.sort.sort( {\n      id: 'status',\n      start: 'asc'\n    });\n    this.dataSource = new MatTableDataSource();\n    this.dataSource.data = this.alarmService.alarmsArray;\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      this.dataSource.data = this.alarmService.alarmsArray;\n    });\n    let filterValue = this.route.snapshot.paramMap.get('filter');\n    if (filterValue && filterValue !== '') {\n      filterValue = filterValue.replace('_', ' ');\n      this.applyFilter(filterValue);\n    }\n  }\n\n  /** Applies the table's default sorting after its initialization */\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n  * Unsubscribes from {@link CdbService} and {@link AlarmService}\n  * when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n  /**\n  * This function is executed after a key is pressed in the keywords input box\n  * If the user pressed \"Escape\", then the filters are cleared by calling {@link clearFilter}, if not, the filters are applied normally\n  * @param {event} event the event that triggered the function\n  */\n  onKeyUp(event) {\n    if (event.key === 'Escape') {\n      this.clearFilter();\n    } else {\n      this.applyFilter(event.target.value);\n    }\n  }\n\n  /**\n  * Clears the filter and applies this empty filtering (i.e. no filtering)\n  */\n  clearFilter() {\n    this.filterString = '';\n    this.applyFilter(this.filterString);\n  }\n\n  /**\n  * Applies the filter ot the Table\n  * @param {string} filterValue the string containing keywords for filtering\n  */\n  applyFilter(filter: string) {\n    this.filterString = filter;\n    const arrayOfFilters = filter.split(' ');\n    // If \"set\" IS in the array, then it is activated\n    if (arrayOfFilters.indexOf(this.filterValueForSetAlarms) >= 0 ) {\n      this._setFilterActivated = true;\n\n    } else { // If \"set\" NOT in the field, then it is deactivated\n      this._setFilterActivated = false;\n    }\n    filter = filter.trim();\n    filter = filter.toLowerCase();\n    this.dataSource.filter = filter;\n  }\n\n  /**\n  * Toggle the filtering for only set {@link Alarm} objects ON/OFF\n  */\n  toggleFilterOnlySetAlarm() {\n    if (this.filterString == null) {\n      this.filterString = '';\n    }\n    const arrayOfFilters = this.filterString.split(' ');\n    const indexOfSet = arrayOfFilters.indexOf(this.filterValueForSetAlarms);\n\n    // If activated then should deactivate:\n    if (this._setFilterActivated) {\n      if ( indexOfSet >= 0 ) {\n        arrayOfFilters.splice(indexOfSet, 1);\n      }\n    } else { // If deactivated then should activate:\n      if ( indexOfSet \n    \n\n    \n        \n\n  \n    \n  \n\n\n  \n\n    \n      \n        \n        \n          close\n        \n      \n      \n        Show only set alarms\n      \n    \n\n    \n\n      \n      \n        \n           STATUS \n        \n        \n          \n            \n          \n        \n      \n\n      \n      \n        \n           ALARM NAME \n        \n         {{alarm.name}} \n      \n\n      \n      \n        \n           MODE \n        \n         {{alarm.operationalMode}} \n      \n\n      \n      \n        \n           LAST CHANGE TIME \n        \n         {{ alarm.timestamp | date: dateFormat: timezone }} \n      \n\n      \n      \n        \n           DESCRIPTION \n        \n         {{alarm.description}} \n      \n\n      \n      \n        \n           ACTIONS \n        \n        \n          \n        \n      \n\n      \n      \n    \n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              close                            Show only set alarms                                             STATUS                                                                                              ALARM NAME                  {{alarm.name}}                                      MODE                  {{alarm.operationalMode}}                                      LAST CHANGE TIME                  {{ alarm.timestamp | date: dateFormat: timezone }}                                      DESCRIPTION                  {{alarm.description}}                                      ACTIONS                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabularViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {Router} router Angular Router used to navigate through the application\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(this.alarm.core_id, message, timeout).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    if (!this.alarm.shelved) {\n      return 'Shelving results';\n    } else {\n      return 'Unshelving results';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        return 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        return 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      let response = '';\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n      return response;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display backups weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display backups weather station in a map\n */\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\nand a map (instantiated by a {@link WeatherMap})\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStation:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { WeatherStationConfig } from '../weather.service';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedStation: WeatherStationConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {WeatherStationConfig}\n   */\n  changeSelectedStation(selectedStation: WeatherStationConfig): void {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display the weather station summary information in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:36\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\n\n\n/**\n * Marker to display the weather station summary information in a map\n */\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Weather system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherBackupWsMarkerComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WeatherDataMarkerComponent\n                            \n                            \n                                WeatherMapComponent\n                            \n                            \n                                WeatherPrimaryWsConnectorComponent\n                            \n                            \n                                WeatherPrimaryWsMarkerComponent\n                            \n                            \n                                WeatherSidebarComponent\n                            \n                            \n                                WeatherStationSidebarComponent\n                            \n                            \n                                WeatherSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WeatherSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n    \n        Description\n    \n    \n        Line connector between the weather station marker and the summarized weather\ninformation marker in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                    \n                        Array of coordinates for the connector path \n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Value to highlight the connector \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns the svg path used to draw the line in the map\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    svg path that represent the line\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\n/**\n * Line connector between the weather station marker and the summarized weather\n * information marker in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  /**\n  * Builds an instance of the component */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the svg path used to draw the line in the map\n   * @returns {string} svg path that represent the line\n   */\n  getPath(): string {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display primary weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display primary weather station in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the WeatherModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                markerImageSet\n                            \n                            \n                                    Public\n                                markerImageUnreliableSet\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                weatherMapName\n                            \n                            \n                                    Public\n                                weatherStationsConfig\n                            \n                            \n                                    Public\n                                weatherSummaryConfig\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAntennas\n                            \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadImages\n                            \n                            \n                                loadWeatherStationsConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:93\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWeatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWeatherStationsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:47\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:59\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:56\n                            \n                        \n\n                \n                    \n                        Set of Marker icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:68\n                            \n                        \n\n                \n                    \n                        Set of Marker Unreliable icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:50\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:62\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:77\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherStationsConfig:     WeatherStationConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:74\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm Ids of the Weather Stations, indexed by placemark *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherSummaryConfig:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:71\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the weather summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:53\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:65\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return ['A001', 'A002', 'A003'];\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSidebarComponent.html":{"url":"components/WeatherSidebarComponent.html","title":"component - WeatherSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms in an interactive sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-sidebar\n            \n\n            \n                styleUrls\n                weather-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyAntennas\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                panelClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, clipboardService: ClipboardService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        clipboardService\n                                                  \n                                                        \n                                                                    ClipboardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                    \n                            \n                            Type:    WeatherStationConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        panelClicked\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Copy list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the data was copied to the clipboard, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated. It initializes the weatherService\nto ensure the weather configuration is ready.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string, action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n* Component used to display Weather Alarms in an interactive sidebar\n*/\n@Component({\n  selector: 'app-weather-sidebar',\n  templateUrl: './weather-sidebar.component.html',\n  styleUrls: ['./weather-sidebar.component.scss']\n})\nexport class WeatherSidebarComponent implements OnInit {\n\n  @Input() selectedStation: WeatherStationConfig = null;\n\n  @Output() panelClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private clipboardService: ClipboardService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  /**\n  * Executed after the component is instantiated. It initializes the weatherService\n  * to ensure the weather configuration is ready.\n  */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n  * Copy list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {boolean} true if the data was copied to the clipboard, false if not\n  */\n  copyAntennas(station: string): boolean {\n    const antennas = this.getAntennas(station);\n    const result = antennas.join(',');\n    const status = this.clipboardService.copyFromContent(result);\n    let message = '';\n    if (status) {\n      message = 'Antennas copied to clipboard';\n    } else {\n      message = 'ERROR: Antennas were not copied!';\n    }\n    this.openSnackBar(message, 'Done');\n    return status;\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return this.weatherService.getAntennas(station);\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  isSelected(stationConfig: WeatherStationConfig) {\n    return this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark);\n  }\n\n  onClick(stationConfig: WeatherStationConfig) {\n    if ( this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark) ) {\n      this.selectedStation = null;\n    } else {\n      this.selectedStation = stationConfig;\n    }\n    this.panelClicked.emit(this.selectedStation);\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 20000,\n      panelClass: ['snackbar']\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    WEATHER STATIONS\n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n              Station\n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n          \n             Nearby Antennas \n            \n               &nbsp;  Copy antennas \n            \n          \n          \n            \n               {{antenna}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      WEATHER STATIONS                                                                                          Stationearby Antennas                               Copy antennas                                                            {{antenna}}                                           '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherStationConfig.html":{"url":"classes/WeatherStationConfig.html","title":"class - WeatherStationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherStationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the Alarm objects associated to a WeatherStation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                humidity\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                            Builds a new WeatherStationConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                        ID of the humidity Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:16\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:19\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temperature:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:22\n                            \n                        \n\n                \n                    \n                        ID of the temperature Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windspeed:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the windspeed Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return ['A001', 'A002', 'A003'];\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                    \n                            \n                            Type:    WeatherStationConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     \"\" | \"highlighted\"\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:26\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /* Alarms Ids of the weather station */\n  @Input() stationConfig: WeatherStationConfig;\n\n  @Input() selectedAlarm: WeatherStationConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass() {\n    if (this.selectedAlarm && (this.selectedAlarm.station === this.stationConfig.station)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, weatherService: WeatherService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(keyword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the instance of the Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../data/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public weatherService: WeatherService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(keyword: string): Alarm {\n    if (this.weatherService.weatherSummaryConfig) {\n      return this.alarmService.get(this.weatherService.weatherSummaryConfig[keyword]);\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              WIND SPEED\n              \n                \n              \n          \n      \n      \n          \n              HUMIDITY\n              \n                \n              \n          \n      \n      \n          \n              TEMPERATURE\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    WIND SPEED                                                                                          HUMIDITY                                                                                          TEMPERATURE                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick(event) {\n    if (!this.url.startsWith('http://')) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/actions/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedTreeData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarmData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/actions/ack/ack.component.ts\n            \n            \n                component\n            \n            \n                AckComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/actions/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve/shelve.component.ts\n            \n            \n                component\n            \n            \n                ShelveComponent\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve/shelve.component.ts\n            \n            \n                interface\n            \n            \n                TimeoutOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/actions/sidenav.service.ts\n            \n            \n                injectable\n            \n            \n                SidenavService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/actions/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                component\n            \n            \n                AntennaMarkerComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                class\n            \n            \n                AlarmColorsSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            \n                component\n            \n            \n                AntennasMapComponent\n            \n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            \n                component\n            \n            \n                AntennasSidebarComponent\n            \n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            \n                component\n            \n            \n                AntennasSummaryComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas.service.ts\n            \n            \n                class\n            \n            \n                AntennaConfig\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas.service.ts\n            \n            \n                injectable\n            \n            \n                AntennasService\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas/antennas.component.ts\n            \n            \n                component\n            \n            \n                AntennasComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/map/fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/map/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/material-sandbox/material-sandbox.component.ts\n            \n            \n                component\n            \n            \n                MaterialSandboxComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                AntennasSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                WeatherSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm-header/alarm-header.component.ts\n            \n            \n                component\n            \n            \n                AlarmHeaderComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm-header/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                alarms_date\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                datepipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                alarm_types\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherStationsConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherBackupWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherDataMarkerComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsConnectorComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map/weather-map.component.ts\n            \n            \n                component\n            \n            \n                WeatherMapComponent\n            \n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherSidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherStationSidebarComponent\n            \n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather.service.ts\n            \n            \n                class\n            \n            \n                WeatherStationConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                    src/app/weather/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/environments/environment.docker.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.2\n        \n            @angular/cdk : ^6.4.3\n        \n            @angular/common : 6.1.2\n        \n            @angular/compiler : 6.1.2\n        \n            @angular/core : 6.1.2\n        \n            @angular/flex-layout : ^6.0.0-beta.17\n        \n            @angular/forms : 6.1.2\n        \n            @angular/http : 6.1.2\n        \n            @angular/material : ^6.4.3\n        \n            @angular/platform-browser : 6.1.2\n        \n            @angular/platform-browser-dynamic : 6.1.2\n        \n            @angular/platform-server : 6.1.2\n        \n            @angular/router : 6.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.0\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.7\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            ngx-clipboard : ^11.1.3\n        \n            ngx-spinner : ^6.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value: 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value: 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: 7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppModule -->\n\nMaterialSandboxComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        32 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
