var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.158,1,0.605]],["body/components/AckButtonComponent.html",[0,0.318,1,1.012,2,0.11,3,0.083,4,0.666,5,0.691,6,1.087,7,0.643,8,0.07,9,5.606,10,6.094,11,2.88,12,0.271,13,1.334,14,0.628,15,3.809,16,2.802,17,3.46,18,3.246,19,4.771,20,0.791,21,0.939,22,5.455,23,0.691,24,1.285,25,1.145,26,1.22,27,0.822,28,4.928,29,0.822,30,4.309,31,0.359,32,0.917,33,1.167,34,4.314,35,0.867,36,6.74,37,5.309,38,5.877,39,1.012,40,4.545,41,1.394,42,0.82,43,0.703,44,3.466,45,6.747,46,6.747,47,0.617,48,4.771,49,0.853,50,0.885,51,0.691,52,0.013,53,0.537,54,0.741,55,0.553,56,1.833,57,3.362,58,0.832,59,4.216,60,3.264,61,5.309,62,5.877,63,3.092,64,1.171,65,1.885,66,3.975,67,2.102,68,5.471,69,0.639,70,2.046,71,1.492,72,3.975,73,3.46,74,3.158,75,1.492,76,3.975,77,1.056,78,1.953,79,4.309,80,3.964,81,3.264,82,4.309,83,4.771,84,4.771,85,0.975,86,3.975,87,3.975,88,2.025,89,3.689,90,3.689,91,3.689,92,3.975,93,0.235,94,0.124,95,3.466,96,2.88,97,0.741,98,0.097,99,0.006,100,0.975,101,1.64,102,0.91,103,3.466,104,3.466,105,3.466,106,0.917,107,2.246,108,1.233,109,3.13,110,0.822,111,3.13,112,3.13,113,3.975,114,3.975,115,1.532,116,2.268,117,3.299,118,1.385,119,1.785,120,2.514,121,1.584,122,1.192,123,1.648,124,2.514,125,1.419,126,1.432,127,1.527,128,4.309,129,2.025,130,1.113,131,3.975,132,2.036,133,2.136,134,1.785,135,1.714,136,2.68,137,0.395,138,0.951,139,0.951,140,0.885,141,1.171,142,0.691,143,0.951,144,0.597,145,0.691,146,0.575,147,0.691,148,0.597,149,1.087,150,0.553,151,0.951,152,0.597,153,0.691,154,0.597,155,0.691,156,0.597,157,0.951,158,0.597,159,0.951,160,0.575,161,0.691,162,0.597,163,0.975,164,1.171,165,0.575,166,0.691,167,0.619,168,1.087,169,0.597,170,1.087,171,0.597,172,1.087,173,0.597,174,0.691,175,0.597,176,0.691,177,0.597,178,0.666,179,0.597,180,0.691,181,0.575,182,0.691,183,0.597,184,0.597,185,0.983,186,1.087,187,0.597,188,0.691,189,0.597,190,0.597,191,0.691,192,0.597,193,0.597,194,0.597,195,0.597,196,0.575,197,0.691,198,0.597,199,1.049,200,0.597,201,0.597,202,0.597,203,0.575,204,0.691,205,0.597,206,0.532,207,0.951,208,0.597,209,0.691,210,0.575,211,0.643,212,0.597,213,1.102,214,0.643,215,0.975,216,0.575,217,0.691,218,0.597,219,0.451,220,0.619,221,0.597,222,0.822,223,0.691,224,0.597,225,0.597,226,0.597,227,0.597,228,0.597,229,0.597,230,0.666,231,0.691,232,0.008,233,0.008]],["title/modules/ActionsModule.html",[234,0.922,235,2.277]],["body/modules/ActionsModule.html",[1,1.25,2,0.148,3,0.112,8,0.094,10,4.197,26,0.996,34,4.256,52,0.013,58,0.658,93,0.294,94,0.167,96,3.861,98,0.184,99,0.008,137,0.529,144,1.25,146,1.145,175,1.25,202,1.25,203,1.204,229,1.25,230,0.893,232,0.01,233,0.01,234,1.518,235,4.861,236,1.179,237,2.993,238,2.209,239,2.773,240,4.647,241,4.647,242,4.647,243,4.647,244,4.647,245,3.877,246,3.284,247,3.711,248,2.86,249,2.209,250,2.047,251,5.329,252,2.86,253,3.107,254,2.298,255,5.329,256,5.329,257,7.219,258,4.197,259,4.197,260,3.861,261,5.329,262,5.223,263,4.805,264,3.179,265,4.805,266,2.863,267,3.012,268,1.349,269,2.496,270,2.608,271,3.179,272,3.012,273,5.329]],["title/components/AlarmCardComponent.html",[0,0.158,148,0.605]],["body/components/AlarmCardComponent.html",[0,0.319,1,0.495,2,0.092,3,0.069,4,0.553,5,0.833,6,0.573,7,0.533,8,0.058,12,0.163,13,0.775,14,0.624,18,2.849,20,0.693,21,0.848,23,0.573,24,1.274,25,1.135,26,0.848,27,0.72,29,0.72,31,0.298,35,0.797,39,0.931,41,1.556,42,0.85,43,0.726,47,0.643,49,0.747,50,0.775,52,0.014,53,0.699,54,0.391,55,0.667,58,0.849,64,1.026,65,1.651,69,0.663,70,1.925,71,1.666,75,1.372,77,0.926,78,1.389,85,0.514,93,0.167,94,0.103,97,0.615,98,0.08,99,0.01,102,1.293,106,0.804,107,3.504,108,2.132,109,2.597,110,0.991,111,2.597,115,0.807,117,2.764,118,1.214,119,1.481,120,2.085,121,1.214,122,1.693,123,1.367,125,1.177,126,1.097,129,1.775,130,1.845,135,1.422,137,0.328,138,0.833,139,0.833,140,1.003,141,1.077,142,0.573,143,0.833,144,0.495,145,0.573,146,0.477,147,0.573,148,0.931,149,0.981,150,0.459,151,0.833,152,0.495,153,0.573,154,0.495,155,0.573,156,0.495,157,0.833,158,0.495,159,0.833,160,0.477,161,0.573,162,0.495,163,0.897,164,1.077,165,0.477,166,0.573,167,0.514,168,0.981,169,0.495,170,0.981,171,0.495,172,0.981,173,0.495,174,0.573,175,0.495,176,0.573,177,0.495,178,0.553,179,0.495,180,0.573,181,0.477,182,0.573,183,0.495,184,0.495,185,0.916,186,0.981,187,0.495,188,0.573,189,0.495,190,0.495,191,0.573,192,0.495,193,0.495,194,0.495,195,0.495,196,0.477,197,0.573,198,0.495,199,0.947,200,0.495,201,0.495,202,0.495,203,0.477,204,0.573,205,0.495,206,0.756,207,0.833,208,0.495,209,0.573,210,0.477,211,0.533,212,0.495,213,1.051,214,0.533,215,0.88,216,0.477,217,0.573,218,0.495,219,0.374,220,0.514,221,0.495,222,0.72,223,0.573,224,0.495,225,0.495,226,0.495,227,0.495,228,0.495,229,0.495,230,0.553,231,0.573,232,0.01,233,0.007,236,1.061,274,4.642,275,6.129,276,2.597,277,1.347,278,3.411,279,1.752,280,4.18,281,4.166,282,4.925,283,4.18,284,4.884,285,3.921,286,5.407,287,4.884,288,4.493,289,5.188,290,5.188,291,3.572,292,3.369,293,4.794,294,2.875,295,2.253,296,1.487,297,1.242,298,4.181,299,3.776,300,1.453,301,3.298,302,4.493,303,2.246,304,3.298,305,2.964,306,1.651,307,4.346,308,4.346,309,3.032,310,3.032,311,3.298,312,2.709,313,3.298,314,2.455,315,1.594,316,3.776,317,3.776,318,3.474,319,1.168,320,3.298,321,3.032,322,1.912,323,3.298,324,1.343,325,4.18,326,3.298,327,3.298,328,3.699,329,3.298,330,1.864,331,6.721,332,4.493,333,1.946,334,3.192,335,4.093,336,2.389,337,2.389,338,2.389,339,2.346,340,4.773,341,2.224,342,2.389,343,4.093,344,2.389,345,2.389,346,3.572,347,2.389,348,2.389,349,3.474,350,5.188,351,4.448,352,2.389,353,2.597,354,3.776,355,2.597,356,1.481,357,4.794,358,3.298,359,3.298,360,3.298,361,3.298,362,3.298,363,4.18,364,2.875,365,1.267,366,2.532,367,2.741,368,3.369,369,3.298,370,2.389,371,3.298,372,3.298,373,3.298,374,1.136,375,4.794,376,3.298,377,3.298,378,1.864,379,2.224,380,1.614,381,3.298,382,3.298,383,2.576,384,2.085,385,2.085,386,1.097,387,3.298,388,2.875,389,2.224,390,2.597,391,2.57]],["title/components/AlarmComponent.html",[0,0.158,150,0.561]],["body/components/AlarmComponent.html",[0,0.326,1,0.45,2,0.083,3,0.063,4,0.503,5,0.928,6,0.521,7,0.485,8,0.053,12,0.148,13,0.723,14,0.663,18,1.853,20,0.646,21,0.802,23,0.521,24,1.267,25,1.129,26,1.033,27,0.671,29,0.671,31,0.271,32,0.749,33,1.319,35,0.575,39,0.889,41,1.58,42,0.847,43,0.687,47,0.64,49,0.467,50,0.485,52,0.013,53,0.607,54,0.75,55,0.743,58,0.908,64,1.472,65,2.04,67,2.052,69,0.643,70,1.981,71,1.653,75,1.523,77,0.863,78,1.295,85,0.467,93,0.186,94,0.094,97,0.559,98,0.109,99,0.011,100,0.467,101,1.991,106,0.503,107,1.694,108,0.93,110,1.225,115,1.685,116,1.853,118,1.791,119,3.247,121,1.682,125,1.07,126,1.619,127,1.151,129,2.879,130,2.194,132,1.535,135,2.968,137,0.298,138,0.777,139,0.777,140,1.074,141,1.029,142,0.521,143,0.777,144,0.45,145,0.521,146,0.433,147,0.521,148,0.45,149,0.928,150,0.824,151,0.777,152,0.45,153,0.521,154,0.45,155,0.521,156,0.45,157,0.777,158,0.45,159,0.777,160,0.646,161,0.521,162,0.45,163,0.856,164,1.029,165,0.433,166,0.521,167,0.467,168,0.928,169,0.45,170,0.928,171,0.45,172,0.928,173,0.45,174,0.521,175,0.45,176,0.521,177,0.45,178,0.503,179,0.45,180,0.521,181,0.433,182,0.521,183,0.45,184,0.45,185,0.881,186,0.928,187,0.45,188,0.521,189,0.45,190,0.45,191,0.521,192,0.45,193,0.45,194,0.45,195,0.45,196,0.433,197,0.521,198,0.45,199,0.896,200,0.45,201,0.45,202,0.45,203,0.433,204,0.521,205,0.45,206,0.889,207,0.777,208,0.45,209,0.521,210,0.433,211,0.485,212,0.45,213,1.022,214,0.485,215,0.833,216,0.433,217,0.521,218,0.45,219,0.34,220,0.467,221,0.45,222,0.671,223,0.521,224,0.45,225,0.45,226,0.45,227,0.45,228,0.45,229,0.45,230,0.503,231,0.521,232,0.007,233,0.007,236,0.663,277,1.313,279,2.412,281,3.745,285,3.379,287,4.208,288,4.291,291,3.379,292,3.187,296,2.242,297,1.336,300,1.442,305,2.554,306,1.539,307,5.062,308,3.745,309,2.826,310,2.826,312,2.526,319,1.121,321,1.896,324,1.497,330,1.694,333,1.539,334,1.694,349,2.172,386,2.209,389,2.021,390,2.361,392,2.361,393,3.238,394,1.654,395,3.871,396,4.659,397,3.897,398,5.164,399,4.813,400,5.343,401,5.343,402,5.343,403,5.164,404,3.879,405,4.208,406,2.737,407,2.737,408,4.469,409,0.924,410,2.998,411,1.402,412,2.371,413,2.998,414,1.853,415,2.998,416,3.433,417,2.998,418,2.998,419,2.998,420,3.112,421,2.998,422,2.998,423,2.998,424,2.998,425,2.614,426,2.998,427,2.398,428,2.021,429,2.998,430,0.899,431,2.998,432,2.209,433,2.998,434,2.998,435,2.774,436,2.998,437,2.998,438,2.094,439,3.347,440,2.094,441,4.291,442,4.291,443,4.291,444,2.998,445,3.897,446,2.021,447,2.361,448,1.896,449,1.467,450,1.654,451,1.853,452,1.853,453,1.853,454,1.853,455,1.717,456,1.783,457,0.686,458,3.871,459,1.788,460,1.327,461,1.788,462,2.172,463,2.172,464,2.361,465,3.897,466,5.922,467,7.009,468,4.469,469,2.998,470,2.998,471,2.998,472,2.361,473,2.998,474,1.853,475,2.666,476,3.379,477,2.503,478,3.871,479,1.924,480,2.774,481,1.694,482,3.52,483,2.614,484,6.664,485,4.469,486,2.998,487,4.659,488,4.469,489,2.998,490,4.469,491,2.998,492,4.469,493,2.998,494,1.033,495,2.998,496,4.469,497,2.998]],["title/classes/AlarmConfig.html",[99,0.006,498,1.607]],["body/classes/AlarmConfig.html",[2,0.146,3,0.11,8,0.093,12,0.325,14,0.565,31,0.475,32,1.102,33,1.588,42,0.844,43,0.676,47,0.632,49,1.025,50,1.063,51,0.914,52,0.013,53,0.678,54,0.992,55,0.732,64,1.689,65,2.59,69,0.536,81,3.923,98,0.128,99,0.01,100,0.819,106,1.343,232,0.01,233,0.01,277,1.343,297,0.881,300,1.015,315,2.5,319,1.273,430,1.971,440,3.081,457,1.505,458,5.608,459,3.923,460,1.314,461,3.923,462,4.765,463,3.81,498,2.999,499,7.172,500,4.584,501,2.693,502,2.097,503,4.755,504,5.721,505,6.555,506,3.405,507,4.755,508,3.638,509,4.765,510,6.576,511,5.258,512,5.258,513,5.258,514,5.179,515,6.576,516,4.765,517,6.576,518,6.576,519,5.258,520,2.5,521,5.258,522,5.734,523,5.258,524,5.258,525,5.258,526,5.258,527,6.576,528,4.584]],["title/components/AlarmHeaderComponent.html",[0,0.158,152,0.605]],["body/components/AlarmHeaderComponent.html",[0,0.32,1,0.518,2,0.096,3,0.072,4,0.578,5,1.213,6,0.6,7,0.558,8,0.061,12,0.171,13,0.801,14,0.632,18,2.894,20,0.716,21,0.87,23,0.6,24,1.277,25,1.138,26,0.87,27,0.744,29,0.744,31,0.312,35,0.814,39,0.951,41,1.572,42,0.846,43,0.745,47,0.644,49,0.772,50,0.801,52,0.013,53,0.691,54,0.409,55,0.689,58,0.862,64,1.06,65,1.706,69,0.653,70,1.955,71,1.683,75,1.402,77,0.956,78,1.435,85,0.538,93,0.172,94,0.108,97,0.643,98,0.084,99,0.01,102,0.79,106,0.83,107,3.579,108,2.165,109,2.717,110,1.198,111,2.717,115,1.213,116,1.43,117,2.836,118,1.603,119,1.55,121,1.254,122,2.307,123,1.43,126,1.598,127,2.576,129,2.145,130,1.878,137,0.343,138,0.861,139,0.861,140,1.024,141,1.1,142,0.6,143,0.861,144,0.518,145,0.6,146,0.499,147,0.6,148,0.518,149,1.007,150,0.48,151,0.861,152,0.951,153,0.6,154,0.518,155,0.6,156,0.518,157,0.861,158,0.518,159,0.861,160,0.499,161,0.6,162,0.518,163,0.916,164,1.1,165,0.499,166,0.6,167,0.538,168,1.007,169,0.518,170,1.007,171,0.518,172,1.007,173,0.518,174,0.6,175,0.518,176,0.6,177,0.518,178,0.578,179,0.518,180,0.6,181,0.499,182,0.6,183,0.518,184,0.518,185,0.933,186,1.007,187,0.518,188,0.6,189,0.518,190,0.518,191,0.6,192,0.518,193,0.518,194,0.518,195,0.518,196,0.499,197,0.6,198,0.518,199,0.971,200,0.518,201,0.518,202,0.518,203,0.499,204,0.6,205,0.518,206,0.775,207,0.861,208,0.518,209,0.6,210,0.499,211,0.558,212,0.518,213,1.064,214,0.558,215,0.903,216,0.499,217,0.6,218,0.518,219,0.392,220,0.538,221,0.518,222,0.744,223,0.6,224,0.518,225,0.518,226,0.518,227,0.518,228,0.518,229,0.518,230,0.578,231,0.6,232,0.01,233,0.008,236,1.096,274,4.638,277,1.349,284,4.987,285,4.005,287,4.987,288,4.588,289,5.281,290,5.281,291,3.664,292,3.457,295,1.976,296,1.537,297,1.256,298,4.27,299,3.901,300,1.468,302,4.588,303,2.32,305,3.01,306,1.706,307,4.414,308,4.414,309,3.132,310,3.132,312,2.799,314,3.894,315,1.647,316,3.901,317,3.901,318,3.589,319,1.048,321,3.132,322,1.976,328,3.777,330,1.95,332,2.5,333,1.188,334,3.275,335,2.5,336,2.5,337,2.5,338,2.5,339,1.688,340,4.859,341,2.326,342,2.5,343,2.5,344,2.5,345,2.5,346,2.182,347,2.5,348,2.5,349,3.589,350,5.281,351,4.564,352,2.5,353,2.717,354,3.901,355,2.717,356,1.55,363,4.319,365,2.576,380,2.836,383,2.661,384,2.182,385,2.182,386,1.647,389,2.326,390,2.717,430,1.485,460,0.689,479,1.435,481,2.799,494,1.706,529,6.124,530,3.008,531,2.32,532,5.794,533,4.953,534,4.953,535,3.45,536,3.45,537,3.45,538,3.45,539,3.45,540,3.45,541,3.45,542,3.45,543,3.45,544,5.794,545,4.953,546,4.953,547,3.45,548,4.953,549,4.953,550,1.688,551,1.488,552,1.43,553,3.45,554,3.45,555,2.225,556,1.488,557,2.5]],["title/classes/AlarmImageSet.html",[99,0.006,412,1.438]],["body/classes/AlarmImageSet.html",[0,0.314,2,0.12,3,0.091,8,0.076,12,0.286,14,0.713,18,1.79,20,0.624,21,0.869,24,0.648,25,0.578,27,0.648,29,0.648,31,0.39,32,0.97,33,1.569,39,0.648,41,1.645,42,0.845,43,0.744,47,0.635,49,0.902,50,0.936,51,0.75,52,0.014,53,0.561,54,0.933,55,0.805,58,0.96,64,1.663,65,1.994,67,1.659,69,0.611,70,1.954,71,1.61,75,1.544,77,0.834,78,1.251,93,0.227,94,0.135,97,0.805,98,0.141,99,0.011,100,0.673,101,1.735,106,0.724,107,2.441,108,1.34,110,0.893,118,1.653,119,1.94,130,1.621,135,1.863,140,0.936,150,0.601,160,0.624,206,0.578,232,0.009,233,0.009,277,1.282,279,2.323,281,3.661,288,3.129,291,2.731,292,2.576,296,2.026,297,1.391,300,0.834,305,2.496,306,1.488,307,3.661,308,2.731,309,2.731,310,2.731,312,2.441,319,1.263,324,1.829,330,2.441,333,1.488,334,2.441,349,3.129,392,3.401,393,3.129,394,1.599,395,4.731,396,3.766,397,3.766,398,3.766,399,4.194,403,3.766,404,4.093,405,3.401,406,2.212,407,2.212,409,0.893,411,1.371,412,2.673,414,1.79,416,3.133,420,2.712,427,2.665,432,1.925,435,2.023,438,2.023,439,3.272,440,2.023,441,3.129,442,3.129,443,3.129,445,3.766,446,2.912,447,3.401,448,3.661,449,2.833,450,2.772,451,3.104,452,3.104,453,3.104,454,3.104,455,2.876,456,2.987,457,1.325,458,5.271,459,3.453,460,1.157,461,3.453,462,4.194,463,3.129,464,3.401,465,5.047,558,5.789,559,4.319,560,4.319,561,4.319,562,4.319,563,4.319,564,4.319,565,4.319]],["title/components/AlarmInfoComponent.html",[0,0.158,154,0.605]],["body/components/AlarmInfoComponent.html",[0,0.319,1,0.657,2,0.195,3,0.092,4,0.734,5,0.761,6,0.761,7,0.708,8,0.077,12,0.325,13,0.944,14,0.502,20,0.845,21,0.987,23,0.761,24,1.291,25,1.15,26,0.877,27,0.877,29,0.877,31,0.395,32,1.176,33,1.402,35,0.902,39,1.053,41,1.45,42,0.842,43,0.845,47,0.565,49,0.91,50,0.944,52,0.013,53,0.502,54,0.779,58,0.54,64,1.25,65,2.012,69,0.357,77,1.128,78,1.692,85,0.682,93,0.229,94,0.137,97,0.816,98,0.107,99,0.007,115,1.61,118,1.108,121,1.108,124,2.768,126,1.505,129,1.62,132,2.992,137,0.435,138,1.015,139,1.015,140,0.944,141,1.219,142,0.761,143,1.015,144,0.657,145,0.761,146,0.633,147,0.761,148,0.657,149,1.142,150,0.609,151,1.015,152,0.657,153,0.761,154,1.053,155,0.761,156,0.657,157,1.015,158,0.657,159,1.015,160,0.633,161,0.761,162,0.657,163,1.014,164,1.219,165,0.633,166,0.761,167,0.682,168,1.142,169,0.657,170,1.142,171,0.657,172,1.142,173,0.657,174,0.761,175,0.657,176,0.761,177,0.657,178,0.734,179,0.657,180,0.761,181,0.633,182,0.761,183,0.657,184,0.657,185,1.017,186,1.142,187,0.657,188,0.761,189,0.657,190,0.657,191,0.761,192,0.657,193,0.657,194,0.657,195,0.657,196,0.633,197,0.761,198,0.657,199,1.102,200,0.657,201,0.657,202,0.657,203,0.633,204,0.761,205,0.657,206,0.586,207,1.015,208,0.657,209,0.761,210,0.633,211,0.708,212,0.657,213,1.127,214,0.708,215,1.025,216,0.633,217,0.761,218,0.657,219,0.497,220,0.682,221,0.657,222,0.877,223,0.761,224,0.657,225,0.657,226,0.657,227,0.657,228,0.657,229,0.657,230,0.734,231,0.761,232,0.009,233,0.009,274,4.484,277,1.176,295,2.33,296,1.358,315,1.942,319,1.197,366,2.085,367,1.746,368,2.611,380,3.217,386,2.186,411,1.73,476,3.694,477,2.736,494,1.508,501,3.592,531,2.051,566,5.92,567,3.817,568,2.519,569,2.519,570,6.574,571,5.841,572,5.92,573,6.14,574,5.841,575,4.377,576,4.377,577,4.377,578,3.939,579,5.92,580,4.436,581,3.694,582,2.768,583,3.448,584,3.448,585,3.448,586,3.448,587,5.093,588,5.093,589,4.729,590,2.736,591,5.093,592,5.093,593,3.817,594,4.377,595,3.448,596,2.611,597,3.817,598,3.817,599,4.377,600,4.377,601,4.601,602,3.172,603,3.817,604,4.377,605,2.352]],["title/classes/AlarmItemFlatNode.html",[99,0.006,606,2.92]],["body/classes/AlarmItemFlatNode.html",[0,0.279,2,0.093,3,0.101,7,1.288,8,0.085,9,4.518,12,0.165,14,0.536,18,1.383,20,0.482,21,0.726,24,0.501,25,0.446,26,0.994,27,0.501,29,0.501,31,0.301,32,0.811,39,0.501,41,1,42,0.795,47,0.482,49,0.754,52,0.014,53,0.488,54,0.738,56,0.817,64,1.477,67,1.282,69,0.667,70,2.164,71,1.67,73,3.058,75,1.645,77,0.933,85,0.754,93,0.254,94,0.151,97,0.622,98,0.138,99,0.01,100,1.234,101,1,102,1.886,106,0.559,108,1.934,110,1.508,134,3.1,146,0.482,185,0.867,193,0.501,219,0.844,232,0.01,233,0.008,236,0.738,260,4.518,297,1.045,300,0.644,305,2.689,306,1.149,315,1.608,319,0.994,368,1.99,374,1.665,378,2.732,409,0.69,414,1.383,428,2.25,430,1.984,432,2.295,457,1.701,504,5,520,2.367,569,2.452,578,3.26,580,2.11,590,2.265,606,5.901,607,2.628,608,4.699,609,7.467,610,5.467,611,7.047,612,3.336,613,3.336,614,3.128,615,3.336,616,4.12,617,3.26,618,4.91,619,3.808,620,2.909,621,2.909,622,4.216,623,2.909,624,4.216,625,4.216,626,2.628,627,2.909,628,3.943,629,1.499,630,2.28,631,1.383,632,5.384,633,2.909,634,2.308,635,1.99,636,2.909,637,2.909,638,3.503,639,2.628,640,3.26,641,2.661,642,2.909,643,2.909,644,5.436,645,3.808,646,2.25,647,2.418,648,2.909,649,4.958,650,2.909,651,2.628,652,2.909,653,2.25,654,2.909,655,4.958,656,2.909,657,2.909,658,4.478,659,2.909,660,4.216,661,2.909,662,2.909,663,2.909,664,2.909,665,1.563,666,2.628,667,3.596,668,3.808,669,4.216,670,2.909,671,2.909,672,4.216,673,2.909,674,2.909,675,2.909,676,4.216,677,2.909,678,2.909,679,2.909,680,4.958,681,2.909,682,2.909,683,2.628,684,2.628,685,2.909,686,2.909,687,4.216,688,2.909,689,4.216,690,2.909,691,4.216,692,2.909,693,4.216,694,2.909,695,4.216,696,4.216,697,2.884,698,2.909,699,4.958,700,2.909,701,2.909,702,2.909,703,4.216,704,2.004,705,2.909,706,2.909,707,2.909,708,2.909,709,2.909,710,2.909,711,2.909,712,2.909,713,3.808,714,4.216,715,2.909,716,2.909,717,2.909,718,3.9,719,2.909,720,2.909,721,2.909,722,2.628,723,2.909,724,2.909,725,2.909,726,2.628,727,2.909,728,2.909,729,2.909,730,2.909,731,4.216,732,2.909,733,2.909,734,4.216,735,2.909,736,2.628,737,4.216,738,2.909,739,4.478,740,5.77,741,2.909,742,5.436,743,2.418,744,2.909,745,4.216,746,2.909,747,1.071,748,2.909,749,2.909,750,2.628,751,6.207,752,2.909,753,4.216,754,2.909,755,2.909,756,2.909,757,4.216,758,2.909,759,2.909,760,6.737,761,2.909,762,5.436,763,2.909,764,4.216,765,2.628,766,2.909,767,4.958,768,5.436,769,2.909,770,2.909,771,2.909,772,2.909,773,2.909,774,2.909,775,2.909,776,2.909,777,2.909,778,2.909,779,2.909,780,2.909,781,2.909,782,2.909,783,2.909,784,2.909,785,2.909]],["title/classes/AlarmItemNode.html",[99,0.006,632,2.92]],["body/classes/AlarmItemNode.html",[0,0.28,2,0.093,3,0.102,7,1.289,8,0.086,9,4.139,12,0.166,14,0.538,18,1.394,20,0.486,21,0.73,24,0.505,25,0.45,26,0.997,27,0.505,29,0.505,31,0.304,32,0.815,39,0.505,41,1.006,42,0.8,47,0.442,49,0.758,52,0.014,53,0.491,54,0.677,56,0.824,64,1.481,67,1.292,69,0.667,70,2.117,71,1.648,73,3.075,75,1.617,77,0.939,85,0.758,93,0.254,94,0.152,97,0.627,98,0.139,99,0.01,100,1.235,101,1.008,102,1.888,106,0.564,108,1.941,110,1.511,134,2.982,146,0.486,185,0.871,193,0.505,219,0.845,232,0.01,233,0.008,236,0.744,260,4.139,297,1.049,300,0.649,305,2.699,306,1.159,315,1.617,319,0.997,368,2.006,374,1.675,378,2.748,409,0.696,414,1.394,428,2.268,430,2.074,432,2.301,457,1.704,504,5.477,520,2.373,569,2.097,578,3.279,580,2.127,590,2.278,606,5.885,607,2.649,608,4.708,609,7.467,610,4.811,611,6.863,614,3.029,616,4.139,617,3.279,618,4.929,619,3.83,620,2.933,621,2.933,622,4.24,623,2.933,624,4.24,625,4.24,626,2.649,627,2.933,628,3.958,629,1.511,630,2.287,631,1.394,632,5.607,633,2.933,634,2.317,635,2.006,636,2.933,637,2.933,638,3.524,639,2.649,640,3.279,641,2.665,642,2.933,643,2.933,644,5.457,645,3.83,646,2.268,647,2.437,648,2.933,649,4.98,650,2.933,651,2.649,652,2.933,653,2.268,654,2.933,655,4.98,656,2.933,657,2.933,658,4.499,659,2.933,660,4.24,661,2.933,662,2.933,663,2.933,664,2.933,665,1.576,666,2.649,667,3.612,668,3.83,669,4.24,670,2.933,671,2.933,672,4.24,673,2.933,674,2.933,675,2.933,676,4.24,677,2.933,678,2.933,679,2.933,680,4.98,681,2.933,682,2.933,683,2.649,684,2.649,685,2.933,686,2.933,687,4.24,688,2.933,689,4.24,690,2.933,691,4.24,692,2.933,693,4.24,694,2.933,695,4.24,696,4.24,697,2.901,698,2.933,699,4.98,700,2.933,701,2.933,702,2.933,703,4.24,704,2.016,705,2.933,706,2.933,707,2.933,708,2.933,709,2.933,710,2.933,711,2.933,712,2.933,713,3.83,714,4.24,715,2.933,716,2.933,717,2.933,718,3.911,719,2.933,720,2.933,721,2.933,722,2.649,723,2.933,724,2.933,725,2.933,726,2.649,727,2.933,728,2.933,729,2.933,730,2.933,731,4.24,732,2.933,733,2.933,734,4.24,735,2.933,736,2.649,737,4.24,738,2.933,739,4.499,740,5.789,741,2.933,742,5.457,743,2.437,744,2.933,745,4.24,746,2.933,747,1.08,748,2.933,749,2.933,750,2.649,751,6.222,752,2.933,753,4.24,754,2.933,755,2.933,756,2.933,757,4.24,758,2.933,759,2.933,760,6.747,761,2.933,762,5.457,763,2.933,764,4.24,765,2.649,766,2.933,767,4.98,768,5.457,769,2.933,770,2.933,771,2.933,772,2.933,773,2.933,774,2.933,775,2.933,776,2.933,777,2.933,778,2.933,779,2.933,780,2.933,781,2.933,782,2.933,783,2.933,784,2.933,785,2.933,786,3.363,787,3.363]],["title/components/AlarmLabelComponent.html",[0,0.158,156,0.605]],["body/components/AlarmLabelComponent.html",[0,0.306,1,0.561,2,0.104,3,0.078,4,0.626,5,0.649,6,0.649,7,0.604,8,0.066,12,0.185,13,0.847,14,0.645,20,0.758,21,0.909,23,0.649,24,1.282,25,1.142,26,0.787,27,0.787,29,0.787,31,0.337,32,0.879,35,0.674,39,0.985,41,1.522,42,0.845,43,0.778,47,0.636,49,0.817,50,0.847,52,0.013,53,0.632,54,0.777,55,1.045,58,0.461,64,1.121,65,1.805,69,0.585,71,1.586,75,1.586,77,1.012,78,1.518,85,0.582,93,0.256,94,0.117,97,0.697,98,0.091,99,0.011,110,0.773,115,1.754,120,4.371,121,0.946,122,1.571,123,1.549,125,2.343,126,1.719,127,1.435,129,2.241,132,1.913,135,2.611,137,0.371,138,0.911,139,0.911,140,1.061,141,1.14,142,0.649,143,0.911,144,0.561,145,0.649,146,0.54,147,0.649,148,0.561,149,1.052,150,0.52,151,0.911,152,0.561,153,0.649,154,0.561,155,0.649,156,0.985,157,0.911,158,0.561,159,0.911,160,0.54,161,0.649,162,0.561,163,0.949,164,1.14,165,0.54,166,0.649,167,0.582,168,1.052,169,0.561,170,1.052,171,0.561,172,1.052,173,0.561,174,0.649,175,0.561,176,0.649,177,0.561,178,0.626,179,0.561,180,0.649,181,0.54,182,0.649,183,0.561,184,0.561,185,0.962,186,1.052,187,0.561,188,0.649,189,0.561,190,0.561,191,0.649,192,0.561,193,0.561,194,0.561,195,0.561,196,0.54,197,0.649,198,0.561,199,1.015,200,0.561,201,0.561,202,0.561,203,0.54,204,0.649,205,0.561,206,0.878,207,0.911,208,0.561,209,0.649,210,0.54,211,0.604,212,0.561,213,1.086,214,0.604,215,0.943,216,0.54,217,0.649,218,0.561,219,0.424,220,0.582,221,0.561,222,0.787,223,0.649,224,0.561,225,0.561,226,0.561,227,0.561,228,0.561,229,0.561,230,0.626,231,0.649,232,0.008,233,0.008,236,1.34,274,4.775,277,1.201,279,2.522,281,4.89,285,3.828,286,5.278,296,2.425,297,1.234,300,1.383,319,1.038,321,3.828,322,2.415,324,1.696,325,3.257,333,1.287,346,2.363,365,1.435,366,2.467,367,1.49,374,1.287,378,2.111,379,2.519,391,1.549,399,4.755,411,1.241,414,2.173,416,3.652,420,3.447,441,5.008,442,5.008,443,5.008,457,1.2,467,6.654,474,1.549,477,1.75,482,4.128,483,4.57,484,5.722,487,4.57,494,1.287,551,1.611,552,1.549,596,2.229,788,6.304,789,3.257,790,6.054,791,5.241,792,6.562,793,6.562,794,6.054,795,6.054,796,6.054,797,6.054,798,5.241,799,3.736,800,3.736,801,3.736,802,3.736,803,3.736,804,3.736,805,3.736,806,3.736,807,3.736,808,3.736,809,3.736,810,2.09,811,3.736,812,5.241,813,3.736,814,3.736,815,5.241,816,3.601,817,3.257,818,2.229,819,3.534,820,4.57,821,3.736,822,1.75]],["title/classes/AlarmSounds.html",[99,0.006,823,3.173]],["body/classes/AlarmSounds.html",[2,0.07,3,0.053,8,0.13,12,0.193,14,0.603,15,1.416,16,1.283,17,2.465,18,2.68,26,0.585,31,0.352,32,0.654,33,1.354,35,0.615,42,0.844,43,0.322,47,0.517,49,0.391,50,0.63,51,0.435,52,0.014,53,0.603,54,0.872,55,0.666,56,1.719,58,0.867,63,1.416,64,1.593,65,2.535,69,0.677,70,1.735,71,1.431,75,1.371,78,1.386,80,2.825,88,1.443,90,3.944,93,0.253,94,0.078,97,0.727,98,0.095,99,0.009,100,1.262,101,1.434,102,1.786,106,1.337,108,1.484,110,0.518,206,0.865,215,0.391,219,0.613,232,0.006,233,0.006,236,0.555,249,1.039,268,0.634,277,0.42,297,1.234,300,1.129,303,3.217,305,1.681,306,2.133,315,2.283,319,1.252,322,0.999,324,1.092,341,3.226,411,0.923,414,1.039,427,1.252,430,2.004,432,1.795,439,1.416,448,2.465,450,0.928,457,1.48,459,3.489,461,2.326,498,2.852,503,4.521,505,3.399,508,2.149,520,2.059,568,1.681,569,2.788,580,3.026,581,1.585,589,1.69,590,2.242,614,2.238,629,1.751,630,1.343,640,1.69,641,0.863,647,1.816,665,2.901,667,1.585,697,3.694,704,2.847,718,3.051,747,0.805,823,3.07,824,2.185,825,1.908,826,4.409,827,3.778,828,7.65,829,6.718,830,4.359,831,6.867,832,6.867,833,6.465,834,6.465,835,3.898,836,2.506,837,3.898,838,2.506,839,3.898,840,2.506,841,3.898,842,2.506,843,3.898,844,2.506,845,3.898,846,2.506,847,3.898,848,3.898,849,3.898,850,3.07,851,3.898,852,1.209,853,1.974,854,1.69,855,2.506,856,5.849,857,4.172,858,4.172,859,1.69,860,1.974,861,1.771,862,2.627,863,1.346,864,3.467,865,0.928,866,3.699,867,2.506,868,2.74,869,3.311,870,1.416,871,3.142,872,1.816,873,5.399,874,2.506,875,2.506,876,2.506,877,2.506,878,6.332,879,3.769,880,5.682,881,3.944,882,5.849,883,2.506,884,2.506,885,2.506,886,3.07,887,2.506,888,1.816,889,3.898,890,2.506,891,2.506,892,2.506,893,2.506,894,1.69,895,2.506,896,1.974,897,2.185,898,1.69,899,2.506,900,3.898,901,2.506,902,2.506,903,2.506,904,3.769,905,4.172,906,3.898,907,2.506,908,2.506,909,2.242,910,3.07,911,2.506,912,2.506,913,2.185,914,2.506,915,2.506,916,2.506,917,2.506,918,2.825,919,4.785,920,5.399,921,5.399,922,2.506,923,4.785,924,3.898,925,2.506,926,3.898,927,3.898,928,2.506,929,3.944,930,3.898,931,2.506,932,6.193,933,4.785,934,2.506,935,3.898,936,2.506,937,2.506,938,2.506,939,2.506,940,2.506,941,2.506,942,2.506,943,2.506,944,2.506,945,2.506,946,2.506,947,2.506,948,3.898,949,3.898,950,1.816,951,2.506,952,1.974,953,2.185,954,2.506,955,2.185,956,3.898,957,2.506,958,2.506,959,3.349,960,1.816,961,2.506,962,2.506,963,2.506,964,2.506,965,3.898,966,2.506,967,2.506,968,2.506,969,3.898,970,2.506,971,3.523,972,2.506,973,6.465,974,2.506,975,4.785,976,3.898,977,2.506,978,2.506,979,2.506,980,4.707,981,3.898,982,2.506,983,2.506,984,3.898,985,1.69,986,2.506,987,2.506,988,2.506,989,5.1,990,2.506,991,2.506,992,3.898,993,2.506,994,2.506,995,2.506,996,2.506,997,2.506,998,1.346,999,2.506,1000,3.769,1001,2.506,1002,1.974,1003,2.506,1004,1.974,1005,4.785,1006,2.825,1007,2.506,1008,3.898,1009,3.898,1010,2.506,1011,4.172,1012,3.898,1013,2.506,1014,3.898,1015,2.506,1016,3.898,1017,2.506,1018,2.506,1019,4.785,1020,4.785,1021,5.399,1022,2.506,1023,3.898,1024,2.506,1025,2.506,1026,3.898,1027,2.506,1028,2.506,1029,2.506,1030,4.785,1031,3.898,1032,3.898,1033,2.506,1034,4.172,1035,2.506,1036,7.019,1037,4.785,1038,5.399,1039,4.785,1040,3.898,1041,2.506,1042,2.506,1043,2.506,1044,5.399,1045,2.506,1046,2.506,1047,2.506,1048,2.506,1049,2.506,1050,2.506,1051,2.506,1052,1.974,1053,2.506,1054,1.816,1055,2.506,1056,2.185,1057,3.898,1058,2.506,1059,1.69,1060,2.506,1061,2.506,1062,3.898,1063,3.898,1064,1.974,1065,2.506,1066,2.506,1067,2.506,1068,2.506,1069,2.506,1070,3.399,1071,2.506,1072,2.506,1073,2.506,1074,3.898,1075,2.506,1076,2.506,1077,2.506,1078,2.506,1079,2.506]],["title/components/AlarmTileComponent.html",[0,0.158,158,0.605]],["body/components/AlarmTileComponent.html",[0,0.309,1,0.448,2,0.083,3,0.063,4,0.5,5,0.774,6,0.519,7,0.483,8,0.053,12,0.148,13,0.72,14,0.607,18,1.847,20,0.644,21,0.8,23,0.519,24,1.267,25,1.129,26,0.669,27,0.669,29,0.669,31,0.481,32,0.747,33,1.237,35,0.884,39,0.887,41,1.594,42,0.839,43,0.685,47,0.646,49,0.694,50,0.72,51,0.519,52,0.014,53,0.677,54,0.837,55,1.038,58,0.369,64,0.953,65,1.534,69,0.623,71,1.563,74,2.087,75,1.468,77,0.86,78,1.291,80,3.228,85,1.034,88,1.105,93,0.185,94,0.093,97,0.557,98,0.073,99,0.01,102,0.683,106,0.894,107,2.518,108,1.833,110,1.52,115,1.447,116,2.209,117,1.461,118,1.496,119,2.001,121,0.756,122,1.335,126,1.22,129,1.105,130,1.248,132,1.529,137,0.297,138,0.774,139,0.774,140,1.072,141,1.027,142,0.519,143,0.774,144,0.448,145,0.519,146,0.432,147,0.519,148,0.448,149,0.926,150,0.415,151,0.774,152,0.448,153,0.519,154,0.448,155,0.519,156,0.448,157,0.774,158,0.887,159,0.774,160,0.432,161,0.519,162,0.448,163,0.854,164,1.027,165,0.432,166,0.519,167,0.465,168,0.926,169,0.448,170,0.926,171,0.448,172,0.926,173,0.448,174,0.519,175,0.448,176,0.519,177,0.448,178,0.5,179,0.448,180,0.519,181,0.432,182,0.519,183,0.448,184,0.448,185,0.88,186,0.926,187,0.448,188,0.519,189,0.448,190,0.448,191,0.519,192,0.448,193,0.448,194,0.448,195,0.8,196,0.432,197,0.519,198,0.448,199,0.894,200,0.448,201,0.448,202,0.448,203,0.432,204,0.519,205,0.448,206,0.846,207,0.774,208,0.448,209,0.519,210,0.432,211,0.483,212,0.448,213,1.021,214,0.483,215,0.831,216,0.432,217,0.519,218,0.448,219,0.339,220,0.465,221,0.448,222,0.669,223,0.519,224,0.448,225,0.448,226,0.448,227,0.448,228,0.448,229,0.448,230,0.5,231,0.519,232,0.01,233,0.007,236,0.986,274,4.792,277,1.321,279,1.382,284,5.223,285,3.737,289,4.98,290,4.98,291,3.37,292,3.179,295,1.777,296,2.24,297,1.303,298,3.985,299,3.509,300,1.5,302,4.282,303,2.087,305,1.921,306,1.534,307,3.737,308,2.817,309,2.817,310,2.817,312,3.34,314,2.282,315,1.481,316,3.509,317,3.509,318,3.228,319,1.084,321,2.817,322,1.777,324,1.655,330,1.687,331,6.587,332,3.862,333,1.534,334,2.518,335,3.228,336,2.163,337,2.163,338,2.163,339,1.461,340,4.581,341,2.013,342,2.163,343,3.228,344,2.163,345,2.163,346,2.817,347,2.163,348,2.163,350,4.98,351,4.197,352,2.163,353,2.351,354,3.509,355,2.351,356,1.341,364,2.603,365,1.147,368,3.772,374,1.028,378,1.687,379,2.013,383,2.863,384,2.817,385,1.888,386,1.481,389,5.094,399,4.805,404,3.363,405,4.197,411,1.497,412,2.257,414,2.45,420,2.769,441,3.228,442,3.228,443,3.228,450,1.105,457,1.02,460,0.597,464,2.351,474,1.237,477,1.398,479,1.832,494,1.028,551,1.287,556,1.287,590,2.087,618,4.197,619,4.197,683,2.351,722,3.509,747,0.959,810,1.777,818,1.781,904,2.351,918,3.228,1080,6.327,1081,2.603,1082,4.298,1083,5.33,1084,4.455,1085,5.91,1086,5.91,1087,5.91,1088,4.455,1089,5.91,1090,5.91,1091,5.33,1092,4.455,1093,2.985,1094,2.985,1095,3.737,1096,6.658,1097,2.985,1098,2.985,1099,4.455,1100,2.985,1101,2.985,1102,2.985,1103,2.985,1104,2.985,1105,2.985,1106,2.985,1107,2.985,1108,2.985,1109,2.985,1110,7.35,1111,2.985,1112,3.004,1113,2.985,1114,2.985,1115,2.985,1116,3.228,1117,2.603,1118,5.91,1119,4.455,1120,2.985,1121,2.985,1122,2.985,1123,2.985,1124,2.985,1125,3.594,1126,2.985,1127,2.985,1128,3.884,1129,2.163,1130,2.985,1131,2.985,1132,2.985,1133,1.287,1134,7.35,1135,4.455,1136,5.91,1137,4.455,1138,4.455,1139,2.985,1140,1.461,1141,5.153,1142,3.175,1143,5.91,1144,4.455]],["title/components/AlarmTooltipComponent.html",[0,0.158,160,0.583]],["body/components/AlarmTooltipComponent.html",[0,0.322,1,0.608,2,0.112,3,0.085,4,1.193,5,0.703,6,0.703,7,0.654,8,0.071,12,0.312,13,0.896,14,0.476,20,0.801,21,0.948,23,0.703,24,1.286,25,1.146,26,0.832,27,0.832,29,0.832,31,0.365,32,1.139,35,0.712,39,1.02,41,1.471,42,0.836,43,0.812,47,0.608,52,0.013,53,0.543,54,0.748,58,0.5,64,1.185,65,1.908,69,0.33,77,1.07,78,1.968,81,3.305,85,0.631,93,0.22,94,0.127,97,0.755,98,0.099,99,0.006,106,0.679,110,1.471,116,1.678,118,1.403,121,1.025,125,1.445,126,1.555,137,0.402,138,0.963,139,0.963,140,1.098,141,1.18,142,0.703,143,0.963,144,0.608,145,0.703,146,0.585,147,0.703,148,0.608,149,1.098,150,0.563,151,0.963,152,0.608,153,0.703,154,0.608,155,0.703,156,0.608,157,0.963,158,0.608,159,0.963,160,1.062,161,0.703,162,0.608,163,0.982,164,1.18,165,0.585,166,0.703,167,0.631,168,1.098,169,0.608,170,1.098,171,0.608,172,1.098,173,0.608,174,0.703,175,0.608,176,0.703,177,0.608,178,0.679,179,0.608,180,0.703,181,0.585,182,0.703,183,0.608,184,0.608,185,0.99,186,1.098,187,0.608,188,0.703,189,0.608,190,0.608,191,0.703,192,0.608,193,0.608,194,0.608,195,0.608,196,0.585,197,0.703,198,0.608,199,1.059,200,0.608,201,0.608,202,0.608,203,0.585,204,0.703,205,0.608,206,0.542,207,0.963,208,0.608,209,0.703,210,0.585,211,0.654,212,0.608,213,1.107,214,0.654,215,0.984,216,0.585,217,0.703,218,0.608,219,0.717,220,0.631,221,0.608,222,0.832,223,0.703,224,0.608,225,0.608,226,0.608,227,0.608,228,0.608,229,0.608,230,0.679,231,0.703,232,0.009,233,0.009,274,4.486,277,0.929,279,1.256,292,3.768,295,2.21,296,1.719,297,0.679,300,0.781,312,4.328,315,1.842,319,1.18,366,2.255,374,1.908,380,1.981,386,2.258,389,4.259,409,1.146,411,1.739,446,5.071,460,1.262,476,4.295,477,3.333,479,1.605,501,3.479,531,1.896,550,1.981,556,1.745,572,6.031,573,6.189,578,3.735,579,5.785,580,4.295,581,3.503,582,2.56,583,3.188,584,3.188,585,3.188,586,3.188,587,4.83,588,4.83,589,4.58,590,2.595,591,4.83,592,4.83,595,3.188,597,3.529,598,3.529,638,4.014,653,2.729,747,1.3,1096,5.507,1141,3.529,1145,3.529,1146,4.014,1147,4.363,1148,4.83,1149,5.54,1150,4.953,1151,5.54,1152,2.711,1153,4.83,1154,5.54,1155,4.83,1156,5.54,1157,2.711,1158,6.316,1159,5.54,1160,5.54,1161,4.047,1162,4.047,1163,4.047,1164,4.047,1165,4.83,1166,5.54,1167,3.188,1168,4.047,1169,3.529,1170,3.188,1171,3.529,1172,4.047,1173,3.188,1174,3.529,1175,4.047,1176,4.047,1177,4.047,1178,4.047,1179,5.54,1180,2.933,1181,5.54,1182,2.933,1183,4.047,1184,4.047,1185,3.529,1186,4.047,1187,4.047]],["title/components/AntennaMarkerComponent.html",[0,0.158,162,0.605]],["body/components/AntennaMarkerComponent.html",[0,0.302,1,0.586,2,0.109,3,0.082,4,0.655,5,0.678,6,0.678,7,0.631,8,0.069,12,0.267,13,0.874,14,0.652,20,0.781,21,0.931,23,0.678,24,1.284,25,1.144,26,0.812,27,0.812,29,0.812,31,0.353,32,0.906,33,1.355,35,0.695,39,1.004,41,1.594,42,0.818,43,0.695,47,0.61,49,0.842,50,0.874,51,0.678,52,0.013,53,0.603,54,0.792,55,0.543,56,1.946,58,0.482,65,1.862,69,0.593,71,0.864,77,1.043,85,0.609,88,2.295,93,0.233,94,0.122,97,0.728,98,0.095,99,0.01,100,0.842,106,0.655,110,1.656,123,2.24,137,0.388,138,0.939,139,0.939,140,0.874,141,1.162,142,0.678,143,0.939,144,0.586,145,0.678,146,0.565,147,0.678,148,0.586,149,1.077,150,0.543,151,0.939,152,0.586,153,0.678,154,0.586,155,0.678,156,0.586,157,0.939,158,0.586,159,0.939,160,0.565,161,0.678,162,1.004,163,1.216,164,1.162,165,0.565,166,0.678,167,0.609,168,1.077,169,0.586,170,1.077,171,0.586,172,1.077,173,0.586,174,0.678,175,0.586,176,0.678,177,0.586,178,0.655,179,0.586,180,0.678,181,0.565,182,0.678,183,0.586,184,0.586,185,0.977,186,1.077,187,0.586,188,0.678,189,0.586,190,0.586,191,0.678,192,0.586,193,0.586,194,0.586,195,0.586,196,0.565,197,0.678,198,0.586,199,1.039,200,0.586,201,0.586,202,0.586,203,0.565,204,0.678,205,0.586,206,0.522,207,0.939,208,0.586,209,0.678,210,0.565,211,0.631,212,0.586,213,1.098,214,0.631,215,0.966,216,0.565,217,0.678,218,0.586,219,0.443,220,0.609,221,0.586,222,0.812,223,0.678,224,0.586,225,0.586,226,0.586,227,0.586,228,0.586,229,0.586,230,0.655,231,0.678,232,0.008,233,0.008,277,0.906,297,1.218,300,1.356,321,3.418,330,2.207,332,2.829,333,1.345,334,2.207,335,4.847,336,2.829,337,2.829,338,2.829,340,5.089,341,2.633,342,2.829,343,3.916,344,2.829,345,2.829,346,3.418,347,2.829,348,2.829,383,3.594,394,2.757,409,1.118,502,2.472,507,4.71,520,2.679,602,3.916,603,4.712,630,2.776,631,1.619,747,1.736,1129,4.847,1188,5.76,1189,6.261,1190,6.261,1191,2.633,1192,4.491,1193,3.916,1194,6.689,1195,6.198,1196,6.198,1197,6.198,1198,5.405,1199,3.905,1200,4.209,1201,4.257,1202,3.92,1203,3.905,1204,6.689,1205,3.905,1206,3.405,1207,6.689,1208,4.899,1209,5.405,1210,5.405,1211,3.405,1212,3.905,1213,3.905,1214,3.905,1215,3.905,1216,3.905,1217,3.905,1218,7.949,1219,3.905,1220,2.633,1221,2.633]],["title/components/AntennasComponent.html",[0,0.158,165,0.583]],["body/components/AntennasComponent.html",[0,0.325,1,0.694,2,0.128,3,0.097,4,0.775,5,0.803,6,0.803,7,0.747,8,0.081,12,0.228,13,0.979,14,0.615,16,3.1,20,0.875,21,1.014,23,0.803,24,1.293,25,1.153,26,0.909,27,0.909,29,0.909,31,0.417,32,1.015,35,0.778,39,1.076,42,0.8,43,0.868,47,0.554,49,0.943,50,0.979,51,0.803,52,0.013,53,0.668,54,0.717,55,0.643,58,0.57,59,3.611,69,0.494,77,1.169,85,1.052,93,0.211,94,0.144,97,0.861,98,0.113,99,0.007,100,0.72,106,1.015,108,1.878,126,1.058,129,1.71,133,2.482,137,0.459,138,1.052,139,1.052,140,0.979,141,1.245,142,0.803,143,1.052,144,0.694,145,0.803,146,0.668,147,0.803,148,0.694,149,1.173,150,0.643,151,1.052,152,0.694,153,0.803,154,0.694,155,0.803,156,0.694,157,1.052,158,0.694,159,1.052,160,0.668,161,0.803,162,0.694,163,1.164,164,1.245,165,1.036,166,0.803,167,0.72,168,1.173,169,0.694,170,1.173,171,0.694,172,1.173,173,0.694,174,0.803,175,0.694,176,0.803,177,0.694,178,0.775,179,0.694,180,0.803,181,0.668,182,0.803,183,0.694,184,0.694,185,1.035,186,1.173,187,0.694,188,0.803,189,0.694,190,0.694,191,0.803,192,0.694,193,0.694,194,0.694,195,0.694,196,0.668,197,0.803,198,0.694,199,1.132,200,0.694,201,0.694,202,0.694,203,0.668,204,0.803,205,0.694,206,0.618,207,1.052,208,0.694,209,0.803,210,0.668,211,0.747,212,0.694,213,1.141,214,0.747,215,1.052,216,0.668,217,0.803,218,0.694,219,0.525,220,0.72,221,0.694,222,0.909,223,0.803,224,0.694,225,0.694,226,0.694,227,0.694,228,0.694,229,0.694,230,0.775,231,0.803,232,0.009,233,0.009,277,1.015,297,0.775,300,0.892,409,1.578,460,0.923,479,1.339,498,3.147,507,4.531,520,2.473,556,2.611,557,4.386,641,2.468,697,3.611,862,2.075,894,4.082,1170,5.643,1222,4.028,1223,4.768,1224,3.421,1225,6.053,1226,6.053,1227,6.751,1228,6.053,1229,6.654,1230,6.053,1231,6.053,1232,4.62,1233,6.053,1234,4.62,1235,5.278,1236,4.028,1237,4.62]],["title/modules/AntennasModule.html",[234,0.922,1238,2.404]],["body/modules/AntennasModule.html",[2,0.153,3,0.115,8,0.097,52,0.013,93,0.294,94,0.172,98,0.186,99,0.009,137,0.546,162,1.198,163,1.104,165,1.154,167,1.244,169,1.198,171,1.255,232,0.01,233,0.01,234,1.547,235,4.511,236,1.216,237,3.034,238,2.278,239,2.811,245,3.906,246,3.309,247,3.739,248,2.914,249,2.278,250,2.11,252,2.914,253,3.166,254,2.369,268,1.391,269,2.574,270,2.689,271,3.277,272,3.105,520,1.827,1189,4.327,1190,4.327,1200,4.511,1238,5.129,1239,4.791,1240,4.791,1241,4.791,1242,4.791,1243,4.791,1244,4.761,1245,5.047,1246,5.494,1247,5.494,1248,4.791,1249,4.791,1250,4.327,1251,4.791,1252,3.981,1253,4.327,1254,4.791,1255,4.327,1256,4.791,1257,4.327,1258,4.327]],["title/injectables/AntennasService.html",[852,1.25,1200,2.277]],["body/injectables/AntennasService.html",[0,0.292,2,0.118,3,0.089,8,0.075,12,0.283,14,0.595,31,0.384,32,0.96,33,1.545,35,0.891,42,0.769,43,0.736,47,0.636,49,0.893,50,0.926,51,0.739,52,0.014,53,0.365,54,0.883,55,0.592,56,1.897,58,0.707,69,0.608,71,0.941,75,1.434,78,2.336,85,1.162,88,2.12,93,0.265,94,0.133,97,0.793,98,0.104,99,0.007,100,0.663,101,2.078,102,1.587,106,0.96,130,2.169,163,1.215,213,1.002,219,0.787,227,0.86,232,0.009,233,0.009,234,1.311,297,1.213,300,1.397,315,2.305,322,2.285,324,1.604,328,3.417,333,2.231,411,1.834,412,2.802,427,1.839,430,2.078,450,2.12,451,2.374,452,2.374,453,2.374,454,2.374,455,2.2,456,2.285,457,1.311,498,3.236,501,2.934,502,3.164,520,2.305,628,4.714,629,1.91,665,3.247,718,3.917,852,2.01,861,2.905,862,1.91,863,2.284,865,1.574,868,3.39,869,2.934,870,2.403,881,3.862,909,2.683,971,2.683,985,3.862,1059,3.862,1200,3.237,1202,3.622,1208,3.862,1238,3.417,1259,3.707,1260,3.077,1261,6.044,1262,6.932,1263,6.932,1264,6.932,1265,6.932,1266,6.932,1267,6.932,1268,6.044,1269,6.044,1270,6.044,1271,4.251,1272,5.728,1273,4.097,1274,4.251,1275,4.251,1276,4.251,1277,2.683,1278,4.251,1279,4.511,1280,4.251,1281,4.251,1282,4.251,1283,4.15,1284,5.728,1285,4.251,1286,5.023,1287,4.511,1288,4.251,1289,3.237,1290,4.251,1291,4.994,1292,1.696,1293,3.081,1294,3.707,1295,3.081,1296,2.689,1297,4.994,1298,3.707,1299,3.707,1300,4.251,1301,4.251,1302,4.251,1303,4.251,1304,4.251,1305,4.251,1306,3.707,1307,4.251,1308,3.707,1309,4.251,1310,3.707,1311,4.251,1312,3.707,1313,4.251,1314,3.696,1315,3.55,1316,3.392,1317,3.392,1318,2.683,1319,2.683,1320,4.251,1321,3.422]],["title/components/AntennasSidebarComponent.html",[0,0.158,169,0.605]],["body/components/AntennasSidebarComponent.html",[0,0.297,1,0.458,2,0.126,3,0.064,4,0.905,5,0.938,6,0.53,7,0.493,8,0.054,12,0.315,13,1.031,14,0.624,16,2.764,20,0.654,21,0.81,23,0.53,24,1.268,25,1.13,26,0.679,27,0.679,29,0.679,31,0.275,32,0.759,33,1.246,35,0.582,39,0.897,40,3.051,41,1.235,42,0.834,43,0.582,47,0.593,49,0.705,50,0.732,51,1.038,52,0.013,53,0.574,54,0.842,55,0.831,56,1.694,58,0.376,64,0.968,69,0.671,70,1.511,71,1.001,75,1.001,77,0.874,78,1.73,85,0.841,89,4.026,93,0.222,94,0.095,97,0.844,98,0.074,99,0.005,100,1.042,102,0.698,106,1.191,108,2.073,110,1.319,115,1.955,116,2.946,117,2.214,118,1.366,119,3.002,121,1.752,122,2.074,123,1.876,126,1.691,127,1.738,129,2.688,130,0.854,132,4.047,135,1.951,136,3.051,137,0.303,138,0.786,139,0.786,140,0.872,141,1.038,142,0.53,143,0.786,144,0.458,145,0.53,146,0.441,147,0.53,148,0.458,149,0.938,150,0.424,151,0.786,152,0.458,153,0.53,154,0.458,155,0.53,156,0.458,157,0.786,158,0.458,159,0.786,160,0.441,161,0.53,162,0.458,163,1.21,164,1.038,165,0.441,166,0.53,167,0.475,168,0.938,169,0.897,170,0.938,171,0.458,172,0.938,173,0.458,174,0.53,175,0.458,176,0.53,177,0.458,178,0.511,179,0.458,180,0.53,181,0.441,182,0.53,183,0.458,184,0.458,185,0.887,186,0.938,187,0.458,188,0.53,189,0.458,190,0.458,191,0.53,192,0.458,193,0.458,194,0.458,195,0.458,196,0.441,197,0.53,198,0.458,199,0.905,200,0.458,201,0.458,202,0.458,203,0.441,204,0.53,205,0.458,206,0.605,207,0.786,208,0.458,209,0.53,210,0.441,211,0.493,212,0.458,213,1.027,214,0.493,215,0.841,216,0.441,217,0.53,218,0.458,219,0.346,220,0.475,221,0.458,222,0.679,223,0.53,224,0.458,225,0.458,226,0.458,227,0.458,228,0.458,229,0.458,230,0.511,231,0.53,232,0.007,233,0.007,277,1.16,278,1.264,279,1.674,296,1.404,297,0.511,300,0.588,306,1.558,314,2.317,315,2.456,319,1.039,328,2.699,365,1.738,366,2.47,367,2.544,368,1.818,370,3.278,374,1.558,380,3.615,383,2.431,384,2.861,386,1.985,391,2.475,409,0.936,430,2.354,457,0.698,460,1.193,472,3.563,476,3.412,477,3.131,478,3.278,479,1.848,481,3.374,494,2.383,498,3.225,502,2.99,503,2.861,504,3.278,508,1.369,531,2.528,550,1.492,551,2.751,552,2.946,595,2.401,596,1.818,601,2.401,602,2.209,608,2.861,616,3.91,617,4.026,630,2.705,631,1.264,641,2.614,646,3.051,726,2.401,747,1.453,810,1.805,818,2.699,819,2.055,822,2.12,862,1.369,894,3.051,909,2.12,1133,1.314,1185,2.658,1188,5.606,1200,4.407,1220,3.638,1221,3.638,1224,3.605,1229,5.562,1236,5.562,1250,6.094,1255,2.401,1260,2.899,1291,6.032,1322,2.209,1323,4.25,1324,3.563,1325,3.051,1326,5.206,1327,5.971,1328,5.971,1329,3.945,1330,5.971,1331,5.396,1332,3.048,1333,4.525,1334,3.563,1335,3.048,1336,3.563,1337,4.525,1338,3.048,1339,3.048,1340,3.048,1341,3.048,1342,5.396,1343,4.525,1344,3.048,1345,3.048,1346,3.051,1347,4.525,1348,3.048,1349,3.048,1350,2.431,1351,3.048,1352,3.048,1353,1.561,1354,1.428,1355,1.723,1356,2.658,1357,3.048,1358,3.048,1359,3.048,1360,3.048,1361,4.525,1362,5.971,1363,4.525,1364,4.525,1365,4.525,1366,4.525,1367,4.525,1368,5.562,1369,3.048,1370,1.638,1371,6.616,1372,5.971,1373,5.396,1374,4.525,1375,2.658,1376,3.048,1377,4.525,1378,3.048,1379,3.048,1380,3.048,1381,4.525,1382,2.658,1383,2.401,1384,3.048,1385,3.048,1386,2.209,1387,2.658,1388,3.048,1389,2.401,1390,2.401]],["title/components/AntennasSummaryComponent.html",[0,0.158,171,0.605]],["body/components/AntennasSummaryComponent.html",[0,0.307,1,0.633,2,0.117,3,0.088,4,0.706,5,0.732,6,0.732,7,0.681,8,0.074,12,0.319,13,0.921,14,0.673,20,0.823,21,0.968,23,0.732,24,1.289,25,1.149,26,0.855,27,0.855,29,0.855,31,0.38,32,0.955,33,1.202,35,0.732,39,1.037,42,0.831,43,0.732,47,0.575,49,0.887,50,1.117,51,0.989,52,0.013,53,0.593,54,0.764,55,0.792,56,1.861,58,0.52,69,0.639,77,1.099,78,2.001,85,1.005,93,0.251,94,0.132,97,0.786,98,0.103,99,0.007,100,1.076,101,1.707,102,0.965,106,1.081,108,1.307,110,1.177,115,1.032,121,1.067,137,0.419,138,0.989,139,0.989,140,0.921,141,1.2,142,0.732,143,0.989,144,0.633,145,0.732,146,0.609,147,0.732,148,0.633,149,1.121,150,0.586,151,0.989,152,0.633,153,0.732,154,0.633,155,0.732,156,0.633,157,0.989,158,0.633,159,0.989,160,0.609,161,0.732,162,0.633,163,1.197,164,1.2,165,0.609,166,0.732,167,0.657,168,1.121,169,0.633,170,1.121,171,1.037,172,1.121,173,0.633,174,0.732,175,0.633,176,0.732,177,0.633,178,0.706,179,0.633,180,0.732,181,0.609,182,0.732,183,0.633,184,0.633,185,1.004,186,1.121,187,0.633,188,0.732,189,0.633,190,0.633,191,0.732,192,0.633,193,0.633,194,0.633,195,0.633,196,0.609,197,0.732,198,0.633,199,1.081,200,0.633,201,0.633,202,0.633,203,0.609,204,0.732,205,0.633,206,0.564,207,0.989,208,0.633,209,0.732,210,0.609,211,0.681,212,0.633,213,1.145,214,0.681,215,1.005,216,0.609,217,0.732,218,0.633,219,0.478,220,0.657,221,0.633,222,0.855,223,0.732,224,0.633,225,0.633,226,0.633,227,0.633,228,0.633,229,0.633,230,0.706,231,0.732,232,0.009,233,0.009,268,1.067,319,1.083,322,2.271,374,1.451,409,1.177,414,2.36,460,1.289,502,2.572,508,3.472,509,4.125,531,3.235,630,2.662,631,1.747,1180,4.125,1182,4.125,1188,5.507,1200,4.645,1220,2.841,1221,2.841,1255,3.318,1257,5.986,1289,3.218,1325,2.841,1346,3.839,1353,3.695,1354,3.235,1355,4.475,1356,3.674,1391,3.053,1392,3.839,1393,5.079,1394,4.484,1395,4.484,1396,3.053,1397,4.213,1398,4.484,1399,4.484,1400,4.213,1401,3.839,1402,3.601,1403,5.387,1404,4.125,1405,4.213,1406,4.213,1407,3.674,1408,4.213,1409,3.053,1410,5.693,1411,4.213,1412,4.213,1413,4.213,1414,3.318,1415,4.213]],["title/components/AppComponent.html",[0,0.158,173,0.605]],["body/components/AppComponent.html",[0,0.279,1,0.396,2,0.073,3,0.055,4,0.442,5,0.858,6,0.704,7,0.426,8,0.046,12,0.244,13,0.799,14,0.667,20,0.586,21,0.742,23,0.458,24,1.257,25,1.121,26,0.609,27,0.609,29,0.609,31,0.238,32,0.68,33,1.449,34,3.537,35,0.985,39,0.833,42,0.777,43,0.521,47,0.628,49,0.632,50,0.968,51,0.964,52,0.014,53,0.543,54,0.87,55,0.772,56,1.842,57,2.654,58,0.325,59,4.57,60,3.308,63,2.291,64,1.057,69,0.655,70,1.384,71,1.603,75,0.583,77,0.783,78,1.607,85,0.632,88,0.976,91,5.204,93,0.248,94,0.082,98,0.064,99,0.008,100,1.059,101,1.215,102,1.37,106,1.324,108,1.257,110,1.472,115,1.773,116,2.482,118,1.516,120,2.563,121,1.026,122,1.974,123,1.68,124,1.667,125,1.447,126,1.658,129,2.216,130,2.162,133,3.396,135,1.137,137,0.262,138,0.858,139,0.704,140,0.655,141,0.964,142,0.458,143,0.704,144,0.396,145,0.458,146,0.381,147,0.458,148,0.396,149,0.858,150,0.367,151,0.704,152,0.396,153,0.458,154,0.396,155,0.458,156,0.396,157,0.704,158,0.396,159,0.704,160,0.381,161,0.458,162,0.396,163,1.029,164,0.964,165,0.381,166,0.458,167,0.411,168,0.858,169,0.396,170,0.858,171,0.396,172,0.858,173,0.833,174,0.458,175,0.396,176,0.458,177,0.396,178,0.442,179,0.396,180,0.458,181,0.381,182,0.458,183,0.396,184,0.396,185,0.946,186,0.858,187,0.396,188,0.458,189,0.396,190,0.396,191,0.458,192,0.396,193,0.742,194,0.396,195,0.899,196,0.381,197,0.458,198,0.396,199,0.828,200,0.396,201,0.396,202,0.396,203,0.381,204,0.458,205,0.396,206,0.353,207,0.704,208,0.396,209,0.458,210,0.381,211,0.799,212,0.396,213,1.088,214,0.426,215,0.77,216,0.381,217,0.458,218,0.396,219,0.299,220,0.411,221,0.396,222,0.899,223,0.458,224,0.396,225,0.396,226,0.396,227,0.396,228,0.396,229,0.396,230,0.442,231,0.458,232,0.006,233,0.006,250,1.557,268,1.251,277,0.828,279,1.961,296,1.532,297,1.139,298,1.777,300,0.954,302,1.91,306,2.062,319,1.087,324,1.904,365,1.012,366,1.98,367,1.617,374,1.701,380,2.714,383,1.416,385,1.667,386,0.876,391,1.092,414,1.68,416,1.184,430,1.895,435,1.235,455,1.557,459,2.418,460,0.81,474,1.092,475,1.572,477,1.235,479,1.607,481,1.489,482,2.076,494,1.396,502,2.212,508,2.839,514,4.368,531,1.899,569,2.13,596,2.418,608,4.804,610,2.937,630,2.693,631,1.092,634,2.34,653,2.733,747,1.302,816,1.984,818,1.572,820,2.298,822,1.235,825,1.984,830,2.733,871,4.175,872,1.91,904,6.033,905,5.926,910,4.715,913,2.298,929,2.733,959,2.961,960,4.925,1095,3.997,1125,3.739,1133,3.245,1152,3.222,1165,4.307,1171,2.298,1173,2.076,1224,2.291,1289,2.291,1296,2.563,1354,1.235,1383,2.076,1387,2.298,1390,2.076,1396,1.91,1416,2.298,1417,3.069,1418,4.939,1419,4.053,1420,6.796,1421,6.971,1422,6.321,1423,6.796,1424,4.252,1425,4.053,1426,4.053,1427,4.053,1428,5.512,1429,5.545,1430,7.117,1431,6.796,1432,2.635,1433,4.053,1434,3.89,1435,4.501,1436,3.534,1437,4.053,1438,2.635,1439,4.018,1440,3.192,1441,4.053,1442,2.635,1443,7.242,1444,5.545,1445,5.545,1446,5.545,1447,4.053,1448,4.053,1449,5.545,1450,4.053,1451,2.635,1452,4.053,1453,2.635,1454,3.739,1455,2.635,1456,2.635,1457,2.937,1458,2.635,1459,4.053,1460,4.835,1461,2.635,1462,4.053,1463,2.635,1464,2.635,1465,2.635,1466,2.635,1467,2.635,1468,4.939,1469,6.971,1470,5.926,1471,4.939,1472,4.939,1473,4.939,1474,2.635,1475,5.545,1476,2.635,1477,5.545,1478,2.635,1479,2.635,1480,2.635,1481,1.91,1482,2.635,1483,2.298,1484,1.91,1485,1.777,1486,2.298,1487,1.572,1488,1.91,1489,2.635,1490,2.635,1491,5.545,1492,5.545,1493,5.545,1494,2.635,1495,2.635,1496,2.635,1497,2.635,1498,2.635,1499,2.635,1500,2.635,1501,2.298,1502,1.667,1503,2.635,1504,2.635,1505,4.053,1506,4.939,1507,2.298,1508,2.298,1509,5.545,1510,4.053,1511,4.053,1512,4.053,1513,4.053,1514,4.939,1515,4.053,1516,3.534,1517,2.635,1518,2.635,1519,4.053,1520,4.053,1521,4.053,1522,4.053,1523,4.053,1524,5.545,1525,4.053,1526,2.635,1527,3.534,1528,2.635,1529,2.298,1530,4.307,1531,2.635,1532,4.939,1533,2.635,1534,2.298,1535,2.635,1536,2.298,1537,2.635,1538,2.635,1539,4.053,1540,2.635,1541,4.053,1542,2.635,1543,2.635,1544,2.635,1545,2.635,1546,2.635,1547,2.635,1548,1.416,1549,4.053,1550,2.635]],["title/modules/AppModule.html",[234,0.922,1551,2.92]],["body/modules/AppModule.html",[2,0.147,3,0.111,8,0.093,12,0.261,25,0.707,52,0.013,93,0.297,94,0.165,98,0.161,99,0.008,137,0.525,173,1.249,232,0.01,233,0.01,234,1.724,235,4.468,236,1.17,237,2.982,238,2.982,239,2.763,245,3.869,246,3.277,247,3.704,248,2.845,249,2.191,250,2.03,252,2.845,254,2.279,262,5.196,263,4.78,264,3.153,265,4.78,266,2.84,267,2.987,268,1.338,269,2.476,270,2.586,271,3.153,272,2.987,1238,4.716,1244,4.716,1245,5,1252,3.83,1253,4.163,1254,4.608,1417,2.845,1484,4.78,1485,3.564,1551,6.226,1552,4.608,1553,4.608,1554,4.608,1555,4.608,1556,5.331,1557,5.331,1558,5,1559,5.331,1560,4.716,1561,5.285,1562,6.597,1563,6.597,1564,6.597,1565,5.752,1566,4.608,1567,5.752,1568,3.83,1569,4.608,1570,4.608,1571,5.285,1572,5.285,1573,4.608,1574,5.285,1575,4.608,1576,5.285,1577,5.285]],["title/modules/AppRoutingModule.html",[234,0.922,1556,2.717]],["body/modules/AppRoutingModule.html",[0,0.322,2,0.152,3,0.115,8,0.096,52,0.013,75,1.209,93,0.295,94,0.171,98,0.164,102,1.25,137,0.542,144,1.011,163,0.789,165,0.973,181,0.973,185,0.937,190,1.197,195,1.011,196,0.973,199,0.915,203,0.973,210,1.055,211,0.883,213,0.789,216,0.973,232,0.01,233,0.01,234,1.541,236,1.209,237,2.791,238,2.264,239,2.586,246,3.304,248,2.903,249,2.264,250,2.097,252,2.903,253,3.154,254,2.355,268,1.383,269,2.558,270,2.672,306,2.319,950,5.995,1353,4.008,1354,3.419,1417,2.355,1439,4.878,1487,3.257,1502,3.453,1556,5.608,1570,4.761,1578,4.761,1579,4.761,1580,4.761,1581,4.761,1582,5.374,1583,4.301,1584,5.46,1585,5.46,1586,5.46,1587,5.46,1588,5.46,1589,3.294,1590,4.761,1591,5.46,1592,5.46,1593,5.46,1594,5.46,1595,3.957,1596,4.301,1597,5.46,1598,6.475,1599,5.46,1600,5.46,1601,5.46,1602,6.732,1603,5.46,1604,5.46,1605,4.761,1606,7.112,1607,5.46,1608,5.46,1609,5.46,1610,5.46,1611,5.46]],["title/guards/AuthLoginGuard.html",[1598,3.173,1612,3.173]],["body/guards/AuthLoginGuard.html",[2,0.141,3,0.106,8,0.089,12,0.367,14,0.703,20,0.733,31,0.458,35,0.826,43,0.826,47,0.546,49,1.002,50,1.039,51,1.226,52,0.013,53,0.606,54,0.836,55,0.982,56,1.574,69,0.656,70,1.42,71,1.731,75,1.759,81,3.834,88,2.379,91,5.602,93,0.266,94,0.159,98,0.123,99,0.008,100,1.193,101,1.927,102,1.161,232,0.01,233,0.01,236,1.642,305,3.2,319,1.15,414,3.243,427,2.606,432,2.601,435,3.011,475,3.834,501,2.597,520,1.686,589,4.333,628,4.947,629,2.277,634,2.379,852,1.994,853,3.993,871,4.32,896,3.993,898,4.333,959,3.767,971,2.375,1112,4.333,1202,4.064,1295,3.673,1296,3.206,1354,3.011,1355,2.865,1417,3.2,1435,5.363,1487,3.024,1502,4.842,1598,5.062,1606,6.47,1612,6.03,1613,7.42,1614,5.07,1615,6.427,1616,6.161,1617,6.427,1618,5.07,1619,5.07,1620,3.834,1621,6.427,1622,7.656,1623,7.656,1624,5.07,1625,7.823,1626,6.47,1627,6.427,1628,5.07,1629,5.604,1630,7.056,1631,6.427,1632,6.427,1633,4.42,1634,5.07,1635,5.07,1636,5.07,1637,4.42,1638,5.07,1639,5.07]],["title/modules/AuthModule.html",[234,0.922,1557,2.717]],["body/modules/AuthModule.html",[2,0.172,3,0.13,8,0.109,52,0.013,93,0.29,94,0.194,98,0.177,99,0.01,137,0.616,181,1.187,232,0.011,233,0.011,234,1.664,236,1.373,237,3.196,238,2.571,239,2.382,246,3.402,248,3.134,249,2.571,250,2.382,252,3.134,253,3.404,254,2.674,263,5.266,264,3.699,265,5.266,266,3.332,267,3.505,268,1.57,269,2.905,270,3.035,1557,5.625,1640,5.407,1641,5.407,1642,6.201,1643,6.201,1644,6.201]],["title/injectables/AuthService.html",[852,1.25,871,2.165]],["body/injectables/AuthService.html",[2,0.094,3,0.071,8,0.059,12,0.342,14,0.649,31,0.304,32,0.816,33,1.065,35,0.625,43,0.625,47,0.63,49,0.976,50,0.787,51,1.203,52,0.014,53,0.685,54,0.917,55,0.963,56,1.533,64,1.222,69,0.69,70,2.085,71,1.673,75,1.648,81,4.129,85,1.16,88,1.801,93,0.241,94,0.105,98,0.082,99,0.005,100,1.112,101,1.009,102,1.673,106,0.816,108,1.772,206,0.888,232,0.008,233,0.008,250,1.869,268,1.752,297,1.113,300,1.282,305,2.098,306,2.384,314,2.926,319,1.261,374,1.676,411,0.797,427,2.01,432,1.618,457,1.584,501,4.175,520,1.119,569,2.098,582,5.248,590,2.279,628,4.842,629,1.511,634,1.801,640,4.221,665,3.542,697,2.902,704,2.595,743,5.704,827,2.749,852,1.772,853,2.65,854,2.269,859,2.269,860,2.65,861,2.317,863,1.808,864,3.525,869,3.401,871,2.614,886,3.831,898,3.28,910,3.831,952,6.651,959,3.956,960,4.536,971,1.576,1004,5.755,1147,3.831,1273,4.513,1295,2.438,1296,2.128,1355,2.749,1402,3.076,1428,5.458,1454,4.221,1485,4.667,1502,4.377,1568,2.438,1616,6.095,1620,3.408,1629,6.371,1645,2.934,1646,6.26,1647,6.921,1648,6.921,1649,6.26,1650,6.26,1651,6.26,1652,4.865,1653,6.26,1654,5.458,1655,6.26,1656,6.26,1657,6.26,1658,6.26,1659,6.26,1660,4.865,1661,4.865,1662,4.865,1663,2.934,1664,4.865,1665,4.865,1666,3.365,1667,4.865,1668,3.365,1669,5.23,1670,8.299,1671,3.365,1672,6.371,1673,2.381,1674,3.365,1675,3.365,1676,3.365,1677,4.865,1678,6.592,1679,3.365,1680,4.221,1681,4.242,1682,3.365,1683,3.365,1684,7.657,1685,3.365,1686,3.365,1687,4.865,1688,3.365,1689,6.921,1690,6.921,1691,4.865,1692,3.365,1693,4.865,1694,3.365,1695,3.365,1696,3.365,1697,4.865,1698,3.365,1699,3.365,1700,3.365,1701,4.865,1702,3.365,1703,3.365,1704,5.713,1705,4.242,1706,5.713,1707,4.865,1708,3.365,1709,3.365,1710,2.934,1711,3.365,1712,3.365,1713,3.365,1714,3.365,1715,3.365,1716,3.365,1717,3.365,1718,4.865,1719,2.007,1720,3.365,1721,3.365,1722,3.365,1723,3.365,1724,3.365,1725,3.365,1726,3.365,1727,3.365,1728,3.365,1729,3.365,1730,3.365,1731,3.365,1732,3.365,1733,3.365,1734,3.365,1735,3.365,1736,3.365,1737,3.365,1738,4.865,1739,4.865,1740,3.365,1741,3.365,1742,3.365,1743,3.365,1744,3.365,1745,3.365,1746,3.365,1747,3.365]],["title/components/ButtonsComponent.html",[0,0.158,175,0.605]],["body/components/ButtonsComponent.html",[0,0.316,1,1.04,2,0.135,3,0.102,4,0.816,5,0.846,6,0.846,7,0.787,8,0.086,12,0.241,13,1.289,14,0.538,15,3.539,20,0.905,21,1.04,23,0.846,24,1.296,25,1.155,26,0.94,27,0.94,29,0.94,31,0.44,35,0.94,39,1.097,41,1.511,42,0.83,43,0.89,47,0.535,49,0.976,50,1.012,52,0.013,53,0.538,54,0.577,58,0.601,64,1.34,65,2.157,69,0.397,77,1.209,78,1.814,85,0.759,93,0.218,94,0.152,97,0.908,98,0.119,99,0.008,137,0.484,138,1.088,139,1.088,140,1.012,141,1.27,142,0.846,143,1.088,144,0.731,145,0.846,146,0.704,147,0.846,148,0.731,149,1.203,150,0.677,151,1.088,152,0.731,153,0.846,154,0.731,155,0.846,156,0.731,157,1.088,158,0.731,159,1.088,160,0.704,161,0.846,162,0.731,163,1.057,164,1.27,165,0.704,166,0.846,167,0.759,168,1.203,169,0.731,170,1.203,171,0.731,172,1.203,173,0.731,174,0.846,175,1.097,176,0.846,177,0.731,178,0.816,179,0.731,180,0.846,181,0.704,182,0.846,183,0.731,184,0.731,185,1.052,186,1.203,187,0.731,188,0.846,189,0.731,190,0.731,191,0.846,192,0.731,193,0.731,194,0.731,195,0.731,196,0.704,197,0.846,198,0.731,199,1.161,200,0.731,201,0.731,202,1.04,203,0.704,204,0.846,205,0.731,206,0.651,207,1.088,208,0.731,209,0.846,210,0.704,211,0.787,212,0.731,213,1.153,214,0.787,215,1.079,216,0.704,217,0.846,218,0.731,219,0.553,220,0.759,221,0.731,222,0.94,223,0.846,224,0.731,225,0.731,226,0.731,227,0.731,228,0.731,229,0.731,230,0.816,231,0.846,232,0.01,233,0.01,306,2.157,411,1.483,460,1.251,630,2.157,1116,4.537,1147,4.932,1748,4.244,1749,6.262,1750,6.262,1751,6.923,1752,6.262,1753,6.262,1754,4.868]],["title/injectables/CdbService.html",[852,1.25,866,2.548]],["body/injectables/CdbService.html",[0,0.251,2,0.14,3,0.106,8,0.089,12,0.316,14,0.55,15,3.617,31,0.455,32,1.073,33,1.312,35,0.823,43,0.823,47,0.621,51,0.875,52,0.013,53,0.433,54,0.597,55,0.701,56,1.966,69,0.671,78,2.145,90,4.316,93,0.258,94,0.158,98,0.123,99,0.008,100,0.785,101,1.51,219,0.938,232,0.01,233,0.01,268,2.143,297,1.37,300,1.236,409,1.324,411,1.193,427,2.055,457,1.465,460,1.479,501,3.278,502,3.324,568,2.76,569,2.76,590,2.998,614,3.237,629,2.263,665,3.827,718,2.847,852,2.182,854,3.397,863,2.706,866,4.048,868,3.762,869,3.791,870,2.847,881,5.415,888,4.638,897,6.454,909,2.998,1002,5.041,1070,5.581,1095,4.048,1129,3.65,1293,3.65,1336,5.041,1755,4.392,1756,7.402,1757,7.402,1758,7.402,1759,7.402,1760,7.402,1761,7.402,1762,4.392,1763,6.401,1764,5.037,1765,7.402,1766,6.401,1767,6.401,1768,6.454,1769,5.037,1770,6.401,1771,5.037,1772,5.037,1773,5.581,1774,5.037,1775,6.401,1776,5.037,1777,5.037,1778,5.037,1779,5.037,1780,5.037,1781,5.037,1782,5.581,1783,5.037,1784,6.401,1785,5.581,1786,5.037,1787,5.037]],["title/modules/DataModule.html",[234,0.922,245,1.972]],["body/modules/DataModule.html",[2,0.167,3,0.126,8,0.106,12,0.296,52,0.013,56,1.744,93,0.289,94,0.187,98,0.185,99,0.009,137,0.595,219,0.808,232,0.011,233,0.011,234,1.8,236,1.326,237,2.952,238,2.484,239,2.919,245,4.135,248,3.071,249,2.484,250,2.301,252,3.071,253,3.336,254,2.584,448,4.503,460,1.423,630,2.806,866,5.151,868,3.816,869,3.069,870,3.386,1273,4.503,1424,4.603,1567,6.626,1568,4.341,1788,5.224,1789,5.224,1790,5.991,1791,5.991,1792,5.991,1793,5.991]],["title/modules/HealthModule.html",[234,0.922,1558,2.548]],["body/modules/HealthModule.html",[0,0.278,2,0.166,3,0.125,8,0.105,12,0.295,52,0.013,65,2.446,93,0.288,94,0.186,98,0.191,99,0.009,137,0.592,177,1.268,178,1.271,232,0.011,233,0.011,234,1.797,236,1.319,237,3.143,238,2.471,239,2.29,245,3.981,246,3.373,247,3.811,248,3.062,249,2.471,250,2.29,252,3.062,253,3.326,254,2.571,268,1.92,269,2.793,270,2.917,271,3.556,272,3.369,460,1.419,1258,4.695,1558,5.355,1794,5.198,1795,5.198,1796,5.961,1797,5.198,1798,5.961,1799,4.695]],["title/components/HealthSummaryComponent.html",[0,0.158,177,0.605]],["body/components/HealthSummaryComponent.html",[0,0.311,1,0.557,2,0.103,3,0.078,4,0.622,5,0.645,6,0.645,7,0.6,8,0.065,12,0.298,13,0.844,14,0.614,20,0.754,21,0.906,23,0.645,24,1.281,25,1.142,26,0.783,27,0.783,29,0.783,31,0.335,32,0.875,33,1.421,35,0.671,39,0.983,42,0.834,43,0.671,47,0.614,49,0.813,50,1.058,51,0.907,52,0.013,53,0.562,54,0.817,55,0.726,56,1.602,58,0.745,69,0.63,85,1.075,93,0.265,94,0.116,97,0.973,98,0.09,99,0.006,100,0.94,101,1.808,102,1.194,106,1.097,108,1.152,110,1.079,115,0.909,121,0.94,130,2.1,137,0.369,138,0.907,139,0.907,140,0.844,141,1.137,142,0.645,143,0.907,144,0.557,145,0.645,146,0.537,147,0.645,148,0.557,149,1.048,150,0.517,151,0.907,152,0.557,153,0.645,154,0.557,155,0.645,156,0.557,157,0.907,158,0.557,159,0.907,160,0.537,161,0.645,162,0.557,163,0.946,164,1.137,165,0.537,166,0.645,167,0.579,168,1.048,169,0.557,170,1.048,171,0.557,172,1.048,173,0.557,174,0.645,175,0.557,176,0.645,177,0.983,178,1.295,179,0.557,180,0.645,181,0.537,182,0.645,183,0.557,184,0.557,185,0.959,186,1.048,187,0.557,188,0.645,189,0.557,190,0.557,191,0.645,192,0.557,193,0.557,194,0.557,195,0.557,196,0.537,197,0.645,198,0.557,199,1.011,200,0.557,201,0.557,202,0.557,203,0.537,204,0.645,205,0.557,206,0.497,207,0.907,208,0.557,209,0.645,210,0.537,211,0.6,212,0.557,213,1.117,214,0.6,215,0.94,216,0.537,217,0.645,218,0.557,219,0.421,220,0.579,221,0.557,222,0.783,223,0.645,224,0.557,225,0.557,226,0.557,227,0.557,228,0.557,229,0.557,230,0.622,231,0.645,232,0.008,233,0.008,268,1.528,277,0.875,315,1.735,319,1.035,333,2.078,374,1.279,411,1.775,412,2.721,414,2.163,450,2.859,451,2.163,452,2.163,453,2.163,454,2.163,455,2.004,456,2.081,457,1.498,460,1.206,461,3.112,498,3.04,502,2.081,508,3.212,509,3.781,531,3.066,630,2.66,631,1.539,861,1.931,862,1.667,863,1.995,865,1.374,868,3.066,870,2.098,971,2.444,1054,4.742,1180,3.781,1182,3.781,1220,2.503,1221,2.503,1269,5.706,1273,3.815,1277,3.066,1286,3.781,1289,2.949,1292,1.481,1293,2.69,1298,3.237,1306,3.237,1308,3.237,1314,3.632,1318,2.444,1319,2.444,1321,2.344,1325,2.503,1353,3.531,1354,3.066,1355,3.699,1391,2.69,1392,3.518,1393,4.751,1394,4.109,1395,4.109,1396,2.69,1398,4.109,1399,4.109,1401,3.518,1402,3.3,1403,5.181,1404,3.781,1407,3.237,1409,2.69,1414,2.924,1799,6.082,1800,6.734,1801,6.544,1802,6.544,1803,6.544,1804,4.549,1805,3.712,1806,3.712,1807,3.712,1808,3.712,1809,3.518,1810,3.712,1811,3.712,1812,3.712,1813,5.218,1814,3.712,1815,3.712,1816,3.712,1817,3.712,1818,8.086,1819,3.441,1820,5.706,1821,3.712,1822,3.23]],["title/injectables/HttpClientService.html",[852,1.25,868,1.888]],["body/injectables/HttpClientService.html",[2,0.124,3,0.094,8,0.079,12,0.382,14,0.608,31,0.404,35,1.045,43,0.762,47,0.606,49,1.103,50,0.959,51,1.341,52,0.014,53,0.663,54,0.872,55,1.074,56,1.919,57,3.186,64,1.269,67,2.278,69,0.687,88,2.195,93,0.256,94,0.14,98,0.109,99,0.007,100,1.236,101,2.207,102,1.62,219,0.932,232,0.009,233,0.009,306,2.042,314,3.875,315,1.972,319,1.212,324,1.661,374,2.042,395,3.244,427,2.721,432,1.972,457,1.357,514,6.306,634,2.195,641,2.042,665,3.903,718,4,852,2.062,859,3.019,860,3.526,868,2.778,869,4.186,871,4.26,872,3.244,909,2.778,952,5.236,953,5.17,971,3.807,980,7.085,1004,5.574,1148,6.171,1273,4.656,1568,4.296,1620,3.966,1654,6.171,1663,3.904,1672,6.832,1673,2.902,1705,5.17,1710,6.171,1719,4.513,1823,6.914,1824,3.904,1825,5.929,1826,5.929,1827,3.998,1828,5.929,1829,7.077,1830,5.929,1831,4.477,1832,5.929,1833,4.477,1834,5.929,1835,4.477,1836,4.477,1837,5.929,1838,4.477,1839,5.929,1840,5.929,1841,5.929,1842,4.477,1843,5.929,1844,4.477,1845,5.929,1846,4.477,1847,5.929,1848,5.929,1849,5.17,1850,4.477,1851,4.477,1852,4.477,1853,4.477,1854,7.835,1855,4.477,1856,4.477,1857,4.477,1858,4.477,1859,4.477]],["title/modules/IasMaterialModule.html",[234,0.922,246,1.67]],["body/modules/IasMaterialModule.html",[0,0.27,2,0.157,3,0.119,8,0.1,12,0.28,52,0.013,93,0.298,94,0.177,98,0.168,99,0.009,185,0.958,193,0.851,232,0.011,233,0.011,234,1.698,237,2.349,246,2.854,252,2.97,267,3.202,269,2.654,516,4.989,626,4.462,634,2.549,1006,4.105,1146,4.105,1483,4.94,1484,4.105,1565,6.468,1566,4.94,1860,5.666,1861,5.666,1862,7.418,1863,5.666,1864,7.418,1865,5.666,1866,7.418,1867,5.666,1868,7.418,1869,5.666,1870,7.418,1871,5.666,1872,7.418,1873,5.666,1874,7.418,1875,5.666,1876,7.418,1877,5.666,1878,7.418,1879,7.418,1880,5.666,1881,7.418,1882,5.666,1883,7.418,1884,5.666,1885,7.418,1886,7.418,1887,5.666,1888,7.418,1889,5.666,1890,7.418,1891,5.666,1892,7.418,1893,5.666,1894,7.418,1895,5.666,1896,7.418,1897,5.666,1898,3.044,1899,7.418,1900,4.94]],["title/classes/Iasio.html",[99,0.006,1901,3.173]],["body/classes/Iasio.html",[2,0.143,3,0.108,8,0.091,12,0.388,31,0.464,32,1.087,35,1.01,42,0.741,43,0.661,47,0.624,49,1.011,50,1.149,51,1.234,52,0.013,53,0.61,54,0.964,55,0.988,61,5.595,64,1.81,65,2.234,69,0.664,70,2.154,71,1.435,75,1.138,98,0.125,99,0.012,100,1.162,102,1.708,106,1.191,108,1.596,222,0.772,232,0.01,233,0.01,315,2.157,319,1.244,393,3.727,427,2.083,432,2.48,457,1.626,458,5.572,459,3.869,460,1.296,461,3.869,462,4.699,463,3.727,614,2.132,635,3.869,658,5.108,718,4.215,827,3.665,829,6.846,850,5.108,879,5.108,1000,5.108,1002,4.051,1286,3.727,1901,6.714,1902,4.485,1903,7.103,1904,7.852,1905,7.852,1906,7.852,1907,7.852,1908,6.486,1909,6.486,1910,6.486,1911,5.143,1912,6.486,1913,5.143,1914,5.143,1915,6.486,1916,6.486,1917,5.143,1918,5.108,1919,6.486,1920,5.143,1921,5.143,1922,5.143,1923,5.143,1924,5.143,1925,5.143,1926,5.143,1927,5.143,1928,5.143,1929,5.143,1930,5.143]],["title/components/LegendComponent.html",[0,0.158,179,0.605]],["body/components/LegendComponent.html",[0,0.307,1,0.568,2,0.105,3,0.079,4,0.634,5,0.657,6,0.657,7,0.611,8,0.067,12,0.187,13,0.854,14,0.711,20,0.764,21,0.915,23,0.657,24,1.282,25,1.143,26,0.793,27,0.793,29,0.793,31,0.341,32,0.886,35,0.679,39,0.99,42,0.837,43,0.783,47,0.616,49,0.823,50,0.854,52,0.013,53,0.454,58,0.467,63,4.679,69,0.308,85,0.589,93,0.184,94,0.118,98,0.092,99,0.006,116,1.567,118,1.338,121,1.338,124,2.39,126,1.395,130,2.324,137,0.77,138,0.918,139,0.918,140,0.854,141,1.146,142,0.657,143,0.918,144,0.568,145,0.657,146,0.546,147,0.657,148,0.568,149,1.059,150,0.526,151,0.918,152,0.568,153,0.657,154,0.568,155,0.657,156,0.568,157,0.918,158,0.568,159,0.918,160,0.546,161,0.657,162,0.568,163,0.954,164,1.146,165,0.546,166,0.657,167,0.589,168,1.059,169,0.568,170,1.059,171,0.568,172,1.059,173,0.568,174,0.657,175,0.568,176,0.657,177,0.568,178,0.634,179,0.99,180,0.657,181,0.546,182,0.657,183,0.568,184,0.568,185,0.966,186,1.059,187,0.568,188,0.657,189,0.568,190,0.568,191,0.657,192,0.568,193,0.568,194,0.568,195,0.568,196,0.546,197,0.657,198,0.568,199,1.021,200,0.568,201,0.568,202,0.568,203,0.546,204,0.657,205,0.568,206,0.506,207,0.918,208,0.568,209,0.657,210,0.546,211,0.611,212,0.568,213,1.089,214,0.611,215,0.949,216,0.546,217,0.657,218,0.568,219,0.429,220,0.589,221,0.568,222,0.793,223,0.657,224,0.568,225,0.568,226,0.568,227,0.568,228,0.568,229,0.568,230,0.634,231,0.657,232,0.008,233,0.008,277,1.4,279,1.89,281,5.221,296,1.173,297,1.313,300,1.512,366,2.355,367,2.43,368,2.255,391,2.19,409,1.093,411,1.886,414,3.277,425,5.751,450,2.968,455,2.977,456,3.092,472,4.161,474,2.19,475,3.152,477,2.854,479,1.095,481,2.136,531,2.475,818,3.152,861,2.788,865,1.399,1054,4.779,1314,3.718,1321,3.383,1516,4.607,1819,3.528,1822,3.09,1931,3.296,1932,6.092,1933,5.284,1934,6.596,1935,6.596,1936,6.596,1937,6.596,1938,6.596,1939,6.596,1940,6.596,1941,6.596,1942,6.596,1943,5.284,1944,3.78,1945,3.78,1946,3.78,1947,3.78,1948,4.607,1949,3.78,1950,4.607,1951,3.78,1952,6.596,1953,4.607,1954,3.78,1955,4.607,1956,3.78,1957,6.596,1958,4.607,1959,3.78,1960,3.78,1961,3.78,1962,2.977]],["title/components/LoginComponent.html",[0,0.158,181,0.583]],["body/components/LoginComponent.html",[0,0.308,1,0.519,2,0.096,3,0.073,4,0.58,5,0.601,6,0.601,7,0.559,8,0.061,12,0.287,13,0.802,14,0.684,20,0.717,21,0.871,23,0.601,24,1.277,25,1.138,26,0.745,27,0.745,29,0.745,31,0.312,32,0.832,33,1.303,35,0.638,39,0.952,41,1.026,42,0.731,43,0.638,47,0.619,49,0.988,50,0.802,51,0.862,52,0.013,53,0.545,54,0.852,55,0.69,56,1.711,57,2.666,58,0.427,64,1.062,67,1.906,69,0.601,71,1.284,78,1.438,85,0.988,88,2.148,91,5.427,93,0.234,94,0.108,98,0.084,99,0.005,100,1.046,101,1.487,102,0.792,106,0.973,110,0.715,115,1.215,116,2.057,118,1.469,119,2.229,121,1.256,122,1.9,123,2.628,126,1.451,132,1.771,133,3.117,137,0.344,138,0.862,139,0.862,140,0.802,141,1.102,142,0.601,143,0.862,144,0.519,145,0.601,146,0.5,147,0.601,148,0.519,149,1.008,150,0.481,151,0.862,152,0.519,153,0.601,154,0.519,155,0.601,156,0.519,157,0.862,158,0.519,159,0.862,160,0.5,161,0.601,162,0.519,163,0.917,164,1.102,165,0.5,166,0.601,167,0.539,168,1.008,169,0.519,170,1.008,171,0.519,172,1.008,173,0.519,174,0.601,175,0.519,176,0.601,177,0.519,178,0.58,179,0.519,180,0.601,181,0.917,182,0.601,183,0.519,184,0.519,185,0.934,186,1.008,187,0.519,188,0.601,189,0.519,190,0.519,191,0.601,192,0.519,193,0.519,194,0.519,195,0.519,196,0.5,197,0.601,198,0.519,199,0.973,200,0.519,201,0.519,202,0.519,203,0.5,204,0.601,205,0.519,206,1.003,207,0.862,208,0.519,209,0.601,210,0.5,211,0.559,212,0.519,213,1.064,214,0.559,215,0.904,216,0.5,217,0.601,218,0.519,219,0.393,220,0.539,221,0.519,222,0.745,223,0.601,224,0.519,225,0.519,226,0.519,227,0.519,228,0.519,229,0.519,230,0.58,231,0.601,232,0.008,233,0.008,239,2.229,264,2.063,266,1.858,267,3.279,268,1.256,277,1.257,278,2.405,279,1.8,295,1.38,296,1.539,297,0.58,300,0.958,314,2.541,319,0.871,366,2.071,367,1.38,374,1.191,378,1.955,379,2.332,386,1.65,391,1.434,411,1.374,427,1.111,428,3.346,432,2.232,457,1.136,460,0.992,474,1.434,475,3.461,477,2.324,479,1.681,481,1.955,494,1.191,506,1.492,581,5.202,596,2.063,634,2.485,653,4.274,665,2.97,667,4.418,743,4.593,810,2.529,818,2.96,819,2.332,861,2.586,871,4.344,880,5.431,909,2.97,959,3.563,960,5.334,971,2.324,1006,4.204,1059,4.274,1133,1.492,1202,4.418,1355,3.583,1417,2.502,1435,3.669,1454,3.346,1457,3.595,1487,2.063,1502,5.154,1508,3.016,1529,4.326,1620,3.461,1633,3.016,1637,4.326,1678,6.714,1680,4.274,1681,4.326,1719,4.64,1809,2.332,1963,3.016,1964,5.802,1965,4.962,1966,6.419,1967,6.419,1968,4.962,1969,3.459,1970,6.632,1971,5.852,1972,5.528,1973,4.962,1974,3.908,1975,3.459,1976,3.459,1977,3.459,1978,4.962,1979,3.459,1980,5.502,1981,3.606,1982,5.802,1983,3.908,1984,6.339,1985,3.459,1986,4.962,1987,3.459,1988,3.459,1989,6.536,1990,3.459,1991,3.459,1992,3.459,1993,5.528,1994,3.595,1995,4.326,1996,4.962,1997,3.459,1998,3.016,1999,3.016,2000,3.459,2001,3.459,2002,3.459,2003,3.459,2004,3.459,2005,4.326,2006,3.459,2007,3.016,2008,2.724,2009,3.459,2010,3.459,2011,4.962,2012,3.459,2013,5.528,2014,3.459]],["title/components/MapComponent.html",[0,0.158,183,0.605]],["body/components/MapComponent.html",[0,0.32,1,0.722,2,0.134,3,0.101,4,0.806,5,0.836,6,0.836,7,0.777,8,0.085,12,0.238,13,1.004,14,0.534,20,0.898,21,1.033,23,0.836,24,1.295,25,1.154,26,0.933,27,0.933,29,0.933,31,0.434,35,0.799,39,1.092,41,1.558,42,0.79,43,0.885,47,0.597,49,0.968,50,1.004,52,0.013,53,0.534,58,0.594,69,0.392,75,1.375,78,1.8,85,0.749,93,0.167,94,0.15,98,0.117,99,0.007,126,1.101,129,2.3,137,0.478,138,1.08,139,1.08,140,1.004,141,1.264,142,0.836,143,1.08,144,0.722,145,0.836,146,0.695,147,0.836,148,0.722,149,1.196,150,0.669,151,1.08,152,0.722,153,0.836,154,0.722,155,0.836,156,0.722,157,1.08,158,0.722,159,1.08,160,0.695,161,0.836,162,0.722,163,1.052,164,1.264,165,0.695,166,0.836,167,0.749,168,1.196,169,0.722,170,1.196,171,0.722,172,1.196,173,0.722,174,0.836,175,0.722,176,0.836,177,0.722,178,0.806,179,0.722,180,0.836,181,0.695,182,0.836,183,1.092,184,0.722,185,1.048,186,1.196,187,0.722,188,0.836,189,0.722,190,0.722,191,0.836,192,0.722,193,0.722,194,0.722,195,0.722,196,0.695,197,0.836,198,0.722,199,1.154,200,0.722,201,0.722,202,0.722,203,0.695,204,0.836,205,0.722,206,0.643,207,1.08,208,0.722,209,0.836,210,0.695,211,0.777,212,0.722,213,1.15,214,0.777,215,1.134,216,0.695,217,0.836,218,0.722,219,0.781,220,0.749,221,0.722,222,0.933,223,0.836,224,0.722,225,0.722,226,0.722,227,0.722,228,0.722,229,0.722,230,0.806,231,0.836,232,0.01,233,0.01,277,1.22,297,1.042,300,1.199,305,2.679,439,3.511,460,1.241,479,1.393,502,2.478,520,2.673,1208,4.905,1534,4.192,1605,4.192,2015,4.192,2016,4.893,2017,6.883,2018,6.213,2019,6.883,2020,6.883,2021,6.213,2022,4.808,2023,4.808,2024,4.808]],["title/modules/MapModule.html",[234,0.922,1244,2.404]],["body/modules/MapModule.html",[2,0.172,3,0.13,8,0.109,52,0.013,93,0.282,94,0.193,98,0.193,99,0.01,137,0.614,183,1.273,232,0.011,233,0.011,234,1.661,236,1.369,237,3.192,238,2.564,239,2.958,248,3.129,249,2.564,250,2.376,252,3.129,253,3.399,254,2.667,1244,5.002,2025,5.393,2026,5.393,2027,5.393,2028,5.393,2029,5.531,2030,6.185,2031,6.185,2032,6.185]],["title/injectables/MapService.html",[852,1.25,2029,2.717]],["body/injectables/MapService.html",[2,0.165,3,0.124,8,0.105,12,0.374,14,0.65,31,0.536,35,0.911,43,0.973,47,0.606,49,1.104,50,1.145,51,1.231,52,0.013,53,0.608,54,0.839,55,0.985,56,1.919,69,0.617,88,2.622,93,0.207,94,0.186,98,0.145,99,0.009,100,0.925,102,1.359,110,1.565,125,2.119,232,0.011,233,0.011,295,2.368,296,1.841,297,0.995,378,4.002,430,2.269,506,3.505,507,3.754,520,2.517,614,2.461,739,5.578,852,2.348,950,5.804,1198,5.176,2029,4.775,2033,5.176,2034,7.082,2035,7.082,2036,5.936,2037,7.082,2038,5.936,2039,8.009,2040,7.838,2041,5.936,2042,5.936,2043,5.936,2044,5.936,2045,5.936,2046,2.905,2047,5.936,2048,5.936,2049,5.936]],["title/components/MaterialButtonsColorsComponent.html",[0,0.158,184,0.605]],["body/components/MaterialButtonsColorsComponent.html",[0,0.32,1,0.357,2,0.066,3,0.05,4,1.101,5,0.413,6,0.413,7,0.385,8,0.042,12,0.314,13,1.325,14,0.204,20,0.669,21,0.788,23,0.413,24,1.256,25,1.121,26,1.138,27,1.015,29,0.357,33,0.978,39,0.695,41,1.358,42,0.841,47,0.289,51,0.804,52,0.014,53,0.521,55,0.521,58,0.982,64,0.99,67,1.438,69,0.551,70,2.008,71,1.024,74,3.762,75,1.341,77,0.893,93,0.183,94,0.074,97,0.444,98,0.16,99,0.01,100,1.19,102,1.735,106,1.26,110,1.18,115,1.133,118,0.602,121,0.948,122,0.713,125,1.336,126,0.545,127,0.914,130,2.104,134,1.681,137,0.236,138,0.65,139,0.992,140,0.605,141,0.912,142,0.413,143,0.65,144,0.357,145,0.413,146,0.344,147,0.413,148,0.357,149,0.804,150,0.331,151,0.65,152,0.357,153,0.413,154,0.357,155,0.413,156,0.357,157,0.65,158,0.357,159,0.65,160,0.344,161,0.413,162,0.357,163,1.118,164,0.912,165,0.344,166,0.413,167,0.371,168,0.804,169,0.357,170,0.804,171,0.357,172,0.804,173,0.357,174,0.413,175,0.357,176,0.413,177,0.357,178,0.399,179,0.357,180,0.413,181,0.344,182,0.413,183,0.357,184,0.788,185,1.117,186,0.804,187,0.562,188,0.65,189,0.562,190,0.562,191,0.413,192,0.562,193,0.91,194,0.357,195,0.357,196,0.344,197,0.413,198,0.857,199,1.202,200,0.562,201,0.562,202,0.357,203,0.344,204,0.413,205,0.357,206,0.619,207,0.65,208,0.357,209,0.413,210,0.344,211,0.385,212,0.357,213,0.95,214,0.385,215,0.721,216,0.344,217,0.413,218,0.357,219,0.27,220,0.371,221,0.357,222,1.154,223,0.413,224,0.357,225,0.357,226,0.357,227,0.357,228,0.357,229,0.357,230,0.399,231,0.413,232,0.006,233,0.006,236,1.024,268,1.172,277,1.26,278,2.366,279,2.037,295,0.949,296,1.967,297,1.333,300,0.459,303,3.577,319,0.91,322,1.846,324,1.296,333,1.808,339,1.164,356,1.681,365,0.914,366,1.652,367,0.949,386,0.791,391,0.986,394,0.881,404,1.832,406,1.218,407,2.37,409,0.957,411,1.851,412,2.412,416,2.079,420,1.114,427,1.486,430,1.387,432,1.745,435,1.753,438,3.644,440,1.114,449,2.568,450,2.654,451,2.175,452,2.175,453,2.175,454,2.175,455,2.016,456,2.093,457,1.201,460,0.475,474,0.986,479,1.341,480,1.114,494,1.808,506,1.026,550,3.384,551,1.026,552,0.986,555,1.681,556,2.613,568,1.996,605,1.278,614,3.165,634,1.386,641,1.808,704,1.918,747,1.946,810,0.949,816,1.164,822,1.114,825,2.793,826,2.486,861,3.023,865,0.881,998,2.486,1082,2.011,1133,1.614,1140,2.265,1142,2.486,1152,1.164,1157,2.265,1277,1.753,1292,0.949,1314,3.636,1315,2.688,1316,3.214,1317,3.214,1318,2.458,1319,2.458,1321,3.266,1350,2.011,1370,1.278,1417,1.026,1548,2.486,1589,1.164,1673,1.164,1819,2.168,1822,1.114,1898,2.819,1981,2.486,2046,2.265,2050,1.218,2051,1.278,2052,3.909,2053,4.315,2054,4.282,2055,4.345,2056,2.966,2057,3.225,2058,4.397,2059,2.115,2060,1.344,2061,1.344,2062,1.344,2063,2.115,2064,2.966,2065,1.344,2066,1.344,2067,1.344,2068,1.344,2069,1.344,2070,2.615,2071,1.344,2072,2.615,2073,1.344,2074,1.344,2075,2.615,2076,1.344,2077,2.615,2078,1.344,2079,1.344,2080,2.615,2081,1.344,2082,1.344,2083,1.344,2084,1.344,2085,2.615,2086,1.344,2087,2.615,2088,1.344,2089,2.615,2090,1.344,2091,1.344,2092,1.344,2093,1.344,2094,1.344,2095,1.344,2096,1.344,2097,1.344,2098,1.344,2099,1.344,2100,1.344,2101,1.344,2102,1.344,2103,1.344,2104,1.344,2105,1.344,2106,1.344,2107,1.344,2108,1.344,2109,1.344,2110,1.344,2111,1.344,2112,1.344,2113,1.344,2114,1.344,2115,1.344,2116,1.832,2117,2.115,2118,2.115,2119,2.115,2120,1.344,2121,2.966,2122,2.115,2123,2.115,2124,3.066,2125,3.425,2126,2.615,2127,2.615,2128,2.615,2129,2.115,2130,1.344,2131,1.344,2132,2.115,2133,1.344,2134,1.344,2135,1.344,2136,1.278,2137,1.344,2138,1.344,2139,1.344,2140,1.278,2141,1.344,2142,1.344,2143,1.344,2144,1.344,2145,2.688,2146,2.615,2147,2.615,2148,3.425,2149,2.615,2150,2.615,2151,2.615,2152,2.615,2153,1.344,2154,3.425,2155,2.615,2156,2.615,2157,2.615,2158,2.615,2159,3.425,2160,2.615,2161,2.615,2162,2.615,2163,2.615,2164,2.615,2165,2.265,2166,2.486,2167,2.615,2168,2.615,2169,2.615,2170,2.011,2171,2.011,2172,1.344,2173,2.115,2174,1.344,2175,2.011,2176,1.917,2177,2.011,2178,1.832,2179,2.011,2180,2.011,2181,1.344,2182,1.344,2183,1.278,2184,1.344,2185,1.218,2186,1.344,2187,1.344,2188,2.379,2189,2.379,2190,2.379,2191,2.379,2192,2.379]],["title/components/MaterialCardSampleComponent.html",[0,0.158,187,0.605]],["body/components/MaterialCardSampleComponent.html",[0,0.32,1,0.362,2,0.067,3,0.051,4,1.106,5,0.419,6,0.419,7,0.39,8,0.043,12,0.315,13,1.278,14,0.207,20,0.675,21,0.794,23,0.419,24,1.257,25,1.122,26,1.141,27,1.019,29,0.362,33,0.986,39,0.701,41,1.365,42,0.842,47,0.293,51,0.811,52,0.014,53,0.524,55,0.526,58,0.984,64,0.999,67,1.453,69,0.554,70,2.015,71,1.033,74,3.61,75,1.349,77,0.901,93,0.184,94,0.075,97,0.45,98,0.161,99,0.01,100,1.193,102,1.739,106,1.187,110,1.188,115,1.143,118,0.611,121,0.958,122,0.723,125,1.35,126,0.552,127,0.926,130,2.09,134,1.083,137,0.24,138,0.657,139,0.998,140,0.612,141,0.919,142,0.419,143,0.657,144,0.362,145,0.419,146,0.349,147,0.419,148,0.362,149,0.811,150,0.335,151,0.657,152,0.362,153,0.419,154,0.362,155,0.419,156,0.362,157,0.657,158,0.362,159,0.657,160,0.349,161,0.419,162,0.362,163,1.121,164,0.919,165,0.349,166,0.419,167,0.376,168,0.811,169,0.362,170,0.811,171,0.362,172,0.811,173,0.362,174,0.419,175,0.362,176,0.419,177,0.362,178,0.404,179,0.362,180,0.419,181,0.349,182,0.419,183,0.362,184,0.568,185,1.119,186,0.811,187,0.794,188,0.811,189,0.568,190,0.568,191,0.419,192,0.568,193,0.915,194,0.362,195,0.362,196,0.349,197,0.419,198,0.862,199,1.206,200,0.568,201,0.568,202,0.362,203,0.349,204,0.419,205,0.362,206,0.625,207,0.657,208,0.362,209,0.419,210,0.349,211,0.39,212,0.362,213,0.954,214,0.39,215,0.728,216,0.349,217,0.419,218,0.362,219,0.274,220,0.376,221,0.362,222,1.019,223,0.419,224,0.362,225,0.362,226,0.362,227,0.362,228,0.362,229,0.362,230,0.404,231,0.419,232,0.006,233,0.006,236,1.033,268,1.182,277,1.263,278,2.642,279,2.047,295,0.962,296,1.977,297,1.336,300,0.465,303,3.585,319,0.915,322,1.862,324,1.308,333,1.821,339,1.18,356,1.699,365,0.926,366,1.667,367,0.962,386,0.802,391,1,394,0.893,404,1.851,406,1.235,407,2.391,409,0.965,411,1.846,412,2.422,416,2.097,420,1.13,427,1.499,430,1.399,432,1.758,435,1.772,438,3.652,440,1.13,449,2.587,450,2.663,451,2.192,452,2.192,453,2.192,454,2.192,455,2.031,456,2.109,457,1.21,460,0.482,474,1,479,1.353,480,1.13,494,1.821,506,1.04,550,3.229,551,1.04,552,1,555,1.699,556,2.628,568,2.013,605,1.295,614,3.173,634,1.4,641,1.821,704,1.935,747,1.957,810,0.962,816,1.18,822,1.13,825,2.587,826,2.508,861,3.027,865,0.893,998,2.508,1082,2.032,1133,1.631,1140,2.285,1142,2.508,1152,1.18,1157,2.587,1277,1.772,1292,0.962,1314,3.641,1315,2.708,1316,3.229,1317,3.229,1318,2.477,1319,2.477,1321,3.277,1350,2.032,1370,1.295,1417,1.04,1548,2.508,1589,1.18,1673,1.18,1819,2.187,1822,1.13,1898,2.84,1981,2.508,2046,2.285,2050,1.235,2051,1.295,2052,3.924,2053,3.444,2054,3.602,2055,3.835,2056,2.638,2057,2.138,2058,3.602,2059,1.363,2060,1.363,2061,1.363,2062,1.363,2063,2.138,2064,2.988,2065,1.363,2066,1.363,2067,1.363,2068,1.363,2069,1.363,2070,2.638,2071,1.363,2072,2.638,2073,1.363,2074,1.363,2075,2.638,2076,1.363,2077,2.638,2078,1.363,2079,1.363,2080,2.638,2081,1.363,2082,1.363,2083,1.363,2084,1.363,2085,2.638,2086,1.363,2087,2.638,2088,1.363,2089,2.638,2090,1.363,2091,1.363,2092,1.363,2093,1.363,2094,1.363,2095,1.363,2096,1.363,2097,1.363,2098,1.363,2099,1.363,2100,1.363,2101,1.363,2102,1.363,2103,1.363,2104,1.363,2105,1.363,2106,1.363,2107,1.363,2108,1.363,2109,1.363,2110,1.363,2111,1.363,2112,1.363,2113,1.363,2114,1.363,2115,1.363,2116,1.851,2117,2.138,2118,2.138,2119,2.138,2120,1.363,2121,2.988,2122,2.138,2123,2.138,2124,3.086,2125,3.444,2126,3.835,2127,3.835,2128,3.835,2129,3.444,2130,2.638,2131,2.638,2132,3.444,2133,2.638,2134,2.638,2135,2.638,2136,2.508,2137,2.638,2138,2.638,2139,2.638,2140,2.508,2141,2.638,2142,2.638,2143,2.638,2144,2.638,2145,3.121,2146,2.638,2147,2.638,2148,3.444,2149,2.638,2150,2.638,2151,2.638,2152,2.638,2153,1.363,2154,3.444,2155,2.638,2156,2.638,2157,2.638,2158,2.638,2159,3.444,2160,2.638,2161,2.638,2162,2.638,2163,2.638,2164,2.638,2165,2.285,2166,2.508,2167,2.638,2168,2.638,2169,2.638,2170,2.032,2171,2.032,2172,1.363,2173,2.138,2174,1.363,2175,2.032,2176,1.938,2177,2.032,2178,1.851,2179,2.032,2180,2.032,2181,1.363,2182,1.363,2183,1.295,2184,1.363,2185,1.235,2186,1.363,2187,1.363]],["title/components/MaterialColorsComponent.html",[0,0.158,189,0.605]],["body/components/MaterialColorsComponent.html",[0,0.319,1,0.342,2,0.063,3,0.048,4,1.084,5,0.395,6,0.395,7,0.368,8,0.04,12,0.308,13,1.32,14,0.195,20,0.65,21,0.769,23,0.395,24,1.253,25,1.12,26,1.128,27,1,29,0.342,31,0.205,32,0.606,33,0.954,39,0.675,41,1.411,42,0.839,47,0.396,51,0.781,52,0.014,53,0.535,54,0.269,55,0.712,58,0.976,64,1.195,67,1.966,69,0.543,70,1.985,71,0.995,74,3.784,75,1.316,77,0.868,93,0.178,94,0.071,97,0.424,98,0.157,99,0.01,100,1.18,102,1.72,106,1.168,110,1.155,115,1.101,118,0.576,121,0.915,122,0.682,125,1.827,126,0.521,127,0.874,130,2.137,134,1.022,137,0.226,138,0.628,139,1.033,140,0.584,141,0.889,142,0.395,143,0.628,144,0.342,145,0.395,146,0.329,147,0.395,148,0.342,149,0.781,150,0.317,151,0.628,152,0.342,153,0.395,154,0.342,155,0.395,156,0.342,157,0.628,158,0.342,159,0.628,160,0.329,161,0.395,162,0.342,163,1.11,164,0.889,165,0.329,166,0.395,167,0.355,168,0.781,169,0.342,170,0.781,171,0.342,172,0.781,173,0.342,174,0.395,175,0.342,176,0.395,177,0.342,178,0.381,179,0.342,180,0.395,181,0.329,182,0.395,183,0.342,184,0.543,185,1.111,186,0.781,187,0.543,188,0.628,189,0.769,190,0.543,191,0.395,192,0.543,193,0.971,194,0.342,195,0.342,196,0.329,197,0.395,198,0.838,199,1.188,200,0.543,201,0.543,202,0.342,203,0.329,204,0.395,205,0.342,206,0.747,207,0.628,208,0.342,209,0.395,210,0.329,211,0.368,212,0.342,213,0.935,214,0.368,215,0.7,216,0.329,217,0.395,218,0.342,219,0.258,220,0.355,221,0.342,222,1.025,223,0.395,224,0.342,225,0.342,226,0.342,227,0.342,228,0.342,229,0.342,230,0.381,231,0.395,232,0.006,233,0.006,236,0.995,268,1.138,277,1.248,278,2.583,279,2.261,295,0.907,296,1.933,297,1.335,300,0.868,303,3.548,319,0.893,322,1.793,324,1.259,333,1.763,339,1.113,356,1.623,365,0.874,366,1.604,367,0.907,386,0.756,391,0.943,394,0.842,404,1.768,406,1.165,407,2.302,409,0.929,411,1.829,412,2.378,416,2.019,420,1.066,427,1.443,430,1.782,432,1.702,435,2.398,438,3.619,440,1.066,449,2.505,450,2.624,451,2.122,452,2.122,453,2.122,454,2.122,455,1.966,456,2.042,457,1.172,460,0.455,474,0.943,479,1.722,480,1.066,494,1.763,506,1.558,550,3.409,551,0.981,552,0.943,555,1.623,556,2.873,568,1.938,605,1.222,614,3.14,634,1.664,641,2.227,704,1.863,747,1.909,810,0.907,816,1.113,822,1.066,825,2.505,826,2.415,861,3.01,865,0.842,998,3.194,1082,1.941,1133,1.558,1140,2.199,1142,3.194,1152,1.113,1157,2.199,1277,1.693,1292,0.907,1314,3.619,1315,2.622,1316,3.164,1317,3.164,1318,2.398,1319,2.398,1321,3.232,1350,2.75,1370,1.222,1417,0.981,1548,3.194,1589,2.199,1673,1.113,1819,2.106,1822,1.066,1898,3.474,1981,3.194,2046,2.199,2050,2.302,2051,1.222,2052,3.857,2053,3.36,2054,3.654,2055,4.006,2056,3.156,2057,2.042,2058,3.522,2059,1.286,2060,1.286,2061,1.286,2062,1.286,2063,2.893,2064,4.006,2065,2.54,2066,2.042,2067,2.042,2068,2.042,2069,2.042,2070,3.36,2071,2.042,2072,3.36,2073,2.042,2074,2.042,2075,3.36,2076,2.042,2077,3.36,2078,2.042,2079,2.042,2080,3.36,2081,2.042,2082,2.042,2083,2.042,2084,2.042,2085,3.36,2086,2.042,2087,3.36,2088,2.042,2089,3.36,2090,2.042,2091,2.042,2092,2.042,2093,2.042,2094,2.042,2095,2.042,2096,2.042,2097,2.042,2098,2.042,2099,2.042,2100,2.042,2101,2.042,2102,2.042,2103,2.042,2104,2.042,2105,2.042,2106,2.042,2107,2.042,2108,2.042,2109,2.042,2110,2.042,2111,2.042,2112,2.042,2113,2.042,2114,2.042,2115,2.042,2116,2.505,2117,2.893,2118,2.893,2119,2.893,2120,2.042,2121,3.654,2122,2.893,2123,2.893,2124,3.348,2125,4.006,2126,2.54,2127,2.54,2128,2.54,2129,2.042,2130,1.286,2131,1.286,2132,2.042,2133,1.286,2134,1.286,2135,1.286,2136,1.222,2137,1.286,2138,1.286,2139,1.286,2140,1.222,2141,1.286,2142,1.286,2143,1.286,2144,1.286,2145,2.622,2146,2.54,2147,2.54,2148,3.36,2149,2.54,2150,2.54,2151,2.54,2152,2.54,2153,1.286,2154,3.36,2155,2.54,2156,2.54,2157,2.54,2158,2.54,2159,3.36,2160,2.54,2161,2.54,2162,2.54,2163,2.54,2164,2.54,2165,2.199,2166,2.415,2167,2.54,2168,2.54,2169,2.54,2170,1.941,2171,1.941,2172,1.286,2173,2.042,2174,1.286,2175,1.941,2176,1.851,2177,1.941,2178,1.768,2179,1.941,2180,1.941,2181,1.286,2182,1.286,2183,1.222,2184,1.286,2185,1.165,2186,1.286,2187,1.286,2193,2.275,2194,2.275]],["title/components/MaterialSandboxComponent.html",[0,0.158,190,0.605]],["body/components/MaterialSandboxComponent.html",[0,0.321,1,0.368,2,0.068,3,0.051,4,1.112,5,0.426,6,0.426,7,0.396,8,0.043,12,0.317,13,1.281,14,0.329,20,0.682,21,0.801,23,0.426,24,1.259,25,1.123,26,1.144,27,1.024,29,0.575,33,0.994,39,0.708,41,1.372,42,0.842,47,0.296,51,0.819,52,0.014,53,0.527,55,0.533,58,0.986,64,1.009,67,1.471,69,0.556,70,2.023,71,1.044,74,3.619,75,1.358,77,0.91,93,0.186,94,0.077,97,0.457,98,0.162,99,0.01,100,1.196,102,1.744,106,1.192,110,1.197,115,1.155,118,0.62,121,0.97,122,0.734,125,1.367,126,0.561,127,0.941,130,2.097,134,1.1,137,0.243,138,0.666,139,1.114,140,0.619,141,0.927,142,0.426,143,0.666,144,0.368,145,0.426,146,0.354,147,0.426,148,0.368,149,0.819,150,0.341,151,0.666,152,0.368,153,0.426,154,0.368,155,0.426,156,0.368,157,0.666,158,0.368,159,0.666,160,0.354,161,0.426,162,0.368,163,1.124,164,0.927,165,0.354,166,0.426,167,0.382,168,0.819,169,0.368,170,0.819,171,0.368,172,0.819,173,0.368,174,0.426,175,0.368,176,0.426,177,0.368,178,0.411,179,0.368,180,0.426,181,0.354,182,0.426,183,0.368,184,0.575,185,1.124,186,0.819,187,0.575,188,0.666,189,0.575,190,0.801,191,0.426,192,0.575,193,0.921,194,0.368,195,0.368,196,0.354,197,0.426,198,0.869,199,1.227,200,0.575,201,0.575,202,0.368,203,0.354,204,0.426,205,0.368,206,0.631,207,0.666,208,0.368,209,0.426,210,0.354,211,0.396,212,0.368,213,0.959,214,0.396,215,0.735,216,0.354,217,0.426,218,0.368,219,0.278,220,0.382,221,0.368,222,1.024,223,0.426,224,0.368,225,0.368,226,0.368,227,0.368,228,0.368,229,0.368,230,0.411,231,0.426,232,0.006,233,0.006,236,1.044,268,1.194,277,1.267,278,2.399,279,2.058,295,0.977,296,1.989,297,1.338,300,0.473,303,3.595,319,0.921,322,1.881,324,1.321,333,1.837,339,1.199,356,1.72,365,0.941,366,1.684,367,0.977,386,0.814,391,1.015,394,0.907,404,1.874,406,1.255,407,2.415,409,0.975,411,1.85,412,2.434,416,2.118,420,1.148,427,1.514,430,1.414,432,1.924,435,1.794,438,3.661,440,1.148,449,2.61,450,2.673,451,2.211,452,2.211,453,2.211,454,2.211,455,2.048,456,2.127,457,1.221,460,0.489,474,1.015,479,1.366,480,1.148,494,1.837,506,1.056,550,3.247,551,1.056,552,1.015,555,1.72,556,2.646,568,2.034,605,1.316,614,3.181,634,1.746,641,1.837,704,1.955,747,1.97,810,0.977,816,1.199,822,1.148,825,2.61,826,2.534,861,3.031,865,0.907,998,2.534,1082,2.058,1133,1.652,1140,2.308,1142,2.534,1152,1.874,1157,2.308,1277,1.794,1292,0.977,1314,3.647,1315,2.731,1316,3.247,1317,3.247,1318,2.498,1319,2.498,1321,3.289,1350,2.058,1370,1.316,1417,1.652,1548,2.534,1589,1.199,1673,1.874,1819,2.209,1822,1.148,1898,2.865,1981,2.534,2046,2.308,2050,1.255,2051,1.316,2052,3.942,2053,3.467,2054,3.623,2055,3.854,2056,2.665,2057,2.165,2058,3.623,2059,1.384,2060,2.165,2061,2.165,2062,2.165,2063,2.165,2064,3.014,2065,1.384,2066,1.384,2067,1.384,2068,1.384,2069,1.384,2070,2.665,2071,1.384,2072,2.665,2073,1.384,2074,1.384,2075,2.665,2076,1.384,2077,2.665,2078,1.384,2079,1.384,2080,2.665,2081,1.384,2082,1.384,2083,1.384,2084,1.384,2085,2.665,2086,1.384,2087,2.665,2088,1.384,2089,2.665,2090,1.384,2091,1.384,2092,1.384,2093,1.384,2094,1.384,2095,1.384,2096,1.384,2097,1.384,2098,1.384,2099,1.384,2100,1.384,2101,1.384,2102,1.384,2103,1.384,2104,1.384,2105,1.384,2106,1.384,2107,1.384,2108,1.384,2109,1.384,2110,1.384,2111,1.384,2112,1.384,2113,1.384,2114,1.384,2115,1.384,2116,1.874,2117,2.165,2118,2.165,2119,2.165,2120,1.384,2121,3.014,2122,2.165,2123,2.165,2124,3.109,2125,3.467,2126,2.665,2127,2.665,2128,2.665,2129,2.165,2130,1.384,2131,1.384,2132,2.165,2133,1.384,2134,1.384,2135,1.384,2136,1.316,2137,1.384,2138,1.384,2139,1.384,2140,1.316,2141,1.384,2142,1.384,2143,1.384,2144,1.384,2145,2.731,2146,2.665,2147,2.665,2148,3.467,2149,2.665,2150,2.665,2151,2.665,2152,2.665,2153,1.384,2154,3.467,2155,2.665,2156,2.665,2157,2.665,2158,2.665,2159,3.467,2160,2.665,2161,2.665,2162,2.665,2163,2.665,2164,2.665,2165,2.308,2166,2.534,2167,2.665,2168,2.665,2169,2.665,2170,2.058,2171,2.058,2172,1.384,2173,2.165,2174,1.384,2175,2.058,2176,1.962,2177,2.058,2178,1.874,2179,2.058,2180,2.058,2181,1.384,2182,1.384,2183,1.316,2184,1.384,2185,1.255,2186,1.384,2187,1.384]],["title/modules/MaterialSandboxModule.html",[234,0.922,1582,2.717]],["body/modules/MaterialSandboxModule.html",[2,0.151,3,0.114,8,0.096,52,0.013,93,0.293,94,0.17,98,0.185,99,0.008,137,0.54,184,1.254,185,1.122,187,1.254,189,1.254,192,1.254,198,1.254,200,1.254,201,1.254,232,0.01,233,0.01,234,1.537,236,1.203,237,3.019,238,2.783,239,2.088,246,3.3,247,3.729,248,2.895,249,2.253,250,2.088,252,2.895,253,3.145,254,2.344,268,1.376,269,2.546,270,2.66,272,3.072,1150,3.665,1582,5.795,1589,2.66,1590,7.034,2050,2.784,2195,4.739,2196,4.739,2197,5.435,2198,4.739,2199,5.435,2200,5.853,2201,4.281,2202,4.739]],["title/components/MaterialToggleColorsComponent.html",[0,0.158,192,0.605]],["body/components/MaterialToggleColorsComponent.html",[0,0.321,1,0.368,2,0.068,3,0.051,4,1.112,5,0.426,6,0.426,7,0.396,8,0.043,12,0.317,13,1.281,14,0.21,20,0.682,21,0.801,23,0.426,24,1.259,25,1.123,26,1.144,27,1.024,29,0.368,33,0.995,39,0.708,41,1.372,42,0.842,47,0.296,51,0.82,52,0.014,53,0.527,55,0.533,58,0.986,64,1.009,67,1.472,69,0.556,70,2.023,71,1.044,74,3.619,75,1.358,77,0.911,93,0.186,94,0.077,97,0.457,98,0.162,99,0.01,100,1.196,102,1.744,106,1.192,110,1.197,115,1.155,118,0.62,121,0.97,122,0.735,125,1.368,126,0.561,127,0.941,130,2.097,134,1.101,137,0.243,138,0.666,139,1.006,140,0.619,141,0.927,142,0.426,143,0.666,144,0.368,145,0.426,146,0.354,147,0.426,148,0.368,149,0.82,150,0.341,151,0.666,152,0.368,153,0.426,154,0.368,155,0.426,156,0.368,157,0.666,158,0.368,159,0.666,160,0.354,161,0.426,162,0.368,163,1.124,164,0.927,165,0.354,166,0.426,167,0.382,168,0.82,169,0.368,170,0.82,171,0.368,172,0.82,173,0.368,174,0.426,175,0.368,176,0.426,177,0.368,178,0.411,179,0.368,180,0.426,181,0.354,182,0.426,183,0.368,184,0.575,185,1.127,186,0.82,187,0.575,188,0.666,189,0.575,190,0.575,191,0.426,192,0.801,193,1.024,194,0.368,195,0.368,196,0.354,197,0.426,198,0.869,199,1.211,200,0.575,201,0.575,202,0.368,203,0.354,204,0.426,205,0.368,206,0.631,207,0.666,208,0.368,209,0.426,210,0.354,211,0.396,212,0.368,213,0.959,214,0.396,215,0.735,216,0.354,217,0.426,218,0.368,219,0.278,220,0.382,221,0.368,222,1.067,223,0.426,224,0.368,225,0.368,226,0.368,227,0.368,228,0.368,229,0.368,230,0.411,231,0.426,232,0.006,233,0.006,236,1.044,268,1.194,277,1.267,278,2.399,279,2.058,295,0.977,296,1.989,297,1.338,300,0.74,303,3.596,319,0.921,322,1.881,324,1.321,333,1.837,339,1.199,356,1.721,365,0.941,366,1.684,367,0.977,386,0.815,391,1.016,394,0.907,404,1.875,406,1.255,407,2.416,409,0.975,411,1.85,412,2.435,416,2.119,420,1.148,427,1.515,430,1.414,432,1.774,435,1.795,438,3.661,440,1.148,449,2.61,450,2.674,451,2.211,452,2.211,453,2.211,454,2.211,455,2.049,456,2.127,457,1.221,460,0.49,474,1.016,479,1.367,480,1.148,494,1.837,506,1.057,550,3.413,551,1.057,552,1.016,555,1.721,556,2.646,568,2.034,605,1.316,614,3.182,634,1.418,641,1.837,704,1.955,747,1.97,810,0.977,816,1.199,822,1.148,825,2.61,826,2.534,861,3.031,865,0.907,998,2.534,1082,2.058,1133,1.652,1140,2.308,1142,2.534,1152,1.199,1157,2.308,1277,1.795,1292,0.977,1314,3.648,1315,2.732,1316,3.247,1317,3.247,1318,2.499,1319,2.499,1321,3.289,1350,2.058,1370,1.316,1417,1.057,1548,2.534,1589,1.199,1673,1.199,1819,2.21,1822,1.148,1898,2.866,1981,2.534,2046,2.308,2050,1.255,2051,1.316,2052,3.942,2053,3.468,2054,3.854,2055,4.017,2056,2.666,2057,2.165,2058,3.623,2059,1.385,2060,1.385,2061,1.385,2062,1.385,2063,2.165,2064,3.014,2065,1.385,2066,1.385,2067,1.385,2068,1.385,2069,1.385,2070,2.666,2071,1.385,2072,2.666,2073,1.385,2074,1.385,2075,2.666,2076,1.385,2077,2.666,2078,1.385,2079,1.385,2080,2.666,2081,1.385,2082,1.385,2083,1.385,2084,1.385,2085,2.666,2086,1.385,2087,2.666,2088,1.385,2089,2.666,2090,1.385,2091,1.385,2092,1.385,2093,1.385,2094,1.385,2095,1.385,2096,1.385,2097,1.385,2098,1.385,2099,1.385,2100,1.385,2101,1.385,2102,1.385,2103,1.385,2104,1.385,2105,1.385,2106,1.385,2107,1.385,2108,1.385,2109,1.385,2110,1.385,2111,1.385,2112,1.385,2113,1.385,2114,1.385,2115,1.385,2116,1.875,2117,2.165,2118,2.165,2119,2.165,2120,1.385,2121,3.014,2122,2.165,2123,2.165,2124,3.11,2125,3.468,2126,2.666,2127,2.666,2128,2.666,2129,2.165,2130,1.385,2131,1.385,2132,2.165,2133,1.385,2134,1.385,2135,1.385,2136,1.316,2137,1.385,2138,1.385,2139,1.385,2140,1.316,2141,1.385,2142,1.385,2143,1.385,2144,1.385,2145,2.732,2146,2.666,2147,2.666,2148,3.468,2149,2.666,2150,2.666,2151,2.666,2152,2.666,2153,1.385,2154,3.468,2155,2.666,2156,2.666,2157,2.666,2158,2.666,2159,3.468,2160,2.666,2161,2.666,2162,2.666,2163,2.666,2164,2.666,2165,2.308,2166,2.534,2167,2.666,2168,2.666,2169,2.666,2170,2.058,2171,2.058,2172,1.385,2173,2.165,2174,1.385,2175,2.058,2176,1.962,2177,2.058,2178,1.875,2179,2.058,2180,2.058,2181,1.385,2182,1.385,2183,1.316,2184,1.385,2185,1.255,2186,1.385,2187,1.385,2203,2.45]],["title/components/OverviewCardComponent.html",[0,0.158,194,0.605]],["body/components/OverviewCardComponent.html",[0,0.312,1,0.691,2,0.128,3,0.097,4,0.772,5,0.8,6,0.8,7,0.744,8,0.081,12,0.228,13,0.976,20,0.873,21,1.012,23,0.8,24,1.293,25,1.152,26,0.907,27,0.907,29,0.907,31,0.646,35,0.776,39,1.074,42,0.783,43,0.866,47,0.467,49,0.941,50,0.976,52,0.013,53,0.519,58,0.568,69,0.375,85,0.717,93,0.16,94,0.144,98,0.112,99,0.007,110,1.479,115,1.127,116,3.221,117,2.252,118,1.529,119,2.067,120,2.91,121,1.529,122,1.81,123,2.503,125,2.155,126,1.701,129,2.75,135,1.985,136,4.071,137,0.457,138,1.049,139,1.049,140,0.976,141,1.243,142,0.8,143,1.049,144,0.691,145,0.8,146,0.665,147,0.8,148,0.691,149,1.171,150,0.64,151,1.049,152,0.691,153,0.8,154,0.691,155,0.8,156,0.691,157,1.049,158,0.691,159,1.049,160,0.665,161,0.8,162,0.691,163,1.034,164,1.243,165,0.665,166,0.8,167,0.717,168,1.171,169,0.691,170,1.171,171,0.691,172,1.171,173,0.691,174,0.8,175,0.691,176,0.8,177,0.691,178,0.772,179,0.691,180,0.8,181,0.665,182,0.8,183,0.691,184,0.691,185,1.034,186,1.171,187,0.691,188,0.8,189,0.691,190,0.691,191,0.8,192,0.691,193,0.691,194,1.074,195,1.208,196,0.665,197,0.8,198,0.691,199,1.13,200,0.691,201,0.691,202,0.691,203,0.665,204,0.8,205,0.691,206,0.616,207,1.049,208,0.691,209,0.8,210,0.665,211,0.744,212,0.691,213,1.14,214,0.744,215,1.05,216,0.665,217,0.8,218,0.691,219,0.522,220,0.717,221,0.691,222,0.907,223,0.8,224,0.691,225,0.691,226,0.691,227,0.691,228,0.691,229,0.691,230,0.772,231,0.8,232,0.009,233,0.009,276,3.625,277,0.772,278,3.079,279,2.09,282,5.876,283,5.265,294,4.013,296,1.428,366,2.155,370,3.335,374,2.08,378,2.601,379,3.103,380,3.298,383,3.991,384,3.818,385,4.262,386,2.47,394,2.235,409,1.249,414,2.503,416,2.067,476,2.91,477,3.157,478,3.335,479,1.749,494,1.585,552,1.908,596,2.745,747,1.478,810,2.408,817,4.013,819,3.103,1128,5.876,1174,4.013,1371,4.013,1392,4.071,1530,5.265,1536,4.013,2016,4.755,2204,5.876,2205,5.307,2206,5.265,2207,4.602,2208,4.602,2209,6.038,2210,4.602,2211,6.038,2212,6.739,2213,4.602,2214,4.602,2215,4.602,2216,4.602,2217,4.602]],["title/components/OverviewComponent.html",[0,0.158,196,0.583]],["body/components/OverviewComponent.html",[0,0.32,1,0.729,2,0.135,3,0.102,4,0.814,5,0.844,6,0.844,7,0.785,8,0.086,12,0.24,13,1.011,20,0.904,21,1.038,23,0.844,24,1.296,25,1.155,26,0.939,27,0.939,29,0.939,31,0.438,35,0.804,39,1.096,42,0.792,43,0.889,47,0.483,49,0.974,50,1.011,52,0.013,53,0.537,58,0.599,69,0.396,85,0.757,93,0.169,94,0.152,98,0.118,99,0.008,110,1.004,115,1.693,116,2.012,118,1.229,121,1.583,126,1.111,137,0.482,138,1.086,139,1.086,140,1.011,141,1.269,142,0.844,143,1.086,144,0.729,145,0.844,146,0.702,147,0.844,148,0.729,149,1.201,150,0.675,151,1.086,152,0.729,153,0.844,154,0.729,155,0.844,156,0.729,157,1.086,158,0.729,159,1.086,160,0.702,161,0.844,162,0.729,163,1.118,164,1.269,165,0.702,166,0.844,167,0.757,168,1.201,169,0.729,170,1.201,171,0.729,172,1.201,173,0.729,174,0.844,175,0.729,176,0.844,177,0.729,178,1.267,179,0.729,180,0.844,181,0.702,182,0.844,183,0.729,184,0.729,185,1.051,186,1.201,187,0.729,188,0.844,189,0.729,190,0.729,191,0.844,192,0.729,193,0.729,194,0.729,195,1.096,196,1.056,197,0.844,198,0.729,199,1.159,200,0.729,201,0.729,202,0.729,203,0.702,204,0.844,205,0.729,206,0.65,207,1.086,208,0.729,209,0.844,210,0.702,211,0.785,212,0.729,213,1.174,214,0.785,215,1.078,216,0.702,217,0.844,218,0.729,219,0.551,220,0.757,221,0.729,222,0.939,223,0.844,224,0.729,225,0.729,226,0.729,227,0.729,228,0.729,229,0.729,230,0.814,231,0.844,232,0.01,233,0.01,268,1.849,277,0.814,278,2.012,324,1.36,374,1.672,386,1.614,394,2.314,409,1.293,439,2.743,460,1.249,479,1.406,481,2.743,508,3.28,551,2.093,1152,3.059,1355,3.533,1389,3.823,1488,3.517,2218,4.233,2219,5.45,2220,6.251,2221,6.914,2222,6.251,2223,4.854,2224,4.854,2225,4.854,2226,4.854,2227,4.854,2228,4.854,2229,4.854]],["title/modules/OverviewModule.html",[234,0.922,1559,2.717]],["body/modules/OverviewModule.html",[0,0.268,2,0.156,3,0.117,8,0.099,12,0.277,47,0.529,52,0.013,60,4.585,65,2.355,93,0.292,94,0.175,98,0.187,99,0.009,137,0.556,194,1.258,195,1.183,196,1.212,232,0.011,233,0.011,234,1.835,236,1.239,237,3.059,238,2.321,239,2.15,245,3.924,246,3.324,247,3.756,248,2.948,249,2.321,250,2.15,252,2.948,253,3.202,254,2.414,268,1.418,269,2.623,270,2.74,271,3.34,272,3.164,460,1.366,568,2.948,1238,4.783,1283,4.953,1558,5.07,1559,5.769,1560,4.783,1569,4.882,1573,4.882,1575,4.882,2205,4.409,2230,4.882,2231,4.882,2232,5.598,2233,4.882,2234,5.598,2235,6.836,2236,5.961,2237,5.598,2238,4.882]],["title/injectables/RoutingService.html",[852,1.25,1353,2.064]],["body/injectables/RoutingService.html",[2,0.141,3,0.106,8,0.089,12,0.379,14,0.553,18,3.175,31,0.458,35,0.827,42,0.737,43,0.653,47,0.622,50,1.04,51,1.29,52,0.013,53,0.638,54,0.879,55,1.033,56,1.818,58,0.872,69,0.648,82,3.999,85,1.239,88,1.879,90,4.337,91,5.474,93,0.224,94,0.159,98,0.124,99,0.008,100,1.157,106,0.851,108,1.995,163,0.93,208,1.115,213,0.93,222,0.762,232,0.01,233,0.01,297,1.245,306,2.85,315,2.468,319,1.242,409,1.33,427,2.513,503,4.949,508,3.613,634,2.381,666,3.999,713,3.999,852,2.19,1112,5.579,1353,3.295,1354,2.378,1403,5.759,1435,4.068,1439,5.828,1457,5.379,1487,3.029,1488,3.679,1501,6.473,1502,4.465,1583,6.394,2239,4.427,2240,6.433,2241,6.433,2242,7.424,2243,5.609,2244,7.424,2245,7.424,2246,5.609,2247,7.424,2248,6.433,2249,5.077,2250,5.077,2251,5.077,2252,5.847,2253,5.609,2254,5.077,2255,5.077,2256,5.077,2257,5.609,2258,5.077,2259,5.609,2260,5.077,2261,6.433,2262,5.077,2263,5.077,2264,5.077,2265,5.077,2266,5.077,2267,5.077]],["title/components/SandboxAlarmComponent.html",[0,0.158,198,0.605]],["body/components/SandboxAlarmComponent.html",[0,0.322,1,0.341,2,0.063,3,0.048,4,1.084,5,0.395,6,0.395,7,0.368,8,0.04,12,0.308,13,1.268,14,0.195,20,0.74,21,0.838,23,0.395,24,1.253,25,1.118,26,1.145,27,1,29,0.341,31,0.205,32,0.605,33,1.205,35,0.464,39,0.892,41,1.44,42,0.845,47,0.564,51,0.97,52,0.014,53,0.555,54,0.661,55,0.625,58,0.983,64,0.961,67,1.387,69,0.594,70,2.085,71,0.994,74,3.573,75,1.315,77,0.988,85,0.7,93,0.178,94,0.071,97,0.424,98,0.157,99,0.01,100,1.18,102,1.72,106,1.168,110,1.154,115,1.1,118,0.914,121,0.914,122,0.682,125,1.289,126,0.52,127,0.873,130,2.121,134,1.021,137,0.226,138,0.628,139,0.97,140,0.584,141,0.889,142,0.395,143,0.628,144,0.341,145,0.395,146,0.329,147,0.395,148,0.341,149,0.781,150,0.316,151,0.628,152,0.341,153,0.395,154,0.341,155,0.395,156,0.341,157,0.628,158,0.341,159,0.628,160,0.329,161,0.395,162,0.341,163,1.11,164,0.889,165,0.329,166,0.395,167,0.354,168,0.781,169,0.341,170,0.781,171,0.341,172,0.781,173,0.341,174,0.395,175,0.341,176,0.395,177,0.341,178,0.381,179,0.341,180,0.395,181,0.329,182,0.395,183,0.341,184,0.542,185,1.104,186,0.781,187,0.542,188,0.628,189,0.542,190,0.542,191,0.395,192,0.542,193,0.892,194,0.341,195,0.341,196,0.329,197,0.395,198,0.971,199,1.206,200,0.542,201,0.542,202,0.341,203,0.329,204,0.395,205,0.341,206,0.601,207,0.628,208,0.341,209,0.395,210,0.329,211,0.368,212,0.341,213,0.935,214,0.368,215,0.7,216,0.329,217,0.395,218,0.341,219,0.258,220,0.354,221,0.341,222,1,223,0.395,224,0.341,225,0.341,226,0.341,227,0.341,228,0.341,229,0.341,230,0.381,231,0.395,232,0.006,233,0.006,236,0.994,268,1.296,277,1.27,278,2.314,279,2.117,295,0.907,296,2.261,297,1.354,300,1.147,303,3.597,319,1.025,322,2.041,324,1.433,333,1.923,339,1.113,356,1.622,365,0.873,366,1.604,367,0.907,386,0.756,391,0.942,394,0.842,404,1.767,406,2.301,407,3.411,409,1.058,411,1.857,412,2.568,416,2.508,420,1.692,427,1.443,430,1.347,432,1.856,435,1.692,438,3.656,440,1.692,449,2.504,450,2.623,451,2.121,452,2.121,453,2.121,454,2.121,455,1.966,456,2.041,457,1.171,460,0.454,474,0.942,479,1.302,480,1.065,494,1.763,506,0.98,550,3.164,551,0.98,552,0.942,555,1.622,556,2.563,568,2.207,605,1.221,614,3.251,634,1.337,641,1.763,704,2.121,747,1.908,810,1.44,816,1.767,822,1.065,825,2.732,826,2.414,861,3.021,865,0.842,998,2.414,1082,1.94,1133,1.557,1140,2.199,1142,2.414,1152,1.113,1157,2.199,1277,2.105,1292,0.907,1314,3.618,1315,2.621,1316,3.164,1317,3.164,1318,2.397,1319,2.397,1321,3.231,1350,1.94,1370,1.221,1417,0.98,1548,2.414,1589,3.468,1673,1.113,1819,2.105,1822,1.065,1898,2.749,1981,2.414,2046,2.199,2050,3.63,2051,1.221,2052,3.857,2053,3.359,2054,3.521,2055,3.764,2056,2.539,2057,2.041,2058,3.521,2059,1.285,2060,1.285,2061,1.285,2062,1.285,2063,2.041,2064,2.892,2065,1.285,2066,1.285,2067,1.285,2068,1.285,2069,1.285,2070,2.539,2071,1.285,2072,2.539,2073,1.285,2074,1.285,2075,2.539,2076,1.285,2077,2.539,2078,1.285,2079,1.285,2080,2.539,2081,1.285,2082,1.285,2083,1.285,2084,1.285,2085,2.539,2086,1.285,2087,2.539,2088,1.285,2089,2.539,2090,1.285,2091,1.285,2092,1.285,2093,1.285,2094,1.285,2095,1.285,2096,1.285,2097,1.285,2098,1.285,2099,1.285,2100,1.285,2101,1.285,2102,1.285,2103,1.285,2104,1.285,2105,1.285,2106,1.285,2107,1.285,2108,1.285,2109,1.285,2110,1.285,2111,1.285,2112,1.285,2113,1.285,2114,1.285,2115,1.285,2116,1.767,2117,2.041,2118,2.041,2119,2.041,2120,1.285,2121,2.892,2122,2.041,2123,2.041,2124,2.999,2125,3.359,2126,2.539,2127,2.539,2128,2.539,2129,2.041,2130,1.285,2131,1.285,2132,2.041,2133,1.285,2134,1.285,2135,1.285,2136,1.221,2137,1.285,2138,1.285,2139,1.285,2140,1.221,2141,1.285,2142,1.285,2143,1.285,2144,1.285,2145,2.859,2146,2.892,2147,2.892,2148,3.936,2149,3.155,2150,3.155,2151,3.155,2152,3.155,2153,1.285,2154,3.653,2155,3.155,2156,2.539,2157,2.539,2158,2.539,2159,3.359,2160,2.539,2161,2.539,2162,2.539,2163,2.539,2164,3.359,2165,2.199,2166,2.414,2167,2.539,2168,2.539,2169,2.539,2170,2.999,2171,2.999,2172,2.041,2173,2.041,2174,1.285,2175,1.94,2176,2.301,2177,2.999,2178,1.767,2179,1.94,2180,1.94,2181,1.285,2182,1.285,2183,1.221,2184,1.285,2185,1.164,2186,1.285,2187,1.285,2268,2.273,2269,2.273,2270,2.273,2271,2.273,2272,2.273,2273,1.791,2274,2.273,2275,2.273,2276,2.273,2277,2.273,2278,2.273,2279,2.273]],["title/components/SandboxAlarmLabelComponent.html",[0,0.158,200,0.605]],["body/components/SandboxAlarmLabelComponent.html",[0,0.322,1,0.352,2,0.065,3,0.049,4,1.096,5,0.408,6,0.408,7,0.379,8,0.041,12,0.312,13,1.273,14,0.202,20,0.753,21,0.851,23,0.408,24,1.255,25,1.12,26,1.152,27,1.01,29,0.352,31,0.212,32,0.621,33,0.971,35,0.476,39,0.904,41,1.391,42,0.845,47,0.488,51,0.985,52,0.014,53,0.561,54,0.543,55,0.638,58,0.987,64,0.981,67,1.422,69,0.591,70,2.099,71,1.015,74,3.593,75,1.333,77,1.005,85,0.577,93,0.181,94,0.073,97,0.437,98,0.159,99,0.01,100,1.187,102,1.73,106,1.178,110,1.172,115,1.123,118,0.594,121,0.937,122,0.703,125,1.322,126,0.537,127,0.901,130,2.078,134,1.054,137,0.233,138,0.643,139,0.985,140,0.599,141,0.905,142,0.408,143,0.643,144,0.352,145,0.408,146,0.339,147,0.408,148,0.352,149,0.797,150,0.326,151,0.643,152,0.352,153,0.408,154,0.352,155,0.408,156,0.352,157,0.643,158,0.352,159,0.643,160,0.339,161,0.408,162,0.352,163,1.116,164,0.905,165,0.339,166,0.408,167,0.366,168,0.797,169,0.352,170,0.797,171,0.352,172,0.797,173,0.352,174,0.408,175,0.352,176,0.408,177,0.352,178,0.393,179,0.352,180,0.408,181,0.339,182,0.408,183,0.352,184,0.556,185,1.108,186,0.797,187,0.556,188,0.643,189,0.556,190,0.556,191,0.408,192,0.556,193,0.904,194,0.352,195,0.352,196,0.339,197,0.408,198,0.904,199,1.215,200,0.782,201,0.556,202,0.352,203,0.339,204,0.408,205,0.352,206,0.614,207,0.643,208,0.352,209,0.408,210,0.339,211,0.379,212,0.352,213,0.945,214,0.379,215,0.715,216,0.339,217,0.408,218,0.352,219,0.266,220,0.366,221,0.352,222,1.01,223,0.408,224,0.352,225,0.352,226,0.352,227,0.352,228,0.352,229,0.352,230,0.393,231,0.408,232,0.006,233,0.006,236,1.015,268,1.319,277,1.277,278,2.35,279,2.028,295,0.936,296,1.956,297,1.348,300,0.885,303,3.616,319,1.034,322,2.077,324,1.459,333,1.794,339,1.148,356,1.663,365,0.901,366,1.637,367,0.936,386,0.78,391,0.972,394,0.868,404,1.812,406,1.201,407,2.349,409,1.077,411,1.848,412,2.401,416,2.339,420,1.099,427,1.473,430,1.375,432,1.885,435,1.734,438,3.673,440,1.099,449,2.548,450,2.645,451,2.159,452,2.159,453,2.159,454,2.159,455,2,456,2.077,457,1.192,460,0.469,474,0.972,479,1.329,480,1.099,494,1.794,506,1.012,550,3.199,551,1.012,552,0.972,555,1.663,556,2.598,568,2.246,605,1.26,614,3.265,634,1.37,641,1.794,704,2.159,747,1.934,810,0.936,816,1.148,822,1.099,825,2.774,826,2.464,861,3.03,865,0.868,998,2.464,1082,1.989,1133,1.596,1140,2.244,1142,2.464,1152,1.148,1157,2.244,1277,1.734,1292,0.936,1314,3.631,1315,2.667,1316,3.199,1317,3.199,1318,2.439,1319,2.439,1321,3.255,1350,1.989,1370,1.26,1417,1.012,1548,2.464,1589,2.948,1673,1.148,1819,2.148,1822,1.099,1898,2.798,1981,2.464,2046,2.244,2050,3.085,2051,1.26,2052,3.893,2053,3.404,2054,3.564,2055,3.802,2056,2.592,2057,2.092,2058,3.564,2059,1.326,2060,1.326,2061,1.326,2062,1.326,2063,2.092,2064,2.943,2065,1.326,2066,1.326,2067,1.326,2068,1.326,2069,1.326,2070,2.592,2071,1.326,2072,2.592,2073,1.326,2074,1.326,2075,2.592,2076,1.326,2077,2.592,2078,1.326,2079,1.326,2080,2.592,2081,1.326,2082,1.326,2083,1.326,2084,1.326,2085,2.592,2086,1.326,2087,2.592,2088,1.326,2089,2.592,2090,1.326,2091,1.326,2092,1.326,2093,1.326,2094,1.326,2095,1.326,2096,1.326,2097,1.326,2098,1.326,2099,1.326,2100,1.326,2101,1.326,2102,1.326,2103,1.326,2104,1.326,2105,1.326,2106,1.326,2107,1.326,2108,1.326,2109,1.326,2110,1.326,2111,1.326,2112,1.326,2113,1.326,2114,1.326,2115,1.326,2116,1.812,2117,2.092,2118,2.092,2119,2.092,2120,1.326,2121,2.943,2122,2.092,2123,2.092,2124,3.045,2125,3.404,2126,2.592,2127,2.592,2128,2.592,2129,2.092,2130,1.326,2131,1.326,2132,2.092,2133,1.326,2134,1.326,2135,1.326,2136,1.26,2137,1.326,2138,1.326,2139,1.326,2140,1.26,2141,1.326,2142,1.326,2143,1.326,2144,1.326,2145,2.903,2146,2.943,2147,2.943,2148,3.97,2149,3.203,2150,3.203,2151,3.203,2152,3.203,2153,2.092,2154,3.694,2155,3.203,2156,2.592,2157,2.592,2158,2.592,2159,3.404,2160,2.592,2161,2.592,2162,2.592,2163,2.592,2164,3.404,2165,2.244,2166,2.464,2167,2.592,2168,2.592,2169,2.592,2170,1.989,2171,1.989,2172,1.326,2173,2.092,2174,1.326,2175,1.989,2176,1.896,2177,1.989,2178,1.812,2179,1.989,2180,1.989,2181,1.326,2182,1.326,2183,1.26,2184,1.326,2185,1.201,2186,1.326,2187,1.326,2273,1.847,2280,2.346,2281,2.346,2282,2.346,2283,2.346,2284,2.346]],["title/components/SandboxAlarmTileComponent.html",[0,0.158,201,0.605]],["body/components/SandboxAlarmTileComponent.html",[0,0.322,1,0.346,2,0.064,3,0.048,4,1.09,5,0.401,6,0.401,7,0.373,8,0.041,12,0.31,13,1.27,14,0.198,20,0.746,21,0.844,23,0.401,24,1.254,25,1.119,26,1.148,27,1.005,29,0.346,31,0.208,32,0.613,33,1.212,35,0.47,39,0.898,41,1.384,42,0.845,47,0.541,51,0.977,52,0.014,53,0.558,54,0.666,55,0.631,58,0.985,64,0.971,67,1.404,69,0.596,70,2.092,71,1.004,74,3.583,75,1.324,77,0.996,85,0.707,93,0.18,94,0.072,97,0.43,98,0.158,99,0.01,100,1.183,102,1.725,106,1.172,110,1.163,115,1.111,118,0.584,121,0.925,122,0.692,125,1.305,126,0.528,127,0.886,130,2.127,134,1.036,137,0.229,138,0.635,139,0.977,140,0.591,141,0.897,142,0.401,143,0.635,144,0.346,145,0.401,146,0.334,147,0.401,148,0.346,149,0.788,150,0.321,151,0.635,152,0.346,153,0.401,154,0.346,155,0.401,156,0.346,157,0.635,158,0.346,159,0.635,160,0.334,161,0.401,162,0.346,163,1.113,164,0.897,165,0.334,166,0.401,167,0.36,168,0.788,169,0.346,170,0.788,171,0.346,172,0.788,173,0.346,174,0.401,175,0.346,176,0.401,177,0.346,178,0.387,179,0.346,180,0.401,181,0.334,182,0.401,183,0.346,184,0.549,185,1.106,186,0.788,187,0.549,188,0.635,189,0.549,190,0.549,191,0.401,192,0.549,193,0.898,194,0.346,195,0.346,196,0.334,197,0.401,198,0.898,199,1.21,200,0.549,201,0.775,202,0.346,203,0.334,204,0.401,205,0.346,206,0.607,207,0.635,208,0.346,209,0.401,210,0.334,211,0.373,212,0.346,213,0.94,214,0.373,215,0.707,216,0.334,217,0.401,218,0.346,219,0.262,220,0.36,221,0.346,222,1.005,223,0.401,224,0.346,225,0.346,226,0.346,227,0.346,228,0.346,229,0.346,230,0.387,231,0.401,232,0.006,233,0.006,236,1.004,268,1.307,277,1.273,278,2.331,279,2.016,295,0.92,296,1.944,297,1.346,300,0.876,303,3.606,319,1.029,322,2.058,324,1.445,333,1.937,339,1.129,356,1.641,365,0.886,366,1.62,367,0.92,386,0.767,391,0.957,394,0.854,404,1.788,406,1.182,407,2.324,409,1.067,411,1.861,412,2.577,416,2.038,420,1.081,427,1.457,430,1.36,432,1.87,435,1.712,438,3.665,440,1.081,449,2.525,450,2.634,451,2.139,452,2.139,453,2.139,454,2.139,455,1.982,456,2.058,457,1.181,460,0.461,474,0.957,479,1.314,480,1.081,494,1.777,506,0.995,550,3.18,551,0.995,552,0.957,555,1.641,556,2.58,568,2.225,605,1.24,614,3.257,634,1.353,641,1.777,704,2.139,747,1.921,810,0.92,816,1.129,822,1.081,825,2.752,826,2.437,861,3.026,865,0.854,998,2.437,1082,2.772,1133,1.576,1140,2.22,1142,2.437,1152,1.129,1157,2.22,1277,2.125,1292,0.92,1314,3.624,1315,2.643,1316,3.18,1317,3.18,1318,2.417,1319,2.417,1321,3.243,1350,1.963,1370,1.24,1417,0.995,1548,2.437,1589,3.275,1673,1.129,1819,2.125,1822,1.081,1898,2.772,1981,2.437,2046,2.22,2050,3.427,2051,1.24,2052,3.874,2053,3.38,2054,3.541,2055,3.782,2056,2.564,2057,2.065,2058,3.541,2059,1.304,2060,1.304,2061,1.304,2062,1.304,2063,2.065,2064,2.916,2065,1.304,2066,1.304,2067,1.304,2068,1.304,2069,1.304,2070,2.564,2071,1.304,2072,2.564,2073,1.304,2074,1.304,2075,2.564,2076,1.304,2077,2.564,2078,1.304,2079,1.304,2080,2.564,2081,1.304,2082,1.304,2083,1.304,2084,1.304,2085,2.564,2086,1.304,2087,2.564,2088,1.304,2089,2.564,2090,1.304,2091,1.304,2092,1.304,2093,1.304,2094,1.304,2095,1.304,2096,1.304,2097,1.304,2098,1.304,2099,1.304,2100,1.304,2101,1.304,2102,1.304,2103,1.304,2104,1.304,2105,1.304,2106,1.304,2107,1.304,2108,1.304,2109,1.304,2110,1.304,2111,1.304,2112,1.304,2113,1.304,2114,1.304,2115,1.304,2116,1.788,2117,2.065,2118,2.065,2119,2.065,2120,1.304,2121,2.916,2122,2.065,2123,2.065,2124,3.021,2125,3.38,2126,2.564,2127,2.564,2128,2.564,2129,2.065,2130,1.304,2131,1.304,2132,2.065,2133,1.304,2134,1.304,2135,1.304,2136,1.24,2137,1.304,2138,1.304,2139,1.304,2140,1.24,2141,1.304,2142,1.304,2143,1.304,2144,1.304,2145,2.88,2146,2.916,2147,2.916,2148,3.952,2149,3.178,2150,3.178,2151,3.178,2152,3.178,2153,1.304,2154,3.673,2155,3.178,2156,2.564,2157,2.564,2158,2.564,2159,3.38,2160,2.564,2161,2.564,2162,2.564,2163,2.564,2164,3.38,2165,2.22,2166,2.437,2167,2.564,2168,2.564,2169,2.564,2170,3.021,2171,3.021,2172,1.304,2173,2.065,2174,1.304,2175,1.963,2176,2.324,2177,3.021,2178,1.788,2179,1.963,2180,1.963,2181,1.304,2182,1.304,2183,1.24,2184,1.304,2185,1.182,2186,1.304,2187,1.304,2273,1.817,2285,2.307,2286,2.307,2287,2.307,2288,2.307,2289,2.307,2290,2.307,2291,2.307,2292,2.307]],["title/modules/SharedModule.html",[234,0.922,247,1.888]],["body/modules/SharedModule.html",[0,0.307,2,0.142,3,0.107,8,0.09,12,0.252,13,1.044,14,0.555,18,3.084,42,0.8,52,0.013,58,0.918,93,0.293,94,0.16,98,0.181,99,0.008,137,0.507,148,1.243,150,1.161,152,1.253,154,1.243,156,1.243,158,1.243,160,1.133,205,1.253,206,0.683,232,0.01,233,0.01,234,1.794,236,1.13,237,2.935,238,2.676,239,1.961,245,3.835,246,3.249,247,4.018,248,2.784,249,2.117,250,1.961,252,2.784,253,3.024,254,2.202,262,5.085,263,4.678,264,3.046,265,4.678,266,2.743,267,2.886,268,1.293,269,2.392,270,2.499,271,3.046,275,4.022,306,2.224,446,3.443,447,4.022,460,1.29,529,4.022,566,4.022,788,4.022,1080,4.022,1117,4.452,1150,3.443,1157,3.159,1596,4.022,2145,3.307,2200,5.629,2201,4.022,2202,5.629,2238,4.452,2293,4.452,2294,4.452,2295,5.106,2296,4.452,2297,5.106,2298,6.456,2299,6.456,2300,4.022,2301,5.106,2302,5.106,2303,5.106,2304,5.106]],["title/components/ShelveButtonComponent.html",[0,0.158,202,0.605]],["body/components/ShelveButtonComponent.html",[0,0.319,1,0.601,2,0.111,3,0.084,4,0.671,5,0.695,6,1.091,7,0.647,8,0.071,11,2.898,12,0.272,13,1.349,14,0.629,15,3.819,16,2.814,17,3.475,18,2.602,19,4.791,20,0.794,21,0.943,22,5.473,23,0.695,24,1.286,25,1.146,26,0.825,27,0.825,28,4.944,29,0.825,30,4.328,31,0.361,32,0.921,33,1.17,34,4.318,35,0.869,37,5.323,38,5.893,39,1.015,40,4.557,41,1.398,42,0.811,43,0.706,44,3.487,45,6.756,46,6.756,47,0.606,48,4.791,51,0.695,52,0.013,53,0.539,54,0.743,55,0.556,56,1.735,57,3.372,58,1.028,59,3.744,60,3.278,61,5.323,62,5.893,63,3.105,64,1.176,65,1.893,69,0.656,70,1.758,71,1.216,73,3.475,74,3.166,75,1.216,77,1.061,78,1.958,79,4.328,80,3.981,81,3.278,82,4.328,83,4.791,84,4.791,85,1.053,88,2.034,89,3.705,93,0.235,94,0.125,95,3.487,96,2.898,97,0.746,98,0.097,99,0.006,100,0.978,101,1.647,102,0.916,103,3.487,104,3.487,105,3.487,107,2.26,108,1.241,112,3.15,115,1.537,116,1.658,117,3.072,118,1.013,119,1.796,121,1.391,122,1.199,123,1.658,124,2.529,125,1.428,126,1.437,127,1.536,128,4.328,129,2.034,130,1.12,132,2.048,133,2.149,134,1.796,135,1.725,136,2.697,137,0.397,138,0.955,139,0.955,140,0.888,141,1.174,142,0.695,143,0.955,144,0.601,145,0.695,146,0.578,147,0.695,148,0.601,149,1.091,150,0.556,151,0.955,152,0.601,153,0.695,154,0.601,155,0.695,156,0.601,157,0.955,158,0.601,159,0.955,160,0.578,161,0.695,162,0.601,163,0.977,164,1.174,165,0.578,166,0.695,167,0.623,168,1.091,169,0.601,170,1.091,171,0.601,172,1.091,173,0.601,174,0.695,175,0.601,176,0.695,177,0.601,178,0.671,179,0.601,180,0.695,181,0.578,182,0.695,183,0.601,184,0.601,185,0.986,186,1.091,187,0.601,188,0.695,189,0.601,190,0.601,191,0.695,192,0.601,193,0.601,194,0.601,195,0.601,196,0.578,197,0.695,198,0.601,199,1.052,200,0.601,201,0.601,202,1.015,203,0.578,204,0.695,205,0.601,206,0.535,207,0.955,208,0.601,209,0.695,210,0.578,211,0.647,212,0.601,213,1.104,214,0.647,215,0.978,216,0.578,217,0.695,218,0.601,219,0.454,220,0.623,221,0.601,222,0.825,223,0.695,224,0.601,225,0.601,226,0.601,227,0.601,228,0.601,229,0.601,230,0.671,231,0.695,232,0.009,233,0.009,258,6.102,277,1.133,279,2.096,312,3.105,319,0.943,334,2.26,380,2.689,409,1.136,1224,3.105,1962,3.15,2305,6.756,2306,6.758,2307,3.999,2308,4.791,2309,5.473,2310,3.999,2311,3.999,2312,3.487,2313,3.999,2314,3.487,2315,3.999]],["title/injectables/SidenavService.html",[34,2.165,852,1.25]],["body/injectables/SidenavService.html",[2,0.131,3,0.099,8,0.083,12,0.357,14,0.528,17,4.856,18,3.183,25,0.632,31,0.427,32,1.03,33,1.586,34,3.3,35,0.79,42,0.763,43,0.79,47,0.639,49,0.957,50,0.993,51,1.256,52,0.014,53,0.621,54,0.909,55,1.005,56,1.88,58,0.892,59,5.047,63,4.34,69,0.659,71,1.36,85,1.168,88,2.274,93,0.252,94,0.148,98,0.115,99,0.007,100,1.064,101,2.166,106,0.792,193,1.153,206,0.822,232,0.01,233,0.01,277,1.03,297,1.144,300,1.318,305,2.649,306,2.73,315,2.553,319,1.214,411,1.454,457,1.406,503,4.856,508,3.246,589,4.142,590,2.878,629,2.122,852,2.117,854,3.186,864,4.451,878,5.356,886,4.838,888,4.451,929,5.45,1112,4.873,1295,3.424,1296,2.988,1353,3.933,1409,3.424,1439,5.564,1460,6.911,1481,3.424,2185,3.146,2243,5.356,2246,5.356,2252,4.838,2253,5.356,2257,5.356,2259,5.356,2316,4.12,2317,6.143,2318,7.227,2319,7.227,2320,7.227,2321,7.227,2322,6.143,2323,4.725,2324,6.143,2325,4.725,2326,4.725,2327,4.725,2328,4.725,2329,4.725,2330,6.143,2331,4.725,2332,4.725,2333,6.143,2334,4.725,2335,4.725,2336,4.725,2337,4.725,2338,4.725,2339,4.725,2340,4.725,2341,4.725,2342,4.725,2343,4.725,2344,6.143,2345,4.725,2346,4.725]],["title/components/StatusViewComponent.html",[0,0.158,205,0.605]],["body/components/StatusViewComponent.html",[0,0.316,1,0.565,2,0.105,3,0.079,4,0.631,5,0.654,6,0.654,7,0.609,8,0.066,12,0.186,13,0.852,18,2.185,20,0.762,21,0.913,23,0.654,24,1.282,25,1.143,26,0.791,27,0.791,29,0.791,31,0.34,32,0.884,33,1.426,35,0.678,39,0.989,41,1.581,42,0.838,43,0.782,47,0.638,52,0.013,53,0.453,54,0.821,58,0.813,64,1.128,65,1.815,69,0.43,71,1.458,85,0.821,93,0.229,94,0.118,97,0.702,98,0.092,99,0.006,101,1.822,106,0.631,118,1.334,126,0.862,129,1.394,130,2.245,137,0.374,138,0.916,139,0.916,140,1.065,141,1.144,142,0.654,143,0.916,144,0.565,145,0.654,146,0.544,147,0.654,148,0.565,149,1.056,150,0.733,151,0.916,152,0.565,153,0.654,154,0.565,155,0.654,156,0.565,157,0.916,158,0.565,159,0.916,160,0.544,161,0.654,162,0.565,163,0.952,164,1.144,165,0.544,166,0.654,167,0.587,168,1.056,169,0.565,170,1.056,171,0.565,172,1.056,173,0.565,174,0.654,175,0.565,176,0.654,177,0.565,178,0.631,179,0.565,180,0.654,181,0.544,182,0.654,183,0.565,184,0.565,185,0.964,186,1.056,187,0.565,188,0.654,189,0.565,190,0.565,191,0.654,192,0.565,193,0.565,194,0.565,195,0.565,196,0.544,197,0.654,198,0.565,199,1.019,200,0.565,201,0.565,202,0.565,203,0.544,204,0.654,205,0.989,206,1.007,207,0.916,208,0.565,209,0.654,210,0.544,211,0.609,212,0.565,213,1.088,214,0.609,215,0.947,216,0.544,217,0.654,218,0.565,219,0.428,220,0.587,221,0.565,222,0.791,223,0.654,224,0.565,225,0.565,226,0.565,227,0.565,228,0.565,229,0.565,230,0.631,231,0.654,232,0.008,233,0.008,277,0.884,281,4.951,291,3.845,292,3.627,297,1.282,300,1.387,305,2.273,306,1.815,307,3.333,308,3.333,309,3.333,310,3.333,312,2.978,319,0.791,330,2.128,333,2.094,409,1.09,411,1.935,412,2.842,414,2.978,430,1.58,449,2.579,450,2.898,451,2.52,452,2.52,453,2.52,454,2.52,455,2.335,456,2.425,457,1.392,479,1.527,508,2.367,810,2.102,861,2.659,865,1.394,1277,2.469,1292,1.502,1314,3.735,1316,3.223,1317,3.223,1318,2.469,1319,2.469,1321,3.226,1404,3.819,1819,2.848,1822,1.764,1849,4.595,1948,5.742,1950,3.283,1953,3.283,1955,3.283,1958,3.283,2016,4.151,2170,3.538,2171,3.538,2175,2.023,2176,2.699,2177,3.538,2178,1.843,2179,2.023,2180,2.023,2300,6.222,2347,6.888,2348,2.966,2349,6.08,2350,4.595,2351,6.585,2352,7.183,2353,5.27,2354,3.766,2355,3.766,2356,5.27,2357,7.183,2358,3.283,2359,3.766,2360,3.766,2361,5.27,2362,5.27,2363,3.766,2364,3.766,2365,3.766,2366,3.766,2367,3.766]],["title/modules/TabularModule.html",[234,0.922,1245,2.548]],["body/modules/TabularModule.html",[0,0.275,2,0.162,3,0.122,8,0.103,12,0.288,52,0.013,93,0.291,94,0.182,98,0.19,99,0.009,137,0.579,179,1.216,208,1.265,210,1.17,211,0.943,232,0.011,233,0.011,234,1.784,235,4.575,236,1.291,237,3.114,238,2.418,239,2.241,246,3.356,247,3.792,248,3.022,249,2.418,250,2.241,252,3.022,253,3.283,254,2.516,268,1.477,269,2.733,270,2.855,272,3.297,324,1.963,460,1.401,508,3.148,531,3.283,1245,5.39,1252,4.227,1595,4.227,1596,4.594,2368,5.086,2369,5.086,2370,5.834,2371,5.086,2372,5.834,2373,5.834,2374,5.834]],["title/components/TabularViewComponent.html",[0,0.158,210,0.583]],["body/components/TabularViewComponent.html",[0,0.32,1,0.725,2,0.134,3,0.101,4,0.81,5,0.839,6,0.839,7,0.781,8,0.085,12,0.239,13,1.008,14,0.535,20,0.901,21,1.036,23,0.839,24,1.296,25,1.155,26,0.936,27,0.936,29,0.936,31,0.436,35,0.937,39,1.094,42,0.806,43,0.887,47,0.482,52,0.013,53,0.535,58,0.596,69,0.394,77,1.203,85,0.753,93,0.168,94,0.151,98,0.118,99,0.007,106,0.81,115,1.183,116,2.583,118,1.578,119,2.799,122,2.185,123,3.021,133,3.706,137,0.48,138,1.083,139,1.083,140,1.008,141,1.266,142,0.839,143,1.083,144,0.725,145,0.839,146,0.699,147,0.839,148,0.725,149,1.199,150,0.672,151,1.083,152,0.725,153,0.839,154,0.725,155,0.839,156,0.725,157,1.083,158,0.725,159,1.083,160,0.699,161,0.839,162,0.725,163,1.054,164,1.266,165,0.699,166,0.839,167,0.753,168,1.199,169,0.725,170,1.199,171,0.725,172,1.199,173,0.725,174,0.839,175,0.725,176,0.839,177,0.725,178,0.81,179,0.725,180,0.839,181,0.699,182,0.839,183,0.725,184,0.725,185,1.05,186,1.199,187,0.725,188,0.839,189,0.725,190,0.725,191,0.839,192,0.725,193,0.725,194,0.725,195,0.725,196,0.699,197,0.839,198,0.725,199,1.157,200,0.725,201,0.725,202,0.725,203,0.699,204,0.839,205,0.725,206,0.646,207,1.083,208,1.036,209,0.839,210,1.054,211,1.287,212,0.725,213,1.151,214,0.781,215,1.075,216,0.699,217,0.839,218,0.725,219,0.548,220,0.753,221,0.725,222,0.936,223,0.839,224,0.725,225,0.725,226,0.725,227,0.725,228,0.725,229,0.725,230,0.81,231,0.839,232,0.01,233,0.01,277,0.81,278,2.86,314,2.474,374,1.664,386,2.072,409,1.289,475,2.882,508,2.799,531,2.919,552,2.003,1595,4.998,1773,5.434,2013,6.355,2348,3.805,2350,5.434,2358,4.212,2375,6.015,2376,6.232,2377,6.898,2378,4.831,2379,6.232,2380,5.434]],["title/interfaces/TimeoutOption.html",[2381,2.277,2382,3.173]],["body/interfaces/TimeoutOption.html",[0,0.286,2,0.128,3,0.066,8,0.055,12,0.155,13,0.745,14,0.519,15,1.766,17,2.914,18,1.91,20,0.452,21,0.692,24,0.469,25,0.418,27,0.469,29,0.469,31,0.282,32,0.773,33,0.859,34,3.462,35,0.593,39,0.469,41,0.646,42,0.817,43,0.402,47,0.242,52,0.014,54,0.546,55,0.762,56,1.708,57,2.942,58,1.008,59,3.844,60,1.864,63,1.766,64,1.171,67,1.2,69,0.668,70,1.291,71,1.338,75,1.02,77,0.603,78,0.905,85,1.139,88,2.027,90,2.107,93,0.262,94,0.098,96,2.264,97,0.583,98,0.112,99,0.005,100,1.116,101,2.191,102,1.597,106,0.524,107,3.642,108,1.698,110,1.132,112,3.63,203,0.452,206,0.418,232,0.01,233,0.007,239,1.77,264,1.864,266,1.679,267,3.415,277,1.264,279,2.22,297,1.322,300,0.603,305,1.987,306,2.627,315,1.039,319,1.213,328,1.864,334,4.13,346,2.914,352,5.053,388,2.724,409,0.646,411,1.296,427,1.48,432,1.039,457,1.253,461,1.864,475,1.864,480,1.464,501,3.301,503,1.976,520,1.039,528,4.774,555,2.715,569,1.987,572,2.461,573,3.63,578,2.107,579,3.63,580,2.914,581,4.41,582,1.976,583,2.461,584,2.461,585,2.461,586,2.461,590,1.464,629,1.404,630,2.323,631,1.295,640,3.107,641,1.076,665,3.482,667,1.976,747,2.42,810,2.184,816,1.529,850,3.63,861,2.237,871,3.462,872,2.264,880,5.295,881,4.075,898,2.107,909,3.019,929,4.075,955,2.724,959,3.482,971,3.641,989,6.48,1006,2.264,1011,4.018,1052,2.461,1059,3.107,1133,2.606,1167,2.461,1224,2.604,1354,2.831,1401,3.107,1424,3.642,1435,2.914,1436,2.724,1486,2.724,1487,1.864,1488,3.339,1507,2.724,1616,3.63,1669,3.63,1680,3.107,1719,4.433,1782,2.724,1809,4.075,1966,2.724,1967,4.018,1970,5.619,1971,4.018,1972,4.774,1974,2.461,1983,2.461,1989,6.372,1993,5.269,1994,3.339,1995,4.774,1998,2.724,1999,2.724,2005,2.724,2007,2.724,2252,2.461,2308,4.018,2309,6.717,2381,2.604,2382,4.312,2383,2.724,2384,4.018,2385,7.432,2386,4.608,2387,5.475,2388,4.608,2389,4.608,2390,2.724,2391,5.269,2392,3.125,2393,3.125,2394,3.125,2395,3.125,2396,4.608,2397,3.125,2398,3.125,2399,3.125,2400,6.043,2401,3.125,2402,3.125,2403,3.125,2404,3.125,2405,3.125,2406,6.043,2407,3.125,2408,3.125,2409,6.043,2410,3.125,2411,6.043,2412,3.125,2413,3.125,2414,4.312,2415,3.125,2416,3.125,2417,3.125,2418,3.125,2419,3.125,2420,2.461,2421,4.608,2422,4.608,2423,3.125,2424,5.475,2425,3.125,2426,4.608,2427,3.125,2428,3.125,2429,3.125,2430,4.608,2431,4.608,2432,3.125,2433,5.475,2434,4.608,2435,3.125,2436,3.125,2437,3.125,2438,4.608,2439,3.125,2440,3.125,2441,3.125,2442,3.125,2443,3.125,2444,4.608,2445,2.724,2446,3.125,2447,4.608,2448,3.125,2449,4.608,2450,3.125,2451,4.608,2452,3.125,2453,3.125,2454,3.125,2455,3.125,2456,3.125,2457,7.626,2458,3.125,2459,4.608,2460,4.608,2461,4.608,2462,3.125,2463,2.724,2464,3.125,2465,3.125,2466,3.125,2467,3.125,2468,3.125,2469,4.018,2470,3.125,2471,3.125,2472,3.125,2473,3.125,2474,3.125,2475,3.125,2476,3.125,2477,3.125,2478,3.125,2479,3.125,2480,3.125,2481,3.125,2482,3.125,2483,4.608,2484,4.608,2485,3.125,2486,3.125,2487,4.608,2488,3.125,2489,3.125,2490,6.743,2491,3.125,2492,4.608,2493,4.608,2494,3.125,2495,3.125,2496,3.125,2497,3.125,2498,3.125]],["title/interfaces/User.html",[959,1.888,2381,2.277]],["body/interfaces/User.html",[2,0.163,3,0.123,8,0.103,12,0.289,14,0.502,31,0.528,32,1.177,33,1.09,43,0.752,49,0.911,50,0.946,52,0.013,54,0.831,55,0.977,56,1.841,57,3.142,69,0.573,93,0.271,94,0.183,98,0.171,99,0.012,100,0.911,101,1.753,232,0.011,233,0.011,319,1.216,411,1.385,430,2.254,448,4.439,506,2.522,569,2.522,629,2.627,665,2.74,852,2.177,863,3.142,868,3.737,869,3.595,870,3.305,909,2.74,959,3.915,971,3.288,1424,3.305,1434,4.606,1454,5.462,1620,3.488,1719,4.187,1809,3.943,1827,3.943,1994,4.237,2008,4.606,2381,3.967,2414,6.143,2499,4.606,2500,7.063,2501,6.12,2502,5.099,2503,5.099]],["title/injectables/UserService.html",[852,1.25,1424,2.277]],["body/injectables/UserService.html",[2,0.158,3,0.119,8,0.1,12,0.341,14,0.592,31,0.513,32,1.156,33,1.385,35,0.887,43,0.887,47,0.574,49,1.075,50,1.115,51,0.987,52,0.013,53,0.488,54,0.817,55,0.959,56,1.97,57,3.705,69,0.606,93,0.269,94,0.178,98,0.168,99,0.011,100,0.885,101,1.702,232,0.011,233,0.011,319,1.035,411,1.345,430,2.412,448,3.592,506,2.974,569,2.974,629,2.551,665,3.23,852,2.304,863,3.051,868,3.849,869,3.803,870,3.21,909,3.23,959,3.983,971,3.23,1424,3.897,1434,5.431,1454,4.65,1620,4.114,1719,4.114,1762,4.952,1809,3.829,1827,4.65,1994,4.115,2008,4.473,2381,3.21,2414,6.336,2499,4.473,2500,6.013,2501,4.952,2502,6.734,2503,4.952,2504,6.896,2505,5.679]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.158,212,0.605]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.319,1,0.632,2,0.117,3,0.088,4,0.706,5,0.731,6,0.731,7,0.68,8,0.074,12,0.281,13,0.92,14,0.638,20,0.823,21,0.968,23,0.731,24,1.289,25,1.148,26,0.854,27,0.854,29,0.854,31,0.38,32,0.954,33,1.46,35,0.731,39,1.036,41,1.428,42,0.827,43,0.731,47,0.588,49,0.887,50,0.92,51,0.731,52,0.013,53,0.554,54,0.854,55,0.586,56,1.82,58,0.52,69,0.606,77,1.098,85,0.656,93,0.269,94,0.132,97,1.061,98,0.103,99,0.007,100,0.887,106,0.954,137,0.418,138,0.989,139,0.989,140,0.92,141,1.199,142,0.731,143,0.989,144,0.632,145,0.731,146,0.608,147,0.731,148,0.632,149,1.12,150,0.792,151,0.989,152,0.632,153,0.731,154,0.632,155,0.731,156,0.632,157,0.989,158,0.632,159,0.989,160,0.608,161,0.731,162,0.632,163,0.998,164,1.199,165,0.608,166,0.731,167,0.656,168,1.12,169,0.632,170,1.12,171,0.632,172,1.12,173,0.632,174,0.731,175,0.632,176,0.731,177,0.632,178,0.706,179,0.632,180,0.731,181,0.608,182,0.731,183,0.632,184,0.632,185,1.003,186,1.12,187,0.632,188,0.731,189,0.632,190,0.632,191,0.731,192,0.632,193,0.632,194,0.632,195,0.632,196,0.608,197,0.731,198,0.632,199,1.08,200,0.632,201,0.632,202,0.632,203,0.608,204,0.731,205,0.632,206,0.563,207,0.989,208,0.632,209,0.731,210,0.608,211,0.68,212,1.036,213,1.2,214,1.362,215,1.313,216,0.608,217,0.731,218,0.632,219,0.478,220,0.656,221,0.632,222,0.854,223,0.731,224,0.632,225,0.632,226,0.632,227,1.141,228,0.632,229,0.632,230,0.706,231,0.731,232,0.009,233,0.009,277,0.954,315,1.892,319,0.968,324,1.593,394,2.555,409,1.176,411,0.996,412,1.502,498,2.571,502,2.571,520,2.632,630,2.805,631,1.745,827,3.215,862,2.895,865,1.558,1191,2.838,1192,4.67,1193,4.122,1201,3.315,1260,3.462,1292,2.269,1325,4.655,2420,5.437,2506,4.367,2507,4.887,2508,5.21,2509,3.964,2510,4.345,2511,2.661,2512,4.96,2513,3.67,2514,3.67,2515,3.67,2516,3.67,2517,2.51,2518,4.208]],["title/components/WeatherComponent.html",[0,0.158,216,0.583]],["body/components/WeatherComponent.html",[0,0.324,1,0.692,2,0.128,3,0.097,4,0.773,5,0.801,6,0.801,7,0.746,8,0.081,12,0.228,13,0.977,14,0.615,16,3.096,20,0.874,21,1.013,23,0.801,24,1.293,25,1.152,26,0.908,27,0.908,29,0.908,31,0.416,32,1.014,35,0.777,39,1.075,41,0.954,42,0.8,43,0.867,47,0.554,49,0.942,50,0.977,51,0.801,52,0.013,53,0.668,54,0.716,55,0.642,58,0.569,59,3.606,69,0.493,77,1.167,85,1.051,93,0.21,94,0.144,97,0.86,98,0.112,99,0.007,100,0.719,106,1.014,108,1.875,126,1.056,129,1.707,133,2.477,137,0.458,138,1.051,139,1.051,140,0.977,141,1.244,142,0.801,143,1.051,144,0.692,145,0.801,146,0.667,147,0.801,148,0.692,149,1.172,150,0.642,151,1.051,152,0.692,153,0.801,154,0.692,155,0.801,156,0.692,157,1.051,158,0.692,159,1.051,160,0.667,161,0.801,162,0.692,163,1.035,164,1.244,165,0.667,166,0.801,167,0.719,168,1.172,169,0.692,170,1.172,171,0.692,172,1.172,173,0.692,174,0.801,175,0.692,176,0.801,177,0.692,178,0.773,179,0.692,180,0.801,181,0.667,182,0.801,183,0.692,184,0.692,185,1.034,186,1.172,187,0.692,188,0.801,189,0.692,190,0.692,191,0.801,192,0.692,193,0.692,194,0.692,195,0.692,196,0.667,197,0.801,198,0.692,199,1.131,200,0.692,201,0.692,202,0.692,203,0.667,204,0.801,205,0.692,206,0.617,207,1.051,208,0.692,209,0.801,210,0.667,211,0.746,212,0.692,213,1.192,214,0.746,215,1.051,216,1.035,217,0.801,218,0.692,219,0.523,220,0.719,221,0.692,222,0.908,223,0.801,224,0.692,225,0.692,226,0.692,227,0.692,228,0.692,229,0.692,230,0.773,231,0.801,232,0.009,233,0.009,277,1.014,297,0.773,300,0.89,409,1.577,460,0.921,479,1.336,498,3.145,507,4.528,520,2.472,556,2.607,557,4.381,617,3.109,641,2.466,697,3.606,862,2.071,894,4.076,1170,5.639,1173,3.632,1223,4.761,1224,3.417,1235,5.271,2519,4.021,2520,6.046,2521,6.046,2522,6.745,2523,6.046,2524,6.651,2525,6.046,2526,6.046,2527,6.046,2528,4.611,2529,4.611,2530,4.021]],["title/components/WeatherDataMarkerComponent.html",[0,0.158,218,0.605]],["body/components/WeatherDataMarkerComponent.html",[0,0.322,1,0.629,2,0.116,3,0.088,4,0.702,5,0.985,6,0.727,7,0.677,8,0.074,12,0.28,13,0.916,14,0.637,20,0.82,21,0.965,23,0.727,24,1.288,25,1.148,26,0.851,27,0.851,29,0.851,31,0.378,32,0.95,33,1.384,35,0.729,39,1.034,41,1.534,42,0.799,43,0.729,47,0.587,49,0.883,50,0.916,51,0.727,52,0.013,53,0.552,54,0.816,55,0.582,56,1.817,57,3.701,58,0.517,69,0.342,75,1.525,77,1.094,85,0.652,93,0.258,94,0.131,97,1.057,98,0.102,99,0.006,100,0.883,115,1.388,117,2.049,120,2.647,122,1.927,123,1.735,125,1.494,126,1.471,130,1.588,137,0.416,138,0.985,139,0.985,140,0.916,141,1.197,142,0.727,143,0.985,144,0.629,145,0.727,146,0.605,147,0.727,148,0.629,149,1.117,150,0.789,151,0.985,152,0.629,153,0.727,154,0.629,155,0.727,156,0.629,157,0.985,158,0.629,159,0.985,160,0.605,161,0.727,162,0.629,163,0.996,164,1.197,165,0.605,166,0.727,167,0.652,168,1.117,169,0.629,170,1.117,171,0.629,172,1.117,173,0.629,174,0.727,175,0.629,176,0.727,177,0.629,178,0.702,179,0.629,180,0.727,181,0.605,182,0.727,183,0.629,184,0.629,185,1.001,186,1.117,187,0.629,188,0.727,189,0.629,190,0.629,191,0.727,192,0.629,193,0.629,194,0.629,195,0.629,196,0.605,197,0.727,198,0.629,199,1.077,200,0.629,201,0.629,202,0.629,203,0.605,204,0.727,205,0.629,206,0.56,207,0.985,208,0.629,209,0.727,210,0.605,211,0.677,212,0.629,213,1.196,214,0.677,215,1.073,216,0.605,217,0.727,218,1.034,219,0.954,220,0.652,221,0.629,222,0.851,223,0.727,224,0.629,225,0.629,226,0.629,227,1.081,228,0.629,229,0.629,230,0.702,231,0.727,232,0.009,233,0.009,277,0.95,279,1.299,296,1.299,297,0.95,300,1.094,324,1.588,365,1.608,366,1.494,374,1.952,380,2.049,394,2.857,409,1.172,460,0.837,477,1.961,494,1.952,498,2.564,502,2.564,520,2.63,569,2.445,596,2.497,630,2.803,631,1.735,638,4.107,641,2.479,818,2.497,862,2.887,1095,4.356,1125,4.644,1157,2.774,1191,2.823,1192,4.657,1193,4.107,1206,4.942,1211,3.65,1260,3.453,1289,3.203,1292,1.67,1386,4.107,2116,2.774,2506,4.362,2507,4.881,2508,5.204,2509,3.961,2510,4.334,2511,2.647,2517,2.497,2531,5.604,2532,4.186,2533,4.186,2534,4.186,2535,4.186]],["title/modules/WeatherModule.html",[234,0.922,1560,2.404]],["body/modules/WeatherModule.html",[0,0.254,2,0.143,3,0.108,8,0.09,12,0.254,52,0.013,60,3.862,93,0.295,94,0.16,98,0.181,99,0.008,137,0.509,212,1.178,213,1.185,214,1.047,215,1.223,216,1.134,218,1.178,219,0.735,220,1.223,221,1.178,222,1.119,224,1.178,225,1.178,226,1.178,227,0.972,228,1.244,232,0.01,233,0.01,234,1.706,235,4.434,236,1.135,237,2.941,238,2.126,239,2.725,245,3.84,246,3.252,247,3.676,248,2.792,249,2.126,250,1.97,252,2.792,253,3.033,254,2.212,266,2.755,268,1.299,269,2.403,270,2.51,271,3.059,272,2.898,324,1.813,460,1.294,520,2.478,1244,4.68,1249,4.472,1251,5.645,1252,3.716,1253,4.039,1256,6.186,1258,4.039,1560,5.131,2507,4.712,2508,4.783,2509,3.84,2517,3.059,2536,4.472,2537,4.472,2538,5.128,2539,4.472,2540,4.472,2541,5.128,2542,6.474,2543,4.039,2544,4.039,2545,4.472,2546,5.128,2547,4.691,2548,4.039,2549,5.128]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.158,221,0.605]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.308,1,0.643,2,0.119,3,0.09,4,0.718,5,0.744,6,0.744,7,0.692,8,0.075,12,0.212,13,0.931,14,0.494,16,2.948,20,0.832,21,0.976,23,0.744,24,1.29,25,1.149,26,0.864,27,0.864,29,0.864,31,0.387,35,0.74,39,1.044,41,1.545,42,0.771,43,0.836,47,0.578,49,0.897,50,0.931,52,0.013,53,0.494,54,0.507,58,0.529,69,0.609,75,1.274,77,1.111,85,0.667,93,0.149,94,0.134,98,0.104,99,0.007,102,0.98,110,1.438,135,3.221,137,0.425,138,1,139,1,140,0.931,141,1.208,142,0.744,143,1,144,0.643,145,0.744,146,0.619,147,0.744,148,0.643,149,1.13,150,0.596,151,1,152,0.643,153,0.744,154,0.643,155,0.744,156,0.643,157,1,158,0.643,159,1,160,0.619,161,0.744,162,0.643,163,1.005,164,1.208,165,0.619,166,0.744,167,0.667,168,1.13,169,0.643,170,1.13,171,0.643,172,1.13,173,0.643,174,0.744,175,0.643,176,0.744,177,0.643,178,0.718,179,0.643,180,0.744,181,0.619,182,0.744,183,0.643,184,0.643,185,1.009,186,1.13,187,0.643,188,0.744,189,0.643,190,0.643,191,0.744,192,0.643,193,0.643,194,0.643,195,0.643,196,0.619,197,0.744,198,0.643,199,1.09,200,0.643,201,0.643,202,0.643,203,0.619,204,0.744,205,0.643,206,0.573,207,1,208,0.643,209,0.744,210,0.619,211,0.692,212,0.643,213,1.202,214,0.692,215,1.313,216,0.619,217,0.744,218,0.643,219,0.486,220,0.667,221,1.044,222,1.26,223,0.744,224,0.643,225,0.643,226,0.643,227,0.976,228,0.643,229,0.643,230,0.718,231,0.744,232,0.009,233,0.009,297,1.166,319,0.976,322,2.296,324,1.612,393,4.171,394,2.574,409,1.19,520,2.664,569,2.482,641,2.24,747,1.375,830,2.887,950,5.412,1125,4.688,1208,3.881,1287,4.533,1392,3.881,1470,5.669,2116,2.817,2506,4.313,2507,4.826,2531,5.669,2548,6.011,2550,3.734,2551,8.012,2552,5.756,2553,6.502,2554,5.756,2555,6.952,2556,6.952,2557,5.756,2558,4.282,2559,4.282,2560,4.282,2561,6.062,2562,4.282,2563,6.952,2564,4.282,2565,4.282,2566,5.756,2567,5.756,2568,4.282,2569,4.282]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.158,224,0.605]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.319,1,0.632,2,0.117,3,0.088,4,0.705,5,0.731,6,0.731,7,0.68,8,0.074,12,0.281,13,0.919,14,0.638,20,0.822,21,0.967,23,0.731,24,1.289,25,1.148,26,0.854,27,0.854,29,0.854,31,0.38,32,0.953,33,1.46,35,0.731,39,1.036,41,1.427,42,0.827,43,0.731,47,0.587,49,0.886,50,0.919,51,0.731,52,0.013,53,0.553,54,0.854,55,0.585,56,1.819,58,0.519,69,0.606,77,1.098,85,0.656,93,0.269,94,0.132,97,1.06,98,0.102,99,0.007,100,0.886,106,1.08,137,0.418,138,0.988,139,0.988,140,0.919,141,1.199,142,0.731,143,0.988,144,0.632,145,0.731,146,0.608,147,0.731,148,0.632,149,1.119,150,0.791,151,0.988,152,0.632,153,0.731,154,0.632,155,0.731,156,0.632,157,0.988,158,0.632,159,0.988,160,0.608,161,0.731,162,0.632,163,0.998,164,1.199,165,0.608,166,0.731,167,0.656,168,1.119,169,0.632,170,1.119,171,0.632,172,1.119,173,0.632,174,0.731,175,0.632,176,0.731,177,0.632,178,0.705,179,0.632,180,0.731,181,0.608,182,0.731,183,0.632,184,0.632,185,1.003,186,1.119,187,0.632,188,0.731,189,0.632,190,0.632,191,0.731,192,0.632,193,0.632,194,0.632,195,0.632,196,0.608,197,0.731,198,0.632,199,1.08,200,0.632,201,0.632,202,0.632,203,0.608,204,0.731,205,0.632,206,0.563,207,0.988,208,0.632,209,0.731,210,0.608,211,0.68,212,0.632,213,1.193,214,0.68,215,1.313,216,0.608,217,0.731,218,0.632,219,0.478,220,0.656,221,0.632,222,1.267,223,0.731,224,1.036,225,0.632,226,0.632,227,1.082,228,0.632,229,0.632,230,0.705,231,0.731,232,0.009,233,0.009,277,0.953,315,2.295,319,0.967,324,1.593,394,2.555,409,1.176,411,0.996,412,1.501,498,2.57,502,2.57,520,2.632,630,2.831,631,1.744,646,3.834,862,2.894,865,1.557,1191,2.836,1192,4.668,1193,4.12,1201,3.313,1260,3.461,1292,2.268,1325,4.653,2420,5.435,2506,4.367,2507,4.886,2508,5.21,2509,3.963,2510,4.344,2511,2.66,2512,4.958,2513,3.667,2514,3.667,2515,3.667,2516,3.667,2517,2.509,2570,4.206]],["title/injectables/WeatherService.html",[852,1.25,2509,1.972]],["body/injectables/WeatherService.html",[0,0.258,2,0.081,3,0.061,8,0.051,12,0.309,14,0.565,31,0.474,32,0.734,33,1.556,35,0.563,42,0.762,43,0.563,47,0.63,50,0.708,51,1.015,52,0.014,53,0.502,54,0.945,55,0.813,56,1.84,58,0.866,65,1.004,69,0.653,70,1.472,71,0.645,75,1.163,78,2.032,81,2.611,85,0.91,88,1.62,93,0.25,94,0.091,97,0.816,98,0.071,99,0.005,100,0.975,101,1.876,102,1.203,106,0.979,108,1.942,115,1.717,130,2.282,150,0.406,163,0.633,206,0.938,213,1.014,219,0.796,227,1.053,232,0.007,233,0.007,297,0.979,300,1.128,315,2.186,319,1.077,324,1.226,328,2.611,333,2.589,394,2.433,409,0.905,411,1.929,412,2.963,427,1.405,432,1.455,439,2.473,440,2.05,450,2.886,451,2.907,452,2.907,453,2.907,454,2.907,455,2.694,456,2.797,457,1.673,459,2.611,498,3.11,501,2.991,502,2.622,506,3.094,507,2.768,520,2.332,628,4.692,629,1.309,630,2.416,631,1.208,665,3.286,704,1.208,718,3.715,827,2.473,852,1.63,854,1.966,861,3.051,862,2.623,863,1.566,865,1.079,868,2.932,869,2.242,870,1.647,881,2.951,888,3.171,909,2.05,971,3.079,985,2.951,1054,4.232,1095,3.693,1202,2.768,1208,2.951,1260,2.351,1261,5.092,1268,5.092,1270,5.092,1273,3.693,1277,2.736,1279,3.447,1283,3.171,1286,3.171,1287,3.447,1289,2.473,1292,1.163,1293,2.112,1297,3.816,1299,2.542,1310,2.542,1312,3.816,1314,3.822,1315,3.85,1316,3.815,1317,3.678,1318,3.286,1319,3.286,1321,3.648,1396,2.112,1560,2.611,1819,2.932,1820,5.092,1822,2.462,1974,3.447,2176,2.242,2178,2.858,2390,2.542,2391,2.542,2509,2.142,2571,2.542,2572,5.84,2573,5.84,2574,5.84,2575,5.84,2576,5.84,2577,5.84,2578,5.84,2579,5.84,2580,5.84,2581,5.84,2582,5.84,2583,5.84,2584,5.84,2585,4.376,2586,4.376,2587,4.376,2588,5.84,2589,4.376,2590,4.376,2591,2.915,2592,2.915,2593,4.376,2594,2.915,2595,4.376,2596,3.816,2597,2.915,2598,2.915,2599,4.376,2600,2.915,2601,2.915,2602,2.915,2603,8.097,2604,2.915,2605,2.915,2606,2.915,2607,2.915,2608,4.376,2609,2.915,2610,2.915,2611,8.097,2612,2.915,2613,4.376,2614,2.915,2615,2.915,2616,2.915,2617,2.915,2618,6.573,2619,6.573,2620,2.915,2621,2.542,2622,2.915,2623,2.915,2624,6.818,2625,4.376,2626,4.376,2627,4.376,2628,4.376,2629,4.376,2630,4.376,2631,4.376,2632,2.915,2633,2.915,2634,2.915,2635,2.915,2636,2.915,2637,2.915,2638,2.915,2639,2.915,2640,2.915,2641,2.915,2642,7.796,2643,2.915,2644,7.796,2645,2.915]],["title/components/WeatherSidebarComponent.html",[0,0.158,225,0.605]],["body/components/WeatherSidebarComponent.html",[0,0.304,1,0.464,2,0.086,3,0.065,4,0.518,5,0.945,6,0.537,7,0.499,8,0.054,12,0.317,13,1.086,14,0.66,15,2.583,16,2.786,20,0.661,21,0.817,23,0.537,24,1.269,25,1.132,26,0.686,27,0.686,29,0.686,31,0.279,32,0.766,33,1.358,35,0.588,39,0.902,40,3.081,41,1.243,42,0.776,43,0.588,47,0.588,49,0.712,50,0.739,51,1.167,52,0.013,53,0.637,54,0.89,55,0.934,56,1.841,58,0.381,64,0.978,65,2.07,69,0.633,70,1.881,71,1.33,75,1.33,77,0.882,78,1.741,85,0.848,89,4.052,93,0.234,94,0.097,97,0.576,98,0.075,99,0.005,100,1.155,101,0.926,102,1.537,106,0.518,108,1.99,110,1.326,115,1.914,116,2.88,117,2.236,118,1.624,119,2.443,121,1.377,122,2.013,123,1.894,126,1.633,127,1.755,129,2.697,130,0.865,132,2.341,133,2.455,135,1.971,137,0.307,138,0.794,139,0.794,140,0.879,141,1.044,142,0.537,143,0.794,144,0.464,145,0.537,146,0.447,147,0.537,148,0.464,149,0.945,150,0.43,151,0.794,152,0.464,153,0.537,154,0.464,155,0.537,156,0.464,157,0.794,158,0.464,159,0.794,160,0.447,161,0.537,162,0.464,163,1.178,164,1.044,165,0.447,166,0.537,167,0.481,168,0.945,169,0.464,170,0.945,171,0.464,172,0.945,173,0.464,174,0.537,175,0.464,176,0.537,177,0.464,178,0.518,179,0.464,180,0.537,181,0.447,182,0.537,183,0.464,184,0.464,185,0.892,186,0.945,187,0.464,188,0.537,189,0.464,190,0.464,191,0.537,192,0.464,193,0.464,194,0.464,195,0.464,196,0.447,197,0.537,198,0.464,199,0.912,200,0.464,201,0.464,202,0.464,203,0.447,204,0.537,205,0.464,206,0.858,207,0.794,208,0.464,209,0.537,210,0.447,211,0.499,212,0.464,213,1.216,214,0.499,215,0.848,216,0.447,217,0.537,218,0.464,219,0.617,220,0.481,221,0.464,222,0.686,223,0.537,224,0.464,225,0.902,226,0.464,227,1.227,228,0.464,229,0.464,230,0.518,231,0.537,232,0.008,233,0.007,266,1.66,277,0.912,278,1.281,279,1.687,295,1.232,297,0.518,298,3.081,300,0.596,306,2.553,314,2.341,315,1.52,319,1.154,328,2.726,365,1.755,366,1.942,367,2.169,374,2.07,380,2.236,383,1.66,384,1.954,386,1.027,391,2.255,409,0.945,430,2.184,457,0.707,476,1.954,477,2.815,478,2.238,479,1.858,481,3.074,494,2.07,498,3.158,502,2.772,551,1.971,552,1.894,556,1.971,557,3.311,569,1.971,601,3.599,602,3.311,610,2.238,616,3.941,617,4.052,630,2.672,631,1.281,641,2.553,704,2.491,810,2.679,819,3.081,822,2.548,830,2.083,862,2.443,880,5.279,894,3.081,909,2.141,959,2.548,971,1.447,1133,1.971,1167,2.433,1224,4.117,1260,2.922,1322,2.238,1323,4.283,1324,3.599,1326,3.985,1329,3.985,1334,3.599,1336,5.052,1346,3.081,1368,2.694,1382,2.694,1383,4.283,1386,3.941,1402,2.89,1481,2.238,1527,2.694,1719,1.843,1768,3.985,1918,5.921,2116,1.512,2185,1.582,2445,2.694,2506,4.344,2509,3.825,2510,4.685,2511,1.954,2517,1.843,2524,4.742,2530,5.24,2543,5.289,2547,5.57,2646,3.985,2647,7.756,2648,4.57,2649,4.57,2650,5.439,2651,7.286,2652,6.949,2653,4.57,2654,3.089,2655,4.57,2656,3.089,2657,4.57,2658,3.089,2659,6.01,2660,4.57,2661,3.089,2662,3.089,2663,4.57,2664,3.089,2665,4.57,2666,3.089,2667,3.985,2668,3.089,2669,2.694,2670,3.089,2671,2.694,2672,3.089,2673,3.089,2674,3.089,2675,3.089,2676,3.089,2677,3.089,2678,3.089,2679,3.089,2680,3.089,2681,3.089,2682,3.089,2683,4.57,2684,4.57,2685,3.089,2686,3.089,2687,3.089,2688,3.089,2689,3.089,2690,3.089,2691,3.089,2692,3.089,2693,3.089,2694,3.089]],["title/components/WeatherStationSidebarComponent.html",[0,0.158,226,0.605]],["body/components/WeatherStationSidebarComponent.html",[0,0.322,1,0.627,2,0.116,3,0.088,4,0.7,5,0.726,6,0.726,7,0.675,8,0.074,12,0.28,13,0.915,14,0.637,20,0.818,21,0.964,23,0.726,24,1.288,25,1.148,26,0.85,27,0.85,29,0.85,31,0.377,32,0.949,33,1.383,35,0.728,39,1.033,41,1.487,42,0.792,43,0.728,47,0.586,49,0.882,50,0.915,51,0.726,52,0.013,53,0.551,54,0.852,55,0.581,56,1.816,58,0.516,64,1.472,69,0.619,77,1.093,78,1.21,85,0.651,93,0.239,94,0.131,97,0.779,98,0.102,99,0.011,100,0.882,108,2.135,110,1.17,115,1.386,117,2.044,118,1.057,121,1.057,122,1.252,123,1.731,126,1.296,129,2.376,130,1.585,135,2.441,137,0.415,138,0.983,139,0.983,140,0.915,141,1.196,142,0.726,143,0.983,144,0.627,145,0.726,146,0.604,147,0.726,148,0.627,149,1.115,150,0.581,151,0.983,152,0.627,153,0.726,154,0.627,155,0.726,156,0.627,157,0.983,158,0.627,159,0.983,160,0.604,161,0.726,162,0.627,163,0.995,164,1.196,165,0.604,166,0.726,167,0.651,168,1.115,169,0.627,170,1.115,171,0.627,172,1.115,173,0.627,174,0.726,175,0.627,176,0.726,177,0.627,178,0.7,179,0.627,180,0.726,181,0.604,182,0.726,183,0.627,184,0.627,185,1.001,186,1.115,187,0.627,188,0.726,189,0.627,190,0.627,191,0.726,192,0.627,193,0.627,194,0.627,195,0.627,196,0.604,197,0.726,198,0.627,199,1.076,200,0.627,201,0.627,202,0.627,203,0.604,204,0.726,205,0.627,206,0.559,207,0.983,208,0.627,209,0.726,210,0.604,211,0.675,212,0.627,213,1.211,214,0.675,215,1,216,0.604,217,0.726,218,0.627,219,0.474,220,0.651,221,0.627,222,0.85,223,0.726,224,0.627,225,0.627,226,1.033,227,1.273,228,0.627,229,0.627,230,0.7,231,0.726,232,0.009,233,0.009,277,0.949,285,4.352,297,0.7,300,0.806,319,0.964,370,3.026,374,1.439,383,2.244,385,2.641,409,1.17,460,1.131,479,1.21,494,1.439,498,2.869,502,2.56,552,1.731,608,3.579,630,2.802,631,1.731,639,5.056,641,2.554,684,3.289,827,3.198,862,3.23,1125,4.849,1224,4.064,1260,3.449,1289,3.198,1322,3.026,1323,5.056,1324,4.457,1334,4.457,1386,3.026,1389,3.289,1390,3.289,2506,4.359,2509,3.959,2510,4.328,2511,2.641,2517,2.491,2547,5.589,2646,4.935,2669,3.641,2695,5.659,2696,4.176,2697,4.176,2698,4.176,2699,4.176,2700,4.176,2701,4.176,2702,4.176,2703,4.176]],["title/components/WeatherSummaryComponent.html",[0,0.158,228,0.605]],["body/components/WeatherSummaryComponent.html",[0,0.307,1,0.628,2,0.116,3,0.088,4,0.701,5,0.984,6,0.727,7,0.676,8,0.074,12,0.318,13,0.916,14,0.679,20,0.819,21,0.964,23,0.727,24,1.288,25,1.148,26,0.85,27,0.85,29,0.85,31,0.378,32,0.95,33,1.383,35,0.728,39,1.034,42,0.816,43,0.728,47,0.574,49,0.883,50,0.916,51,0.984,52,0.013,53,0.591,54,0.815,55,0.788,56,1.889,58,0.516,69,0.524,78,2.149,85,1.001,88,2.378,93,0.269,94,0.131,97,1.056,98,0.102,99,0.006,100,1.073,101,1.253,106,0.701,110,1.328,115,1.024,118,1.434,121,1.059,122,2.157,126,1.297,127,1.606,137,0.415,138,0.984,139,0.984,140,0.916,141,1.196,142,0.727,143,0.984,144,0.628,145,0.727,146,0.605,147,0.727,148,0.628,149,1.116,150,0.788,151,0.984,152,0.628,153,0.727,154,0.628,155,0.727,156,0.628,157,0.984,158,0.628,159,0.984,160,0.605,161,0.727,162,0.628,163,0.995,164,1.196,165,0.605,166,0.727,167,0.652,168,1.116,169,0.628,170,1.116,171,0.628,172,1.116,173,0.628,174,0.727,175,0.628,176,0.727,177,0.628,178,0.701,179,0.628,180,0.727,181,0.605,182,0.727,183,0.628,184,0.628,185,1.001,186,1.116,187,0.628,188,0.727,189,0.628,190,0.628,191,0.727,192,0.628,193,0.628,194,0.628,195,0.628,196,0.605,197,0.727,198,0.628,199,1.077,200,0.628,201,0.628,202,0.628,203,0.605,204,0.727,205,0.628,206,0.559,207,0.984,208,0.628,209,0.727,210,0.605,211,0.676,212,0.628,213,1.213,214,0.676,215,1.001,216,0.605,217,0.727,218,0.628,219,0.782,220,0.652,221,0.628,222,0.85,223,0.727,224,0.628,225,0.628,226,0.628,227,0.628,228,1.034,229,0.628,230,0.701,231,0.727,232,0.009,233,0.009,268,1.059,319,1.08,365,2.176,374,1.44,411,0.99,414,2.348,460,1.284,498,1.668,502,2.562,508,3.466,531,3.225,608,2.644,630,2.803,631,1.733,862,1.878,865,1.548,1180,4.104,1182,4.104,1202,4.062,1220,2.819,1221,2.819,1289,3.201,1292,1.668,1346,3.819,1353,3.685,1354,3.225,1355,4.469,1391,3.03,1392,3.819,1393,5.059,1394,4.461,1395,4.461,1398,4.461,1399,4.461,1401,3.819,1402,3.582,1403,5.374,1404,4.104,1409,3.03,1414,3.293,1804,3.646,2206,4.939,2506,4.287,2509,4.001,2511,2.644,2517,2.494,2544,5.974,2671,3.646,2704,4.181,2705,4.181,2706,4.181,2707,4.181,2708,4.181,2709,4.181]],["title/components/WikiButtonComponent.html",[0,0.158,229,0.605]],["body/components/WikiButtonComponent.html",[0,0.311,1,0.677,2,0.125,3,0.095,4,0.756,5,0.783,6,0.783,7,0.729,8,0.079,11,3.267,12,0.223,13,1.335,14,0.512,15,3.366,16,3.051,17,4.488,20,0.861,21,1.002,23,0.783,24,1.292,25,1.151,26,0.894,27,0.894,28,5.254,29,0.894,30,4.691,31,0.407,35,0.766,37,5.589,39,1.066,40,4.785,41,1.468,42,0.796,43,0.858,47,0.598,49,0.928,50,0.963,52,0.013,53,0.512,54,0.534,58,0.557,69,0.602,70,1.869,71,1.318,73,3.767,74,3.324,75,1.318,85,0.928,88,2.205,89,4.016,93,0.157,94,0.141,98,0.11,99,0.007,115,1.633,116,1.869,117,3.265,118,1.142,119,2.025,121,1.508,122,1.351,123,1.869,124,2.851,125,1.609,126,1.527,127,2.288,128,4.691,129,2.205,130,1.263,132,2.309,133,2.422,134,2.025,135,1.944,136,3.04,137,0.448,138,1.035,139,1.035,140,0.963,141,1.233,142,0.783,143,1.035,144,0.677,145,0.783,146,0.652,147,0.783,148,0.677,149,1.159,150,0.627,151,1.035,152,0.677,153,0.783,154,0.677,155,0.783,156,0.677,157,1.035,158,0.677,159,1.035,160,0.652,161,0.783,162,0.677,163,1.026,164,1.233,165,0.652,166,0.783,167,0.703,168,1.159,169,0.677,170,1.159,171,0.677,172,1.159,173,0.677,174,0.783,175,0.677,176,0.783,177,0.677,178,0.756,179,0.677,180,0.783,181,0.652,182,0.783,183,0.677,184,0.677,185,1.027,186,1.159,187,0.677,188,0.783,189,0.677,190,0.677,191,0.783,192,0.677,193,0.677,194,0.677,195,0.677,196,0.652,197,0.783,198,0.677,199,1.118,200,0.677,201,0.677,202,0.677,203,0.652,204,0.783,205,0.677,206,0.603,207,1.035,208,0.677,209,0.783,210,0.652,211,0.729,212,0.677,213,1.135,214,0.729,215,1.04,216,0.652,217,0.783,218,0.677,219,0.512,220,0.703,221,0.677,222,0.894,223,0.783,224,0.677,225,0.677,226,0.677,227,0.677,228,0.677,229,1.066,230,1.378,231,0.783,232,0.009,233,0.009,259,5.97,319,0.894,380,2.206,409,1.232,427,2.482,635,4.233,869,2.309,896,4.691,1056,5.194,1962,3.551,2312,3.931,2314,3.931,2710,6.609,2711,5.957,2712,4.508,2713,5.957,2714,6.671,2715,4.508,2716,4.508,2717,4.508]],["title/coverage.html",[2718,4.816]],["body/coverage.html",[0,0.335,1,0.578,8,0.068,9,5.24,10,3.03,11,4.456,34,2.067,42,0.382,52,0.013,54,0.456,99,0.012,144,0.578,146,0.556,148,0.578,150,0.535,152,0.578,154,0.578,156,0.578,158,0.578,160,0.556,162,0.578,165,0.556,167,0.6,169,0.578,171,0.578,173,0.578,175,0.578,177,0.578,179,0.578,181,0.556,183,0.578,184,0.578,187,0.578,189,0.578,190,0.578,192,0.578,194,0.578,196,0.556,198,0.578,200,0.578,201,0.578,202,0.578,203,0.556,205,0.578,208,0.578,210,0.556,212,0.578,214,0.865,215,1.127,216,0.556,218,0.578,219,0.607,220,0.6,221,0.578,222,0.998,224,0.578,225,0.578,226,0.578,227,0.803,228,0.578,229,0.578,232,0.008,233,0.008,258,3.03,259,3.03,260,4.456,274,4.796,275,3.03,276,4.213,392,4.213,412,1.373,446,2.594,457,0.881,479,2.514,498,1.535,499,3.355,500,3.355,520,2.405,529,3.03,530,3.355,531,1.802,566,3.03,567,3.355,582,2.433,606,2.788,607,4.844,630,1.325,632,2.788,635,2.295,788,3.03,789,3.355,823,3.03,824,4.664,852,2.413,859,4.147,863,2.067,864,2.788,865,1.424,866,2.433,868,1.802,871,2.067,959,1.802,1080,3.03,1081,3.355,1095,5.399,1145,3.355,1188,4.816,1189,3.03,1190,3.03,1191,4.482,1200,2.174,1222,3.355,1248,3.355,1250,3.03,1257,3.03,1259,3.355,1294,3.355,1322,4.456,1353,1.971,1391,4.456,1416,3.355,1424,2.174,1583,3.03,1589,3.702,1595,2.788,1645,3.355,1748,3.355,1755,3.355,1799,3.03,1800,3.355,1823,3.355,1824,3.355,1901,3.03,1902,3.355,1931,3.355,1963,3.355,2015,3.355,2029,2.594,2033,3.355,2050,3.874,2051,4.064,2204,3.355,2205,3.03,2218,3.355,2239,3.355,2300,3.03,2305,3.355,2316,3.355,2347,3.355,2348,4.213,2375,3.355,2381,3.023,2382,3.03,2383,4.664,2499,4.213,2506,4.275,2507,4.204,2508,4.147,2509,1.883,2519,3.355,2544,3.03,2545,3.355,2547,3.876,2548,3.03,2550,3.355,2571,3.355,2621,3.355,2710,3.355,2718,3.355,2719,3.847,2720,3.355,2721,7.565,2722,3.847,2723,6.647,2724,7.418,2725,5.35,2726,3.847,2727,8.557,2728,3.847,2729,3.847,2730,3.847,2731,3.847,2732,6.986,2733,6.647,2734,6.647,2735,5.35,2736,3.847,2737,6.15,2738,6.15,2739,7.232,2740,7.565,2741,3.847,2742,3.847,2743,5.35,2744,3.847,2745,3.847,2746,3.847,2747,3.847,2748,6.647,2749,3.847,2750,3.355,2751,3.847,2752,6.986,2753,3.847,2754,7.418,2755,3.847,2756,3.847,2757,3.847,2758,6.15,2759,3.847,2760,3.847,2761,5.35,2762,6.15,2763,5.35,2764,5.35,2765,3.847,2766,6.15,2767,7.682,2768,3.847,2769,3.847,2770,3.847,2771,3.847,2772,3.847,2773,3.847,2774,3.847,2775,3.847,2776,3.847,2777,3.847,2778,7.418,2779,3.847,2780,3.847,2781,3.847,2782,3.847,2783,3.847,2784,3.847,2785,3.847,2786,3.847,2787,3.847,2788,3.847,2789,3.847]],["title/dependencies.html",[236,1.074,2790,3.353]],["body/dependencies.html",[52,0.013,94,0.193,232,0.011,233,0.011,236,1.368,238,3.006,254,2.665,264,3.686,266,3.896,267,3.492,629,2.776,857,5.388,858,5.388,1000,4.867,1146,4.478,1150,4.167,1481,4.478,1484,5.578,1485,4.89,1487,3.686,1680,4.167,1900,5.388,2201,4.867,2380,5.388,2543,4.867,2791,6.179,2792,8.422,2793,6.179,2794,7.252,2795,6.179,2796,7.252,2797,6.179,2798,6.179,2799,6.179,2800,6.179,2801,6.179,2802,6.179,2803,6.179,2804,6.179,2805,6.179,2806,6.179,2807,6.179,2808,6.179,2809,6.179,2810,6.179,2811,6.179,2812,6.179,2813,6.179,2814,6.179,2815,6.179,2816,6.179,2817,6.179]],["title/miscellaneous/enumerations.html",[2818,2.924,2819,4.231]],["body/miscellaneous/enumerations.html",[31,0.559,42,0.615,52,0.013,78,1.794,110,1.593,232,0.011,233,0.011,297,1.441,330,4.103,333,2.132,356,3.261,430,2.309,438,2.9,450,2.292,451,2.566,452,2.566,453,2.566,454,2.566,455,2.378,456,2.469,480,2.9,555,3.261,668,4.875,747,2.474,861,2.852,929,4.174,1140,3.029,1827,4.895,2046,3.553,2165,3.029,2166,3.326,2178,3.029,2750,5.398,2818,5.398,2819,5.398,2820,7.703,2821,7.703,2822,6.19,2823,6.19,2824,6.19]],["title/index.html",[31,0.303,918,2.43,985,2.261]],["body/index.html",[0,0.294,3,0.122,8,0.103,14,0.645,25,0.779,49,1.242,52,0.011,53,0.5,77,1.352,79,5.514,232,0.011,233,0.011,250,2.237,268,1.972,277,1.306,324,1.631,428,3.927,432,1.937,439,3.291,457,1.333,501,2.983,516,4.22,568,3.359,582,3.683,590,2.728,634,2.883,635,4.646,645,5.913,697,3.474,827,3.291,859,3.927,1064,4.587,1112,3.927,1116,4.22,1150,5.518,1279,4.587,1296,3.683,1435,3.683,1440,4.587,1680,4.721,1980,4.587,2124,4.281,2165,2.85,2219,5.078,2236,5.078,2463,5.078,2469,5.078,2825,5.824,2826,7.507,2827,7.789,2828,6.105,2829,5.824,2830,7.001,2831,5.824,2832,5.824,2833,5.824,2834,5.824,2835,5.824,2836,5.824,2837,5.824,2838,5.824,2839,5.824,2840,7.056,2841,5.824,2842,7.001,2843,7.968,2844,7.507,2845,7.001,2846,5.824,2847,5.824,2848,5.078,2849,5.824,2850,7.244,2851,5.824,2852,5.824,2853,5.824,2854,5.824,2855,5.824,2856,5.824,2857,5.824,2858,5.824,2859,5.824,2860,5.824,2861,5.824,2862,7.001,2863,7.001,2864,5.824,2865,7.789,2866,5.824,2867,5.824,2868,5.824,2869,5.824,2870,5.824]],["title/license.html",[918,2.43,985,2.261,2871,2.924]],["body/license.html",[3,0.161,4,0.682,8,0.098,14,0.687,16,2.083,33,1.492,47,0.49,51,0.707,52,0.009,55,0.881,60,3.315,63,4.027,64,1.574,67,2.737,73,2.571,77,1.073,99,0.006,106,1.262,110,1.149,135,1.754,140,0.657,185,0.881,219,0.773,232,0.009,233,0.009,239,2.892,277,0.682,314,2.846,318,2.946,356,3.443,395,2.946,430,1.219,438,1.905,457,1.449,460,0.813,474,1.686,480,3.188,509,2.946,516,2.946,522,3.545,555,1.826,568,3.424,569,3.073,581,4.004,590,1.905,593,6.414,614,2.625,635,4.059,646,2.742,647,5.555,651,4.377,667,4.004,704,1.686,736,3.202,747,1.785,750,4.377,765,4.986,825,1.99,827,4.394,830,2.742,879,4.986,898,2.742,909,1.905,959,2.603,1034,3.545,1052,3.202,1059,2.742,1064,6.194,1116,5.163,1140,1.99,1146,2.946,1153,5.52,1155,6.414,1169,5.52,1223,4.377,1260,2.185,1283,4.931,1346,2.742,1375,3.545,1401,3.747,1402,4.506,1417,3.529,1440,3.202,1457,2.946,1620,2.425,1626,4.846,1669,4.377,1673,2.72,1785,3.545,1827,3.747,1918,6.303,1980,6.253,1983,3.202,2046,2.72,2136,2.185,2140,2.185,2145,2.083,2183,3.828,2381,3.578,2384,3.545,2596,4.846,2667,3.545,2720,3.545,2828,7.385,2840,5.934,2848,7.413,2850,3.545,2871,7.313,2872,8.317,2873,7.775,2874,4.066,2875,4.066,2876,5.557,2877,6.331,2878,5.557,2879,6.805,2880,6.805,2881,6.805,2882,4.066,2883,4.066,2884,4.066,2885,4.066,2886,4.066,2887,6.805,2888,7.666,2889,5.557,2890,4.066,2891,5.557,2892,4.066,2893,7.865,2894,8.387,2895,4.066,2896,8.337,2897,5.557,2898,5.557,2899,4.066,2900,4.066,2901,6.331,2902,4.066,2903,4.066,2904,6.331,2905,5.557,2906,5.557,2907,5.557,2908,4.066,2909,5.557,2910,4.066,2911,4.066,2912,4.066,2913,7.865,2914,4.066,2915,4.066,2916,6.331,2917,7.53,2918,5.557,2919,4.066,2920,4.066,2921,4.066,2922,4.066,2923,4.066,2924,4.066,2925,4.066,2926,4.066,2927,4.066,2928,4.066,2929,7.125,2930,6.331,2931,4.066,2932,4.066,2933,4.066,2934,4.066,2935,4.066,2936,6.331,2937,6.331,2938,7.356,2939,7.125,2940,4.066,2941,5.557,2942,4.066,2943,4.066,2944,4.066,2945,4.066,2946,4.066,2947,4.066,2948,6.331,2949,5.557,2950,5.557,2951,5.557,2952,5.557,2953,5.557,2954,4.066,2955,4.066,2956,4.066,2957,4.066,2958,4.066,2959,4.066,2960,4.066,2961,4.066,2962,4.066,2963,5.557,2964,4.066,2965,5.557,2966,4.066,2967,5.557,2968,6.805,2969,4.066,2970,4.066,2971,4.066,2972,4.066,2973,4.066,2974,4.066,2975,5.557,2976,4.066,2977,4.066,2978,4.066,2979,4.066,2980,4.066,2981,4.066]],["title/modules.html",[234,1.264]],["body/modules.html",[52,0.011,232,0.011,233,0.011,234,1.441,235,3.558,245,3.081,246,2.609,247,2.949,280,7.427,439,3.558,1238,3.755,1244,3.755,1245,3.981,1485,5.743,1551,4.561,1556,4.244,1557,4.244,1558,3.981,1559,4.244,1560,3.755,1582,4.244,2561,7.427,2982,8.535,2983,6.295]],["title/overview.html",[195,0.829]],["body/overview.html",[0,0.152,1,1.115,34,3.313,52,0.013,98,0.094,99,0.006,137,0.384,144,1.115,146,0.891,148,1.115,150,1.034,152,1.115,154,1.115,156,1.115,158,1.115,160,0.891,162,0.926,165,0.891,167,0.961,169,0.926,171,1.115,173,1.115,175,1.115,177,1.115,179,0.926,181,0.891,183,1.115,184,1.115,187,1.115,189,1.115,190,0.926,192,1.115,194,1.115,195,0.581,196,1.074,198,1.115,200,1.115,201,1.115,202,1.115,203,1.074,205,1.115,208,1.115,210,0.891,212,0.926,216,0.891,218,0.926,220,0.961,221,0.926,224,0.926,225,0.926,226,0.926,228,1.115,229,1.115,232,0.008,233,0.008,234,1.229,235,4.781,236,0.856,237,1.603,238,1.603,239,1.485,240,3.371,241,3.371,242,3.371,243,3.371,244,3.371,245,3.996,246,3.314,247,3.975,248,2.315,249,1.603,250,1.485,555,1.737,630,2.124,747,1.242,852,1.199,866,3.899,868,2.889,1129,3.889,1200,3.485,1238,5.015,1239,3.371,1240,3.371,1241,3.371,1242,3.371,1243,3.371,1244,4.645,1245,5.164,1353,3.158,1354,1.811,1424,3.485,1551,6.092,1552,3.371,1553,3.371,1554,3.371,1555,3.371,1556,5.305,1557,5.009,1558,5.056,1559,5.58,1560,5.052,1578,3.371,1579,3.371,1580,3.371,1581,3.371,1582,5.661,1612,3.045,1640,3.371,1641,3.371,1788,3.371,1789,3.371,1794,3.371,1795,3.371,1797,3.371,2025,3.371,2026,3.371,2027,3.371,2028,3.371,2029,4.158,2165,1.892,2195,3.371,2196,3.371,2198,3.371,2230,3.371,2231,3.371,2233,3.371,2293,3.371,2294,3.371,2296,3.371,2368,3.371,2369,3.371,2371,3.371,2381,2.185,2509,3.017,2536,3.371,2537,3.371,2539,3.371,2540,3.371,2984,3.866,2985,3.866]],["title/routes.html",[1354,2.587]],["body/routes.html",[52,0.012,232,0.012,233,0.012,1354,3.141]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.0",{"_index":1134,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["0.08",{"_index":390,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["0.12",{"_index":1378,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["0.24em",{"_index":495,"title":{},"body":{"components/AlarmComponent.html":{}}}],["0.2em",{"_index":487,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["0.2rem",{"_index":2692,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["0.375em",{"_index":2013,"title":{},"body":{"components/LoginComponent.html":{},"components/TabularViewComponent.html":{}}}],["0.5",{"_index":1168,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["0.75",{"_index":1143,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["0.8*$cem",{"_index":813,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["0.8.29",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["0.85",{"_index":1177,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["0.svg",{"_index":1948,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["00:15:00",{"_index":2394,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["00:30:00",{"_index":2397,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["01:00:00",{"_index":2399,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["02:00:00",{"_index":2401,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["06:00:00",{"_index":2402,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["0px",{"_index":380,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["1",{"_index":747,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1).subscrib",{"_index":2479,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1*$cem",{"_index":468,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.0",{"_index":2048,"title":{},"body":{"injectables/MapService.html":{}}}],["1.0*$cem",{"_index":814,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["1.1.8",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["1.2*$cem",{"_index":469,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.4*$cem",{"_index":815,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["1.4.5",{"_index":2829,"title":{},"body":{"index.html":{}}}],["1.45em",{"_index":2213,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["1.6*$cem",{"_index":470,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.svg",{"_index":1950,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":2727,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1129,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/CdbService.html":{},"overview.html":{}}}],["10/10",{"_index":2765,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":479,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["100%{opac",{"_index":1144,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["1000",{"_index":958,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["106",{"_index":554,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["10px",{"_index":494,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["11",{"_index":1787,"title":{},"body":{"injectables/CdbService.html":{}}}],["11*$statu",{"_index":497,"title":{},"body":{"components/AlarmComponent.html":{}}}],["11.1.9",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["11px",{"_index":1171,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{}}}],["12",{"_index":388,"title":{},"body":{"components/AlarmCardComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["12/12",{"_index":2734,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":597,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["1267252440000",{"_index":2159,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["12:00:00",{"_index":2403,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["12px",{"_index":481,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["13/13",{"_index":2732,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":2024,"title":{},"body":{"components/MapComponent.html":{}}}],["14",{"_index":2984,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":2737,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1389,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["15",{"_index":2395,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["150px",{"_index":2216,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["16",{"_index":387,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["16px",{"_index":596,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["170px",{"_index":2217,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["18/18",{"_index":2746,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":1962,"title":{},"body":{"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["19*$lg",{"_index":492,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$md",{"_index":490,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$sm",{"_index":488,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$statu",{"_index":496,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$x",{"_index":485,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1em",{"_index":817,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/OverviewCardComponent.html":{}}}],["1px",{"_index":127,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["2",{"_index":555,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["2.0.8",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["2.75px",{"_index":1550,"title":{},"body":{"components/AppComponent.html":{}}}],["2.svg",{"_index":1953,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":298,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["200",{"_index":998,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["2007",{"_index":2876,"title":{},"body":{"license.html":{}}}],["200px",{"_index":2694,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["201",{"_index":993,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["20pt",{"_index":2184,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["20px",{"_index":552,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["21/21",{"_index":2761,"title":{},"body":{"coverage.html":{}}}],["21px",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["22/22",{"_index":2747,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":2785,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["25",{"_index":1384,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["25/25",{"_index":2736,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":1377,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["25em",{"_index":1549,"title":{},"body":{"components/AppComponent.html":{}}}],["25px",{"_index":1369,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["26/26",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["273d54",{"_index":2186,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["28/28",{"_index":2722,"title":{},"body":{"coverage.html":{}}}],["28px",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["29",{"_index":2874,"title":{},"body":{"license.html":{}}}],["2px",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["2s",{"_index":1136,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["3",{"_index":356,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0*$cem",{"_index":471,"title":{},"body":{"components/AlarmComponent.html":{}}}],["3.0.0",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1955,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/3",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2398,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["300",{"_index":2080,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["30px",{"_index":822,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["31/31",{"_index":2730,"title":{},"body":{"coverage.html":{}}}],["314963",{"_index":2187,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["32px",{"_index":128,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["330px",{"_index":604,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["34/34",{"_index":2777,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":2014,"title":{},"body":{"components/LoginComponent.html":{}}}],["35",{"_index":553,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["350px",{"_index":1172,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["35px",{"_index":1533,"title":{},"body":{"components/AppComponent.html":{}}}],["36/36",{"_index":2784,"title":{},"body":{"coverage.html":{}}}],["37.27px",{"_index":2693,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["37/37",{"_index":2731,"title":{},"body":{"coverage.html":{}}}],["380px",{"_index":1184,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["38px",{"_index":1131,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["39/39",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":599,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["4",{"_index":2046,"title":{},"body":{"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.0.2",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":1958,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1385,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["400",{"_index":1981,"title":{},"body":{"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["400px",{"_index":605,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["403",{"_index":2491,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["40px",{"_index":819,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["44px",{"_index":1541,"title":{},"body":{"components/AppComponent.html":{}}}],["450px",{"_index":594,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["45px",{"_index":2229,"title":{},"body":{"components/OverviewComponent.html":{}}}],["46",{"_index":2985,"title":{},"body":{"overview.html":{}}}],["46px",{"_index":2211,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["48px",{"_index":1130,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["4d0",{"_index":2960,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":2961,"title":{},"body":{"license.html":{}}}],["4px",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["5",{"_index":1140,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/5",{"_index":2738,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1142,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["500",{"_index":2077,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["5000",{"_index":2687,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["500px",{"_index":1173,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["50px",{"_index":1390,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["56px",{"_index":2212,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["580px",{"_index":2012,"title":{},"body":{"components/LoginComponent.html":{}}}],["5px",{"_index":1383,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["6",{"_index":480,"title":{},"body":{"components/AlarmComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.4.0",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2733,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1387,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{}}}],["600",{"_index":2075,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["60px",{"_index":370,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["62px",{"_index":1374,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["64px",{"_index":1535,"title":{},"body":{"components/AppComponent.html":{}}}],["68px",{"_index":1132,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["6px",{"_index":472,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{}}}],["7",{"_index":2165,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["7.0.0",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["7.2.3",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1548,"title":{},"body":{"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["70px",{"_index":1536,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewCardComponent.html":{}}}],["725rem",{"_index":1544,"title":{},"body":{"components/AppComponent.html":{}}}],["74",{"_index":1538,"title":{},"body":{"components/AppComponent.html":{}}}],["75",{"_index":1185,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["78px",{"_index":821,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["7px",{"_index":1547,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":2166,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["8*$lg",{"_index":493,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$md",{"_index":491,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$sm",{"_index":489,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$x",{"_index":486,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8/8",{"_index":2752,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":2072,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["84.5px",{"_index":371,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["86px",{"_index":1540,"title":{},"body":{"components/AppComponent.html":{}}}],["9/9",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":600,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["900",{"_index":2070,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["960px",{"_index":1237,"title":{},"body":{"components/AntennasComponent.html":{}}}],["99",{"_index":1186,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["9px",{"_index":1546,"title":{},"body":{"components/AppComponent.html":{}}}],["_",{"_index":713,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":2717,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getsubtree(alarm",{"_index":723,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initi",{"_index":1261,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["_nodedata",{"_index":714,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":715,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":717,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["a.mat",{"_index":1539,"title":{},"body":{"components/AppComponent.html":{}}}],["a100",{"_index":2089,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["a400",{"_index":2087,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["a700",{"_index":2085,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["absolut",{"_index":385,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["accent",{"_index":2054,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["accept",{"_index":2980,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":509,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"license.html":{}}}],["accompani",{"_index":2939,"title":{},"body":{"license.html":{}}}],["accord",{"_index":2147,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["account",{"_index":1434,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["account_circl",{"_index":1519,"title":{},"body":{"components/AppComponent.html":{}}}],["ack",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'nam",{"_index":145,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack/ack.compon",{"_index":255,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcompon",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":643,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledg",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1608,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["acknowledgealarms(alarms_id",{"_index":972,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["acktreecompon",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":306,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions/ack/ack.compon",{"_index":1587,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/actions.modul",{"_index":1252,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.compon",{"_index":1593,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/sidenav.servic",{"_index":1482,"title":{},"body":{"components/AppComponent.html":{}}}],["actions_storage_nam",{"_index":1646,"title":{},"body":{"injectables/AuthService.html":{}}}],["actionsmodul",{"_index":235,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1420,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservic",{"_index":1421,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":435,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["activatedrout",{"_index":2389,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["activatedroutesnapshot",{"_index":1622,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["actual",{"_index":2386,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["actual_compon",{"_index":231,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ad",{"_index":1848,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["add",{"_index":1011,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["add_or_update_alarm(alarm",{"_index":1018,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["addit",{"_index":1153,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["address",{"_index":2971,"title":{},"body":{"license.html":{}}}],["addsvgicon",{"_index":1491,"title":{},"body":{"components/AppComponent.html":{}}}],["adjust",{"_index":2227,"title":{},"body":{"components/OverviewComponent.html":{}}}],["administr",{"_index":2467,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["again",{"_index":2464,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["agil",{"_index":2137,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'nam",{"_index":151,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.ack",{"_index":1032,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.acknowledg",{"_index":977,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.alarmvalid",{"_index":2151,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.alarmvalu",{"_index":2149,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.asalarm",{"_index":2156,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.asalarm(obj",{"_index":1008,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.component.html",{"_index":397,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":396,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.core_id",{"_index":1021,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.currentvalue.core_id",{"_index":690,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.currentvalue.dependencies.sort().join",{"_index":694,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.depend",{"_index":726,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{}}}],["alarm.dependencies.length",{"_index":724,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.operationalmod",{"_index":2150,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.previousvalue.core_id",{"_index":688,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.previousvalue.dependencies.sort().join",{"_index":692,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.properti",{"_index":2173,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.servic",{"_index":1791,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.shelv",{"_index":995,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.shouldrepeat",{"_index":1037,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.sound",{"_index":1030,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.unshelv",{"_index":999,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valid",{"_index":1066,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valu",{"_index":1029,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm/alarm.compon",{"_index":1117,"title":{},"body":{"components/AlarmTileComponent.html":{},"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":587,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm?.descript",{"_index":588,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm?.formattedproperti",{"_index":592,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm?.timestamp",{"_index":591,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm_id",{"_index":503,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["alarm_sound_1.mp3",{"_index":837,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_2.mp3",{"_index":839,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_3.mp3",{"_index":841,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_4.mp3",{"_index":843,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_typ",{"_index":2779,"title":{},"body":{"coverage.html":{}}}],["alarmcardcompon",{"_index":148,"title":{"components/AlarmCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmchangestream",{"_index":892,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmchangesubscript",{"_index":2416,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alarmcompon",{"_index":150,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmconfig",{"_index":498,"title":{"classes/AlarmConfig.html":{}},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["alarmconfig.placemark",{"_index":1363,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmdataavail",{"_index":2438,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alarmheadercompon",{"_index":152,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":2351,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":2170,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":2171,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":2420,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":412,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["alarminfocompon",{"_index":154,"title":{"components/AlarmInfoComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmitemflatnod",{"_index":606,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":632,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":775,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmlabel",{"_index":2153,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarmlabelcompon",{"_index":156,"title":{"components/AlarmLabelComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmnam",{"_index":350,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarmname.length",{"_index":353,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarmname.substring(0",{"_index":355,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarmnamemaxs",{"_index":289,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarms_id",{"_index":973,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsarray",{"_index":889,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmservic",{"_index":630,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservice.countbyview",{"_index":1523,"title":{},"body":{"components/AppComponent.html":{}}}],["alarmservice.getname(this.selectedantenna",{"_index":1365,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmservice.html#playalarmsound",{"_index":1060,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsindex",{"_index":891,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmslist",{"_index":1012,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsound",{"_index":823,"title":{"classes/AlarmSounds.html":{}},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["alarmsounds.getsoundsource(sound",{"_index":1045,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type1",{"_index":874,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type2",{"_index":875,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type3",{"_index":876,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type4",{"_index":877,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmstoackfromselect",{"_index":642,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":2352,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmtilecompon",{"_index":158,"title":{"components/AlarmTileComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmtooltipcompon",{"_index":160,"title":{"components/AlarmTooltipComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmvalu",{"_index":357,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["alarm}",{"_index":526,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["align",{"_index":477,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["allow",{"_index":898,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["allowed_act",{"_index":1684,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowedshelv",{"_index":2447,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["allowedunshelv",{"_index":2449,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alma",{"_index":2011,"title":{},"body":{"components/LoginComponent.html":{}}}],["alreadi",{"_index":1346,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":2909,"title":{},"body":{"license.html":{}}}],["angular",{"_index":634,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collect",{"_index":621,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/cdk/tre",{"_index":623,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":2847,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":254,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1568,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1900,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":264,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1481,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1877,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1880,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1887,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expans",{"_index":1895,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":1889,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1483,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1863,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1884,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/menu",{"_index":1875,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1865,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1867,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":1891,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1882,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1869,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":1897,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1871,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1873,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1893,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":626,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1484,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":1487,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["anim",{"_index":1096,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["anoth",{"_index":1056,"title":{},"body":{"classes/AlarmSounds.html":{},"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":163,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna.svg",{"_index":1496,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclick",{"_index":1331,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":1262,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":1263,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennamarkercompon",{"_index":162,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas'},{'nam",{"_index":166,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":1228,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":1227,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.join",{"_index":2673,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["antennas.servic",{"_index":1255,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.compon",{"_index":1247,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.modul",{"_index":1569,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.servic",{"_index":1217,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.compon",{"_index":1588,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["antennascompon",{"_index":165,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":1264,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennasmap",{"_index":1226,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennasmapcompon",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapnam",{"_index":1265,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennasmodul",{"_index":1238,"title":{"modules/AntennasModule.html":{}},"body":{"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservic",{"_index":1200,"title":{"injectables/AntennasService.html":{}},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasset",{"_index":1294,"title":{},"body":{"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":1284,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennassidebar",{"_index":1225,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennassidebarcompon",{"_index":169,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycompon",{"_index":171,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":1266,"title":{},"body":{"injectables/AntennasService.html":{}}}],["anyth",{"_index":2379,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["api",{"_index":2418,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["app",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.compon",{"_index":1576,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1419,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1418,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1562,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":173,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1401,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":1417,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["application/json",{"_index":1705,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["appmodul",{"_index":1551,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":1602,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":1556,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":2919,"title":{},"body":{"license.html":{}}}],["array",{"_index":322,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["arrayindex",{"_index":890,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["artifact",{"_index":2857,"title":{},"body":{"index.html":{}}}],["asiasio",{"_index":1908,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1916,"title":{},"body":{"classes/Iasio.html":{}}}],["ask",{"_index":2419,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["asset",{"_index":865,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icon",{"_index":1314,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["assets.sound",{"_index":873,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["assets/img/ia",{"_index":1493,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":1151,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["associ",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["asterisc",{"_index":2493,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["attempt",{"_index":1630,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["attribut",{"_index":458,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["audio",{"_index":828,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["audiofil",{"_index":848,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["auth",{"_index":2003,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.servic",{"_index":1633,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":1599,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.modul",{"_index":1572,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.servic",{"_index":872,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{}}}],["auth/login/login.compon",{"_index":1601,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authent",{"_index":910,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["authloginguard",{"_index":1598,"title":{"guards/AuthLoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["authmodul",{"_index":1557,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1620,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"license.html":{}}}],["authservic",{"_index":871,"title":{"injectables/AuthService.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["auto",{"_index":132,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["automat",{"_index":2854,"title":{},"body":{"index.html":{}}}],["auxiliari",{"_index":722,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["avail",{"_index":439,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"injectables/WeatherService.html":{},"index.html":{},"modules.html":{}}}],["availablecount",{"_index":1511,"title":{},"body":{"components/AppComponent.html":{}}}],["availablecounters.indexof(navitemcount",{"_index":1513,"title":{},"body":{"components/AppComponent.html":{}}}],["avoid",{"_index":895,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["axi",{"_index":1204,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":2929,"title":{},"body":{"license.html":{}}}],["backend",{"_index":919,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurl",{"_index":863,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["backendurls.antennas_summari",{"_index":1307,"title":{},"body":{"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":1300,"title":{},"body":{"injectables/AntennasService.html":{}}}],["backendurls.cdb_ia",{"_index":1775,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":1310,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["backendurls.health_summari",{"_index":1816,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["backendurls.pads_statu",{"_index":2633,"title":{},"body":{"injectables/WeatherService.html":{}}}],["backendurls.shelve_regs_filt",{"_index":988,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurls.tickets_info",{"_index":983,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["background",{"_index":556,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["backup",{"_index":214,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["badg",{"_index":307,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":1898,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["base",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":2053,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["be",{"_index":1052,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["befor",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":854,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{}}}],["behaviorsubject(fals",{"_index":888,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{}}}],["behaviorsubject(nul",{"_index":1697,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(tru",{"_index":893,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["below",{"_index":2891,"title":{},"body":{"license.html":{}}}],["besid",{"_index":310,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["beta.23",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2552,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["blink",{"_index":1110,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["block",{"_index":475,"title":{},"body":{"components/AlarmComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["blue",{"_index":332,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["bodi",{"_index":1526,"title":{},"body":{"components/AppComponent.html":{}}}],["bold",{"_index":391,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["boolean",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["bootstrap",{"_index":238,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2201,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["border",{"_index":122,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["both",{"_index":1223,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["bottom",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["bottom:15px",{"_index":373,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["bound",{"_index":2915,"title":{},"body":{"license.html":{}}}],["box",{"_index":1527,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["branch",{"_index":2839,"title":{},"body":{"index.html":{}}}],["break",{"_index":1183,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["bred",{"_index":2143,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["breed",{"_index":2129,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["broadcast",{"_index":1765,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastr",{"_index":1767,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastthreshold",{"_index":1070,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["broadcastthreshold).subscrib",{"_index":1078,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["brows",{"_index":2982,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1485,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1566,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":1565,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{}}}],["browsermodul",{"_index":1564,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":2299,"title":{},"body":{"modules/SharedModule.html":{}}}],["btn",{"_index":1529,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["build",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":738,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["button",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":143,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":257,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":30,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":2711,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:19",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2712,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:28",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:29",{"_index":2314,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.ts:36",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:37",{"_index":2312,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.ts:43",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:44",{"_index":2311,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:52",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:53",{"_index":2307,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:64",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:68",{"_index":2310,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:71",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:75",{"_index":2313,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":258,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":259,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons'},{'nam",{"_index":176,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1751,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1752,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.compon",{"_index":273,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscompon",{"_index":175,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":2878,"title":{},"body":{"license.html":{}}}],["calc(100vh",{"_index":1534,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{}}}],["calcul",{"_index":2044,"title":{},"body":{"injectables/MapService.html":{}}}],["call",{"_index":1059,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["can_shelv",{"_index":2163,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["canacknowledg",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["canactiv",{"_index":1606,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["canactivate(next",{"_index":1621,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["canclos",{"_index":2318,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":2446,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["cansound",{"_index":899,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["card",{"_index":278,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["card'},{'nam",{"_index":149,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":2238,"title":{},"body":{"modules/OverviewModule.html":{},"modules/SharedModule.html":{}}}],["card.component.html",{"_index":283,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":282,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":276,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:100",{"_index":329,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:111",{"_index":313,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:12",{"_index":2207,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:128",{"_index":323,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:18",{"_index":294,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.ts:24",{"_index":311,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:29",{"_index":301,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:34",{"_index":304,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:39",{"_index":293,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:49",{"_index":326,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:56",{"_index":320,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:92",{"_index":327,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card/alarm",{"_index":275,"title":{},"body":{"components/AlarmCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/fixtures.t",{"_index":2756,"title":{},"body":{"coverage.html":{}}}],["card/overview",{"_index":2205,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["card__head",{"_index":2181,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["case",{"_index":302,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{}}}],["catch",{"_index":1784,"title":{},"body":{"injectables/CdbService.html":{}}}],["catcherror",{"_index":1701,"title":{},"body":{"injectables/AuthService.html":{}}}],["categori",{"_index":2172,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["cdb.servic",{"_index":1793,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservic",{"_index":866,"title":{"injectables/CdbService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"coverage.html":{},"overview.html":{}}}],["cdbservice.html#getbroadcastr",{"_index":1072,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cem",{"_index":467,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["center",{"_index":818,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["cento",{"_index":2832,"title":{},"body":{"index.html":{}}}],["central",{"_index":2240,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":2974,"title":{},"body":{"license.html":{}}}],["chang",{"_index":590,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"index.html":{},"license.html":{}}}],["changealarms(ani",{"_index":916,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["changedalarm2",{"_index":2768,"title":{},"body":{"coverage.html":{}}}],["changedalarm5",{"_index":2769,"title":{},"body":{"coverage.html":{}}}],["changeloginstatu",{"_index":1652,"title":{},"body":{"injectables/AuthService.html":{}}}],["changeloginstatus(statu",{"_index":1665,"title":{},"body":{"injectables/AuthService.html":{}}}],["changes.selectedalarm",{"_index":686,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["changes.selectedalarm.previousvalu",{"_index":685,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["changeselectedst",{"_index":2525,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedst",{"_index":2527,"title":{},"body":{"components/WeatherComponent.html":{}}}],["channel",{"_index":858,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["charact",{"_index":299,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["check",{"_index":432,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["check_request_and_reload",{"_index":2437,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["checkbox",{"_index":633,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":661,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":662,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklogin",{"_index":1617,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["checklogin(url",{"_index":1627,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["chevron_left",{"_index":1364,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":711,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm",{"_index":727,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm.ack",{"_index":729,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":725,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":504,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{}}}],["chip",{"_index":2119,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["choic",{"_index":2930,"title":{},"body":{"license.html":{}}}],["choos",{"_index":2975,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/Iasio.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["classif",{"_index":518,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["classifi",{"_index":515,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["classnam",{"_index":1448,"title":{},"body":{"components/AppComponent.html":{}}}],["clean",{"_index":2252,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["cleanactionoutlet",{"_index":2242,"title":{},"body":{"injectables/RoutingService.html":{}}}],["clear",{"_index":450,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["clear.svg",{"_index":1315,"title":{},"body":{"injectables/AntennasService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/WeatherService.html":{}}}],["clear_invalid",{"_index":1934,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":1935,"title":{},"body":{"components/LegendComponent.html":{}}}],["clearsoundsifack(alarm",{"_index":1061,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cli",{"_index":2827,"title":{},"body":{"index.html":{}}}],["click",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["client",{"_index":1825,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":870,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["client.service.t",{"_index":1824,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:107",{"_index":1846,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:14",{"_index":1831,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:31",{"_index":1836,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:47",{"_index":1838,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:57",{"_index":1835,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:70",{"_index":1842,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:83",{"_index":1844,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:95",{"_index":1833,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":2543,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["clipboardmodul",{"_index":2542,"title":{},"body":{"modules/WeatherModule.html":{}}}],["clipboardservic",{"_index":2651,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["close",{"_index":929,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["closeandclean",{"_index":2321,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cluster_actionsmodul",{"_index":240,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declar",{"_index":241,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_export",{"_index":243,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_import",{"_index":242,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_provid",{"_index":244,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodul",{"_index":1239,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declar",{"_index":1240,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_export",{"_index":1242,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_import",{"_index":1241,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_provid",{"_index":1243,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":1552,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1555,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":1553,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":1554,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodul",{"_index":1578,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_declar",{"_index":1579,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_import",{"_index":1580,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_provid",{"_index":1581,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":1640,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":1641,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":1642,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_datamodul",{"_index":1788,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1789,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1794,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1795,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1797,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1796,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodul",{"_index":2025,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":2026,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":2027,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_provid",{"_index":2028,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodul",{"_index":2195,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_declar",{"_index":2196,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_export",{"_index":2198,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_import",{"_index":2197,"title":{},"body":{"modules/MaterialSandboxModule.html":{}}}],["cluster_overviewmodul",{"_index":2230,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":2231,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":2233,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":2232,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":2293,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":2294,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":2296,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":2295,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":2368,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":2369,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":2371,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":2370,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":2536,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":2537,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":2539,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":2538,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_provid",{"_index":2540,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":1980,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{},"license.html":{}}}],["color",{"_index":550,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["colorclass",{"_index":1218,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["colors'},{'nam",{"_index":186,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["column",{"_index":1368,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["combin",{"_index":2896,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":253,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["commun",{"_index":1984,"title":{},"body":{"components/LoginComponent.html":{}}}],["compact",{"_index":1542,"title":{},"body":{"components/AppComponent.html":{}}}],["compat",{"_index":2957,"title":{},"body":{"license.html":{}}}],["complement",{"_index":1433,"title":{},"body":{"components/AppComponent.html":{}}}],["complementari",{"_index":908,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["complet",{"_index":1001,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["compodoc",{"_index":2868,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["componentnam",{"_index":2148,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["componet",{"_index":445,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["comput",{"_index":2955,"title":{},"body":{"license.html":{}}}],["concern",{"_index":2972,"title":{},"body":{"license.html":{}}}],["condit",{"_index":2889,"title":{},"body":{"license.html":{}}}],["conf",{"_index":1410,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["conf[0",{"_index":1412,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["config",{"_index":862,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["config.alarm_id",{"_index":970,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["config.custom_nam",{"_index":969,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["config.t",{"_index":500,"title":{},"body":{"classes/AlarmConfig.html":{},"coverage.html":{}}}],["config.ts:10",{"_index":513,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:13",{"_index":521,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:16",{"_index":523,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:19",{"_index":512,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:22",{"_index":519,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:25",{"_index":510,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:37",{"_index":525,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:7",{"_index":511,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.typ",{"_index":2624,"title":{},"body":{"injectables/WeatherService.html":{}}}],["configur",{"_index":502,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connect",{"_index":878,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["connectionpath",{"_index":944,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatusstream",{"_index":887,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatustim",{"_index":907,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connector",{"_index":2551,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'nam",{"_index":223,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.compon",{"_index":2549,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":2554,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":2553,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.t",{"_index":2550,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":2558,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":2559,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":2557,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":2562,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":2560,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weath",{"_index":2548,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["consid",{"_index":1440,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1850,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.error('error",{"_index":2008,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["console.error(error",{"_index":1720,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('cal",{"_index":1042,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('connect",{"_index":948,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('count",{"_index":942,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('error",{"_index":2483,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["console.log('login",{"_index":1725,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('notifi",{"_index":934,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('request",{"_index":939,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log(this.labelloc",{"_index":2174,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["const",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservic",{"_index":1396,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(antennasservic",{"_index":1332,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attribut",{"_index":462,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["constructor(authservic",{"_index":1618,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["constructor(formbuild",{"_index":1969,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":1663,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["constructor(httpcli",{"_index":1271,"title":{},"body":{"injectables/AntennasService.html":{}}}],["constructor(httpclientservic",{"_index":1762,"title":{},"body":{"injectables/CdbService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":666,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":2249,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(routingservic",{"_index":2323,"title":{},"body":{"injectables/SidenavService.html":{}}}],["constructor(servic",{"_index":1199,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["constructor(sidenavservic",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservic",{"_index":2511,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["contact",{"_index":2466,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["contain",{"_index":460,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["container=\"bodi",{"_index":1156,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["content",{"_index":374,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["continu",{"_index":730,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["contract",{"_index":1459,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":653,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["convert",{"_index":658,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":2913,"title":{},"body":{"license.html":{}}}],["coord",{"_index":2556,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":2566,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":2567,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordin",{"_index":1287,"title":{},"body":{"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{}}}],["cope",{"_index":2138,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["copi",{"_index":1918,"title":{},"body":{"classes/Iasio.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["copyantenna",{"_index":2648,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyantennas(stationconfig",{"_index":2655,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyright",{"_index":2877,"title":{},"body":{"license.html":{}}}],["core",{"_index":1000,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":303,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["core_timestamp",{"_index":2158,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["coreidchang",{"_index":696,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["correspond",{"_index":827,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["count",{"_index":904,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{}}}],["countbyview",{"_index":905,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["countbyview[navitemcount",{"_index":1514,"title":{},"body":{"components/AppComponent.html":{}}}],["counter",{"_index":1470,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["counterbyview",{"_index":1452,"title":{},"body":{"components/AppComponent.html":{}}}],["cover",{"_index":2183,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["coverag",{"_index":2718,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":461,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["credenti",{"_index":1982,"title":{},"body":{"components/LoginComponent.html":{}}}],["critic",{"_index":1054,"title":{},"body":{"classes/AlarmSounds.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"injectables/WeatherService.html":{}}}],["critical.svg",{"_index":1317,"title":{},"body":{"injectables/AntennasService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["crud",{"_index":1826,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["css",{"_index":321,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["currenlti",{"_index":901,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["current",{"_index":428,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["currentalarmcoreid",{"_index":689,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["currentalarmvalu",{"_index":1123,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["currentdependenciesstr",{"_index":693,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["cursor",{"_index":1220,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["custom",{"_index":514,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{}}}],["custom_nam",{"_index":505,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{}}}],["cx",{"_index":1195,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":1196,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["d",{"_index":2947,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2356,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":219,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data).pip",{"_index":975,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data.push(nod",{"_index":748,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data/alarm",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":631,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/cdb.servic",{"_index":867,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data/data.modul",{"_index":271,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":1293,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{}}}],["data/user.servic",{"_index":1486,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["databas",{"_index":1002,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodul",{"_index":245,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":660,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["date",{"_index":579,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["date).gettim",{"_index":885,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["dateformat",{"_index":572,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["datepip",{"_index":1563,"title":{},"body":{"modules/AppModule.html":{}}}],["debug",{"_index":2946,"title":{},"body":{"license.html":{}}}],["decid",{"_index":522,"title":{},"body":{"classes/AlarmConfig.html":{},"license.html":{}}}],["declar",{"_index":237,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1461,"title":{},"body":{"components/AppComponent.html":{}}}],["deem",{"_index":2900,"title":{},"body":{"license.html":{}}}],["deep",{"_index":1165,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{}}}],["default",{"_index":300,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":2404,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["defin",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["definealarmsandicon",{"_index":1803,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":2177,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["definit",{"_index":2384,"title":{},"body":{"interfaces/TimeoutOption.html":{},"license.html":{}}}],["degrad",{"_index":2823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delayedfadein",{"_index":1166,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["delet",{"_index":1004,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["delete(url",{"_index":1832,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1852,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deped",{"_index":2454,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["depend",{"_index":236,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencieschang",{"_index":695,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descend",{"_index":760,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":763,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":773,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":761,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":766,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describ",{"_index":1207,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["descript",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destroy",{"_index":955,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":1375,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"license.html":{}}}],["dev",{"_index":2852,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2831,"title":{},"body":{"index.html":{}}}],["devic",{"_index":1291,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{}}}],["devicesconfig",{"_index":1267,"title":{},"body":{"injectables/AntennasService.html":{}}}],["dialog",{"_index":2117,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["dictionari",{"_index":459,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{}}}],["differ",{"_index":825,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["direct",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":2856,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2859,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["disableanim",{"_index":1091,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["disconnect",{"_index":954,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["dispay",{"_index":2376,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["display",{"_index":277,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":2837,"title":{},"body":{"index.html":{}}}],["display:block",{"_index":364,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmTileComponent.html":{}}}],["dist",{"_index":2858,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":2133,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["distinguish",{"_index":2973,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":2885,"title":{},"body":{"license.html":{}}}],["divid",{"_index":2121,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["django",{"_index":857,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["doc_url",{"_index":1904,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":635,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":2128,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanit",{"_index":1431,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":2445,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["doubl",{"_index":1912,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":1208,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{}}}],["durat",{"_index":1167,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["dure",{"_index":2667,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["dy",{"_index":2047,"title":{},"body":{"injectables/MapService.html":{}}}],["dynam",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1785,"title":{},"body":{"injectables/CdbService.html":{},"license.html":{}}}],["e.g",{"_index":849,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["e2",{"_index":2866,"title":{},"body":{"index.html":{}}}],["each",{"_index":1283,"title":{},"body":{"injectables/AntennasService.html":{},"modules/OverviewModule.html":{},"injectables/WeatherService.html":{},"license.html":{}}}],["effect",{"_index":2942,"title":{},"body":{"license.html":{}}}],["effort",{"_index":2923,"title":{},"body":{"license.html":{}}}],["element",{"_index":139,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["email",{"_index":2500,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emit",{"_index":894,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["emitsound",{"_index":1043,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["emitsound(sound",{"_index":1041,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["enabletrac",{"_index":1611,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":2865,"title":{},"body":{"index.html":{}}}],["engin",{"_index":2945,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2924,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":2202,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{}}}],["enumer",{"_index":2819,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":859,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":1859,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environment.httpurl}${backendurls.token",{"_index":1722,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.httpurl}${backendurls.validate_token",{"_index":1708,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.websocketpath",{"_index":949,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["environments/environ",{"_index":860,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["equal",{"_index":1069,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["error",{"_index":1719,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{}}}],["error.statu",{"_index":2007,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["error['error",{"_index":2492,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["errormessag",{"_index":1966,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["etc",{"_index":850,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["event",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":616,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["everyon",{"_index":2884,"title":{},"body":{"license.html":{}}}],["everytim",{"_index":681,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["exampl",{"_index":1157,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["except",{"_index":2912,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":2906,"title":{},"body":{"license.html":{}}}],["execut",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["exit_to_applog",{"_index":1521,"title":{},"body":{"components/AppComponent.html":{}}}],["expand",{"_index":610,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["expand/collaps",{"_index":654,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expans",{"_index":2690,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["expect",{"_index":1446,"title":{},"body":{"components/AppComponent.html":{}}}],["expectedclasseswhenhiddentext",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["expectedclasseswhenshowtext",{"_index":2760,"title":{},"body":{"coverage.html":{}}}],["expectedfilteredtablerow",{"_index":2770,"title":{},"body":{"coverage.html":{}}}],["expectedreducedtablerow",{"_index":2771,"title":{},"body":{"coverage.html":{}}}],["expectedreducedtablerowsafterchang",{"_index":2772,"title":{},"body":{"coverage.html":{}}}],["expectedtablerow",{"_index":2773,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":2726,"title":{},"body":{"coverage.html":{}}}],["explain",{"_index":2966,"title":{},"body":{"license.html":{}}}],["export",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extend",{"_index":484,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["extent",{"_index":2958,"title":{},"body":{"license.html":{}}}],["extra",{"_index":1638,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["fab",{"_index":2057,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["facil",{"_index":2917,"title":{},"body":{"license.html":{}}}],["fade",{"_index":1187,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["fail",{"_index":2411,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["faith",{"_index":2922,"title":{},"body":{"license.html":{}}}],["fals",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["famili",{"_index":1174,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/OverviewCardComponent.html":{}}}],["favorit",{"_index":2058,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["fewer",{"_index":2935,"title":{},"body":{"license.html":{}}}],["field",{"_index":1006,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filepath",{"_index":851,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["fill",{"_index":2569,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["filter",{"_index":1403,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replac",{"_index":2263,"title":{},"body":{"injectables/RoutingService.html":{}}}],["find",{"_index":646,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"license.html":{}}}],["fit",{"_index":1386,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["fix",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":1279,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["flat",{"_index":134,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["flatnod",{"_index":751,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":757,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":755,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":756,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":648,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":649,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":622,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":675,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flex",{"_index":551,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["flexlayoutmodul",{"_index":1899,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["float",{"_index":2210,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["flow",{"_index":1379,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["focu",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focus",{"_index":2118,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["focusmonitor",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":2841,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1116,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/ButtonsComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":366,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["footer",{"_index":1388,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["foreground",{"_index":2120,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["form",{"_index":581,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":578,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formbuild",{"_index":1970,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":1989,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":2423,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":1967,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formsmodul",{"_index":262,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":2881,"title":{},"body":{"license.html":{}}}],["free",{"_index":2879,"title":{},"body":{"license.html":{}}}],["full",{"_index":1605,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MapComponent.html":{}}}],["function",{"_index":667,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["further",{"_index":2869,"title":{},"body":{"index.html":{}}}],["futur",{"_index":2977,"title":{},"body":{"license.html":{}}}],["g",{"_index":2846,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1372,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gener",{"_index":568,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"index.html":{},"license.html":{}}}],["generatealarmslist",{"_index":2164,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["get",{"_index":985,"title":{"index.html":{},"license.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["get(core_id",{"_index":962,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["get(url",{"_index":1834,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":2453,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1425,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1437,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":1325,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["getalarm(alarm_id",{"_index":1337,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getalarm(config",{"_index":966,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmlist",{"_index":1003,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmnam",{"_index":284,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["getallowedact",{"_index":1653,"title":{},"body":{"injectables/AuthService.html":{}}}],["getantenna",{"_index":1326,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["getantennas(stationconfig",{"_index":2657,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["getbroadcastr",{"_index":1759,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbroadcastthreshold",{"_index":1760,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbuttontooltiptext",{"_index":2306,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":709,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getchildrenalarmid",{"_index":1327,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getclass",{"_index":285,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getconfigurationdata",{"_index":1761,"title":{},"body":{"injectables/CdbService.html":{}}}],["getconnectionpath",{"_index":951,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getdevic",{"_index":1328,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gethttphead",{"_index":1654,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["geticonset",{"_index":2585,"title":{},"body":{"injectables/WeatherService.html":{}}}],["geticonset(config",{"_index":2590,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getimag",{"_index":400,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getlevel",{"_index":705,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":1268,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["getmissingacks(alarm_id",{"_index":982,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getmockalarm",{"_index":2155,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["getmockalarm(valu",{"_index":2273,"title":{},"body":{"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["getnam",{"_index":524,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["getname(config",{"_index":968,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getnavitemcountclass",{"_index":1426,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcountclass(navitem",{"_index":1441,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext",{"_index":1427,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(item",{"_index":1522,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(navitem",{"_index":1450,"title":{},"body":{"components/AppComponent.html":{}}}],["getngclass",{"_index":1194,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["getpadsstatu",{"_index":2586,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getpadsstatus(group",{"_index":2593,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getpath",{"_index":2555,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getprioritytext",{"_index":286,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["getprioritytextclass",{"_index":794,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["getresponsemessagetext",{"_index":2458,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitl",{"_index":2456,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getshelveregistries(alarm_id",{"_index":987,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsizeclass",{"_index":795,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["getsoundsourc",{"_index":835,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsource(sound",{"_index":845,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsvgpath",{"_index":2034,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":2037,"title":{},"body":{"injectables/MapService.html":{}}}],["gettextclass",{"_index":401,"title":{},"body":{"components/AlarmComponent.html":{}}}],["gettitletext",{"_index":2455,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["gettoken",{"_index":1655,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettreedata",{"_index":719,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getus",{"_index":1428,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["give",{"_index":2936,"title":{},"body":{"license.html":{}}}],["given",{"_index":704,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["global",{"_index":1342,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gnu",{"_index":2872,"title":{},"body":{"license.html":{}}}],["go",{"_index":1112,"title":{},"body":{"components/AlarmTileComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["good",{"_index":2921,"title":{},"body":{"license.html":{}}}],["gotoacknowledg",{"_index":2243,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoacknowledge(alarm_id",{"_index":2253,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoantenna",{"_index":2244,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotologin",{"_index":2245,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotoshelv",{"_index":2246,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoshelve(alarm_id",{"_index":2257,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gototablefilteredbi",{"_index":1395,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1399,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweath",{"_index":2247,"title":{},"body":{"injectables/RoutingService.html":{}}}],["govern",{"_index":2895,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2893,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2983,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":339,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["green",{"_index":335,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["grey",{"_index":1219,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["grid",{"_index":1371,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{}}}],["group",{"_index":506,"title":{},"body":{"classes/AlarmConfig.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["group.github.io/ia",{"_index":2836,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1612,"title":{"guards/AuthLoginGuard.html":{}},"body":{"guards/AuthLoginGuard.html":{},"overview.html":{}}}],["hammerj",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1828,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1837,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["happen",{"_index":1518,"title":{},"body":{"components/AppComponent.html":{}}}],["haschild",{"_index":712,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":716,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasvalidtoken",{"_index":1656,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":314,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["header'},{'nam",{"_index":153,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.compon",{"_index":2301,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":533,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":532,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.t",{"_index":530,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:110",{"_index":539,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":535,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":538,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":536,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":537,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:38",{"_index":534,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:48",{"_index":541,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:55",{"_index":540,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:91",{"_index":542,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:99",{"_index":543,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":529,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.t",{"_index":2757,"title":{},"body":{"coverage.html":{}}}],["health",{"_index":178,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":1573,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":1558,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":177,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["height:100",{"_index":375,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["height:60px",{"_index":372,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["help",{"_index":645,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":2892,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":482,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{}}}],["hide",{"_index":816,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hidespinn",{"_index":2497,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["high",{"_index":1957,"title":{},"body":{"components/LegendComponent.html":{}}}],["highlight",{"_index":1125,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":2122,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["hour",{"_index":2400,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":2116,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["html",{"_index":138,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":869,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":2853,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1273,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":1567,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{}}}],["httpclientservic",{"_index":868,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1672,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["httpoption",{"_index":1854,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1839,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":2883,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":2835,"title":{},"body":{"index.html":{}}}],["https://www.alma.cl",{"_index":2161,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["humid",{"_index":2603,"title":{},"body":{"injectables/WeatherService.html":{}}}],["humidityimageset",{"_index":2572,"title":{},"body":{"injectables/WeatherService.html":{}}}],["humidityimageunreliableset",{"_index":2573,"title":{},"body":{"injectables/WeatherService.html":{}}}],["hunt",{"_index":2144,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["ia",{"_index":268,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"index.html":{}}}],["ias.ia",{"_index":1543,"title":{},"body":{"components/AppComponent.html":{}}}],["ias.overview",{"_index":2208,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["ias_antenna",{"_index":1472,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1818,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1468,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_tabl",{"_index":1473,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_typ",{"_index":1905,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weath",{"_index":1471,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfigur",{"_index":1756,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":1757,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":2825,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":1901,"title":{"classes/Iasio.html":{}},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodul",{"_index":246,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1758,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":130,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["iconset",{"_index":1801,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1802,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":315,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["identifi",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":404,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["imagesunreli",{"_index":405,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["img.ia",{"_index":1531,"title":{},"body":{"components/AppComponent.html":{}}}],["img.ias.ia",{"_index":1545,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":2882,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1673,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["incorpor",{"_index":2887,"title":{},"body":{"license.html":{}}}],["index",{"_index":31,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indic",{"_index":328,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["info'},{'nam",{"_index":155,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["info.compon",{"_index":2303,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":571,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.scss",{"_index":570,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.t",{"_index":567,"title":{},"body":{"components/AlarmInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:18",{"_index":575,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:21",{"_index":577,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:24",{"_index":574,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:34",{"_index":576,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info/alarm",{"_index":566,"title":{},"body":{"components/AlarmInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["inform",{"_index":569,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["inherit",{"_index":2209,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["init",{"_index":2361,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initi",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":1773,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["inject",{"_index":852,"title":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":474,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["inner",{"_index":1170,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["innerhtmltextvalu",{"_index":2068,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["input",{"_index":41,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["insid",{"_index":1149,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["instal",{"_index":2840,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":2849,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":409,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instruct",{"_index":2830,"title":{},"body":{"index.html":{}}}],["integr",{"_index":1477,"title":{},"body":{"components/AppComponent.html":{}}}],["intend",{"_index":1053,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["interact",{"_index":2646,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["interfac",{"_index":2381,"title":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{}},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["intern",{"_index":1235,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["interv",{"_index":855,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["interval(1000",{"_index":1077,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["inu",{"_index":2127,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["invalid",{"_index":1321,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["invalid.svg",{"_index":1822,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["invok",{"_index":2920,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":1906,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicon",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["isalarmindexavailable(core_id",{"_index":964,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["isallow",{"_index":2451,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["isdis",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["isexpand",{"_index":707,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isiniti",{"_index":903,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["isnavigationcompact",{"_index":1422,"title":{},"body":{"components/AppComponent.html":{}}}],["isol",{"_index":2908,"title":{},"body":{"license.html":{}}}],["isselect",{"_index":1329,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":1343,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(stationconfig",{"_index":2660,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["issu",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["istextalarm",{"_index":402,"title":{},"body":{"components/AlarmComponent.html":{}}}],["isubscript",{"_index":2391,"title":{},"body":{"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["isvalidiasio",{"_index":1909,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1919,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":608,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["item.icon",{"_index":1524,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1505,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":1525,"title":{},"body":{"components/AppComponent.html":{}}}],["item[1",{"_index":2065,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["iter",{"_index":1139,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["japan",{"_index":2135,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["jqueri",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":718,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{}}}],["json.hasownproperty('doc_url",{"_index":1924,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1923,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1921,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('short_desc",{"_index":1922,"title":{},"body":{"classes/Iasio.html":{}}}],["json.parse(allowed_act",{"_index":1737,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(token",{"_index":1733,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(us",{"_index":1735,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(allowed_act",{"_index":1747,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(token",{"_index":1742,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(us",{"_index":1744,"title":{},"body":{"injectables/AuthService.html":{}}}],["json['doc_url",{"_index":1930,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1929,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1927,"title":{},"body":{"classes/Iasio.html":{}}}],["json['short_desc",{"_index":1928,"title":{},"body":{"classes/Iasio.html":{}}}],["june",{"_index":2875,"title":{},"body":{"license.html":{}}}],["k",{"_index":739,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":2864,"title":{},"body":{"index.html":{}}}],["keep",{"_index":650,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["keepclos",{"_index":961,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["key",{"_index":1286,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{}}}],["keyfram",{"_index":1141,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["know",{"_index":2595,"title":{},"body":{"injectables/WeatherService.html":{}}}],["l",{"_index":2565,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["label",{"_index":416,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["label'},{'nam",{"_index":157,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["label.compon",{"_index":2304,"title":{},"body":{"modules/SharedModule.html":{}}}],["label.component.html",{"_index":791,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.scss",{"_index":790,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.t",{"_index":789,"title":{},"body":{"components/AlarmLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:125",{"_index":805,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:141",{"_index":806,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:18",{"_index":799,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:23",{"_index":802,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:28",{"_index":801,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:33",{"_index":800,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:38",{"_index":809,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:43",{"_index":808,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:48",{"_index":798,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:58",{"_index":807,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:74",{"_index":804,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:85",{"_index":803,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label/alarm",{"_index":788,"title":{},"body":{"components/AlarmLabelComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["label/fixtures.t",{"_index":2758,"title":{},"body":{"coverage.html":{}}}],["labelloc",{"_index":406,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["labellocationopt",{"_index":398,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["labelmod",{"_index":407,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["last",{"_index":589,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/SidenavService.html":{}}}],["lastalarmid",{"_index":2319,"title":{},"body":{"injectables/SidenavService.html":{}}}],["lastreceivedmessagetimestamp",{"_index":884,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["later",{"_index":750,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1146,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{},"license.html":{}}}],["left",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["left:0",{"_index":2703,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["legend",{"_index":137,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":180,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1932,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1933,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":2373,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":179,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":318,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"license.html":{}}}],["lesser",{"_index":2873,"title":{},"body":{"license.html":{}}}],["level",{"_index":611,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":443,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["librari",{"_index":2848,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":2871,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":2931,"title":{},"body":{"license.html":{}}}],["line",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["link",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linkfab",{"_index":2190,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkflat",{"_index":2189,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkicon",{"_index":2192,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkmini",{"_index":2191,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkrais",{"_index":2188,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linux",{"_index":2833,"title":{},"body":{"index.html":{}}}],["list",{"_index":430,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":1277,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["load",{"_index":1974,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["loadalarmsconfig",{"_index":1269,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["loadimag",{"_index":1270,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["loadpadsstatu",{"_index":2587,"title":{},"body":{"injectables/WeatherService.html":{}}}],["loadpadsstatus(group",{"_index":2599,"title":{},"body":{"injectables/WeatherService.html":{}}}],["loadweatherstationsconfig",{"_index":2588,"title":{},"body":{"injectables/WeatherService.html":{}}}],["local",{"_index":582,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"index.html":{}}}],["locale.date_format",{"_index":584,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["locale.timezon",{"_index":586,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["localstorage.getitem(this.actions_storage_nam",{"_index":1736,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(this.token_storage_nam",{"_index":1732,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(this.user_storage_nam",{"_index":1734,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.actions_storage_nam",{"_index":1740,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.token_storage_nam",{"_index":1738,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.user_storage_nam",{"_index":1739,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.actions_storage_nam",{"_index":1746,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.token_storage_nam",{"_index":1741,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.user_storage_nam",{"_index":1743,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":440,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/WeatherService.html":{}}}],["log",{"_index":1616,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["login",{"_index":1502,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["login'},{'nam",{"_index":182,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["login(usernam",{"_index":1677,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1965,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1964,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.guard",{"_index":1600,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login.guard.t",{"_index":1614,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:13",{"_index":1619,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:31",{"_index":1624,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:42",{"_index":1628,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login/login.compon",{"_index":1644,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincompon",{"_index":181,"title":{"components/LoginComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginstatu",{"_index":1647,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginstatusstream",{"_index":1648,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":1532,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":960,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["long",{"_index":2412,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["look",{"_index":2060,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["low",{"_index":1952,"title":{},"body":{"components/LegendComponent.html":{}}}],["low.svg",{"_index":1316,"title":{},"body":{"injectables/AntennasService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["m",{"_index":2568,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macro",{"_index":2933,"title":{},"body":{"license.html":{}}}],["made",{"_index":2903,"title":{},"body":{"license.html":{}}}],["main",{"_index":1152,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["mainten",{"_index":456,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":1319,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["make",{"_index":2897,"title":{},"body":{"license.html":{}}}],["malfunct",{"_index":2824,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manag",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":2951,"title":{},"body":{"license.html":{}}}],["map",{"_index":520,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["map'},{'nam",{"_index":168,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map((respons",{"_index":1712,"title":{},"body":{"injectables/AuthService.html":{}}}],["map.compon",{"_index":1249,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":2018,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":2017,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":2735,"title":{},"body":{"coverage.html":{}}}],["map.servic",{"_index":2032,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antenna",{"_index":1248,"title":{},"body":{"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.compon",{"_index":2031,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.modul",{"_index":1253,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/weath",{"_index":2545,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapcompon",{"_index":183,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":2019,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataavail",{"_index":2020,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataprocess",{"_index":2035,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroup",{"_index":2041,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodul",{"_index":1244,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["mapservic",{"_index":2029,"title":{"injectables/MapService.html":{}},"body":{"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["mark",{"_index":1449,"title":{},"body":{"components/AppComponent.html":{}}}],["marker",{"_index":394,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{}}}],["marker'},{'nam",{"_index":164,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.compon",{"_index":1256,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":1193,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":1192,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.t",{"_index":1191,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:17",{"_index":1203,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":1211,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:21",{"_index":2515,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:23",{"_index":1212,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":2512,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:25",{"_index":2532,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:26",{"_index":1205,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:29",{"_index":1206,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":1201,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:33",{"_index":2516,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":2535,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:38",{"_index":2534,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:39",{"_index":2514,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:40",{"_index":1216,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:41",{"_index":1215,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:44",{"_index":2533,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:46",{"_index":2513,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:47",{"_index":1214,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:53",{"_index":1213,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker/antenna",{"_index":1190,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weath",{"_index":2508,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markerimageset",{"_index":2574,"title":{},"body":{"injectables/WeatherService.html":{}}}],["markerimageunreliableset",{"_index":2575,"title":{},"body":{"injectables/WeatherService.html":{}}}],["markers/antenna",{"_index":1189,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weath",{"_index":2507,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":2838,"title":{},"body":{"index.html":{}}}],["mat",{"_index":133,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["matbuttonmodul",{"_index":1876,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1879,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":233,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["matcheckboxmodul",{"_index":1886,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":185,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.modul",{"_index":270,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.t",{"_index":1861,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":269,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialbuttonscolorscompon",{"_index":184,"title":{"components/MaterialButtonsColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialcardsamplecompon",{"_index":187,"title":{"components/MaterialCardSampleComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialcolorscompon",{"_index":189,"title":{"components/MaterialColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialid",{"_index":2067,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["materialsandboxcompon",{"_index":190,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialsandboxmodul",{"_index":1582,"title":{"modules/MaterialSandboxModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MaterialSandboxModule.html":{},"modules.html":{},"overview.html":{}}}],["materialtogglecolorscompon",{"_index":192,"title":{"components/MaterialToggleColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":1894,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodul",{"_index":1888,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":1878,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistri",{"_index":1430,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":1862,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1883,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matmenumodul",{"_index":1874,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1864,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1866,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodul",{"_index":1890,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1460,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodul",{"_index":1881,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1868,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbar",{"_index":2652,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["matsnackbarmodul",{"_index":1896,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsortmodul",{"_index":1870,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattablemodul",{"_index":1872,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1892,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":625,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":677,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":624,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":670,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1885,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":295,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["maxci",{"_index":2049,"title":{},"body":{"injectables/MapService.html":{}}}],["maximum",{"_index":317,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["md",{"_index":420,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["mean",{"_index":2905,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":2928,"title":{},"body":{"license.html":{}}}],["meant",{"_index":2298,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":2952,"title":{},"body":{"license.html":{}}}],["medium",{"_index":425,"title":{},"body":{"components/AlarmComponent.html":{},"components/LegendComponent.html":{}}}],["menu",{"_index":1475,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":880,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["metadata",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["middl",{"_index":478,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["min",{"_index":125,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WikiButtonComponent.html":{}}}],["mini",{"_index":2059,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["minim",{"_index":2904,"title":{},"body":{"license.html":{}}}],["minut",{"_index":2396,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["miscellan",{"_index":2818,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":981,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["mock",{"_index":2154,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["mockalarm",{"_index":2740,"title":{},"body":{"coverage.html":{}}}],["mockalarmdata",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["mockalarmstodisplay",{"_index":2774,"title":{},"body":{"coverage.html":{}}}],["mockantenna",{"_index":2780,"title":{},"body":{"coverage.html":{}}}],["mockantennasconfig",{"_index":2741,"title":{},"body":{"coverage.html":{}}}],["mockdevicesconfig",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["mockiasio",{"_index":2775,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":2763,"title":{},"body":{"coverage.html":{}}}],["mockimagesset",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["mockimagesunreliableset",{"_index":2744,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":2764,"title":{},"body":{"coverage.html":{}}}],["mockpadsstatu",{"_index":2781,"title":{},"body":{"coverage.html":{}}}],["mocksummaryconfig",{"_index":2745,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":2782,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":2783,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":438,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["model",{"_index":448,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"modules/DataModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["modif",{"_index":2916,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":647,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"license.html":{}}}],["modul",{"_index":234,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2380,"title":{},"body":{"components/TabularViewComponent.html":{},"dependencies.html":{}}}],["monitor",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["monospac",{"_index":1175,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["more",{"_index":2219,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountain",{"_index":2141,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["moz",{"_index":1137,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["multipl",{"_index":664,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["nav",{"_index":1443,"title":{},"body":{"components/AppComponent.html":{}}}],["navig",{"_index":1435,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["navigationsidenavitem",{"_index":1423,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem",{"_index":1447,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem.count",{"_index":1510,"title":{},"body":{"components/AppComponent.html":{}}}],["navitemcount",{"_index":1509,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":2689,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["nearbi",{"_index":2659,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["necessari",{"_index":2959,"title":{},"body":{"license.html":{}}}],["need",{"_index":1260,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nest",{"_index":644,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":652,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["new",{"_index":457,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["newlength",{"_index":1026,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["next",{"_index":1625,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["nexturl",{"_index":1632,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["ng",{"_index":1150,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngbmodul",{"_index":2200,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{}}}],["ngmodul",{"_index":252,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":1088,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["ngonchanges(chang",{"_index":683,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["ngondestroy",{"_index":2440,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":266,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":265,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":1972,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["node",{"_index":609,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":745,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":708,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":742,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":706,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":2842,"title":{},"body":{"index.html":{}}}],["non",{"_index":1057,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["none",{"_index":830,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["nonzero",{"_index":1515,"title":{},"body":{"components/AppComponent.html":{}}}],["nopad",{"_index":796,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["nopaddingopt",{"_index":792,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["normal",{"_index":368,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{}}}],["noselecteddescendants(nod",{"_index":772,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":2236,"title":{},"body":{"modules/OverviewModule.html":{},"index.html":{}}}],["noth",{"_index":1334,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["notic",{"_index":2938,"title":{},"body":{"license.html":{}}}],["notif",{"_index":886,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["notifi",{"_index":1336,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["npm",{"_index":2843,"title":{},"body":{"index.html":{}}}],["null",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":614,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["number(this.iasconfiguration['broadcastr",{"_index":1783,"title":{},"body":{"injectables/CdbService.html":{}}}],["number(this.iasconfiguration['broadcastthreshold",{"_index":1786,"title":{},"body":{"injectables/CdbService.html":{}}}],["numer",{"_index":2932,"title":{},"body":{"license.html":{}}}],["o",{"_index":1138,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["obj",{"_index":1005,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["object",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["object.assign(thi",{"_index":463,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["object.keys(countbyview",{"_index":1512,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(subtree).length",{"_index":735,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["observ",{"_index":628,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/WeatherService.html":{}}}],["obtain",{"_index":1071,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["occur",{"_index":1851,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["of(fals",{"_index":1707,"title":{},"body":{"injectables/AuthService.html":{}}}],["ofobserv",{"_index":627,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":710,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ogin",{"_index":1986,"title":{},"body":{"components/LoginComponent.html":{}}}],["old",{"_index":978,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm",{"_index":1022,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.ack",{"_index":1025,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.valu",{"_index":1024,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_ack",{"_index":1020,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_valu",{"_index":1019,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["on",{"_index":2596,"title":{},"body":{"injectables/WeatherService.html":{},"license.html":{}}}],["onc",{"_index":1055,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["onchang",{"_index":619,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["onclick",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":1347,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclick(stationconfig",{"_index":2663,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["onclos",{"_index":2468,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":2388,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["onhov",{"_index":2531,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["opac",{"_index":389,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["open",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["open/clos",{"_index":2333,"title":{},"body":{"injectables/SidenavService.html":{}}}],["opensnackbar",{"_index":2649,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["opensnackbar(messag",{"_index":2665,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["oper",{"_index":1827,"title":{},"body":{"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":330,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.unknown",{"_index":337,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["opt_ci",{"_index":1210,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["opt_cx",{"_index":1209,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["optionalalarmnam",{"_index":290,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["order",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmTooltipComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ShelveButtonComponent.html":{},"injectables/WeatherService.html":{}}}],["origin",{"_index":2132,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["other",{"_index":1820,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{}}}],["otherwis",{"_index":2898,"title":{},"body":{"license.html":{}}}],["out",{"_index":250,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1439,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["output",{"_index":617,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["over",{"_index":1147,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{}}}],["overflow",{"_index":601,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["overview",{"_index":195,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":197,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":2222,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":2221,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1494,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.compon",{"_index":2237,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":1574,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":1592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["overviewcardcompon",{"_index":194,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":196,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":1559,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["p",{"_index":1537,"title":{},"body":{"components/AppComponent.html":{}}}],["packag",{"_index":2790,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["pad_nam",{"_index":2679,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["padding:0",{"_index":473,"title":{},"body":{"components/AlarmComponent.html":{}}}],["padding:10px",{"_index":376,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["pads[pad_nam",{"_index":2680,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["padsstatu",{"_index":2576,"title":{},"body":{"injectables/WeatherService.html":{}}}],["padsstatusavail",{"_index":2577,"title":{},"body":{"injectables/WeatherService.html":{}}}],["page",{"_index":896,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"components/WikiButtonComponent.html":{}}}],["pair",{"_index":2066,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["palett",{"_index":2064,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["pallet",{"_index":2063,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel",{"_index":2185,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSidebarComponent.html":{}}}],["panel100",{"_index":2082,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel100acc",{"_index":2098,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel100warn",{"_index":2111,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200",{"_index":2081,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200acc",{"_index":2097,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200warn",{"_index":2110,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300",{"_index":2079,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300acc",{"_index":2096,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300warn",{"_index":2109,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400",{"_index":2078,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400acc",{"_index":2095,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400warn",{"_index":2108,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50",{"_index":2083,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500",{"_index":2076,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500acc",{"_index":2094,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500warn",{"_index":2107,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50acc",{"_index":2099,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50warn",{"_index":2112,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600",{"_index":2074,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600acc",{"_index":2093,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600warn",{"_index":2106,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700",{"_index":2073,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700acc",{"_index":2092,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700warn",{"_index":2105,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800",{"_index":2071,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800acc",{"_index":2091,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800warn",{"_index":2104,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900",{"_index":2069,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900acc",{"_index":2090,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900warn",{"_index":2103,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100",{"_index":2088,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100acc",{"_index":2102,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100warn",{"_index":2115,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400",{"_index":2086,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400acc",{"_index":2101,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400warn",{"_index":2114,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700",{"_index":2084,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700acc",{"_index":2100,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700warn",{"_index":2113,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panelclass",{"_index":2688,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panelclick",{"_index":2650,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["param",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["parament",{"_index":1154,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["paramet",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["parammap",{"_index":2428,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":2429,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parammapsubscript",{"_index":2415,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":638,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["part",{"_index":765,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":2902,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1457,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"license.html":{}}}],["password",{"_index":1678,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["path",{"_index":950,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/AppRoutingModule.html":{},"injectables/MapService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1604,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathsgroup",{"_index":2040,"title":{},"body":{"injectables/MapService.html":{}}}],["pathstr",{"_index":2563,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["payload",{"_index":932,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["payload.data",{"_index":937,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pend",{"_index":308,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":909,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["period",{"_index":1063,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["perman",{"_index":2981,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":1669,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["permit",{"_index":1626,"title":{},"body":{"guards/AuthLoginGuard.html":{},"license.html":{}}}],["persist",{"_index":2465,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["pipe",{"_index":1711,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map((respons",{"_index":1724,"title":{},"body":{"injectables/AuthService.html":{}}}],["pk",{"_index":1925,"title":{},"body":{"classes/Iasio.html":{}}}],["place",{"_index":2962,"title":{},"body":{"license.html":{}}}],["placemark",{"_index":507,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/MapService.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["placemarksgroup",{"_index":2045,"title":{},"body":{"injectables/MapService.html":{}}}],["play",{"_index":900,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["playalarmsound(alarm",{"_index":1035,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pleas",{"_index":2463,"title":{},"body":{"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":1903,"title":{},"body":{"classes/Iasio.html":{}}}],["pointer",{"_index":1221,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["popper.j",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":2907,"title":{},"body":{"license.html":{}}}],["posit",{"_index":383,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["possibl",{"_index":2821,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":1829,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1841,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["pre",{"_index":598,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["presenc",{"_index":1444,"title":{},"body":{"components/AppComponent.html":{}}}],["present",{"_index":2953,"title":{},"body":{"license.html":{}}}],["prevalarmcoreid",{"_index":687,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["prevdependenciesstr",{"_index":691,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["previou",{"_index":1690,"title":{},"body":{"injectables/AuthService.html":{}}}],["previousalarmvalu",{"_index":1122,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["primari",{"_index":222,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["priorit",{"_index":325,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["prioriti",{"_index":281,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priority_0",{"_index":1936,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":1937,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":1938,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":1939,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":1940,"title":{},"body":{"components/LegendComponent.html":{}}}],["prioritytext",{"_index":359,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["prioritytext.touppercas",{"_index":362,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["privat",{"_index":101,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":1983,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["process",{"_index":1849,"title":{},"body":{"injectables/HttpClientService.html":{},"components/StatusViewComponent.html":{}}}],["prod",{"_index":2860,"title":{},"body":{"index.html":{}}}],["produc",{"_index":2901,"title":{},"body":{"license.html":{}}}],["product",{"_index":2861,"title":{},"body":{"index.html":{}}}],["proess",{"_index":1847,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["program",{"_index":2911,"title":{},"body":{"license.html":{}}}],["project",{"_index":2826,"title":{},"body":{"index.html":{}}}],["promin",{"_index":2937,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1840,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1853,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["prop",{"_index":1178,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["properli",{"_index":2956,"title":{},"body":{"license.html":{}}}],["properti",{"_index":32,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["protractor",{"_index":2867,"title":{},"body":{"index.html":{}}}],["provid",{"_index":239,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/LoginComponent.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":1295,"title":{},"body":{"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["provisori",{"_index":2226,"title":{},"body":{"components/OverviewComponent.html":{}}}],["proxi",{"_index":2976,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":2979,"title":{},"body":{"license.html":{}}}],["public",{"_index":33,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":2968,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":395,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":2362,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1148,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1843,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":1197,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["radiu",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rais",{"_index":2056,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["rate",{"_index":1766,"title":{},"body":{"injectables/CdbService.html":{}}}],["re",{"_index":1779,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":263,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":580,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["read_url",{"_index":1830,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":1845,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readalarmmessage(act",{"_index":1007,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readalarmmessageslist(alarmslist",{"_index":1013,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readcountbyviewmessage(countbyview",{"_index":1015,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readm",{"_index":2870,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":879,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"license.html":{}}}],["recombin",{"_index":2949,"title":{},"body":{"license.html":{}}}],["record",{"_index":749,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":656,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":346,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":1355,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":1603,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":1649,"title":{},"body":{"injectables/AuthService.html":{}}}],["refer",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["refresh",{"_index":897,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["registri",{"_index":1436,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["registry['shelved_at",{"_index":2481,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["registry['timeout']).viewvalu",{"_index":2482,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["rel",{"_index":384,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["relat",{"_index":324,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["releas",{"_index":2834,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":2178,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":2950,"title":{},"body":{"license.html":{}}}],["reload",{"_index":2469,"title":{},"body":{"interfaces/TimeoutOption.html":{},"index.html":{}}}],["remain",{"_index":2927,"title":{},"body":{"license.html":{}}}],["remov",{"_index":2225,"title":{},"body":{"components/OverviewComponent.html":{}}}],["removeallowedact",{"_index":1657,"title":{},"body":{"injectables/AuthService.html":{}}}],["removetoken",{"_index":1658,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeus",{"_index":1659,"title":{},"body":{"injectables/AuthService.html":{}}}],["repeat",{"_index":1036,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["repeatedli",{"_index":1058,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["replac",{"_index":1689,"title":{},"body":{"injectables/AuthService.html":{}}}],["replace('clear",{"_index":360,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["replace('set_",{"_index":361,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["repres",{"_index":393,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["reproduc",{"_index":1034,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["repsons",{"_index":1726,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":665,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["requestshelveinfo",{"_index":2477,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatu",{"_index":2409,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatusli",{"_index":2408,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requestuserslist",{"_index":2502,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["requir",{"_index":516,"title":{},"body":{"classes/AlarmConfig.html":{},"modules/IasMaterialModule.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":249,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resetcountbyview",{"_index":1017,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resettim",{"_index":1073,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resourc",{"_index":2228,"title":{},"body":{"components/OverviewComponent.html":{}}}],["respect",{"_index":2176,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["respons",{"_index":971,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["response.push(pads[pad_nam",{"_index":2681,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response.sort",{"_index":2682,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response['allowed_act",{"_index":1715,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['antenna",{"_index":1303,"title":{},"body":{"injectables/AntennasService.html":{}}}],["response['devic",{"_index":1305,"title":{},"body":{"injectables/AntennasService.html":{}}}],["response['statu",{"_index":992,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["response['token",{"_index":1727,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['user_data",{"_index":1714,"title":{},"body":{"injectables/AuthService.html":{}}}],["response[0",{"_index":2480,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["restrict",{"_index":2943,"title":{},"body":{"license.html":{}}}],["result",{"_index":232,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["result.push('alarm",{"_index":331,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmTileComponent.html":{}}}],["result.push('blu",{"_index":544,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":547,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":546,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('highlight",{"_index":1126,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["result.push('norm",{"_index":1127,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["result.push('r",{"_index":549,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('unreli",{"_index":545,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":548,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["retriev",{"_index":1202,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{}}}],["retrun",{"_index":847,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["retun",{"_index":703,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":2016,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":2944,"title":{},"body":{"license.html":{}}}],["revis",{"_index":2967,"title":{},"body":{"license.html":{}}}],["rgba(0",{"_index":1176,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["rgba(255",{"_index":1376,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["right",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["right:4",{"_index":382,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["root",{"_index":1296,"title":{},"body":{"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":174,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":1354,"title":{"routes.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["routermodul",{"_index":1585,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":1610,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1623,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["routing.modul",{"_index":1571,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":1584,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.servic",{"_index":1586,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":1570,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing/routing.servic",{"_index":1409,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{}}}],["routing/routing.service.t",{"_index":2239,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["routing/routing.service.ts:20",{"_index":2262,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:28",{"_index":2255,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:35",{"_index":2260,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:43",{"_index":2254,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:51",{"_index":2258,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:58",{"_index":2251,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:65",{"_index":2256,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:8",{"_index":2250,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routingservic",{"_index":1353,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppRoutingModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["row",{"_index":1373,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["run",{"_index":2850,"title":{},"body":{"index.html":{},"license.html":{}}}],["running_id",{"_index":2157,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["rxj",{"_index":629,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":853,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["same",{"_index":651,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sampl",{"_index":188,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["san",{"_index":2214,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["sandbox",{"_index":199,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox'},{'nam",{"_index":191,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.compon",{"_index":1590,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MaterialSandboxModule.html":{}}}],["sandbox.components.html",{"_index":2062,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.scss",{"_index":2052,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.t",{"_index":2051,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["sandbox.components.ts:123",{"_index":2193,"title":{},"body":{"components/MaterialColorsComponent.html":{}}}],["sandbox.components.ts:298",{"_index":2284,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:301",{"_index":2283,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:313",{"_index":2281,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:344",{"_index":2280,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:361",{"_index":2282,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:39",{"_index":2194,"title":{},"body":{"components/MaterialColorsComponent.html":{}}}],["sandbox.components.ts:410",{"_index":2279,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:413",{"_index":2278,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:416",{"_index":2276,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:419",{"_index":2277,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:422",{"_index":2269,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:425",{"_index":2270,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:428",{"_index":2268,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:440",{"_index":2274,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:473",{"_index":2275,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:482",{"_index":2272,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:499",{"_index":2271,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:568",{"_index":2292,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:571",{"_index":2291,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:574",{"_index":2289,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:577",{"_index":2290,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:589",{"_index":2287,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:622",{"_index":2288,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:630",{"_index":2286,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:647",{"_index":2285,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.modul",{"_index":1591,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sandbox.module.t",{"_index":2199,"title":{},"body":{"modules/MaterialSandboxModule.html":{}}}],["sandbox/materi",{"_index":1589,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["sandboxalarmcompon",{"_index":198,"title":{"components/SandboxAlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sandboxalarmlabelcompon",{"_index":200,"title":{"components/SandboxAlarmLabelComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sandboxalarmtilecompon",{"_index":201,"title":{"components/SandboxAlarmTileComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sanit",{"_index":1489,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":1629,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["scaffold",{"_index":2855,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2043,"title":{},"body":{"injectables/MapService.html":{}}}],["scenario",{"_index":2146,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["second",{"_index":1768,"title":{},"body":{"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["secondari",{"_index":2123,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["section",{"_index":593,"title":{},"body":{"components/AlarmInfoComponent.html":{},"license.html":{}}}],["select",{"_index":641,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["select/deselect",{"_index":774,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":783,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":639,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":1229,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescend",{"_index":767,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedst",{"_index":2524,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["selectionmodel",{"_index":620,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":663,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["self",{"_index":1380,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["send",{"_index":640,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["sent",{"_index":2387,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["separ",{"_index":1404,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serif",{"_index":2215,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["serv",{"_index":2851,"title":{},"body":{"index.html":{}}}],["server",{"_index":1680,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":411,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{}}}],["set_crit",{"_index":454,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":453,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":1941,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":451,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":452,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":1942,"title":{},"body":{"components/LegendComponent.html":{}}}],["seterrormessag",{"_index":1968,"title":{},"body":{"components/LoginComponent.html":{}}}],["seterrormessage(error",{"_index":1978,"title":{},"body":{"components/LoginComponent.html":{}}}],["setsidenav",{"_index":2322,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":2330,"title":{},"body":{"injectables/SidenavService.html":{}}}],["shadow",{"_index":2691,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["shall",{"_index":2978,"title":{},"body":{"license.html":{}}}],["share",{"_index":2145,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":1292,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":272,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["sharedmodul",{"_index":247,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":309,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["shelv",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'nam",{"_index":204,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":2392,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":2393,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1609,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shelve/shelve.compon",{"_index":256,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelv",{"_index":2308,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvealarm(alarm_id",{"_index":990,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shelvebuttoncompon",{"_index":202,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecompon",{"_index":203,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":2406,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelved?({{alarm.shelv",{"_index":2152,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["shelvedatmessag",{"_index":2413,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelveregistri",{"_index":986,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shiba",{"_index":2126,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["shleve/unshelv",{"_index":2259,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["short",{"_index":1915,"title":{},"body":{"classes/Iasio.html":{}}}],["short_desc",{"_index":1907,"title":{},"body":{"classes/Iasio.html":{}}}],["shorten",{"_index":316,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["shouldreload",{"_index":2320,"title":{},"body":{"injectables/SidenavService.html":{}}}],["show",{"_index":810,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["showactionbadg",{"_index":291,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":287,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showasshelv",{"_index":288,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["showbadgesopt",{"_index":1085,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["showpriorityleveltext",{"_index":403,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["showspinn",{"_index":2498,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["showtext",{"_index":797,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["showtextopt",{"_index":793,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["shuttedown",{"_index":2822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["side",{"_index":2963,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":1224,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":170,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.compon",{"_index":1251,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":1324,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1323,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":1322,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:100",{"_index":1348,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:110",{"_index":2666,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:17",{"_index":2696,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:18",{"_index":1335,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":2654,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2695,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:21",{"_index":1333,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":2653,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:28",{"_index":2699,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":2698,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":1352,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1351,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:32",{"_index":2670,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:33",{"_index":2668,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":2669,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":1345,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:41",{"_index":2697,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:42",{"_index":2662,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:47",{"_index":1338,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:51",{"_index":2656,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:55",{"_index":1339,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:63",{"_index":1340,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:70",{"_index":2658,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:75",{"_index":1341,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:82",{"_index":1349,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:88",{"_index":2661,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:92",{"_index":1344,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:96",{"_index":2664,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar/antenna",{"_index":1250,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weath",{"_index":2547,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{}}}],["sidenav.servic",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavreloadsubscript",{"_index":2417,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["sidenavservic",{"_index":34,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["sidenv",{"_index":2317,"title":{},"body":{"injectables/SidenavService.html":{}}}],["similar",{"_index":2969,"title":{},"body":{"license.html":{}}}],["simplechang",{"_index":618,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["singl",{"_index":2964,"title":{},"body":{"license.html":{}}}],["six",{"_index":2131,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["size",{"_index":296,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["size:10px",{"_index":377,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["sizeopt",{"_index":399,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["slider",{"_index":2125,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sm",{"_index":442,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["small",{"_index":2136,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["smallest",{"_index":2130,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["snackbar",{"_index":2647,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sned",{"_index":1667,"title":{},"body":{"injectables/AuthService.html":{}}}],["softwar",{"_index":2880,"title":{},"body":{"license.html":{}}}],["solid",{"_index":365,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["sort",{"_index":517,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["sound",{"_index":826,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sound1",{"_index":2162,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["soundingalarm",{"_index":902,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["soundtoplay",{"_index":1044,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1180,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["span",{"_index":1370,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["special",{"_index":1398,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":2220,"title":{},"body":{"components/OverviewComponent.html":{}}}],["specifi",{"_index":1402,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["speed",{"_index":2619,"title":{},"body":{"injectables/WeatherService.html":{}}}],["spinner",{"_index":267,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":1971,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":2970,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":2134,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["src/.../alarm.t",{"_index":2820,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.t",{"_index":2729,"title":{},"body":{"coverage.html":{}}}],["src/app/actions/actions.module.t",{"_index":251,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.t",{"_index":1748,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1753,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:28",{"_index":1754,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelv",{"_index":2305,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.t",{"_index":2383,"title":{},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.t",{"_index":2316,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:18",{"_index":2335,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:23",{"_index":2324,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:33",{"_index":2336,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:36",{"_index":2334,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:42",{"_index":2331,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:49",{"_index":2329,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:56",{"_index":2325,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:63",{"_index":2326,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:71",{"_index":2332,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:79",{"_index":2327,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:87",{"_index":2328,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":2710,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antenna",{"_index":1188,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.t",{"_index":1246,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.t",{"_index":1259,"title":{},"body":{"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":1282,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":1290,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:24",{"_index":1285,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:27",{"_index":1288,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:30",{"_index":1280,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:33",{"_index":1281,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:36",{"_index":1272,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:50",{"_index":1275,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:61",{"_index":1276,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:83",{"_index":1274,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:91",{"_index":1278,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.t",{"_index":1222,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:16",{"_index":1231,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":1232,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:32",{"_index":1234,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/tests_fixtures.t",{"_index":2739,"title":{},"body":{"coverage.html":{}}}],["src/app/app",{"_index":1583,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":1416,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:117",{"_index":1456,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:138",{"_index":1438,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:150",{"_index":1458,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:160",{"_index":1453,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":1455,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:181",{"_index":1442,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:210",{"_index":1451,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":1463,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":1478,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":1467,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":1474,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":1432,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":1465,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":1466,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:84",{"_index":1479,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":1464,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":1476,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":1561,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":1613,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["src/app/auth/auth.module.t",{"_index":1643,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.t",{"_index":1645,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:117",{"_index":1679,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:140",{"_index":1682,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:150",{"_index":1674,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:163",{"_index":1675,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:176",{"_index":1668,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:188",{"_index":1685,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:195",{"_index":1686,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":1699,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:202",{"_index":1683,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:210",{"_index":1692,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:219",{"_index":1694,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:228",{"_index":1688,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":1700,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:30",{"_index":1695,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:35",{"_index":1698,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":1696,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:46",{"_index":1664,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:60",{"_index":1666,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:69",{"_index":1671,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:86",{"_index":1676,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.t",{"_index":1963,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:102",{"_index":1976,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:112",{"_index":1979,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:20",{"_index":1988,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:25",{"_index":1987,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:30",{"_index":1992,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:35",{"_index":1990,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:41",{"_index":1973,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:53",{"_index":1985,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:54",{"_index":1991,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":1977,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:75",{"_index":1975,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/data/alarm",{"_index":499,"title":{},"body":{"classes/AlarmConfig.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.t",{"_index":824,"title":{},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.ts:21",{"_index":836,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:24",{"_index":838,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:27",{"_index":840,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:30",{"_index":842,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:33",{"_index":844,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:40",{"_index":846,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.t",{"_index":2750,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/cdb.service.t",{"_index":1755,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:15",{"_index":1776,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:20",{"_index":1774,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:25",{"_index":1763,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:39",{"_index":1772,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:50",{"_index":1771,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:58",{"_index":1764,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:72",{"_index":1769,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":1790,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1823,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":1902,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":1914,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":1911,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":1910,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":1920,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":1917,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":1913,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/user.service.t",{"_index":2499,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/data/user.service.ts:26",{"_index":2504,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/data/user.service.ts:40",{"_index":2505,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/health/health",{"_index":1800,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1798,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":1860,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.t",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.t",{"_index":2030,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.t",{"_index":2033,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":2038,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:44",{"_index":2042,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":2036,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.t",{"_index":2015,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":2022,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":2021,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":2023,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/materi",{"_index":2050,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":2204,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":2234,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":2218,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":2223,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":2224,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":274,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":392,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:10",{"_index":559,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:100",{"_index":417,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:105",{"_index":444,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:110",{"_index":408,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:120",{"_index":433,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:13",{"_index":563,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:134",{"_index":424,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:142",{"_index":426,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:16",{"_index":564,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:175",{"_index":429,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:19",{"_index":562,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:214",{"_index":431,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:22",{"_index":561,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:222",{"_index":434,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:230",{"_index":436,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:238",{"_index":437,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:25",{"_index":565,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:28",{"_index":560,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:31",{"_index":558,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:58",{"_index":410,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:63",{"_index":422,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:68",{"_index":413,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:73",{"_index":415,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:79",{"_index":419,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:85",{"_index":418,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:90",{"_index":421,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:95",{"_index":423,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":2766,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":2297,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/statu",{"_index":2347,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":1931,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:15",{"_index":1946,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":1945,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":1961,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":1947,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":1960,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":1959,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:33",{"_index":1949,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:36",{"_index":1951,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:39",{"_index":1954,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:42",{"_index":1956,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:45",{"_index":1943,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:51",{"_index":1944,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/table/fixtures.t",{"_index":2767,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/table/table.component.t",{"_index":2776,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/tabular",{"_index":2375,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":2372,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/test_fixtures.t",{"_index":2778,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weath",{"_index":2506,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":2541,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.t",{"_index":2571,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/weather/weather.service.ts:114",{"_index":2592,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:124",{"_index":2594,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:133",{"_index":2600,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:145",{"_index":2601,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:157",{"_index":2598,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:18",{"_index":2602,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:21",{"_index":2610,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:24",{"_index":2617,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:27",{"_index":2605,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:30",{"_index":2604,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:33",{"_index":2612,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:36",{"_index":2620,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:39",{"_index":2606,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:42",{"_index":2616,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:45",{"_index":2615,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:48",{"_index":2614,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:51",{"_index":2607,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:54",{"_index":2609,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:57",{"_index":2589,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:72",{"_index":2597,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:86",{"_index":2591,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather/weather.component.t",{"_index":2519,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:16",{"_index":2526,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:27",{"_index":2529,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:33",{"_index":2528,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.t",{"_index":2786,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":2787,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":2788,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":918,"title":{"index.html":{},"license.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{}}}],["startanim",{"_index":1089,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["startup",{"_index":668,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":414,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state.url",{"_index":1634,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["state_change_timestamp",{"_index":2160,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["statement",{"_index":2720,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":829,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{}}}],["station",{"_index":227,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":2510,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["stationconfig.group",{"_index":2677,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["stationconfig.placemark",{"_index":2684,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["statu",{"_index":206,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":449,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcompon",{"_index":205,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":2925,"title":{},"body":{"license.html":{}}}],["stop",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["stopanim",{"_index":1090,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["storag",{"_index":1670,"title":{},"body":{"injectables/AuthService.html":{}}}],["storageitem",{"_index":2755,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":501,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["storeallowedact",{"_index":1660,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeallowedactions(allowed_act",{"_index":1687,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken",{"_index":1661,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken(token",{"_index":1691,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeus",{"_index":1662,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeuser(us",{"_index":1693,"title":{},"body":{"injectables/AuthService.html":{}}}],["stream",{"_index":864,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"coverage.html":{}}}],["streamnam",{"_index":933,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["string",{"_index":319,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["string(count",{"_index":1517,"title":{},"body":{"components/AppComponent.html":{}}}],["structur",{"_index":736,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":737,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subalarm",{"_index":1381,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["subclass",{"_index":2899,"title":{},"body":{"license.html":{}}}],["subcompon",{"_index":1749,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["subscrib",{"_index":1809,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscript",{"_index":2414,"title":{},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscriptionlik",{"_index":2390,"title":{},"body":{"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["subsubtre",{"_index":731,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":2206,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":655,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":733,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtreeisempti",{"_index":734,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesful",{"_index":1631,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["succesfulli",{"_index":2459,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["success",{"_index":1681,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["successfulli",{"_index":2410,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["such",{"_index":1155,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["sudo",{"_index":2844,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":2948,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1392,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":1289,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":172,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":1258,"title":{},"body":{"modules/AntennasModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1394,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1393,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1391,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:111",{"_index":1806,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:15",{"_index":1397,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:18",{"_index":2704,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:22",{"_index":1810,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:25",{"_index":1407,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":2708,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:28",{"_index":1804,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:33",{"_index":1405,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":2706,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":1408,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:44",{"_index":2705,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:45",{"_index":1808,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:51",{"_index":2707,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:53",{"_index":1811,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:55",{"_index":1400,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:62",{"_index":1406,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:64",{"_index":1807,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:79",{"_index":1805,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antenna",{"_index":1257,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1799,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":2544,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":1306,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["supplement",{"_index":2890,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":2918,"title":{},"body":{"license.html":{}}}],["support",{"_index":280,"title":{},"body":{"components/AlarmCardComponent.html":{},"modules.html":{}}}],["svg",{"_index":2561,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1469,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpath",{"_index":2039,"title":{},"body":{"injectables/MapService.html":{}}}],["system",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.valu",{"_index":2461,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["tabl",{"_index":531,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table'},{'nam",{"_index":209,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["table.svg",{"_index":1497,"title":{},"body":{"components/AppComponent.html":{}}}],["table/table.compon",{"_index":2374,"title":{},"body":{"modules/TabularModule.html":{}}}],["tablecompon",{"_index":208,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2789,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":2248,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":2261,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":211,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":1607,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular",{"_index":1594,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular.modul",{"_index":1254,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{}}}],["tabularmodul",{"_index":1245,"title":{"modules/TabularModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":210,"title":{"components/TabularViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":2357,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["taken",{"_index":2940,"title":{},"body":{"license.html":{}}}],["target",{"_index":980,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["targetanimationst",{"_index":1086,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["td",{"_index":1382,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["temperatur",{"_index":2611,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tempimageset",{"_index":2578,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tempimageunreliableset",{"_index":2579,"title":{},"body":{"injectables/WeatherService.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":2934,"title":{},"body":{"license.html":{}}}],["term",{"_index":2888,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":2142,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["test",{"_index":2124,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"index.html":{}}}],["text",{"_index":279,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["th",{"_index":595,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this._getsubtree(childalarm",{"_index":732,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":721,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initi",{"_index":1297,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["this.acklist",{"_index":781,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":784,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.actionssidenavservice.canclos",{"_index":1504,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.clos",{"_index":1500,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1499,"title":{},"body":{"components/AppComponent.html":{}}}],["this.add_or_update_alarm(alarm",{"_index":1009,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarm",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.alarmvalu",{"_index":358,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["this.alarm.core_id",{"_index":352,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mod",{"_index":336,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelv",{"_index":334,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.showasmainten",{"_index":338,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.state_change_timestamp",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.valid",{"_index":348,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valu",{"_index":340,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm_id",{"_index":528,"title":{},"body":{"classes/AlarmConfig.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmchangestream.next(ani",{"_index":917,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmchangesubscript",{"_index":2434,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmchangesubscription.unsubscrib",{"_index":2443,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmconfig",{"_index":1813,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmconfig[0",{"_index":1814,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmiconspriorityset",{"_index":2367,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":2179,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":2180,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.alarmnamemaxs",{"_index":354,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["this.alarms.push(alarm",{"_index":2168,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.alarmsarray",{"_index":1062,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray.push(alarm",{"_index":1027,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[alarm.core_id",{"_index":1023,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[core_id",{"_index":963,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmservice.alarmchangestream",{"_index":2435,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1357,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":728,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":2470,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmconfig[0].alarm_id",{"_index":1815,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.alarm_id",{"_index":2570,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.getalarm(conf[0",{"_index":1413,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.getalarm(this.selectedantenna",{"_index":1359,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.getalarm(this.stationconfig",{"_index":2518,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{}}}],["this.alarmservice.getname(selectedantenna",{"_index":1367,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.getshelveregistries(this.alarm_id",{"_index":2478,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.initi",{"_index":1498,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.isalarmindexavail",{"_index":2439,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.shelvealarm",{"_index":2488,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":2494,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmsindex",{"_index":965,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsindexes[alarm.core_id",{"_index":1028,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":785,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1361,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":1313,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":1320,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasconfig",{"_index":1302,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasmapnam",{"_index":1311,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig",{"_index":1358,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.antennassummaryconfig",{"_index":1411,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.antennasservice.devicesconfig",{"_index":1360,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initi",{"_index":1356,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":1309,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.audio",{"_index":924,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.addeventlistener('end",{"_index":1047,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.load",{"_index":1050,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.paus",{"_index":1039,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.play",{"_index":1051,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.src",{"_index":1046,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.getallowedactions()['can_shelv",{"_index":2448,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.getallowedactions()['can_unshelv",{"_index":2450,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.gettoken",{"_index":953,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["this.authservice.getus",{"_index":1507,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.authservice.hasvalidtoken().pipe(map((respons",{"_index":1636,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.authservice.login",{"_index":2000,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginstatu",{"_index":921,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.loginstatusstream.subscrib",{"_index":913,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["this.authservice.logout",{"_index":1508,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.redirecturl",{"_index":1637,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["this.buildfiletree(tree_data",{"_index":702,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":746,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":2487,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.cansound",{"_index":923,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.getbroadcastthreshold",{"_index":1076,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.initi",{"_index":922,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms('al",{"_index":1014,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms(alarm.core_id",{"_index":1010,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changeloginstatus(fals",{"_index":1706,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.changeloginstatus(tru",{"_index":1718,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.check_request_and_reload",{"_index":2430,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":779,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":771,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":764,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descend",{"_index":769,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":777,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscrib",{"_index":678,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":782,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":778,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":770,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":776,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklogin(url",{"_index":1635,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.clearsoundsifack(alarm",{"_index":1033,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.clipboardservice.copyfromcontent(result",{"_index":2674,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.clos",{"_index":2341,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.connect",{"_index":925,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(fals",{"_index":1079,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(tru",{"_index":927,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.subscrib",{"_index":911,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustim",{"_index":1074,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustimer.unsubscrib",{"_index":1075,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.coord",{"_index":2564,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.countbyview",{"_index":1016,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.currenttim",{"_index":1048,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.custom_nam",{"_index":527,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["this.datasourc",{"_index":676,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.datasource.data",{"_index":701,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.dateformat",{"_index":583,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.definealarmsandicon",{"_index":1812,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":2175,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.destroy",{"_index":915,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.devicesconfig",{"_index":1304,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.disableanim",{"_index":1119,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1492,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.emitsound(alarm.sound",{"_index":1040,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.errormessag",{"_index":1993,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":758,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":2425,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').value).subscrib",{"_index":2495,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":2452,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":1998,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formgroup",{"_index":1997,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.password.valu",{"_index":2002,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.user.valu",{"_index":2001,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.generatealarmslist",{"_index":2169,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.get(alarm_id",{"_index":994,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(config.alarm_id",{"_index":967,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(id",{"_index":976,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmlist",{"_index":928,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmnam",{"_index":363,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.getantennas(stationconfig",{"_index":2672,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.getchildren",{"_index":673,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().subscribe((r",{"_index":1777,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getconnectionpath",{"_index":945,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.gethttphead",{"_index":1710,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["this.getlevel",{"_index":671,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmockalarm",{"_index":2167,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.getpadsstatus(group).subscrib",{"_index":2634,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getprioritytext",{"_index":812,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["this.gettoken",{"_index":1704,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettreedata",{"_index":700,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getus",{"_index":1520,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hidespinn",{"_index":2490,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":1858,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":1855,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(url",{"_index":1709,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.read_url(url",{"_index":1856,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(url",{"_index":1723,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(this.read_url(url",{"_index":1857,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(backendurls.weather_summary).subscribe((respons",{"_index":2640,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.httpclient.get(backendurls.weather_view).subscribe((respons",{"_index":2638,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.httpclient.get(summary_url).subscribe((respons",{"_index":1308,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["this.httpclient.get(url",{"_index":1312,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["this.httpclient.get(url).subscribe((respons",{"_index":1301,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(backendurls.users_list",{"_index":2503,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1781,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(url).pip",{"_index":984,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.post(backendurls.shelve_api",{"_index":991,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.tickets_multiple_ack",{"_index":974,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.unshelve_api",{"_index":997,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.humidityimageset",{"_index":2625,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.humidityimageunreliableset",{"_index":2629,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.iasconfigur",{"_index":1778,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(tru",{"_index":1780,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1817,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1821,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.initi",{"_index":914,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isexpand",{"_index":672,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isiniti",{"_index":920,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isnavigationcompact",{"_index":1506,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isvalidiasio(json",{"_index":1926,"title":{},"body":{"classes/Iasio.html":{}}}],["this.labelmod",{"_index":465,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.lastalarmid",{"_index":2344,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.loadalarmsconfig",{"_index":1298,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["this.loadimag",{"_index":1299,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["this.loadpadsstatu",{"_index":2623,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.loadweatherstationsconfig",{"_index":2622,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.loginstatu",{"_index":1702,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginstatusstream.next(statu",{"_index":1703,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logout",{"_index":1721,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.markerimageset",{"_index":2643,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.markerimageunreliableset",{"_index":2645,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.maticonregistri",{"_index":1490,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messag",{"_index":2421,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":2472,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.message.valu",{"_index":2485,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.nestednodemap.get(nod",{"_index":753,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":754,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":752,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":759,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.opensnackbar(messag",{"_index":2675,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.optionalalarmnam",{"_index":351,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["this.padsstatu",{"_index":2636,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.padsstatusavailable.next(fals",{"_index":2635,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.padsstatusavailable.next(tru",{"_index":2637,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.panelclicked.emit(this.selectedst",{"_index":2685,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.parammapsubscript",{"_index":2426,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.parammapsubscription.unsubscrib",{"_index":2441,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.password",{"_index":1996,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password.seterrors({'incorrect",{"_index":2010,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.play",{"_index":1049,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.playalarmsound(alarm",{"_index":1031,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessage(payload.act",{"_index":936,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessageslist(payload.data",{"_index":940,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readcountbyviewmessage(payload.data",{"_index":943,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.reload",{"_index":2433,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.removeallowedact",{"_index":1745,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removetoken",{"_index":1730,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeus",{"_index":1731,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.requestshelveinfo",{"_index":2471,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.requeststatu",{"_index":2457,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.resetcountbyview",{"_index":930,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.resettim",{"_index":935,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.route.parammap",{"_index":2427,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.router.navigate(['/login",{"_index":1639,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.router.navigate(['/tabular",{"_index":2265,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antenna",{"_index":2266,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weath",{"_index":2267,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([redirect",{"_index":2004,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([{outlet",{"_index":1501,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{}}}],["this.routing.gotoantenna",{"_index":1415,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweath",{"_index":2709,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1414,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.routingservice.cleanactionoutlet",{"_index":2340,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoacknowledge(alarm_id",{"_index":2343,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoshelve(alarm_id",{"_index":2346,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.selectedalarm",{"_index":684,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.alarm_id",{"_index":2700,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":1236,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm_id",{"_index":1366,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1362,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedst",{"_index":2530,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["this.selectedstation.placemark",{"_index":2683,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.seterrormessage(error",{"_index":2006,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.shelv",{"_index":2476,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shelvedatmessag",{"_index":2424,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shouldreload.next(tru",{"_index":2345,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.showactionbadg",{"_index":349,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.showspinn",{"_index":2484,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.showtextoptions.indexof(this.showtext",{"_index":811,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["this.sidenav",{"_index":2337,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.clos",{"_index":2339,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":2338,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggl",{"_index":2342,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavreloadsubscript",{"_index":2431,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavreloadsubscription.unsubscrib",{"_index":2442,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.canclos",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.closeandclean",{"_index":2444,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.gotoacknowledge(this.alarm.core_id",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.sidenavservice.gotoshelve(this.alarm.core_id",{"_index":2315,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.sidenavservice.open",{"_index":2436,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.shouldreload",{"_index":2432,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.s",{"_index":464,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["this.snackbar.open(messag",{"_index":2686,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.soundingalarm",{"_index":1038,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.spinnerservice.hid",{"_index":2005,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":1999,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.startanim",{"_index":1120,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.stationconfig.alarm_id",{"_index":2701,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.stopanim",{"_index":1124,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.storeallowedactions(allowed_act",{"_index":1717,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storetoken(token",{"_index":1728,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(user_data['usernam",{"_index":1716,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(usernam",{"_index":1729,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.targetanimationst",{"_index":1118,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.tempimageset",{"_index":2626,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.tempimageunreliableset",{"_index":2630,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.text",{"_index":466,"title":{},"body":{"components/AlarmComponent.html":{}}}],["this.timeout",{"_index":2422,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":2473,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.valu",{"_index":2486,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalu",{"_index":2462,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":2460,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].valu",{"_index":2405,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timezon",{"_index":585,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.treecontrol",{"_index":674,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":762,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":669,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.triggeralarmsnonvalidconnectionst",{"_index":912,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.unshelv",{"_index":2475,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":679,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.updatedata",{"_index":680,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.url",{"_index":2714,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.match(/^https?:\\/\\//i",{"_index":2715,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.us",{"_index":1994,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.user.seterrors({'incorrect",{"_index":2009,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user_select",{"_index":2489,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.userservice.requestuserslist",{"_index":1503,"title":{},"body":{"components/AppComponent.html":{}}}],["this.weathermapnam",{"_index":2632,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weatherservice.initi",{"_index":2671,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.weatherservice.padsstatu",{"_index":2676,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.padsstatus[stationconfig.group",{"_index":2678,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherstationsconfig",{"_index":2639,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weathersummaryconfig",{"_index":2641,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.websocketbridge.connect(connectionpath",{"_index":946,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.alarm",{"_index":931,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.count",{"_index":941,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.upd",{"_index":938,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.listen(connectionpath",{"_index":947,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.addeventlisten",{"_index":926,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.clos",{"_index":957,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.stream(streams.updates).send",{"_index":956,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.windsimageset",{"_index":2628,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.windsimageunreliableset",{"_index":2631,"title":{},"body":{"injectables/WeatherService.html":{}}}],["thorugh",{"_index":2241,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":2061,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["threshold",{"_index":1770,"title":{},"body":{"injectables/CdbService.html":{}}}],["through",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["ticket",{"_index":979,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["tile",{"_index":1082,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["tile'},{'nam",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tile.compon",{"_index":2302,"title":{},"body":{"modules/SharedModule.html":{}}}],["tile.component.html",{"_index":1084,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.scss",{"_index":1083,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.t",{"_index":1081,"title":{},"body":{"components/AlarmTileComponent.html":{},"coverage.html":{}}}],["tile.component.ts:107",{"_index":1107,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:135",{"_index":1105,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:151",{"_index":1109,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:158",{"_index":1111,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:166",{"_index":1106,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:19",{"_index":1093,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:24",{"_index":1098,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:29",{"_index":1100,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:35",{"_index":1102,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:40",{"_index":1094,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:45",{"_index":1101,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:50",{"_index":1103,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:55",{"_index":1104,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:60",{"_index":1097,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:65",{"_index":1115,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:70",{"_index":1114,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:75",{"_index":1113,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:80",{"_index":1092,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:92",{"_index":1108,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile/alarm",{"_index":1080,"title":{},"body":{"components/AlarmTileComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["tile/fixtures.t",{"_index":2762,"title":{},"body":{"coverage.html":{}}}],["time",{"_index":1169,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["timeout",{"_index":989,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["timeoutopt",{"_index":2382,"title":{"interfaces/TimeoutOption.html":{}},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timer",{"_index":906,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timer'",{"_index":1068,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timestamp",{"_index":883,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timezon",{"_index":573,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["titl",{"_index":1133,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["todo",{"_index":1488,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["togeth",{"_index":2941,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":193,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["toggledefault",{"_index":2203,"title":{},"body":{"components/MaterialToggleColorsComponent.html":{}}}],["toggleshelveunshelv",{"_index":2474,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1429,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":952,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["token_storage_nam",{"_index":1650,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar",{"_index":1528,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":312,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{}}}],["tooltip'},{'nam",{"_index":161,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tooltip.compon",{"_index":447,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"modules/SharedModule.html":{}}}],["tooltip.component.html",{"_index":1159,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":1158,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.t",{"_index":1145,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"coverage.html":{}}}],["tooltip.component.ts:32",{"_index":1161,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:37",{"_index":1162,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:40",{"_index":1164,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:43",{"_index":1160,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:54",{"_index":1163,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip/alarm",{"_index":446,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTooltipComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["tooltipdirect",{"_index":292,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/StatusViewComponent.html":{}}}],["tooltipdirectionopt",{"_index":1087,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["top",{"_index":386,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["top:0",{"_index":2702,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["transform",{"_index":378,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{}}}],["transit",{"_index":1121,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["transpar",{"_index":557,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":147,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":261,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":636,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":637,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":607,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":786,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":787,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":613,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":615,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":612,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":260,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.t",{"_index":2725,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":699,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":720,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":657,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":659,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":1782,"title":{},"body":{"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{}}}],["trigger",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["triggeralarmsnonvalidconnectionst",{"_index":1065,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["true",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["type1",{"_index":831,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type2",{"_index":832,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type3",{"_index":833,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type4",{"_index":834,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["typeof",{"_index":744,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unack",{"_index":1445,"title":{},"body":{"components/AppComponent.html":{}}}],["unblock",{"_index":2496,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["uncombin",{"_index":2965,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":743,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["under",{"_index":1064,"title":{},"body":{"classes/AlarmSounds.html":{},"index.html":{},"license.html":{}}}],["uniqu",{"_index":2501,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unit",{"_index":2862,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":455,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":1318,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["unreali",{"_index":1099,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["unreli",{"_index":333,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["unselect",{"_index":1350,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["unselectantenna",{"_index":1330,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselecteddescend",{"_index":768,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unset",{"_index":820,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{}}}],["unshelv",{"_index":2309,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unshelvealarms(alarms_id",{"_index":996,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["updat",{"_index":697,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AuthService.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["updateacklist",{"_index":780,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatedata",{"_index":698,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updateselectedantenna",{"_index":1230,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":1233,"title":{},"body":{"components/AntennasComponent.html":{}}}],["uppercas",{"_index":379,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{}}}],["url",{"_index":427,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WikiButtonComponent.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":2182,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["us",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":959,"title":{"interfaces/User.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{},"coverage.html":{},"license.html":{}}}],["user'",{"_index":2954,"title":{},"body":{"license.html":{}}}],["user.servic",{"_index":1792,"title":{},"body":{"modules/DataModule.html":{}}}],["user_data",{"_index":1713,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_select",{"_index":2407,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["user_storage_nam",{"_index":1651,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernam",{"_index":1454,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userservic",{"_index":1424,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"modules/DataModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalu",{"_index":1577,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":2910,"title":{},"body":{"license.html":{}}}],["v",{"_index":740,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":861,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["valid.svg",{"_index":1819,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["validators.requir",{"_index":1995,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validity.unreli",{"_index":1067,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["valu",{"_index":297,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.clear",{"_index":341,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_crit",{"_index":347,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":345,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":342,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":344,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":741,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["var",{"_index":141,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":1095,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["verbatim",{"_index":2886,"title":{},"body":{"license.html":{}}}],["veri",{"_index":2139,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["verifi",{"_index":1615,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["version",{"_index":2828,"title":{},"body":{"index.html":{},"license.html":{}}}],["vertic",{"_index":476,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["via",{"_index":2863,"title":{},"body":{"index.html":{}}}],["view",{"_index":508,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":207,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":1596,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":2349,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":2350,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.scss",{"_index":2377,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.t",{"_index":2348,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":2378,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:19",{"_index":2354,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:22",{"_index":2358,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.ts:25",{"_index":2366,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:28",{"_index":2364,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":2365,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":2363,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:40",{"_index":2355,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:45",{"_index":2353,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:55",{"_index":2360,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:62",{"_index":2359,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view/statu",{"_index":2300,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1595,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["viewbox",{"_index":1198,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{}}}],["viewchild",{"_index":1480,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1462,"title":{},"body":{"components/AppComponent.html":{}}}],["viewvalu",{"_index":2385,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["visibl",{"_index":483,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["visual",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":2055,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["weather",{"_index":213,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'nam",{"_index":217,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":2523,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":2522,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":2517,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1495,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.compon",{"_index":2546,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.modul",{"_index":1575,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.compon",{"_index":1597,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["weather_st",{"_index":2644,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weatherbackupwsmarkercompon",{"_index":212,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercompon",{"_index":216,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercompon",{"_index":218,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":2521,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcompon",{"_index":220,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermapnam",{"_index":2580,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weathermodul",{"_index":1560,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcompon",{"_index":221,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercompon",{"_index":224,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservic",{"_index":2509,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherset",{"_index":2621,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["weathersettings.mapkey",{"_index":2613,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weathersidebar",{"_index":2520,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcompon",{"_index":225,"title":{"components/WeatherSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherstationsconfig",{"_index":2581,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weatherstationsidebarcompon",{"_index":226,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":228,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummaryconfig",{"_index":2582,"title":{},"body":{"injectables/WeatherService.html":{}}}],["webkit",{"_index":1135,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["webserv",{"_index":881,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["websocket",{"_index":882,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websocketbridg",{"_index":856,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websver",{"_index":2608,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weight",{"_index":367,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["well",{"_index":2140,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["wether",{"_index":305,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatev",{"_index":2926,"title":{},"body":{"license.html":{}}}],["whenev",{"_index":682,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["whether",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["white",{"_index":1179,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["width",{"_index":126,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["width:100",{"_index":369,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["width:20px",{"_index":381,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["wikbuttoncompon",{"_index":1750,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["wiki",{"_index":230,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncompon",{"_index":229,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wind",{"_index":2618,"title":{},"body":{"injectables/WeatherService.html":{}}}],["wind_spe",{"_index":2642,"title":{},"body":{"injectables/WeatherService.html":{}}}],["window",{"_index":2713,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":2716,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["windsimageset",{"_index":2583,"title":{},"body":{"injectables/WeatherService.html":{}}}],["windsimageunreliableset",{"_index":2584,"title":{},"body":{"injectables/WeatherService.html":{}}}],["windspe",{"_index":2627,"title":{},"body":{"injectables/WeatherService.html":{}}}],["without",{"_index":2914,"title":{},"body":{"license.html":{}}}],["word",{"_index":1182,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":2894,"title":{},"body":{"license.html":{}}}],["worth",{"_index":2235,"title":{},"body":{"modules/OverviewModule.html":{}}}],["wrap",{"_index":1181,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["wrapper",{"_index":1530,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewCardComponent.html":{}}}],["wrong",{"_index":2264,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":215,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":603,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":441,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["y",{"_index":602,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["yellow",{"_index":343,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":2845,"title":{},"body":{"index.html":{}}}],["z",{"_index":1128,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/OverviewCardComponent.html":{}}}],["zero",{"_index":1516,"title":{},"body":{"components/AppComponent.html":{},"components/LegendComponent.html":{}}}],["zone.j",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":248,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ./ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers ack sidenav through the Router service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:28\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @return {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  canAcknowledge(): boolean {\n    if (this.alarm != null && this.alarm.state_change_timestamp > 0) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.sidenavService.canClose || !this.canAcknowledge();\n  }\n\n  /**\n  * Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n  */\n  onClick() {\n    this.sidenavService.goToAcknowledge(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./ack-button.component.css\n                \n                .ack-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 2px;\n  margin-right: 4px;\n  margin-left: 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.ack-button-icon {\n  width: 21px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AckButtonComponent\n                        \n                        \n                            AckComponent\n                        \n                        \n                            AckTreeComponent\n                        \n                        \n                            ButtonsComponent\n                        \n                        \n                            ShelveButtonComponent\n                        \n                        \n                            ShelveComponent\n                        \n                        \n                            WikiButtonComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SidenavService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AckButtonComponent\n                        \n                        \n                            AckComponent\n                        \n                        \n                            ButtonsComponent\n                        \n                        \n                            ShelveButtonComponent\n                        \n                        \n                            ShelveComponent\n                        \n                        \n                            WikiButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmCardComponent.html":{"url":"components/AlarmCardComponent.html","title":"component - AlarmCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-card/alarm-card.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as cards with text support for the\npriority of the alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-card\n            \n\n            \n                styleUrls\n                ./alarm-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                getPriorityText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-card/alarm-card.component.ts:39\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriorityText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriorityText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Returns a string related to the name of the alarm priority\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    alarm prioritity name for the display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as cards with text support for the\n * priority of the alarm\n */\n@Component({\n  selector: 'app-alarm-card',\n  templateUrl: './alarm-card.component.html',\n  styleUrls: ['./alarm-card.component.scss']\n})\nexport class AlarmCardComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('alarm-card-blue');\n      result.push('alarm-card-unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('alarm-card-green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('alarm-card-blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('alarm-card-gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('alarm-card-green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('alarm-card-yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('alarm-card-yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('alarm-card-red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('alarm-card-red');\n    } else {\n      result.push('alarm-card-blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('alarm-card-unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n  /**\n  * Returns a string related to the name of the alarm priority\n  * @returns {string} alarm prioritity name for the display\n  */\n  getPriorityText(): string {\n    const alarmValue: string = this.alarm.alarmValue;\n    const priorityText: string = alarmValue\n      .replace('cleared', '')\n      .replace('set_', '');\n    return priorityText.toUpperCase();\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n      {{this.getAlarmName()}}\n      \n        \n      \n    \n    \n\n      \n\n        \n        \n          \n        \n        \n          \n        \n\n        \n        \n          \n        \n        \n          \n        \n\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./alarm-card.component.scss\n                \n                .alarm-card {\n\n  display:block;\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 4px;\n  font-weight: normal;\n\n  width:100%;\n  min-height: 60px;\n  width: 84.5px;\n  height:60px;\n  margin-bottom:15px;\n  line-height: normal;\n\n  .alarm-card-content {\n    height:100%;\n    padding:10px 4px;\n    .alarm-name {}\n    .alarm-priority {\n      font-size:10px;\n      text-transform: uppercase;\n      padding: 2px 0px;\n    }\n  }\n\n  .alarm-card-badges {\n    height:100%;\n    max-width:20px;\n    margin-right:4%;\n    position: relative;\n\n    .badges {\n      .badge-icon {\n        position: absolute;\n        &.ack-icon { top: 16%; }\n        &.shelve-icon { bottom: 12%; }\n      }\n      .badge-off {\n        opacity: 0.08;\n      }\n    }\n\n  }\n\n}\n\n.alarm-card-green {\n}\n\n.alarm-card-yellow {\n  font-weight: bold;\n}\n\n.alarm-card-red {\n  font-weight: bold;\n}\n\n.alarm-card-gray {\n  font-weight: bold;\n}\n\n.alarm-card-blue {\n  font-weight: bold;\n}\n\n.alarm-card-unreliable {\n  font-weight: normal;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{this.getAlarmName()}}                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                ./alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                labelLocationOptions\n                            \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getImage\n                            \n                            \n                                getTextClass\n                            \n                            \n                                isTextAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                            \n                                showPriorityLevelText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                labelLocation\n                            \n                            \n                                labelMode\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:110\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelLocation\n                    \n                    \n                        Defines the direction of the label\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:100\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelMode\n                    \n                    \n                        Defines wether or not the component will display the text of the label\nwith the alarm priority\n\n                        \n                            Default value : 'text'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:85\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:79\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:90\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                    \n                        Alarm object associated to the component\n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:95\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            Returns the style class name based on the optional input size. By default\nthe class is medium size.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    style class name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:142\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    url of the image\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:175\n                            \n                        \n\n\n                \n                    \n                            Returns the class to be used to display the text\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    list of css classes\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTextAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nisTextAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:214\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed as a text alarm or as an icon alarm\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:222\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the pending ack badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the pending ack must be activated, false if it must not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:230\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the shelve badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the alarm is shelved, false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showPriorityLevelText\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowPriorityLevelText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:238\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm should display the priority text in the related label\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if mode is 'text' else False\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            labelLocationOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        labelLocationOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['right', 'bottom']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:110\n                            \n                        \n\n                \n                    \n                        Available locations for the label component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:105\n                            \n                        \n\n                \n                    \n                        Available sizes for the alarm componet\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AlarmTooltipComponent } from '../alarm-tooltip/alarm-tooltip.component';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines wether or not the component will display the text of the label\n   * with the alarm priority\n   */\n  @Input() labelMode = 'text';\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Defines the direction of the label\n   */\n  @Input() labelLocation = 'right';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n   * Available locations for the label component\n   */\n  private labelLocationOptions = ['right', 'bottom'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  0;\n  }\n\n  /**\n   * Check if the alarm must be displayed with the shelve badge activated\n   * @return {boolean} True if the alarm is shelved, false if it is not\n   */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n   * Check if the alarm should display the priority text in the related label\n   * @return {boolean} True if mode is 'text' else False\n   */\n   showPriorityLevelText(): boolean {\n     if (this.labelMode === 'text') {\n       return true;\n     } else if (this.labelMode === 'line') {\n       return false;\n     } else {\n       return false;\n     }\n   }\n\n}\n\n    \n\n    \n         \n\n\n\n  \n    \n      \n    \n\n    \n\n       \n\n      \n        \n          {{this.text}}\n        \n      \n\n      \n        \n          \n        \n      \n\n      \n        \n      \n\n    \n\n    \n      \n      \n        \n      \n      \n        \n      \n\n      \n      \n        \n      \n      \n        \n      \n    \n\n  \n\n\n\n\n\n\n\n  \n    \n      \n    \n\n     \n    \n      \n    \n\n    \n      \n        {{this.text}}\n      \n    \n\n    \n      \n        \n      \n    \n\n    \n      \n      \n        \n      \n      \n        \n      \n\n      \n      \n        \n      \n      \n        \n      \n    \n\n    \n      \n    \n\n  \n\n\n\n\n    \n\n    \n                \n                    ./alarm.component.scss\n                \n                $cem: 1px;\n$xs-cem: 1*$cem;\n$sm-cem: 1.2*$cem;\n$md-cem: 1.6*$cem;\n$lg-cem: 3.0*$cem;\n$status-cem: 1*$cem;\n\n.alarm-component {\n\n  .alarm-label-container {\n    padding-left: 6px;\n    &.bottom {\n      margin: auto;\n      padding:0;\n      line-height: 0;\n    }\n  }\n\n  .icon {\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n    padding-right: 6%;\n\n    .alarm-icon{\n      height: 100%;\n    }\n\n  }\n\n  .text {\n    width: 100%;\n    vertical-align: middle;\n    height: 100%;\n    padding-right: 6%;\n  }\n\n  .badges{\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n    min-width: 12px;\n\n    .badge-icon{\n      width: 100%;\n\n      &.ack-icon{\n        margin-top: 6%;\n      }\n\n      &.shelve-icon{\n        margin-bottom: 6%;\n      }\n\n      &.badge-off{\n        opacity: 0.08;\n      }\n    }\n\n    &.hidden {\n      visibility: hidden;\n    }\n  }\n\n}\n\n.alarm-component-xs {\n  @extend .alarm-component;\n  height: 19*$xs-cem;\n  line-height: 19*$xs-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$xs-cem;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n\n}\n\n.alarm-component-sm {\n  @extend .alarm-component;\n  height: 19*$sm-cem;\n  line-height: 19*$sm-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$sm-cem;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n\n}\n\n.alarm-component-md {\n  @extend .alarm-component;\n  height: 19*$md-cem;\n  line-height: 19*$md-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$md-cem;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n}\n\n.alarm-component-lg {\n  @extend .alarm-component;\n  height: 19*$lg-cem;\n  line-height: 19*$lg-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$lg-cem;\n    margin-left: 10px;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.24em;\n    }\n  }\n}\n\n.alarm-component-status {\n  @extend .alarm-component;\n  height: 19*$status-cem;\n  line-height: 19*$status-cem;\n\n  .badges{\n    @extend .badges;\n    width: 11*$status-cem;\n\n    .badge-icon{\n      @extend .badge-icon;\n\n      &.ack-icon{\n        @extend .ack-icon;\n        margin-top: 0;\n      }\n\n      &.shelve-icon{\n        @extend .shelve-icon;\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{this.text}}                                                                                                                                                                                                                                       {{this.text}}                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmConfig.html":{"url":"classes/AlarmConfig.html","title":"class - AlarmConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm-config.ts\n        \n\n            \n                Description\n            \n            \n                Stores the displaying configuration of an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm_id\n                            \n                            \n                                    Public\n                                children\n                            \n                            \n                                    Public\n                                custom_name\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/alarm-config.ts:25\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:7\n                            \n                        \n\n                \n                    \n                        ID of the associated Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:19\n                            \n                        \n\n                \n                    \n                        List of children Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            custom_name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        custom_name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:10\n                            \n                        \n\n                \n                    \n                        Custom name to display the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:25\n                            \n                        \n\n                \n                    \n                        Group of the alarm, in order to classify it for views that require some sort of classification of Alarms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:22\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to a location on a map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:13\n                            \n                        \n\n                \n                    \n                        Type associated to the Alarm, used to decide how to display the alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:16\n                            \n                        \n\n                \n                    \n                        View where the alarm is displayed Alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm-config.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class AlarmConfig {\n\n  /** ID of the associated {@link Alarm} */\n  public alarm_id: string;\n\n  /** Custom name to display the {@link Alarm} */\n  public custom_name: string;\n\n  /** Type associated to the {@link Alarm}, used to decide how to display the alarm */\n  public type: string;\n\n  /** View where the alarm is displayed {@link Alarm} */\n  public view: string;\n\n  /** List of children {@link Alarm} */\n  public children = [];\n\n  /** ID to map the {@link Alarm} to a location on a map */\n  public placemark: string;\n\n  /** Group of the alarm, in order to classify it for views that require some sort of classification of {@link Alarm}s */\n  public group: string;\n\n  /**\n  * Builds a new AlarmConfig instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  public get name(): string {\n    if (this.custom_name) {\n      return this.custom_name;\n    } else {\n      return this.alarm_id;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as headers in a table or list\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                ./alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:38\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as headers in a table or list\n */\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  \n    \n        {{this.getAlarmName()}}\n    \n    \n      \n    \n  \n\n\n  \n    \n\n      \n      \n        \n      \n      \n        \n      \n\n      \n      \n        \n      \n      \n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./alarm-header.component.scss\n                \n                .alarm-header-container {\n  height: 100%;\n}\n\n.alarm-header-color {\n  height: 100%;\n  width: 10px;\n  border-radius: 4px 0px 0px 4px;\n  margin-right: 10px;\n  display: flex;\n}\n\n.alarm-header-name {\n  padding-top: 20px;\n  padding-right: 4px;\n}\n\n.alarm-header-badges {\n  position: relative;\n  margin: 12px 0 12px 0px;\n}\n\n.badges{\n\n  .badge-icon{\n    position: absolute;\n    height: 35%;\n    left: 106%;\n  }\n\n  .ack-icon{\n    top: 2%;\n  }\n\n  .shelve-icon{\n    bottom: 2%;\n  }\n\n  .badge-off{\n    opacity: 0.08;\n  }\n}\n\n.green {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.yellow {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.red {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.gray {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.blue {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.unreliable {\n  background: transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{this.getAlarmName()}}                                                                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:31\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:10\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:28\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:22\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:19\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:13\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:31\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:25\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AlarmTooltipComponent } from '../alarm-tooltip/alarm-tooltip.component';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines wether or not the component will display the text of the label\n   * with the alarm priority\n   */\n  @Input() labelMode = 'text';\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Defines the direction of the label\n   */\n  @Input() labelLocation = 'right';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n   * Available locations for the label component\n   */\n  private labelLocationOptions = ['right', 'bottom'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  0;\n  }\n\n  /**\n   * Check if the alarm must be displayed with the shelve badge activated\n   * @return {boolean} True if the alarm is shelved, false if it is not\n   */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n   * Check if the alarm should display the priority text in the related label\n   * @return {boolean} True if mode is 'text' else False\n   */\n   showPriorityLevelText(): boolean {\n     if (this.labelMode === 'text') {\n       return true;\n     } else if (this.labelMode === 'line') {\n       return false;\n     } else {\n       return false;\n     }\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmInfoComponent.html":{"url":"components/AlarmInfoComponent.html","title":"component - AlarmInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-info/alarm-info.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display general information about an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-info\n            \n\n            \n                styleUrls\n                ./alarm-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateFormat\n                            \n                            \n                                    Public\n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-info/alarm-info.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:21\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm} from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n * Component used to display general information about an alarm\n */\n@Component({\n  selector: 'app-alarm-info',\n  templateUrl: './alarm-info.component.html',\n  styleUrls: ['./alarm-info.component.scss']\n})\nexport class AlarmInfoComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /** String to store the formatting of dates, read form the settings */\n  public dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  public timezone: string;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Alarm ID\n      {{alarm?.core_id}}\n    \n    \n      Description\n      {{alarm?.description}}\n    \n    \n      Last Change\n      {{alarm?.timestamp | date: dateFormat: timezone}}\n    \n    \n      Last Properties\n      {{alarm?.formattedProperties}}\n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-info.component.scss\n                \n                .section {\n  padding: 24px 0px 10px 0px;\n\n  &.alarm-info {\n    table {\n      vertical-align: top;\n      width: 450px;\n    }\n\n    th {\n      padding-right: 16px;\n      font-weight: normal;\n      vertical-align: top;\n      width: 120px;\n    }\n\n    pre {\n      padding-top: 3px;\n      font-size: 90%;\n      overflow-y: auto;\n      overflow-x: auto;\n      margin: 0px;\n      max-width: 330px;\n      max-height: 400px;\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Alarm ID      {{alarm?.core_id}}              Description      {{alarm?.description}}              Last Change      {{alarm?.timestamp | date: dateFormat: timezone}}              Last Properties      {{alarm?.formattedProperties}}      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output, SimpleChanges, SimpleChange } from '@angular/core';\nimport { OnInit, OnChanges } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe( () => {\n      this.updateAckList();\n    });\n    this.updateData();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whenever the alarm changes)\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedAlarm) {\n      if (changes.selectedAlarm.previousValue) {\n        const alarm: SimpleChange = changes.selectedAlarm;\n        const prevAlarmCoreID = alarm.previousValue.core_id;\n        const currentAlarmCoreID = alarm.currentValue.core_id;\n        const prevDependenciesString = alarm.previousValue.dependencies.sort().join();\n        const currentDependenciesString = alarm.currentValue.dependencies.sort().join();\n        const dependenciesChange = (prevDependenciesString !== currentDependenciesString);\n        const coreIDChange = (prevAlarmCoreID !== currentAlarmCoreID);\n        if ((coreIDChange === true) || (dependenciesChange === true)) {\n          this.updateData();\n        }\n      } else {\n        this.updateData();\n      }\n    }\n  }\n\n\n  /**\n   * Update the data for the dataSource\n   */\n  updateData() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {any}  the tree data in a JSON format\n   */\n  getTreeData(): any {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {any}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm): any {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    const subTreeIsEmpty = Object.keys(subTree).length === 0;\n    if ( subTreeIsEmpty ) {\n      return null;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {AlarmItemNode[]} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number): AlarmItemNode[] {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {AlarmItemFlatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode: any;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output, SimpleChanges, SimpleChange } from '@angular/core';\nimport { OnInit, OnChanges } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe( () => {\n      this.updateAckList();\n    });\n    this.updateData();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whenever the alarm changes)\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedAlarm) {\n      if (changes.selectedAlarm.previousValue) {\n        const alarm: SimpleChange = changes.selectedAlarm;\n        const prevAlarmCoreID = alarm.previousValue.core_id;\n        const currentAlarmCoreID = alarm.currentValue.core_id;\n        const prevDependenciesString = alarm.previousValue.dependencies.sort().join();\n        const currentDependenciesString = alarm.currentValue.dependencies.sort().join();\n        const dependenciesChange = (prevDependenciesString !== currentDependenciesString);\n        const coreIDChange = (prevAlarmCoreID !== currentAlarmCoreID);\n        if ((coreIDChange === true) || (dependenciesChange === true)) {\n          this.updateData();\n        }\n      } else {\n        this.updateData();\n      }\n    }\n  }\n\n\n  /**\n   * Update the data for the dataSource\n   */\n  updateData() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {any}  the tree data in a JSON format\n   */\n  getTreeData(): any {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {any}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm): any {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    const subTreeIsEmpty = Object.keys(subTree).length === 0;\n    if ( subTreeIsEmpty ) {\n      return null;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {AlarmItemNode[]} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number): AlarmItemNode[] {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {AlarmItemFlatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode: any;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmLabelComponent.html":{"url":"components/AlarmLabelComponent.html","title":"component - AlarmLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-label/alarm-label.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display a label related to the alarm priority\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-label\n            \n\n            \n                styleUrls\n                ./alarm-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                noPaddingOptions\n                            \n                            \n                                showTextOptions\n                            \n                            \n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getPriorityText\n                            \n                            \n                                getPriorityTextClass\n                            \n                            \n                                getSizeClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                noPadding\n                            \n                            \n                                showText\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-label/alarm-label.component.ts:48\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noPadding\n                    \n                    \n                        Defines the direction of the label\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showText\n                    \n                    \n                        Defines if the priority text should be displayed (if set state for the alarm)\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Size options\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriorityText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriorityText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Returns a string related to the name of the alarm priority\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    alarm prioritity name for the display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriorityTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriorityTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSizeClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSizeClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noPaddingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noPaddingOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:43\n                            \n                        \n\n                \n                    \n                        Padding Options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTextOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showTextOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:38\n                            \n                        \n\n                \n                    \n                        Show text options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:48\n                            \n                        \n\n                \n                    \n                        Size Options\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../../data/alarm';\n\n\n/**\n * Component used to display a label related to the alarm priority\n */\n@Component({\n  selector: 'app-alarm-label',\n  templateUrl: './alarm-label.component.html',\n  styleUrls: ['./alarm-label.component.scss']\n})\nexport class AlarmLabelComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n  * Size options\n  */\n  @Input() size = 'md';\n\n  /**\n  * Defines if the priority text should be displayed (if set state for the alarm)\n  */\n  @Input() showText = true;\n\n  /**\n   * Defines the direction of the label\n   */\n  @Input() noPadding = false;\n\n  /**\n  * Show text options\n  */\n  showTextOptions = [true, false];\n\n  /**\n  * Padding Options\n  */\n  noPaddingOptions = [true, false];\n\n  /**\n  * Size Options\n  */\n  sizeOptions = ['xs', 'sm', 'md', 'lg'];\n\n  /**\n  * Builds a new instance\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.showTextOptions.indexOf(this.showText) \n    \n\n    \n        \n  \n    {{this.getPriorityText()}}\n  \n\n\n    \n\n    \n                \n                    ./alarm-label.component.scss\n                \n                $cem: 10px;\n$xs-cem: 0.8*$cem;\n$sm-cem: 1.0*$cem;\n$md-cem: 1.4*$cem;\n$lg-cem: 1.4*$cem;\n\n.no-padding {\n  padding: 0 !important;\n}\n\n.hide-label {\n  visibility: hidden;\n  border: 1px solid red;\n}\n\n.priority-text {\n  margin: auto;\n  font-weight: bold;\n  &.hide-text {\n    visibility: hidden;\n    line-height: 0.2em !important;\n  }\n}\n\n.unreliable {\n  padding: 2px 2px !important;\n}\n\n.alarm-label {\n  text-transform: uppercase;\n  line-height: 1em;\n  display: inline-flex;\n\n  &.hide-text {\n    line-height: 0.2em;\n  }\n\n  .alarm-label-content {\n    border-radius: 2px;\n    padding: 2px 2px;\n    text-align: center;\n  }\n\n}\n\n.alarm-label-xs {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $xs-cem;\n    &.hide-text {\n      width: 16px;\n    }\n  }\n}\n\n.alarm-label-sm {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $sm-cem;\n    min-width: 40px;\n    &.hide-text {\n      min-width: unset;\n      width: 20px !important;\n    }\n  }\n}\n\n.alarm-label-md {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $md-cem;\n    min-width: 78px;\n    &.hide-text {\n      min-width: unset;\n      width: 30px !important;\n    }\n  }\n}\n\n.alarm-label-lg {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $lg-cem;\n    &.hide-text {\n      width: 40px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{this.getPriorityText()}}  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmSounds.html":{"url":"classes/AlarmSounds.html","title":"class - AlarmSounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmSounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.service.ts\n        \n\n            \n                Description\n            \n            \n                Class used to model the different sound options and their corresponding audio files\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                none\n                            \n                            \n                                    Static\n                                type1\n                            \n                            \n                                    Static\n                                type2\n                            \n                            \n                                    Static\n                                type3\n                            \n                            \n                                    Static\n                                type4\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSoundsource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            none\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        none:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:21\n                            \n                        \n\n                \n                    \n                        This is the type for alarms with no sound \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_1.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:24\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE1 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_2.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:27\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE2 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type3:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_3.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:30\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE3 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type4:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_4.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:33\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE4 \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getSoundsource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSoundsource(sound: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Given a sound type, retruns the associated audiofile\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sound\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The sound type, e.g. TYPE1, TYPE2, etc.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the filepath of the corresponding audio file\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { interval } from 'rxjs';\nimport { WebSocketBridge } from 'django-channels';\nimport { environment } from '../../environments/environment';\nimport { Alarm, Validity, Value } from '../data/alarm';\nimport { AlarmConfig } from '../data/alarm-config';\nimport { BackendUrls, Streams, Assets } from '../settings';\nimport { CdbService } from '../data/cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { AuthService } from '../auth/auth.service';\n\n\n/**\n* Class used to model the different sound options and their corresponding audio files\n*/\nexport class AlarmSounds {\n\n  /** This is the type for alarms with no sound */\n  static none = '';\n\n  /** The name of the audio file associated to the sound TYPE1 */\n  static type1 = 'Alarm_Sound_1.mp3';\n\n  /** The name of the audio file associated to the sound TYPE2 */\n  static type2 = 'Alarm_Sound_2.mp3';\n\n  /** The name of the audio file associated to the sound TYPE3 */\n  static type3 = 'Alarm_Sound_3.mp3';\n\n  /** The name of the audio file associated to the sound TYPE4 */\n  static type4 = 'Alarm_Sound_4.mp3';\n\n  /**\n  * Given a sound type, retruns the associated audiofile\n  * @param {string} sound The sound type, e.g. TYPE1, TYPE2, etc.\n  * @returns {string} the filepath of the corresponding audio file\n  */\n  static getSoundsource(sound: string): string {\n    if (sound === 'TYPE1') {\n      return Assets.SOUNDS + AlarmSounds.type1;\n    } else if (sound === 'TYPE2') {\n      return Assets.SOUNDS + AlarmSounds.type2;\n    } else if (sound === 'TYPE3') {\n      return Assets.SOUNDS + AlarmSounds.type3;\n    } else if (sound === 'TYPE4') {\n      return Assets.SOUNDS + AlarmSounds.type4;\n    }\n    return null;\n  }\n}\n\n/**\n* Service that connects and receives {@link Alarm} messages from the\n* IAS Webserver through Websockets\n*/\n@Injectable()\nexport class AlarmService {\n\n  /**\n  * Timestamp related with the last received message\n  */\n  public lastReceivedMessageTimestamp: number = (new Date).getTime();\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public connectionStatusStream = new BehaviorSubject(false);\n\n  /**\n  * Array of {@link Alarm} objects\n  */\n  public alarmsArray: Alarm[] = [];\n\n  /**\n  * Index for the alarmsArray { core_id: arrayIndex }\n  */\n  public alarmsIndexes: {[core_id: string]: number} = {};\n\n  /**\n  * Stream of notifications of changes in\n  * the dictionary of {@link Alarm} objects\n  */\n  public alarmChangeStream = new BehaviorSubject(true);\n\n  /**\n  * Django Channels WebsocketBridge,\n  * used to connect to Django Channels through Websockets\n  */\n  public webSocketBridge: WebSocketBridge = new WebSocketBridge();\n\n  /**\n  * Defines wether or not the display should emit sounds when alarms are triggered.\n  * It is used to avoid sounds when the page is refreshed, and only allow them after that\n  */\n  public canSound: boolean;\n\n  /**\n  * Reference to the audio object used to play the sounds\n  */\n  public audio = new Audio();\n\n  /**\n  * Id of the currenlty sounding Alarm\n  */\n  public soundingAlarm: string;\n\n  /**\n  * Defines wether or not the service is initialized\n  */\n  public isInitialized = false;\n\n  /**\n  * Information about the count of alarms by view\n  */\n  public countByView = {};\n\n  /**\n  * Connection status timer\n  */\n  public connectionStatusTimer: any;\n\n  /**\n   * Builds an instance of the service\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   * @param {AuthService} authService Service used for authentication\n   */\n  constructor(\n    private cdbService: CdbService,\n    private httpClientService: HttpClientService,\n    private authService: AuthService,\n  ) {\n    this.connectionStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.triggerAlarmsNonValidConnectionState();\n        }\n      }\n    );\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === true) {\n          this.initialize();\n        } else {\n          this.destroy();\n        }\n      }\n    );\n  }\n\n  /**\n  * Sends an {@link Alarm} change event\n  *\n  * @param {Any} any the core_id of the updated alarm,\n  * or 'all' if all were updated\n  */\n  changeAlarms(any: any) {\n    this.alarmChangeStream.next(any);\n  }\n\n  /******* SERVICE INITIALIZATION *******/\n\n  /**\n  * Start connection to the backend through websockets\n  */\n  initialize() {\n    if (this.isInitialized || !this.authService.loginStatus) {\n      return;\n    }\n    this.cdbService.initialize();\n    this.isInitialized = true;\n    this.canSound = false;\n    this.audio = new Audio();\n    this.connect();\n    this.webSocketBridge.socket.addEventListener(\n      'open', () => {\n        this.connectionStatusStream.next(true);\n        this.getAlarmList();\n      }\n    );\n    this.webSocketBridge.socket.addEventListener(\n      'close', () => {\n        this.resetCountByView();\n      }\n    );\n    this.webSocketBridge.demultiplex(Streams.ALARMS, (payload: any, streamName: any) => {\n      // console.log('notify ', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessage(payload.action, payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.UPDATES, (payload: any, streamName: any) => {\n      // console.log('request', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessagesList(payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.COUNTER, (payload: any, streamName: any) => {\n      // console.log('counter ', payload);\n      if (this.authService.loginStatus) {\n        this.readCountByViewMessage(payload.data);\n      }\n    });\n  }\n\n  /**\n  *  Start connection to the backend through websockets\n  */\n  connect() {\n    const connectionPath = this.getConnectionPath();\n    this.webSocketBridge.connect(connectionPath);\n    this.webSocketBridge.listen(connectionPath);\n    console.log('Connected to webserver at: ' + environment.websocketPath);\n  }\n\n  /**\n  *  Connection path using authentication data\n  */\n  getConnectionPath() {\n    return environment.websocketPath + '?token=' + this.authService.getToken();\n  }\n\n  /**\n  *  Disconnect from the backend\n  */\n  destroy() {\n    // Close connection\n    if (this.isInitialized) {\n      this.webSocketBridge.stream(Streams.UPDATES).send({\n        'action': 'close'\n      });\n      this.webSocketBridge.socket.close(\n        1000, 'User logout', {keepClosed: true});\n      this.resetCountByView();\n    }\n    this.isInitialized = false;\n    console.log('Connection to webserver closed');\n  }\n\n  /******* ALARM HANDLING *******/\n\n  /**\n   * Returns an Alarm object\n   * @param core_id core_id of the Alarm to return\n   * @returns {Alarm} Alarm object corresponding to the given core_id\n   */\n  get(core_id: string): Alarm {\n    return this.alarmsArray[this.alarmsIndexes[core_id]] as Alarm;\n  }\n\n  /**\n   * Returns a boolean to check if there is information available about an alarm\n   * @param core_id core_id of the Alarm\n   * @returns {boolean} true if there is information about the alarm\n   */\n  isAlarmIndexAvailable(core_id: string): boolean {\n    return (core_id in this.alarmsIndexes);\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm} associated to a given {@link AlarmConfig}\n  * @param {AlarmConfig} config the corresponding AlarmConfig from where to get the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm} associated to the given {@link AlarmConfig}\n  */\n  getAlarm(config: AlarmConfig): Alarm {\n    if (config) {\n      return this.get(config.alarm_id);\n    }\n  }\n\n  /**\n  * Returns the custom_name of the {@link Alarm} given a corresponding {@link AlarmConfig}.\n  * If there is no custom_name, it returns the alarm_id\n  * @param {AlarmConfig} config the corresponding AlarmConfig from where to get the {@link Alarm}\n  * @returns {string} the name associated to the given {@link AlarmConfig}\n  */\n  getName(config: AlarmConfig): string {\n    if (config) {\n      if (config.custom_name) {\n        return config.custom_name;\n      } else {\n        return config.alarm_id;\n      }\n    }\n  }\n\n  /**\n   * Acknowledges a list of Alarms with a message\n   * @param {string[]} alarm_ids list of ids of the alarms to acknowledge\n   * @param {string} message message of the acknowledgement\n   * @param {string} user user that performs the acknowledgement\n   * @returns {json} response of the HTTP request of the acknowledge\n   */\n  acknowledgeAlarms(alarms_ids: string[], message: string, user: string): any {\n    const data = {\n      'alarms_ids': alarms_ids,\n      'message': message,\n      'user': user\n    };\n    return this.httpClientService.put(BackendUrls.TICKETS_MULTIPLE_ACK, data).pipe(\n    map(\n      (response) => {\n        for (const id of alarms_ids) {\n          const alarm = this.get(id);\n          alarm.acknowledge();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Get information about old tickets related to a target alarm\n   * @param alarm_id id of the target alarm\n   * @returns {any[]} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getMissingAcks(alarm_id: string) {\n    const url = BackendUrls.TICKETS_INFO + '?alarm_id=' + alarm_id;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Gets the open {@link ShelveRegistry} for an {@link Alarm}\n   * @param {string} alarm_id id of the target alarm\n   * @param {number} status id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getShelveRegistries(alarm_id: string, status: number): any {\n    const url = BackendUrls.SHELVE_REGS_FILTER + '?alarm_id=' + alarm_id + '&status=' + status;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarm_id id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @param {string} timeout the timeout for the shelving\n   * @param {string} user the user who performed the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  shelveAlarm(alarm_id: string, message: string, timeout: string, user: string): any {\n    const data = {\n      'alarm_id': alarm_id,\n      'message': message,\n      'timeout': timeout,\n      'user': user\n    };\n    return this.httpClientService.post(BackendUrls.SHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 201) {\n          const alarm = this.get(alarm_id);\n          alarm.shelve();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string[]} alarms_ids id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  unshelveAlarms(alarms_ids: string[], message: string): any {\n    const data = {\n      'alarms_ids': alarms_ids,\n    };\n    return this.httpClientService.put(BackendUrls.UNSHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 200) {\n          for (const id of alarms_ids) {\n            const alarm = this.get(id);\n            alarm.unshelve();\n          }\n        }\n        return response;\n      }\n    ));\n  }\n\n  /******* HANDLING OF ALARM MESSAGES FROM THE CORE *******/\n\n  /**\n  * Get the complete list of alarms from the webserver database\n   * through the websocket\n   */\n  getAlarmList() {\n    this.webSocketBridge.stream(Streams.UPDATES).send({\n      'action': 'list'\n    });\n  }\n\n  /**\n   * Reads an alarm message from the Core and modify the service alarms list\n   * depending on the action value.\n   * @param {string} action create, update or delete\n   * @param {Object} obj dictionary with values for alarm fields (as generic object)\n   */\n  readAlarmMessage(action: string, obj: Object) {\n    if ( action === 'create' || action === 'update' ) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n      this.changeAlarms(alarm.core_id);\n    }\n  }\n\n  /**\n   * Reads a list of alarm messages form the Core and add them to the\n   * service alarms list\n   * @param {Object[]} alarmsList list of dictionaries with values for alarm fields (as generic objects)\n   */\n  readAlarmMessagesList(alarmsList: Object[]) {\n    for (const obj of alarmsList) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n    }\n    this.changeAlarms('all');\n    this.canSound = true;\n  }\n\n  /**\n   * Reads the count by view object received from the webserver\n   * @param {Object} countByView\n   */\n  readCountByViewMessage(countByView: Object) {\n    this.countByView = countByView;\n  }\n\n  /**\n   * Method to clear the count by view if there is the ws connection is closed\n   */\n  resetCountByView() {\n    this.countByView = {};\n  }\n\n  /**\n   * Adds or updates an {@link Alarm} to the AlarmService\n   * @param {Alarm} alarm the {@link Alarm} to add or update\n   */\n  add_or_update_alarm(alarm: Alarm) {\n    let old_alarm_value = Value.cleared;\n    let old_alarm_ack = true;\n    if (alarm.core_id in this.alarmsIndexes) {\n      const old_alarm = this.alarmsArray[this.alarmsIndexes[alarm.core_id]];\n      old_alarm_value = old_alarm.value;\n      old_alarm_ack = old_alarm.ack;\n      this.alarmsArray[this.alarmsIndexes[alarm.core_id]] = alarm;\n    } else {\n      const newLength = this.alarmsArray.push(alarm);\n      this.alarmsIndexes[alarm.core_id] = newLength - 1;\n    }\n    if (old_alarm_value === Value.cleared && alarm.value !== Value.cleared) {\n      if (alarm.sound !== 'NONE') {\n        this.playAlarmSound(alarm);\n      }\n    }\n    if (!old_alarm_ack && alarm.ack) {\n      if (alarm.sound !== 'NONE') {\n        this.clearSoundsIfAck(alarm);\n      }\n    }\n  }\n\n  /**\n   * Reproduces the sound of a given {@link Alarm}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  playAlarmSound(alarm: Alarm) {\n    if (!this.canSound) {\n      return;\n    }\n    const repeat = alarm.shouldRepeat();\n    if (repeat) {\n      this.soundingAlarm = alarm.core_id;\n      this.audio.pause();\n      this.emitSound(alarm.sound, repeat);\n    } else if (this.audio.paused) {\n      this.emitSound(alarm.sound, repeat);\n    }\n  }\n\n  /**\n   * Reproduces a sound\n   * @param {string} sound the type of sound to reproduce\n   * @param {boolean} repeat true if the sound should be repeated, false if not\n   */\n  emitSound(sound: string, repeat: boolean) {\n    console.log('calling emitSound with: ', sound);\n    this.audio = new Audio();\n    const soundToPlay = AlarmSounds.getSoundsource(sound);\n    if (soundToPlay === null || soundToPlay === '') {\n      return;\n    }\n    this.audio.src = soundToPlay;\n    if (repeat) {\n      this.audio.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n    this.audio.load();\n    this.audio.play();\n  }\n\n  /**\n   * Stops the sound of a given {@link Alarm}, only if the sound is being repeated\n   * It is intended to be used when critical alarms (repeated) are acknowledged.\n   * Once the sound stops, it check there is another non-acknowledged alarm and plays its sound repeatedly,\n   * by calling {@link AlarmService.html#playAlarmSound}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  clearSoundsIfAck(alarm: Alarm) {\n    if (!alarm.shouldRepeat()) {\n      return;\n    }\n    if (this.soundingAlarm === alarm.core_id) {\n      this.audio.pause();\n      this.soundingAlarm = null;\n      for (alarm of this.alarmsArray) {\n        if (!alarm.ack && alarm.sound !== 'NONE' && alarm.shouldRepeat()) {\n          this.soundingAlarm = alarm.core_id;\n          this.playAlarmSound(alarm);\n          return;\n        }\n      }\n    }\n  }\n\n  /******* PERIODIC CHECK OF VALIDITY OF ALARMS *******/\n\n  /**\n   * Set selected state to alarms under an non-valid connection\n   */\n  triggerAlarmsNonValidConnectionState() {\n    for (const alarm of this.alarmsArray) {\n      alarm.validity = Validity.unreliable;\n    }\n    this.changeAlarms('all');\n  }\n\n  /**\n   * Resets the status connection check timer\n   * The timer's period is equal to the broadcastThreshold obtained by {@link CdbService.html#getBroadcastRate}\n   */\n  resetTimer() {\n    if (this.connectionStatusTimer) {\n      this.connectionStatusTimer.unsubscribe();\n      this.connectionStatusStream.next(true);\n    }\n    const broadcastThreshold = this.cdbService.getBroadcastThreshold();\n    this.connectionStatusTimer = interval(1000 * broadcastThreshold).subscribe( () => {\n      this.connectionStatusStream.next(false);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmTileComponent.html":{"url":"components/AlarmTileComponent.html","title":"component - AlarmTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-tile/alarm-tile.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as tiles in the overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-tile\n            \n\n            \n                styleUrls\n                ./alarm-tile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-tile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBadgesOptions\n                            \n                            \n                                sizeOptions\n                            \n                            \n                                targetAnimationState\n                            \n                            \n                                tooltipDirectionOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                startAnimation\n                            \n                            \n                                    Public\n                                stopAnimation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                disableAnimation\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:80\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableAnimation\n                    \n                    \n                        Variable to disable animation\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Image set related to the alarm\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Image set related to unrealiable states for the alarm\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:55\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:166\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the alarm values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startAnimation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Method to start the blinking animation\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stopAnimation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:158\n                            \n                        \n\n\n                \n                    \n                            Method to go to the normal state to stop the animation\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBadgesOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showBadgesOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:75\n                            \n                        \n\n                \n                    \n                        Show badges options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:70\n                            \n                        \n\n                \n                    \n                        Size options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetAnimationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        targetAnimationState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:65\n                            \n                        \n\n                \n                    \n                        Auxiliary variable to follow the status of the animation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipDirectionOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tooltipDirectionOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['right', 'left']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:80\n                            \n                        \n\n                \n                    \n                        Tooltip Direction Options\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { AlarmImageSet } from '../alarm/alarm.component';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n\n/**\n * Component used to display alarms as tiles in the overview\n */\n@Component({\n  selector: 'app-alarm-tile',\n  templateUrl: './alarm-tile.component.html',\n  styleUrls: ['./alarm-tile.component.scss'],\n})\nexport class AlarmTileComponent implements OnChanges, OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n  * Image set related to the alarm\n  */\n  @Input() images: AlarmImageSet;\n\n  /**\n  * Image set related to unrealiable states for the alarm\n  */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Variable to disable animation\n   */\n  @Input() disableAnimation = false;\n\n  /**\n   * Auxiliary variable to follow the status of the animation\n   */\n  targetAnimationState: string;\n\n  /**\n  * Size options\n  */\n  sizeOptions = ['xs', 'sm', 'md', 'lg'];\n\n  /**\n  * Show badges options\n  */\n  showBadgesOptions = [true, false];\n\n  /**\n  * Tooltip Direction Options\n  */\n  tooltipDirectionOptions = ['right', 'left'];\n\n  /**\n  * Builds a new instance\n  */\n  constructor() {\n    this.targetAnimationState = 'normal';\n  }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  0) ) {\n          if (this.disableAnimation === false) {\n            this.startAnimation();\n          }\n        }\n        // set to clear transition\n        if ( (previousAlarmValue > 0) && (currentAlarmValue === 0) ) {\n          if (this.disableAnimation === false) {\n            this.stopAnimation();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n  /**\n  * Method to start the blinking animation\n  */\n  public startAnimation(): void {\n    this.targetAnimationState = 'highlight';\n  }\n\n  /**\n  * Method to go to the normal state to stop the animation\n  */\n  public stopAnimation(): void {\n    this.targetAnimationState = 'normal';\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('alarm-tile-blue');\n      result.push('alarm-tile-unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('alarm-tile-green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('alarm-tile-blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('alarm-tile-gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('alarm-tile-green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('alarm-tile-yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('alarm-tile-yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('alarm-tile-red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('alarm-tile-red');\n    } else {\n      result.push('alarm-tile-blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('alarm-tile-unreliable');\n    }\n    if (this.targetAnimationState === 'highlight') {\n      result.push('highlight');\n    } else {\n      result.push('normal');\n    }\n    return result;\n  }\n\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{getAlarmName()}}\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-tile.component.scss\n                \n                .alarm-tile-container {\n  display:block;\n  position: relative;\n}\n\n.alarm-tile-background {\n  position: absolute;\n  border-width: 4px;\n  border-style: solid;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.alarm-tile {\n  position: relative;\n  z-index: 10;\n\n  .alarm-tile-content {\n\n    padding: 48px;\n    padding-top: 38px;\n    padding-bottom: 68px;\n\n    .title {\n      text-transform: uppercase;\n      padding-bottom: 10px;\n      text-align: center;\n    }\n\n    .alarm {\n      display: inline-flex;\n      width: 100%;\n\n      app-alarm {\n        margin: auto;\n      }\n\n    }\n\n  }\n\n}\n\n.normal {\n  opacity: 0.0;\n}\n\n.highlight {\n  -webkit-animation: BLINK 2s;\n  animation: BLINK 2s;\n  -moz-animation: BLINK 2s;\n  -o-animation: BLINK 2s;\n  animation-iteration-count: 5;\n  opacity: 0.0;\n}\n\n@-webkit-keyframes BLINK {\n  0% {opacity: 0.0}\n  50% {opacity: 0.75}\n  100% {opacity: 0.0}\n}\n\n@-moz-keyframes BLINK {\n  0% {opacity: 0.0}\n  50% {opacity: 0.75}\n  100% {opacity: 0.0}\n}\n\n@keyframes BLINK {\n  0% {opacity: 0.0}\n  50% {opacity: 0.75}\n  100%{opacity: 0.0}\n}\n\n@-o-keyframes BLINK {\n  0% {opacity: 0.0}\n  50% {opacity: 0.75}\n  100%{opacity: 0.0}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{getAlarmName()}}                          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmTooltipComponent.html":{"url":"components/AlarmTooltipComponent.html","title":"component - AlarmTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-tooltip/alarm-tooltip.component.ts\n\n\n    \n        Description\n    \n    \n        Component that defines the content and layout of the tooltip over Alarm Components\nIn order to use it you have to put the AlarmTooltipComponent inside an ng-template\nand assign the ng-template to the main container of the parent component with some additional paramenters,\nsuch as data-container=\"body\".\nFor example:\n\n   \n     \n   \n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-tooltip\n            \n\n            \n                styleUrls\n                ./alarm-tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-tooltip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateFormat\n                            \n                            \n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:43\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\nInitializes the dateFormat and timezone\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:40\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:43\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n* Component that defines the content and layout of the tooltip over Alarm Components\n* In order to use it you have to put the {@link AlarmTooltipComponent} inside an ng-template\n* and assign the ng-template to the main container of the parent component with some additional paramenters,\n* such as data-container=\"body\".\n*\n* For example:\n*\n* \n*   \n*     \n*   \n**/\n@Component({\n  selector: 'app-alarm-tooltip',\n  templateUrl: './alarm-tooltip.component.html',\n  styleUrls: ['./alarm-tooltip.component.scss']\n})\nexport class AlarmTooltipComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /** String to store the formatting of dates, read form the settings */\n  dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  timezone: string;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  * Initializes the dateFormat and timezone\n  */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Alarm ID\n      {{alarm?.core_id}}\n    \n    \n      Description\n      {{ alarm?.description }}\n    \n    \n      Last Change\n      {{ alarm?.timestamp | date: dateFormat: timezone }}\n    \n    \n      Last Properties\n      {{ alarm?.formattedProperties }}\n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-tooltip.component.scss\n                \n                ::ng-deep .tooltip {\n  animation-name: delayedFadeIn;\n  animation-duration: 0.5s; /* Control animation time */\n}\n\n::ng-deep .tooltip-inner {\n  font-size: 11px;\n  min-width: 350px;\n  max-width: 500px;\n  font-family: monospace;\n  vertical-align: top;\n  text-align: left;\n  background: rgba(0, 0, 0, 0.85);\n\n  table {\n    vertical-align: top;\n  }\n\n  th {\n    width: 120px;\n    vertical-align: top;\n  }\n\n  .props-container {\n    color: white;\n    vertical-align: top;\n    font-size: 100%;\n    white-space: pre-wrap;\n    word-wrap: break-all;\n    margin: 0px;\n    max-width: 380px;\n  }\n}\n\n@keyframes delayedFadeIn {\n  0% {opacity: 0;}\n  75% {opacity: 0;} /* Set this to 99% for no fade-in. */\n  100% {opacity: 1;}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Alarm ID      {{alarm?.core_id}}              Description      {{ alarm?.description }}              Last Change      {{ alarm?.timestamp | date: dateFormat: timezone }}              Last Properties      {{ alarm?.formattedProperties }}      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n\n               "},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                ./antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNgClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        The Alarm to associate to the antenna \n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                    \n                        The position of the antenna in the X axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                    \n                        The position of the antenna in the Y axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                    \n                        Radius of the antenna \n\n                        \n                            Default value : 1\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : '0 0 10 10'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNgClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNgClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class that should be used to draw the marker\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:41\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:40\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the CSS class that should be used to draw the marker\n   */\n  getNgClass() {\n    let colorClass = 'green';\n    if (this.alarm.shelved === true) {\n      colorClass = 'green';\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      colorClass = 'blue';\n    } else if (this.alarm.showAsMaintenance()) {\n      colorClass = 'grey';\n    } else if (this.alarm.value === Value.cleared) {\n      colorClass = 'green';\n    } else if (this.alarm.value === Value.set_low) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_medium) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_high) {\n      colorClass = 'red';\n    } else if (this.alarm.value === Value.set_critical) {\n      colorClass = 'red';\n    } else {\n      colorClass = 'green';\n    }\n\n    if (this.alarm.validity === 0) {\n      return [colorClass, 'unreliable'];\n    } else {\n      return [colorClass];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./antenna-marker.component.scss\n                \n                .antenna-marker {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Antennas Alarms both in a sidebar (instantiated in a AntennasSidebar),\nand a map (instantiated by a AntennasMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                ./antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAntenna:     AlarmConfig\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n* Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\n* and a map (instantiated by a {@link AntennasMap})\n*/\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna: AlarmConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AlarmConfig}\n   */\n  updateSelectedAntenna(selectedAntenna: AlarmConfig): void {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./antennas.component.scss\n                \n                mat-sidenav-container {\n  background: transparent;\n  height: 100%;\n}\n\n#antennas-map {\n}\n\n#antennas-sidenav {\n  background: transparent;\n  width: 960px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n    Modules\n    AntennasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAntennasModule -->\n\nTabularModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AntennaMarkerComponent\n                        \n                        \n                            AntennasComponent\n                        \n                        \n                            AntennasMapComponent\n                        \n                        \n                            AntennasSidebarComponent\n                        \n                        \n                            AntennasSummaryComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AntennasService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TabularModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AntennasSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TabularModule } from '../tabular/tabular.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    ActionsModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n    TabularModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the AntennasModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                            \n                                    Public\n                                devicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:36\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the initialize method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:36\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:30\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:33\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for each antenna *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:24\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasSummaryConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:27\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devicesConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devicesConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for other devices related with the array *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AlarmConfig } from '../data/alarm-config';\nimport { Assets } from '../settings';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** List of Alarm configuration for each antenna **/\n  public antennasConfig: AlarmConfig [] = [];\n\n  /** List of Alarm configuration for other devices related with the array **/\n  public devicesConfig: AlarmConfig [] = [];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: AlarmConfig [] = [];\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      this.antennasConfig = response['antennas'] as AlarmConfig[];\n      this.devicesConfig = response['devices'] as AlarmConfig[];\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as AlarmConfig[];\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Display used to show the list of antennas' alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                ./antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                getChildrenAlarmIds\n                            \n                            \n                                getDevices\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Selected antenna object, null if it is nothing selected \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                    \n                        Event emitted to notify when an antenna is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas Alarm configuration\n\n\n                            \n                            \n                            \n                                Returns :     AlarmConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChildrenAlarmIds\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetChildrenAlarmIds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Return the list of alarm IDs of the children of the selectedAntenna\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    list of alarm IDs\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration for global devices\n\n\n                            \n                            \n                            \n                                Returns :     AlarmConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked antenna\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n * Display used to show the list of antennas' alarms\n */\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit {\n\n  /** Selected antenna object, null if it is nothing selected */\n  @Input() selectedAntenna: AlarmConfig = null;\n\n  /** Event emitted to notify when an antenna is selected */\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {RoutingService} routing Service used to redirect to other views\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Return the list of antennas Alarm configuration\n  * @returns {list} list of {@link AlarmConfig}\n  */\n  getAntennas(): AlarmConfig [] {\n    return this.antennasService.antennasConfig;\n  }\n\n  /**\n  * Return the list of alarm IDs of the children of the selectedAntenna\n  * @returns {string[]} list of alarm IDs\n  */\n  getChildrenAlarmIds(): string[] {\n    const alarm = this.alarmService.getAlarm(this.selectedAntenna);\n    if (!alarm) {\n      return [];\n    }\n    return alarm.dependencies;\n  }\n\n  /**\n  * Return the list of Alarm configuration for global devices\n  * @returns {list} list of {@link AlarmConfig}\n  */\n  getDevices(): AlarmConfig [] {\n    return this.antennasService.devicesConfig;\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AlarmConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AlarmConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  * @param {AlarmConfig} alarmConfig configuration of the clicked antenna\n  */\n  onClick(alarmConfig: AlarmConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n    \n      chevron_left\n       {{alarmService.getName(this.selectedAntenna)}} \n    \n\n\n\n\n  \n    \n      \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n          Alarm ID\n          {{this.selectedAntenna.alarm_id}}\n        \n        \n          Antenna (Pad)\n          {{this.alarmService.getName(selectedAntenna)}} ({{this.selectedAntenna.placemark}})\n        \n      \n    \n    \n      \n    \n  \n\n  \n    \n      Antenna devices alarms\n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./antennas-sidebar.component.scss\n                \n                .antennas-sidebar-card {\n  padding: 0 12px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  .antennas-sidebar-title {\n    padding: 12px 0px;\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n\n    .return-link {\n      cursor: pointer;\n\n      i {\n        vertical-align: middle;\n        font-size: 25px;\n      }\n\n      span {\n        vertical-align: middle;\n      }\n    }\n  }\n\n  .antennas-sidebar-content {\n    padding: 12px 0px;\n    height: 100%;\n    overflow-y: auto;\n\n    .antennas-container {\n      margin: 6px 0px 20px 0px;\n\n      .grid-container {\n        display: grid;\n        grid-template-columns: auto auto auto auto auto auto auto auto auto auto;\n        grid-column-gap: 10px;\n        grid-row-gap: 10px;\n\n        .grid-item {\n          height: 60px;\n          line-height: 62px;\n          border-radius: 4px;\n          padding: 0;\n          position: relative;\n          cursor: pointer;\n        }\n\n      }\n    }\n\n    .global-devices-container {\n      margin: 20px 0px 6px 0px;\n\n      .grid-container {\n        display: grid;\n        grid-template-columns: auto auto auto;\n        grid-column-gap: 10px;\n        grid-row-gap: 10px;\n\n        .grid-item {\n          height: 60px;\n          line-height: 62px;\n          border-radius: 4px;\n          padding: 0;\n          position: relative;\n          cursor: pointer;\n        }\n\n      }\n\n    }\n\n    .antennas-detail {\n\n      margin-left: 28px;\n      margin-right: 28px;\n\n      &.alarm-info {\n        padding-bottom: 12px;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n        border-bottom-color: rgba(255, 255, 255, 0.12);\n        display: flex;\n        flex-flow: row;\n\n        .header {\n          font-weight: bold;\n        }\n\n        .alarm-buttons {\n          flex: 1 1 auto;\n          align-self: center;\n        }\n\n        table {\n          vertical-align: top;\n        }\n\n        th {\n          padding-right: 16px;\n          font-weight: normal;\n        }\n      }\n\n      &.subalarms {\n        // padding-top: 20px;\n\n        .subalarms-header {\n          padding: 20px 0 10px 0px;\n          font-weight: bold;\n        }\n      }\n\n      &.devices-alarms {\n\n        padding-top: 20px;\n\n        table {\n            width: 100%;\n        }\n\n        td {\n          padding: 5px;\n          height: 40px;\n\n          &.antenna {\n            padding-left: 0px;\n            font-weight: bold;\n            width: 25%;\n          }\n\n          &.device {\n            padding-left: 20px;\n            font-weight: bold;\n            width: 40%;\n          }\n        }\n        .icon {\n          padding-left: 20px;\n          height: 30px;\n          width: fit-content;\n        }\n        .text {\n          padding-left: 0;\n          height: 30px;\n          width: 75%;\n          text-align: left;\n        }\n        .status {\n          padding-left: 20px;\n        }\n        .buttons {\n          width: 60%;\n        }\n      }\n\n      &.footer {\n        width: 100%;\n        font-size: 14px;\n        display: table;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        padding-top: 50px;\n\n        button {\n          margin: 0px 10px 0px 10px;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS           chevron_left       {{alarmService.getName(this.selectedAntenna)}}                                                                                                                                                                                                                                                                 Alarm ID          {{this.selectedAntenna.alarm_id}}                          Antenna (Pad)          {{this.alarmService.getName(selectedAntenna)}} ({{this.selectedAntenna.placemark}})                                              Antenna devices alarms              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                ./antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:15\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get Antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        Service used to get Antennas configuration\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:41\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {AntennasService} antennasService Service used to get Antennas configuration\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    const conf = this.antennasService.antennasSummaryConfig;\n    if (conf && conf[0]) {\n      return this.alarmService.getAlarm(conf[0]);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./antennas-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                getNavItemCountClass\n                            \n                            \n                                getNavItemCountText\n                            \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, authService: AuthService, userService: UserService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:68\n                            \n                        \n\n                \n                    \n                            Builds an instance of the application, with its related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used for authentication\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage information about user accounts\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Returns the links for the router outlets to navigate the different views,\nconsidering of the actionsSidenav can be closed or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an item of the navigation sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    The links in a dictionary\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountClass(navItem: any, countByView: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            Method to get the class related to the count of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the countByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the classname for the nav item mark\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountText(navItem: any, countByView: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:210\n                            \n                        \n\n\n                \n                    \n                            Method to get the text related to the mark of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the counterByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text related to the count for the nav item\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Method to get the username\n\" Uses the getUser method defined on the AuthService\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the username\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Method to logout an authenticated user\n\" Uses the logout method defined on the AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Method executed when the application is initiated\nInitializes the AlarmService and passes its actionsSidenav to the ActionsSidenavService for it to control it\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('actionsSidenav')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Reference to the Actions sidenav (right sidenav)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:85\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:82\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms of this component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:83\n                            \n                        \n\n                \n                    \n                        Service used for authentication\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNavigationCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navigationSidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:88\n                            \n                        \n\n                \n                    \n                        instance of an Angular {\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userService:     UserService\n\n                    \n                \n                    \n                        \n                            Type :     UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:84\n                            \n                        \n\n                \n                    \n                        Service used to manage information about user accounts\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from './auth/auth.service';\nimport { UserService } from './data/user.service';\nimport { Router } from '@angular/router';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  // TODO: Use only custom svgIcons\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  navigationSidenavItems = [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ];\n\n\n  /**\n   * Builds an instance of the application, with its related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {AuthService} authService Service used for authentication\n   * @param {UserService} userService Service used to manage information about user accounts\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   * @param {Router} router instance of an Angular {@link Router} to handle routing\n   */\n  constructor(\n    public alarmService: AlarmService,\n    public authService: AuthService,\n    public userService: UserService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    public router: Router,\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Method executed when the application is initiated\n   * Initializes the {@link AlarmService} and passes its {@link actionsSidenav} to the {@link ActionsSidenavService} for it to control it\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.actionsSidenavService.close();\n          this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n        } else if (value === true) {\n          this.userService.requestUsersList();\n        }\n      }\n    );\n  }\n\n  /**\n  * Returns the links for the router outlets to navigate the different views,\n  * considering of the actionsSidenav can be closed or not\n  * @param {any} item an item of the navigation sidenav\n  * @returns {Object} The links in a dictionary\n  */\n  getActionsLink(item: any): Object {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n\n  /**\n   * Method to get the username\n   \" Uses the getUser method defined on the {@link AuthService}\n   * @returns {string} the username\n   */\n  getUser(): string {\n    return this.authService.getUser();\n  }\n\n  /**\n   * Method to logout an authenticated user\n   \" Uses the logout method defined on the {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Method to get the class related to the count of the nav items\n   * to highlight or not the presence of unack alarms by view\n   \" It is expected to use the countByView\n   * defined on the {@link AlarmService}\n   * and the configuration defined in the navigationSidenavItems\n   * variable\n   * @returns {string} the classname for the nav item mark\n   */\n   getNavItemCountClass(navItem: any, countByView: any): string {\n     const navItemCounter = navItem.counter;\n     const availableCounters = Object.keys(countByView);\n     if (navItemCounter === '') {\n       return 'hide-count';\n     } else {\n       if (availableCounters.indexOf(navItemCounter) > -1) {\n         if (countByView[navItemCounter] > 0) {\n           return 'nonzero-count';\n         }\n         if (countByView[navItemCounter] === 0) {\n           return 'zero-count';\n         }\n       } else {\n         return 'unknown-count';\n       }\n\n     }\n   }\n\n   /**\n    * Method to get the text related to the mark of the nav items\n    * to highlight or not the presence of unack alarms by view\n    \" It is expected to use the counterByView\n    * defined on the {@link AlarmService}\n    * and the configuration defined in the navigationSidenavItems\n    * variable\n    * @returns {string} the text related to the count for the nav item\n    */\n    getNavItemCountText(navItem: any, countByView: any): string {\n      const navItemCounter = navItem.counter;\n      const availableCounters = Object.keys(countByView);\n      if (navItemCounter === '') {\n        return '';\n      } else {\n        if (availableCounters.indexOf(navItemCounter) > -1) {\n          const count = countByView[navItemCounter];\n          if (count >= 0) {\n            if (count 100');\n            }\n          } else {\n            return String(count);  // this case should not happen\n          }\n        } else {\n          return '?';\n        }\n\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n    \n      \n        account_circle {{ this.getUser() }}\n      \n      \n        \n          exit_to_appLog out\n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                {{ getNavItemCountText(item, alarmService.countByView) }}\n              \n              \n                \n                  {{ item.icon }}\n                \n                \n                  {{ item.icon }}\n                \n              \n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                html, body {\n  box-sizing: border-box;\n  height: 100%;\n  margin: 0;\n}\n\n#app-toolbar {\n\n  padding: 0;\n\n  .btn-wrapper {\n    padding: 0 16px;\n  }\n\n  .content-wrapper {\n    padding: 0 16px;\n    width: 100%;\n  }\n\n  .user-wrapper {\n    padding: 0 24px;\n  }\n\n  img.ias-logo {\n    width: 35px;\n    margin-right: 10px;\n  }\n\n}\n\n#actions-sidenav  {\n  width: 500px;\n  min-height: 100%;\n}\n\n\n#main-content  {\n  height: calc(100vh - 64px) !important;\n}\n\n#navigation-sidenav {\n\n  min-width: 70px;\n\n  p {\n    padding-right: 50px;\n  }\n\n  /deep/ .mat-list-item-content {\n    padding: 0px 12px;\n  }\n\n  /deep/ .mat-list-text {\n    padding-left: 0;\n    width: 74%;\n  }\n\n  mat-nav-list a.mat-list-item {\n\n    height: 86px;\n\n    mat-icon {\n      height: 44px;\n      width: 44px;\n    }\n\n    &.active-link {\n\n      /deep/ .mat-line {\n        font-weight: bold;\n      }\n\n    }\n\n  }\n\n  &.compacted {\n\n    width: unset;\n\n    .ias.ias-logo-container {\n      padding: .725rem 0;\n      width: 60%;\n      left: 20%;\n    }\n\n    img.ias.ias-logo {\n      width: 30px;\n    }\n\n    mat-nav-list a.mat-list-item {\n\n      padding-left: 0px;\n\n    }\n\n  }\n\n}\n\n\n.ias-nav-button-container {\n\n  .ias-count-label {\n    position: absolute;\n    top: 9px;\n    right: 7px;\n    text-align: center;\n    font-weight: 700;\n\n    &.hide-count {\n      display: none;\n    }\n\n    &.nonzero-count {\n      font-size: 10px;\n      border-radius: .25em;\n      padding: 2.75px 5px;\n      border-width: 0px;\n      border-style: hidden;\n    }\n\n    &.zero-count {\n      display: none;\n    }\n\n    &.unknown-count {\n      font-size: 11px;\n      border-radius: .25em;\n      border-width: 2px;\n      border-style: solid;\n      padding: 0px 2px;\n    }\n\n  }\n\n  .ias-icon {\n    display: inline-block;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                       account_circle {{ this.getUser() }}                              exit_to_appLog out                                                                                            {{ getNavItemCountText(item, alarmService.countByView) }}                                                              {{ item.icon }}                                                  {{ item.icon }}                                                      {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Application module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            AntennasModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            OverviewModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TabularModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BASE_HREF, DatePipe } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { HealthModule } from './health/health.module';\nimport { MapModule } from './map/map.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { AppComponent } from './app.component';\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    AppRoutingModule,\n    AuthModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nAppRoutingModule -->\n\nMaterialSandboxModule->AppRoutingModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MaterialSandboxComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RoutingService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                        \n                            MaterialSandboxModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutingService } from './routing.service';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { AckComponent } from '../actions/ack/ack.component';\nimport { AntennasComponent } from '../antennas/antennas/antennas.component';\nimport { MaterialSandboxComponent } from '../material-sandbox/material-sandbox.components';\nimport { MaterialSandboxModule } from '../material-sandbox/material-sandbox.module';\nimport { OverviewComponent } from '../overview/overview/overview.component';\nimport { ShelveComponent } from '../actions/shelve/shelve.component';\nimport { TabularViewComponent } from '../tabular/tabular-view/tabular-view.component';\nimport { WeatherComponent } from '../weather/weather/weather.component';\nimport { AuthLoginGuard } from '../auth/auth-login.guard';\nimport { LoginComponent } from '../auth/login/login.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent},\n  { path: 'overview', component: OverviewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular/:filter', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'weather', component: WeatherComponent, canActivate: [AuthLoginGuard]},\n  { path: 'sandbox', component: MaterialSandboxComponent, canActivate: [AuthLoginGuard]},\n  { path: 'antennas', component: AntennasComponent, canActivate: [AuthLoginGuard]},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    MaterialSandboxModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthLoginGuard.html":{"url":"guards/AuthLoginGuard.html","title":"guard - AuthLoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthLoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth-login.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-login.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Builds an instance of the guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:31\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next activated route\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next state of router navigation, used to retrieve the url that is going to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckLogin(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged in.\nIf false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the nexturl to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n/**\n* Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthLoginGuard implements CanActivate {\n\n  /**\n  * Builds an instance of the guard\n  * @param {AuthService} authService service used to check and handle authorization\n  * @param {Router} router Angular router used to navigate the application\n  */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n  * Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n  * @param {ActivatedRouteSnapshot} next the next activated route\n  * @param {RouterStateSnapshot} state the next state of router navigation, used to retrieve the url that is going to be navigated\n  * @returns {Observable} true if navigation is permitted, false if not\n  */\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  /**\n  * Checks wether or not the user is logged in.\n  * If false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n  * @param {string} url the nexturl to be navigated\n  * @returns {boolean} true if navigation is permitted, false if not\n  */\n  checkLogin(url: string): Observable {\n    return this.authService.hasValidToken().pipe(map((response: any) => {\n      if (response === true) {\n        return true;\n      } else {\n        // Store the attempted URL for redirecting\n        this.authService.redirectUrl = url;\n\n        // Navigate to the login page with extras\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }));\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoginComponent } from './login/login.component';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    IasMaterialModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to request and handle tokens and authorization\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ACTIONS_STORAGE_NAME\n                            \n                            \n                                loginStatus\n                            \n                            \n                                    Public\n                                loginStatusStream\n                            \n                            \n                                redirectUrl\n                            \n                            \n                                TOKEN_STORAGE_NAME\n                            \n                            \n                                USER_STORAGE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLoginStatus\n                            \n                            \n                                getAllowedActions\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                hasValidToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                removeAllowedActions\n                            \n                            \n                                removeToken\n                            \n                            \n                                removeUser\n                            \n                            \n                                storeAllowedActions\n                            \n                            \n                                storeToken\n                            \n                            \n                                storeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:46\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient used to request the token for authentication\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLoginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLoginStatus(status: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:60\n                            \n                        \n\n\n                \n                    \n                            Changes the loginStatus and sneds the corresponding update in the loginStatusStream\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the new login status\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:176\n                            \n                        \n\n\n                \n                    \n                            Returns the user permission over the specified action stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    the permission as a boolean\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:150\n                            \n                        \n\n\n                \n                    \n                            Returns the token stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the token as a string, or undefined if there is no token\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:163\n                            \n                        \n\n\n                \n                    \n                            Returns the user stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the user name as a string, or undefined if there is no user\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValidToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasValidToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged-in, which is true if there is a valid token\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if there is a valid token, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:117\n                            \n                        \n\n\n                \n                    \n                            Requests a token from the server, sending user and password information.\nSaves the token in the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the user\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the password of the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of true if the login is successful, observable of false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:140\n                            \n                        \n\n\n                \n                    \n                            Logs out of the server by deleting the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:202\n                            \n                        \n\n\n                \n                    \n                            Deletes the allowed_actions from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:188\n                            \n                        \n\n\n                \n                    \n                            Deletes the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:195\n                            \n                        \n\n\n                \n                    \n                            Deletes the user from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreAllowedActions(allowed_actions: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:228\n                            \n                        \n\n\n                \n                    \n                            Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allowed_actions\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            Stores a given the token in the local storage, replacing the previous token, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the token to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreUser(user: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:219\n                            \n                        \n\n\n                \n                    \n                            Stores a given the user in the local storage, replacing the previous user, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIONS_STORAGE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ACTIONS_STORAGE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-ACTIONS'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:30\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the allowed actions in the local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginStatus:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                        Store if the user is logged in or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginStatusStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginStatusStream:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:46\n                            \n                        \n\n                \n                    \n                        Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:35\n                            \n                        \n\n                \n                    \n                        Store the URL so we can redirect after logging in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_STORAGE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_STORAGE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-TOKEN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the token in the local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_STORAGE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        USER_STORAGE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-USER'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the user in the local storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { BackendUrls } from '../settings';\nimport { environment } from '../../environments/environment';\n\n\n/**\n* Service used to request and handle tokens and authorization\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n  * Name for the browser to use in order to save the token in the local storage\n  */\n  TOKEN_STORAGE_NAME = 'IAS-TOKEN';\n\n  /**\n  * Name for the browser to use in order to save the user in the local storage\n  */\n  USER_STORAGE_NAME = 'IAS-USER';\n\n  /**\n  * Name for the browser to use in order to save the allowed actions in the local storage\n  */\n  ACTIONS_STORAGE_NAME = 'IAS-ACTIONS';\n\n  /**\n  * Store the URL so we can redirect after logging in\n  */\n  redirectUrl: string;\n\n\n  /**\n  * Store if the user is logged in or not\n  */\n  loginStatus = false;\n\n  /**\n  * Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n  */\n  public loginStatusStream = new BehaviorSubject(null);\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClient} http Angular HttpClient used to request the token for authentication\n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Changes the {@link loginStatus} and sneds the corresponding update in the {@link loginStatusStream}\n   * @param {boolean} status the new login status\n   */\n  changeLoginStatus(status: boolean) {\n    this.loginStatus = status;\n    this.loginStatusStream.next(status);\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n   * Checks wether or not the user is logged-in, which is true if there is a valid token\n   * @returns { Observable} true if there is a valid token, false if not\n   */\n  hasValidToken(): Observable {\n    if (!this.getToken()) {\n      this.changeLoginStatus(false);\n      return of(false);\n    } else {\n      const url = `${environment.httpUrl}${BackendUrls.VALIDATE_TOKEN}`;\n      return this.http.get(url, {headers: this.getHttpHeaders()} ).pipe(\n        map((response: any) => {\n          const user_data = response['user_data'];\n          const allowed_actions = response['allowed_actions'];\n          this.storeUser(user_data['username']);\n          this.storeAllowedActions(allowed_actions);\n          this.changeLoginStatus(true);\n          return true;\n        }),\n        catchError( error => {\n          console.error(error);\n          this.logout();\n          return of(false);\n        }\n      ));\n    }\n  }\n\n  /**\n   * Requests a token from the server, sending user and password information.\n   * Saves the token in the local storage\n   * @param {string} username the name of the user\n   * @param {string} password the password of the user\n   * @returns {Observable} observable of true if the login is successful, observable of false if not\n   */\n  login(username: string, password: string): Observable {\n    const url = `${environment.httpUrl}${BackendUrls.TOKEN}`;\n    return this.http.post(url, {\n      username: username,\n      password: password\n    }).pipe(map((response: any) => {\n      console.log('Login repsonse:', response);\n      const token = response['token'];\n      if (token) {\n        this.storeToken(token);\n        this.storeUser(username);\n        this.changeLoginStatus(true);\n        return true;\n      } else {\n        this.changeLoginStatus(false);\n        return false;\n      }\n    }));\n  }\n\n  /**\n   * Logs out of the server by deleting the token from the local storage\n   */\n  logout(): void {\n    this.changeLoginStatus(false);\n    this.removeToken();\n    this.removeUser();\n  }\n\n  /**\n  * Returns the token stored in the local storage\n  * @returns {string | undefined} the token as a string, or undefined if there is no token\n  */\n  getToken(): string | undefined {\n    const token = localStorage.getItem(this.TOKEN_STORAGE_NAME);\n    if (token === null) {\n      return undefined;\n    } else {\n      return JSON.parse(token);\n    }\n  }\n\n  /**\n  * Returns the user stored in the local storage\n  * @returns {string | undefined} the user name as a string, or undefined if there is no user\n  */\n  getUser(): string | undefined {\n    const user = localStorage.getItem(this.USER_STORAGE_NAME);\n    if (user === null) {\n      return undefined;\n    } else {\n      return JSON.parse(user);\n    }\n  }\n\n  /**\n  * Returns the user permission over the specified action stored in the local storage\n  * @returns {boolean | undefined} the permission as a boolean\n  */\n  getAllowedActions(): boolean {\n    const allowed_actions = localStorage.getItem(this.ACTIONS_STORAGE_NAME);\n    if (allowed_actions === null) {\n      return undefined;\n    } else {\n      return JSON.parse(allowed_actions);\n    }\n  }\n\n  /**\n  * Deletes the token from the local storage\n  */\n  removeToken() {\n    localStorage.removeItem(this.TOKEN_STORAGE_NAME);\n  }\n\n  /**\n  * Deletes the user from the local storage\n  */\n  removeUser() {\n    localStorage.removeItem(this.USER_STORAGE_NAME);\n  }\n\n  /**\n  * Deletes the allowed_actions from the local storage\n  */\n  removeAllowedActions() {\n    localStorage.removeItem(this.ACTIONS_STORAGE_NAME);\n  }\n\n  /**\n  * Stores a given the token in the local storage, replacing the previous token, if any\n  * @param {string} token the token to be stored\n  */\n  storeToken(token: string) {\n    localStorage.removeItem(this.TOKEN_STORAGE_NAME);\n    localStorage.setItem(this.TOKEN_STORAGE_NAME, JSON.stringify(token));\n  }\n\n  /**\n  * Stores a given the user in the local storage, replacing the previous user, if any\n  * @param {string} user the user to be stored\n  */\n  storeUser(user: string) {\n    localStorage.removeItem(this.USER_STORAGE_NAME);\n    localStorage.setItem(this.USER_STORAGE_NAME, JSON.stringify(user));\n  }\n\n  /**\n  * Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n  * @param {string} permission the user allowed_actions to be stored\n  */\n  storeAllowedActions(allowed_actions: Object) {\n    this.removeAllowedActions();\n    localStorage.setItem(this.ACTIONS_STORAGE_NAME, JSON.stringify(allowed_actions));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Set of buttons used to trigger actions over AlarmService\nContains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                ./buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the buttons\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Set of buttons used to trigger actions over AlarmService\n * Contains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n */\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./buttons.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBroadcastRate\n                            \n                            \n                                getBroadcastThreshold\n                            \n                            \n                                getConfigurationData\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:25\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastRate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastRate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast rate from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastRate' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastThreshold\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastThreshold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast threshold from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastThreshold' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:20\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:25\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:15\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      this.iasConfiguration = res;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh broadcast rate from IAS configuration data\n  * @returns {number} contains the 'broadcastRate' in seconds\n  */\n  getBroadcastRate(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastRate']);\n    } catch (e) {\n      value = 10;\n    }\n    return value;\n  }\n\n  /**\n  * Get refresh broadcast threshold from IAS configuration data\n  * @returns {number} contains the 'broadcastThreshold' in seconds\n  */\n  getBroadcastThreshold(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastThreshold']);\n    } catch (e) {\n      value = 11;\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the services and data models\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AlarmService\n                        \n                        \n                            CdbService\n                        \n                        \n                            HttpClientService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { UserService } from './user.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    UserService\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nHealthModule -->\n\nIasMaterialModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains the components associated to the health of the IAS\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HealthSummaryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HealthSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\n\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                ./health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmConfig\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService, httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                        Configuration for displaying the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:53\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { HttpClientService } from '../../data/http-client.service';\nimport { BackendUrls } from '../../settings';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** Configuration for displaying the {@link Alarm} */\n  public alarmConfig: AlarmConfig[];\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n    private httpClient: HttpClientService\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.loadAlarmsConfig();\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    if (this.alarmConfig && this.alarmConfig[0]) {\n      return this.alarmService.get(this.alarmConfig[0].alarm_id);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const summary_url = BackendUrls.HEALTH_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.alarmConfig = response as AlarmConfig[];\n        }\n      }\n    });\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-clear-valid.svg',\n      set_low: Assets.ICONS + 'ias_health-others-valid.svg',\n      set_medium: Assets.ICONS + 'ias_health-others-valid.svg',\n      set_high: Assets.ICONS + 'ias_health-critical-valid.svg',\n      set_critical: Assets.ICONS + 'ias_health-critical-valid.svg',\n      unknown: Assets.ICONS + 'ias_health-clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'ias_health-clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'ias_health-clear-valid.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-clear-invalid.svg',\n      set_low: Assets.ICONS + 'ias_health-others-invalid.svg',\n      set_medium: Assets.ICONS + 'ias_health-others-invalid.svg',\n      set_high: Assets.ICONS + 'ias_health-critical-invalid.svg',\n      set_critical: Assets.ICONS + 'ias_health-critical-invalid.svg',\n      unknown: Assets.ICONS + 'ias_health-clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'ias_health-clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'ias_health-clear-valid.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./health-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:14\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HTTP Service used to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url, data)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url, data)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from '../auth/auth.service';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /**\n  * Builds an instance of the service\n  * @param {HttpClient} http Angular HTTP Service used to perform HTTP requests\n  * @param {AuthService} authService service used to check and handle authorization\n  */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.authService.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.authService.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    IasMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for the required Angular Material components\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                ./legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in maintenance state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_0:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority zero (clear) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_1:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority low \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_2:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority medium \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_3:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority high \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_4:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority critical \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in unknown state \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Reference to the icon used to display Alarms in clear and valid states */\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n\n  /** Reference to the icon used to display Alarms in clear and invalid states */\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n\n  /** Reference to the icon used to display Alarms in unknown state */\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n\n  /** Reference to the icon used to display Alarms in maintenance state */\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and valid states */\n  set_valid = Assets.ICONS + 'set-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and invalid states */\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n\n  /** Reference to the icon used to display Alarms with priority zero (clear) */\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n\n  /** Reference to the icon used to display Alarms with priority low */\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n\n  /** Reference to the icon used to display Alarms with priority medium */\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n\n  /** Reference to the icon used to display Alarms with priority high */\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n\n  /** Reference to the icon used to display Alarms with priority critical */\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n                \n                    ./legend.component.css\n                \n                .legend {\n  font-size: 12px;\n  font-weight: normal;\n  text-align: left;\n  width: 100%;\n}\n\n.legend-icon {\n  display: inline-block;\n  margin-right: 6px;\n  text-align: center;\n  width: 18px;\n  font-weight: bold;\n}\n\n.legend-priority {\n  display: inline-block;\n  margin-right: 6px;\n  text-align: center;\n  width: 24px;\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component that defines the login form\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                message\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder used to build forms\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Performs the login, by calling the login() function of AuthService passing the user and password retrieved from the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Performs the logout, by calling the logout() function of AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the component and defines its form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetErrorMessage(error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Sets the errorMessage to display, based on the status code of the error returned by the request.\nIf the status code is 400, it shows that the credentials are not valid\nIf the status code is not 400, it shows that there was a problem communicating with the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the error returned by the request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:53\n                            \n                        \n\n                \n                    \n                        service used to check and handle authorization\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        Error message to be displayed if the ogin is not successful\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Message with the current login status, to be displayed in the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the password from the form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:54\n                            \n                        \n\n                \n                    \n                        Angular router used to navigate the application\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the username from the form\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from '../auth.service';\n\n/**\n * Component that defines the login form\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Message with the current login status, to be displayed in the component\n   */\n  message: string;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Form control used to retrieve the username from the form\n   */\n  user: FormControl;\n\n  /**\n   * Form control used to retrieve the password from the form\n   */\n  password: FormControl;\n\n\n  /**\n   * Error message to be displayed if the ogin is not successful\n   */\n  errorMessage = undefined;\n\n\n  /**\n   * Builds an instance of the component\n   * @param {FormBuilder} formBuilder Angular FormBuilder used to build forms\n   * @param {AuthService} authService service used to check and handle authorization\n   * @param {Router} router Angular router used to navigate the application\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    public authService: AuthService,\n    public router: Router,\n    private spinnerService: NgxSpinnerService\n  ) {\n  }\n\n  /**\n   * Initializes the component and defines its form\n   */\n  ngOnInit() {\n    this.errorMessage = undefined;\n    this.user = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [Validators.required]);\n    this.formGroup = this.formBuilder.group({\n      user: this.user,\n      password: this.password,\n    });\n  }\n\n  /**\n   * Performs the login, by calling the login() function of {@link AuthService} passing the user and password retrieved from the form\n   */\n  login() {\n    this.errorMessage = undefined;\n    this.spinnerService.show();\n    this.authService.login(\n      this.formGroup.controls.user.value,\n      this.formGroup.controls.password.value,\n    ).subscribe(\n      (response) => {\n        if (response === true) {\n          // Get the redirect URL from our auth service\n          // If no redirect has been set, use the default\n          const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '';\n          // Redirect the user\n          this.router.navigate([redirect]);\n        }\n        this.spinnerService.hide();\n      },\n      (error) => {\n        this.spinnerService.hide();\n        this.setErrorMessage(error);\n      }\n    );\n  }\n\n  /**\n   * Performs the logout, by calling the logout() function of {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Sets the {@link errorMessage} to display, based on the status code of the error returned by the request.\n   * If the status code is 400, it shows that the credentials are not valid\n   * If the status code is not 400, it shows that there was a problem communicating with the server.\n   * @param {Error} error the error returned by the request\n   */\n  setErrorMessage(error) {\n    if (error.status === 400) {\n      this.errorMessage = 'The credentials provided are not valid';\n    } else {\n      this.errorMessage = 'There was an error communicating with the Server';\n      console.error('Error communicating with Server: ', error);\n    }\n    this.user.setErrors({'incorrect': true});\n    this.password.setErrors({'incorrect': true});\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       IAS ALMA \n    \n  \n  \n    \n        \n            \n                User\n                \n            \n            \n                Password\n                \n                 {{errorMessage}} \n            \n            \n                \n                  Login\n                \n            \n        \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .mat-card {\n  max-width: 580px;\n  margin: auto;\n\n  .mat-card-header {\n    border-top-left-radius: 0.375em;\n    border-top-right-radius: 0.375em;\n\n    .login-header {\n      text-align: center;\n      width: 100%;\n      margin-right: 16px;\n\n      .title {\n        display: block;\n        font-size: 34px;\n      }\n\n      .message {\n        display: block;\n        font-size: 12px;\n      }\n    }\n  }\n\n  .mat-card-content {\n    border-bottom-left-radius: 0.375em;\n    border-bottom-right-radius: 0.375em;\n  }\n}\n\n.login-form-container {\n  padding: 40px;\n\n  .form-group {\n\n    .form-field {\n      width: 100%;\n    }\n  }\n\n  .btn-login-container {\n    padding: 10px 0;\n    text-align: center;\n\n    .btn-login {\n      text-transform: uppercase;\n      font-weight: bold;\n      width: 100%;\n      display: inline-block;\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             IAS ALMA                                                 User                                                        Password                                 {{errorMessage}}                                                           Login                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                    \n                        contains the configuration to draw the map\n\n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                    \n                        Defines wether or no there is data available to draw the map\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                .ws-map {\n\n  width: 100%;\n\n  &.full-height {\n    height: calc(100vh - 130px);\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n    Modules\n    MapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MapService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: any, pathsGroups: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Scaling and calculation of max and min values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of groups of placemarks\n\n                                                        \n                                                \n                                                \n                                                        pathsGroups\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The viewbox: list of 4 numbers used to define the size of the map\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup: any): any {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialButtonsColorsComponent.html":{"url":"components/MaterialButtonsColorsComponent.html","title":"component - MaterialButtonsColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialButtonsColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display colors for different sets of material buttons\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-buttons-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                Basic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Basic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialButtonsColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialCardSampleComponent.html":{"url":"components/MaterialCardSampleComponent.html","title":"component - MaterialCardSampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialCardSampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display an example with the material card\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sample-card\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialCardSampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialColorsComponent.html":{"url":"components/MaterialColorsComponent.html","title":"component - MaterialColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component that displays color palletes for Angular Material Elements.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                {{palette}}\n\n  \n    {{item[1]}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                palettes\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palette\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        palette\n                    \n                    \n                        Name for the color pallete\n\n                        \n                            Default value : 'palette'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:123\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            palettes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        palettes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:39\n                            \n                        \n\n                \n                    \n                        List of grouped pairs (materialId, innerHTMLTextValue)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{palette}}      {{item[1]}}  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Main component to display some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.components.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialSandboxModule.html":{"url":"modules/MaterialSandboxModule.html","title":"module - MaterialSandboxModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialSandboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MaterialSandboxModule\n\n\n\ncluster_MaterialSandboxModule_declarations\n\n\n\ncluster_MaterialSandboxModule_imports\n\n\n\ncluster_MaterialSandboxModule_exports\n\n\n\n\nMaterialButtonsColorsComponent\n\nMaterialButtonsColorsComponent\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nMaterialSandboxModule -->\n\nMaterialButtonsColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialCardSampleComponent\n\nMaterialCardSampleComponent\n\nMaterialSandboxModule -->\n\nMaterialCardSampleComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialColorsComponent\n\nMaterialColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialToggleColorsComponent\n\nMaterialToggleColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialToggleColorsComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmComponent\n\nSandboxAlarmComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmLabelComponent\n\nSandboxAlarmLabelComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmLabelComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmTileComponent\n\nSandboxAlarmTileComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmTileComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent  -->\n\nMaterialSandboxModule->MaterialButtonsColorsComponent \n\n\n\n\n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent  -->\n\nMaterialSandboxModule->MaterialCardSampleComponent \n\n\n\n\n\nMaterialColorsComponent \n\nMaterialColorsComponent \n\nMaterialColorsComponent  -->\n\nMaterialSandboxModule->MaterialColorsComponent \n\n\n\n\n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent  -->\n\nMaterialSandboxModule->MaterialToggleColorsComponent \n\n\n\n\n\nSandboxAlarmComponent \n\nSandboxAlarmComponent \n\nSandboxAlarmComponent  -->\n\nMaterialSandboxModule->SandboxAlarmComponent \n\n\n\n\n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent  -->\n\nMaterialSandboxModule->SandboxAlarmLabelComponent \n\n\n\n\n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent  -->\n\nMaterialSandboxModule->SandboxAlarmTileComponent \n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nMaterialSandboxModule -->\n\nIasMaterialModule->MaterialSandboxModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMaterialSandboxModule -->\n\nSharedModule->MaterialSandboxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material-sandbox/material-sandbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MaterialButtonsColorsComponent\n                        \n                        \n                            MaterialCardSampleComponent\n                        \n                        \n                            MaterialColorsComponent\n                        \n                        \n                            MaterialToggleColorsComponent\n                        \n                        \n                            SandboxAlarmComponent\n                        \n                        \n                            SandboxAlarmLabelComponent\n                        \n                        \n                            SandboxAlarmTileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MaterialButtonsColorsComponent\n                        \n                        \n                            MaterialCardSampleComponent\n                        \n                        \n                            MaterialColorsComponent\n                        \n                        \n                            MaterialToggleColorsComponent\n                        \n                        \n                            SandboxAlarmComponent\n                        \n                        \n                            SandboxAlarmLabelComponent\n                        \n                        \n                            SandboxAlarmTileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MaterialColorsComponent } from './material-sandbox.components';\nimport { MaterialToggleColorsComponent } from './material-sandbox.components';\nimport { MaterialButtonsColorsComponent } from './material-sandbox.components';\nimport { MaterialCardSampleComponent } from './material-sandbox.components';\nimport { SandboxAlarmLabelComponent } from './material-sandbox.components';\nimport { SandboxAlarmComponent } from './material-sandbox.components';\nimport { SandboxAlarmTileComponent } from './material-sandbox.components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    SharedModule,\n    NgbModule\n  ],\n  declarations: [\n    MaterialColorsComponent,\n    MaterialToggleColorsComponent,\n    MaterialButtonsColorsComponent,\n    MaterialCardSampleComponent,\n    SandboxAlarmLabelComponent,\n    SandboxAlarmComponent,\n    SandboxAlarmTileComponent\n  ],\n  exports: [\n    MaterialColorsComponent,\n    MaterialToggleColorsComponent,\n    MaterialButtonsColorsComponent,\n    MaterialCardSampleComponent,\n    SandboxAlarmLabelComponent,\n    SandboxAlarmComponent,\n    SandboxAlarmTileComponent\n  ],\n  entryComponents: [\n  ]\n})\nexport class MaterialSandboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialToggleColorsComponent.html":{"url":"components/MaterialToggleColorsComponent.html","title":"component - MaterialToggleColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialToggleColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display material toggle colors\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-toggle-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                Material Toggle\nDefault \nPrimary \nAccent \nWarn\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Material ToggleDefault Primary Accent Warn'\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialToggleColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                ./overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n                \n                    ./overview-card.component.scss\n                \n                .ias.overview-card {\n  position: relative;\n  display: grid;\n  z-index: 100;\n  width: inherit;\n  margin: 40px 20px 60px 70px;\n\n  .marker-wrapper{\n    float: left;\n    position: absolute;\n    top: 10px;\n    left: -46px;\n    width: 46px;\n    height: 56px;\n    line-height: 56px;\n    z-index: 0;\n    text-align: left;\n    vertical-align: middle;\n    border-top-left-radius: 28px;\n    border-bottom-left-radius: 28px;\n\n    .marker {\n      margin: 0px 0px;\n      height: 100%;\n      position: absolute;\n      top:-2px;\n      left:-4px;\n      width: 56px;\n    }\n  }\n\n  .label{\n    position: absolute;\n    top: -1.45em;\n    right: 0;\n    height: 1em;\n    text-align: right;\n    text-transform: uppercase;\n    font-family: sans-serif;\n    font-size: 16px;\n    z-index: 1;\n  }\n\n  .content-wrapper{\n    position: relative;\n    top: 0;\n    left: 0;\n    min-height: 150px;\n    width: inherit;\n    min-width: 170px;\n\n    .content{\n      padding: 0px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n    \n    \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n    \n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                /* TODO: Remove provisory adjustments for the health marker if related resources are available */\n\n#ias-card-health-marker {\n  padding-left: 14px;\n  padding-right: 12px;\n}\n\n.ias-overview {\n  display: flex;\n\n  .content {\n    padding-top: 45px;\n    width: 100%;\n  }\n}\n\n.no-margin {\n  margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     IAS HEALTH                                                                  ANTENNAS                                                                  WEATHER                                                 '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n    Modules\n    OverviewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OverviewCardComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AntennasModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OverviewCardComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanActionOutlet\n                            \n                            \n                                goToAcknowledge\n                            \n                            \n                                goToAntennas\n                            \n                            \n                                goToLogin\n                            \n                            \n                                goToShelve\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-routing/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cleanActionOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \ncleanActionOutlet()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Go to login and clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TableComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TableComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TableComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TableComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  goToAcknowledge(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', alarm_id]}}]);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  goToShelve(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['shelve', alarm_id]}}]);\n  }\n\n  /**\n  * Clean action outlet\n  */\n  cleanActionOutlet() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n  * Go to login and clean action outlet\n  */\n  goToLogin() {\n    this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmComponent.html":{"url":"components/SandboxAlarmComponent.html","title":"component - SandboxAlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n  \n    {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n  \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelLocation\n                            \n                            \n                                labelMode\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelLocation\n                    \n                    \n                        Label location \n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:428\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelMode\n                    \n                    \n                        Show or hide label text \n\n                        \n                            Default value : 'text'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:422\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Size category \n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:425\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:499\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:482\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:440\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:473\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:416\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:419\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     Alarm[]\n\n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:413\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:410\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{componentName}} - labelMode: {{labelMode}} - size: {{size}}                      {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmLabelComponent.html":{"url":"components/SandboxAlarmLabelComponent.html","title":"component - SandboxAlarmLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm-label\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n   {{componentName}} \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:344\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:313\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:361\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     Alarm[]\n\n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:301\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AlarmLabel'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:298\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{componentName}}                     {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmTileComponent.html":{"url":"components/SandboxAlarmTileComponent.html","title":"component - SandboxAlarmTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm-tile\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n   {{componentName}} \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:647\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:630\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:589\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:622\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:574\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:577\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     Alarm[]\n\n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:571\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm Tile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:568\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{componentName}}                     {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmCardComponent\n\nAlarmCardComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmCardComponent->SharedModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nAlarmInfoComponent\n\nAlarmInfoComponent\n\nSharedModule -->\n\nAlarmInfoComponent->SharedModule\n\n\n\n\n\nAlarmLabelComponent\n\nAlarmLabelComponent\n\nSharedModule -->\n\nAlarmLabelComponent->SharedModule\n\n\n\n\n\nAlarmTileComponent\n\nAlarmTileComponent\n\nSharedModule -->\n\nAlarmTileComponent->SharedModule\n\n\n\n\n\nAlarmTooltipComponent\n\nAlarmTooltipComponent\n\nSharedModule -->\n\nAlarmTooltipComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmCardComponent \n\nAlarmCardComponent \n\nAlarmCardComponent  -->\n\nSharedModule->AlarmCardComponent \n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nAlarmInfoComponent \n\nAlarmInfoComponent \n\nAlarmInfoComponent  -->\n\nSharedModule->AlarmInfoComponent \n\n\n\n\n\nAlarmLabelComponent \n\nAlarmLabelComponent \n\nAlarmLabelComponent  -->\n\nSharedModule->AlarmLabelComponent \n\n\n\n\n\nAlarmTileComponent \n\nAlarmTileComponent \n\nAlarmTileComponent  -->\n\nSharedModule->AlarmTileComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlarmCardComponent\n                        \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            AlarmInfoComponent\n                        \n                        \n                            AlarmLabelComponent\n                        \n                        \n                            AlarmTileComponent\n                        \n                        \n                            AlarmTooltipComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlarmCardComponent\n                        \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            AlarmInfoComponent\n                        \n                        \n                            AlarmLabelComponent\n                        \n                        \n                            AlarmTileComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\nimport { AlarmTooltipComponent } from './alarm-tooltip/alarm-tooltip.component';\nimport { AlarmCardComponent } from './alarm-card/alarm-card.component';\nimport { AlarmTileComponent } from './alarm-tile/alarm-tile.component';\nimport { AlarmInfoComponent } from './alarm-info/alarm-info.component';\nimport { AlarmLabelComponent } from './alarm-label/alarm-label.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n    AlarmTooltipComponent,\n    AlarmCardComponent,\n    AlarmTileComponent,\n    AlarmInfoComponent,\n    AlarmLabelComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n    AlarmCardComponent,\n    AlarmTileComponent,\n    AlarmInfoComponent,\n    AlarmLabelComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                ./shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:29\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n\n  /**\n   * Instantiates the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  */\n  onClick(): void {\n    this.sidenavService.goToShelve(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./shelve-button.component.css\n                \n                .shelve-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 0px;\n  margin: 0px 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.shelve-button-icon {\n  width: 18px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                lastAlarmId\n                            \n                            \n                                    Public\n                                shouldReload\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAndClean\n                            \n                            \n                                    Public\n                                goToAcknowledge\n                            \n                            \n                                    Public\n                                goToShelve\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routingService: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routingService\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeAndClean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAndClean()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav and cleans the actions outlet\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Opens the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the reference to the sidenav\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Reference to the sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Toggles the sidenav (open/close)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:36\n                            \n                        \n\n                \n                    \n                        Defines wether or not the sidenav can be closed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                        Id of the last Alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldReload:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe status of the service connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the sidenav \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs';\nimport { RoutingService } from '../app-routing/routing.service';\n\n/**\n* Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public shouldReload = new BehaviorSubject(false);\n\n  /**\n  * Id of the last {@link Alarm}\n  */\n  lastAlarmId = '';\n\n  /**\n   * Builds an instance of the service\n   */\n  constructor(\n    private routingService: RoutingService\n  ) { }\n\n  /** Reference to the sidenav */\n  private sidenav: MatSidenav;\n\n  /** Defines wether or not the sidenav can be closed */\n  public canClose = true;\n\n  /**\n  * Sets the reference to the sidenav\n  * @param {MatSidenav} sidenav Reference to the sidenav\n  */\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  /**\n  * Opens the sidenav\n  */\n  public open() {\n    return this.sidenav.open();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  public close() {\n    return this.sidenav.close();\n  }\n\n  /**\n  * Closes the sidenav and cleans the actions outlet\n  */\n  public closeAndClean() {\n    this.routingService.cleanActionOutlet();\n    return this.close();\n  }\n\n  /**\n  * Toggles the sidenav (open/close)\n  */\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  public goToAcknowledge(alarm_id: string) {\n    this.routingService.goToAcknowledge(alarm_id);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  public goToShelve(alarm_id: string) {\n    if (alarm_id === this.lastAlarmId) {\n      this.shouldReload.next(true);\n    } else {\n      this.lastAlarmId = alarm_id;\n    }\n    this.routingService.goToShelve(alarm_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                ./status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:45\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the alarmTags\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsPrioritySet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./status-view.component.css\n                \n                .alarm-icon {\n  height: 100%;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n    Modules\n    TabularModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTabularModule -->\n\nTableComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nTabularModule->TableComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the components related to the Table view\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LegendComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TabularViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { TableComponent } from './table/table.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TableComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TableComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabularViewComponent.html":{"url":"components/TabularViewComponent.html","title":"component - TabularViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabularViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/tabular-view/tabular-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component that dispays all the Alarms in a table using the TableComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabular-view\n            \n\n            \n                styleUrls\n                ./tabular-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabular-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/tabular-view/tabular-view.component.ts:11\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method executed when the Component is initializated\nDoes not do anything at the moment\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that dispays all the Alarms in a table using the {@link TableComponent}\n*/\n@Component({\n  selector: 'app-tabular-view',\n  templateUrl: './tabular-view.component.html',\n  styleUrls: ['./tabular-view.component.scss']\n})\nexport class TabularViewComponent implements OnInit {\n\n  /**\n   * Instantiates the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the Component is initializated\n   * Does not do anything at the moment\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./tabular-view.component.scss\n                \n                .mat-card {\n\n  .mat-card-header {\n    display: block;\n    padding: 20px;\n    border-top-left-radius: 0.375em;\n    border-top-right-radius: 0.375em;\n  }\n\n  .mat-card-content {\n    border-bottom-left-radius: 0.375em;\n    border-bottom-right-radius: 0.375em;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabularViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { UserService } from '../../data/user.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { Alarm } from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '00:15:00', viewValue: '15 minutes'},\n    {value: '00:30:00', viewValue: '30 minutes'},\n    {value: '01:00:00', viewValue: '1 hour'},\n    {value: '02:00:00', viewValue: '2 hours'},\n    {value: '06:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * FormControl for the user who performs the action\n  */\n  user: FormControl;\n\n  /**\n   * Selected user\n   */\n  user_selected: string;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n  * Stores the error message returned by the Webserver if a shelve or unshelve request fails\n  */\n  errorMessage = '';\n\n  /**\n  * Stores the message with the information of when the alarm has been shelved and for how long\n  */\n  shelvedAtMessage = '';\n\n  /**\n   * Route param map subscription\n   */\n  paramMapSubscription: ISubscription;\n\n   /**\n    * Alarm change subscription\n    */\n  alarmChangeSubscription: ISubscription;\n\n  /**\n   * Sidenav service subscription\n   */\n sidenavReloadSubscription: ISubscription;\n\n /** String to store the formatting of dates, read form the settings */\n private dateFormat: string;\n\n /** String to store the timezone to display dates, read from the settings */\n private timezone: string;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {NgxSpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {UserService} userService Service to handle request to the users api\n   * @param {AuthService} authService Service to ask for the logged in user\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private userService: UserService,\n    public authService: AuthService\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n    this.user = new FormControl('', [Validators.required]);\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.shelvedAtMessage = '';\n    this.form = this.formBuilder.group({\n      user: this.user,\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.paramMapSubscription = this.route.paramMap\n    .subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.check_request_and_reload();\n    });\n    this.sidenavReloadSubscription = this.sidenavService.shouldReload\n    .subscribe(\n      value => {\n        if (value === true) {\n          this.reload();\n        }\n      }\n    );\n    this.alarmChangeSubscription = this.alarmService.alarmChangeStream\n    .subscribe( () => {\n      this.check_request_and_reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /**\n  * Method to manage the information of the component\n  */\n  check_request_and_reload(): void {\n    const alarmDataAvailable = this.alarmService.isAlarmIndexAvailable(\n      this.alarm_id\n    );\n    if (alarmDataAvailable === true) {\n      if (this.alarm) {\n        if (this.alarm.core_id !== this.alarm_id) {\n          this.reload();\n        }\n      } else {\n        this.reload();\n      }\n    }\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    if (this.paramMapSubscription) {\n      this.paramMapSubscription.unsubscribe();\n    }\n    if (this.sidenavReloadSubscription) {\n      this.sidenavReloadSubscription.unsubscribe();\n    }\n    if (this.alarmChangeSubscription) {\n      this.alarmChangeSubscription.unsubscribe();\n    }\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    const allowedShelve = this.authService.getAllowedActions()['can_shelve'];\n    const allowedUnshelve = this.authService.getAllowedActions()['can_unshelve'];\n    const isAllowed = allowedShelve && allowedUnshelve;\n    return (this.alarm.shelved || this.form.valid) && isAllowed;\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    let action: string;\n    if (!this.alarm.shelved) {\n      action = 'Shelving';\n    } else {\n      action = 'Unshelving';\n    }\n    if (this.requestStatus === 1) {\n      return action + ' results';\n    } else if (this.requestStatus === -1 ) {\n      return 'Error ' + action;\n    } else if (this.requestStatus === -2) {\n      return 'Action not allowed';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        response = 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        response = 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    } else if (this.requestStatus === -2 ) {\n      response = 'The logged in user (' + this.authService.getUser();\n      if (!this.alarm.shelved) {\n        response += ') does not have permissions to perform the shelve.';\n      } else {\n        response += ') does not have permissions to perform the unshelve.';\n      }\n    }\n    return response;\n  }\n\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.shelvedAtMessage = '';\n    this.alarm = this.alarmService.get(this.alarm_id);\n    if (this.alarm.shelved) {\n      this.requestShelveInfo();\n    }\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Requests the alarm shelving info to the Webserver\n   */\n  requestShelveInfo(): void {\n    this.alarmService.getShelveRegistries(this.alarm_id, 1).subscribe(\n        (response: any) => {\n          const registry = response[0];\n          this.shelvedAtMessage = 'This Alarm was shelved at ' + registry['shelved_at'] +\n          ' with a duration of ' + this.timeouts.find(t => t.value === registry['timeout']).viewValue;\n        },\n        (error: any) => {\n          console.log('Error: ', error);\n          return error;\n        }\n      );\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(\n        this.alarm.core_id, message, timeout, this.user_selected\n      ).subscribe(\n          (response: any) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error: any) => {\n            if (error.status === 403) {\n              this.requestStatus = -2;\n            } else {\n              this.requestStatus = -1;\n            }\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response: any) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error: any) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Class that models a User\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Optional email \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique username \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\nimport { Subscription } from 'rxjs';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {Subscription} subscription to the list of users\n  */\n  requestUsersList(): Subscription {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to manage information about user accounts\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestUsersList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestUsersList\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestUsersList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/user.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Get the list of users in the operators group\n\n\n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    subscription to the list of users\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                        List of authorized users\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\nimport { Subscription } from 'rxjs';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {Subscription} subscription to the list of users\n  */\n  requestUsersList(): Subscription {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display backups weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                ./weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display backups weather station in a map\n */\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.getAlarm(this.stationConfig);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./weather-backup-ws-marker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a WeatherSidebar),\nand a map (instantiated by a WeatherMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStation:     AlarmConfig\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedStation: AlarmConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AlarmConfig}\n   */\n  changeSelectedStation(selectedStation: AlarmConfig): void {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                mat-sidenav-container {\n  background: transparent;\n  height: 100%;\n}\n\n#weather-map {\n}\n\n#weather-sidenav {\n  background: transparent;\n  width: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display the weather station summary information in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                ./weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:29\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:38\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\n\n\n/**\n * Marker to display the weather station summary information in a map\n */\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() { }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather-data-marker.component.scss\n                \n                .ws-data-container {\n  border-style: solid;\n  border-width: 2px;\n  border-radius: 4px;\n  padding: 10px;\n  text-align: center;\n  font-size: 16px;\n  min-width: fit-content;\n\n  .weather-icons {\n  }\n\n  .icon {\n    padding: 0px 10px;\n    width: fit-content;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the components related to the Weather system\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WeatherBackupWsMarkerComponent\n                        \n                        \n                            WeatherComponent\n                        \n                        \n                            WeatherDataMarkerComponent\n                        \n                        \n                            WeatherMapComponent\n                        \n                        \n                            WeatherPrimaryWsConnectorComponent\n                        \n                        \n                            WeatherPrimaryWsMarkerComponent\n                        \n                        \n                            WeatherSidebarComponent\n                        \n                        \n                            WeatherStationSidebarComponent\n                        \n                        \n                            WeatherSummaryComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WeatherSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n    \n        Description\n    \n    \n        Line connector between the weather station marker and the summarized weather\ninformation marker in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                ./weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                    \n                        Array of coordinates for the connector path \n\n                            \n                            Type :    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Value to highlight the connector \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns the svg path used to draw the line in the map\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    svg path that represent the line\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\n/**\n * Line connector between the weather station marker and the summarized weather\n * information marker in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  /**\n  * Builds an instance of the component */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the svg path used to draw the line in the map\n   * @returns {string} svg path that represent the line\n   */\n  getPath(): string {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./weather-primary-ws-connector.component.scss\n                \n                .ws-connector {\n  fill: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display primary weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                ./weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display primary weather station in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./weather-primary-ws-marker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the WeatherModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                markerImageSet\n                            \n                            \n                                    Public\n                                markerImageUnreliableSet\n                            \n                            \n                                    Public\n                                padsStatus\n                            \n                            \n                                    Public\n                                padsStatusAvailable\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                weatherMapName\n                            \n                            \n                                    Public\n                                weatherStationsConfig\n                            \n                            \n                                    Public\n                                weatherSummaryConfig\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIconSet\n                            \n                            \n                                getMapData\n                            \n                            \n                                getPadsStatus\n                            \n                            \n                                initialize\n                            \n                            \n                                loadImages\n                            \n                            \n                                loadPadsStatus\n                            \n                            \n                                loadWeatherStationsConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:57\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIconSet(config: AlarmConfig, reliable: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Returns the instance of the Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the corresponding AlarmConfig from where to get the type\n\n                                                        \n                                                \n                                                \n                                                        reliable\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AlarmImageSet\n\n                            \n                                \n                                    the type of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the group\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:133\n                            \n                        \n\n\n                \n                    \n                            Loads the pads status in the related variable of this service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the group\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWeatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWeatherStationsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:145\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:57\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:18\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:30\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:27\n                            \n                        \n\n                \n                    \n                        Set of Marker icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:39\n                            \n                        \n\n                \n                    \n                        Set of Marker Unreliable icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        padsStatus:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:51\n                            \n                        \n\n                \n                    \n                        Stores the response of the pads status request to the websver \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatusAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        padsStatusAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:54\n                            \n                        \n\n                \n                    \n                        Variable to check if pads status is available \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:21\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:33\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:48\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherStationsConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:45\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm Ids of the Weather Stations, indexed by placemark *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherSummaryConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:42\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the weather summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:24\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:36\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { AlarmService } from '../data/alarm.service';\nimport { Alarm } from '../data/alarm';\nimport { AlarmConfig } from '../data/alarm-config';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: AlarmConfig[];\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: AlarmConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Stores the response of the pads status request to the websver */\n  public padsStatus = null;\n\n  /** Variable to check if pads status is available */\n  public padsStatusAvailable = new BehaviorSubject(false);\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this.loadPadsStatus('');\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @param {AlarmConfig} config the corresponding AlarmConfig from where to get the type\n  * @returns {string} the type of the {@link Alarm} associated to the given {@link AlarmConfig}\n  */\n  getIconSet(config: AlarmConfig, reliable: boolean): AlarmImageSet {\n    if (!config) {\n      return null;\n    }\n    const type = config.type;\n    if (reliable) {\n      if (config.type === 'humidity') {\n        return this.humidityImageSet;\n      } else if (config.type === 'temperature') {\n        return this.tempImageSet;\n      } else if (config.type === 'windspeed') {\n        return this.windsImageSet;\n      }\n    } else {\n      if (config.type === 'humidity') {\n        return this.humidityImageUnreliableSet;\n      } else if (config.type === 'temperature') {\n        return this.tempImageUnreliableSet;\n      } else if (config.type === 'windspeed') {\n        return this.windsImageUnreliableSet;\n      }\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n  * @param {string} group the group\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getPadsStatus(group: string): Observable {\n    const url = BackendUrls.PADS_STATUS + group;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Loads the pads status in the related variable of this service\n  * @param {string} group the group\n  */\n  loadPadsStatus(group: string) {\n    this.getPadsStatus(group).subscribe(\n      (response) => {\n        this.padsStatusAvailable.next(false);\n        this.padsStatus = response;\n        this.padsStatusAvailable.next(true);\n    });\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as AlarmConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as AlarmConfig[];\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'humidity-valid-clear.svg',\n      set_low: Assets.ICONS + 'humidity-valid-low.svg',\n      set_medium: Assets.ICONS + 'humidity-valid-low.svg',\n      set_high: Assets.ICONS + 'humidity-valid-critical.svg',\n      set_critical: Assets.ICONS + 'humidity-valid-critical.svg',\n      unknown: Assets.ICONS + 'humidity-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'humidity-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'humidity-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temperature-valid-clear.svg',\n      set_low: Assets.ICONS + 'temperature-valid-low.svg',\n      set_medium: Assets.ICONS + 'temperature-valid-low.svg',\n      set_high: Assets.ICONS + 'temperature-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temperature-valid-critical.svg',\n      unknown: Assets.ICONS + 'temperature-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'temperature-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'temperature-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_speed-clear-valid.svg',\n      set_low: Assets.ICONS + 'wind_speed-others-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_speed-others-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_speed-critical-valid.svg',\n      set_critical: Assets.ICONS + 'wind_speed-critical-valid.svg',\n      unknown: Assets.ICONS + 'wind_speed-clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'wind_speed-clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'wind_speed-clear-valid.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'humidity-invalid-clear.svg',\n      set_low: Assets.ICONS + 'humidity-invalid-low.svg',\n      set_medium: Assets.ICONS + 'humidity-invalid-low.svg',\n      set_high: Assets.ICONS + 'humidity-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'humidity-invalid-critical.svg',\n      unknown: Assets.ICONS + 'humidity-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'humidity-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'humidity-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temperature-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temperature-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temperature-invalid-low.svg',\n      set_high: Assets.ICONS + 'temperature-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temperature-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temperature-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'temperature-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'temperature-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_speed-clear-invalid.svg',\n      set_low: Assets.ICONS + 'wind_speed-others-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_speed-others-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_speed-critical-invalid.svg',\n      set_critical: Assets.ICONS + 'wind_speed-critical-invalid.svg',\n      unknown: Assets.ICONS + 'wind_speed-clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'wind_speed-clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'wind_speed-clear-valid.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_station-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_station-valid-low.svg',\n      set_medium: Assets.ICONS + 'weather_station-valid-low.svg',\n      set_high: Assets.ICONS + 'weather_station-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_station-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_station-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_station-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_station-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_station-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_station-invalid-low.svg',\n      set_medium: Assets.ICONS + 'weather_station-invalid-low.svg',\n      set_high: Assets.ICONS + 'weather_station-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_station-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_station-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_station-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_station-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSidebarComponent.html":{"url":"components/WeatherSidebarComponent.html","title":"component - WeatherSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms in an interactive sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-sidebar\n            \n\n            \n                styleUrls\n                ./weather-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyAntennas\n                            \n                            \n                                getAntennas\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                panelClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, clipboardService: ClipboardService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        clipboardService\n                                                  \n                                                        \n                                                                    ClipboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to copy text to clipboard\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to notify user actions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        panelClicked\n                    \n                    \n                        Event emitted to notify when an weather station is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyAntennas(stationConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Copy list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the data was copied to the clipboard, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(stationConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(stationConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Indicates if the weather station is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(stationConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Action performed when the weather station is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string, action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Triggers the snackBar during 20 seconds and show the information specified\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the snackbar\n\n                                                        \n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the button of the snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Service used to notify user actions\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { WeatherService } from '../weather.service';\n\n/**\n* Component used to display Weather Alarms in an interactive sidebar\n*/\n@Component({\n  selector: 'app-weather-sidebar',\n  templateUrl: './weather-sidebar.component.html',\n  styleUrls: ['./weather-sidebar.component.scss']\n})\nexport class WeatherSidebarComponent implements OnInit {\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedStation: AlarmConfig = null;\n\n  /** Event emitted to notify when an weather station is selected */\n  @Output() panelClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {ClipboardService} clipboardService Service used to copy text to clipboard\n  * @param {MatSnackBar} snackBar Service used to notify user actions\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private clipboardService: ClipboardService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  * Initializes the {@link WeatherService} if not already initialized\n  */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n  * Copy list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {boolean} true if the data was copied to the clipboard, false if not\n  */\n  copyAntennas(stationConfig: AlarmConfig): boolean {\n    const antennas = this.getAntennas(stationConfig);\n    const result = antennas.join(',');\n    const status = this.clipboardService.copyFromContent(result);\n    let message = '';\n    if (status) {\n      message = 'Antennas copied to clipboard';\n    } else {\n      message = 'ERROR: Antennas were not copied!';\n    }\n    this.openSnackBar(message, 'Done');\n    return status;\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(stationConfig: AlarmConfig): string[] {\n    const response = [];\n    if ( this.weatherService.padsStatus && stationConfig.group !== '' ) {\n        const pads = this.weatherService.padsStatus[stationConfig.group];\n        for (const pad_name in pads) {\n            if (pads[pad_name]) {\n                response.push(pads[pad_name]);\n            }\n        }\n    }\n    return response.sort();\n  }\n\n  /**\n  * Indicates if the weather station is selected or not\n  * @param {AlarmConfig} stationConfig configuration of the weather station\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(stationConfig: AlarmConfig): boolean {\n    return this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark);\n  }\n\n  /**\n  * Action performed when the weather station is clicked\n  * @param {AlarmConfig} stationConfig configuration of the clicked weather station\n  */\n  onClick(stationConfig: AlarmConfig) {\n    if ( this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark) ) {\n      this.selectedStation = null;\n    } else {\n      this.selectedStation = stationConfig;\n    }\n    this.panelClicked.emit(this.selectedStation);\n  }\n\n  /**\n   * Triggers the snackBar during 20 seconds and show the information specified\n   * @param {string} message Message to show in the snackbar\n   * @param {string} action Message to show in the button of the snackbar\n   */\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 5000,\n      panelClass: ['snackbar']\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    WEATHER STATIONS\n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n          \n             Nearby Antennas \n            \n               &nbsp;  Copy antennas \n            \n          \n          \n            \n               {{antenna}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./weather-sidebar.component.scss\n                \n                .weather-sidebar-card {\n  padding: 0 12px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  .weather-sidebar-title {\n    padding: 12px 0;\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n  }\n\n  .weather-sidebar-content {\n    padding: 12px 0;\n    height: 100%;\n    overflow-y: auto;\n\n    .mat-expansion-panel {\n      background: transparent;\n      margin: 10px 0px;\n      border-radius: 4px;\n      box-shadow: none;\n\n        td {\n          padding: 5px;\n          height: 40px;\n\n          &.station {\n            padding-left: 0;\n            font-weight: bold;\n            height: 30px;\n            width: fit-content;\n            align: right;\n          }\n        }\n        .icon {\n          padding-left: 20px;\n          font-weight: bold;\n          height: 30px;\n          width: fit-content;\n          align: right;\n        }\n        .text {\n          padding-left: 0;\n          height: 30px;\n          width: fit-content;\n          align: right;\n        }\n        .status {\n          padding-left: 20px;\n        }\n        .buttons {\n          width: 100%;\n        }\n    }\n\n    app-weather-station-sidebar {\n      width: 100%;\n    }\n\n    .weather-sidebar-header {\n      padding-left: 0px;\n      position: relative;\n\n      &.mat-expanded {\n      }\n\n      &:hover {\n        background: transparent;\n      }\n    }\n\n    .antennas-list-line {\n      margin-bottom: 0.2rem;\n    }\n\n    .antennas-list-header {\n      height: 37.27px;\n      vertical-align: middle;\n      padding-left: 10px;\n      padding-right: 10px;\n\n      .antennas-title {\n        line-height: 40px;\n        font-weight: bold;\n      }\n\n      .copy-antennas-button {\n        padding-left: 5px;\n        padding-right: 5px;\n      }\n    }\n\n    .antennas-list {\n      max-height: 200px;\n      margin-top: 10px;\n      overflow-y: auto;\n      border-width: 1px;\n      border-style: solid;\n      border-radius: 4px;\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      WEATHER STATIONS                                                                                                                                                                                                                                                                                                                                                                                                                                                           Nearby Antennas                               Copy antennas                                                            {{antenna}}                                           '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display an item containing a weather station summary in the interactive Sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                ./weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Weather station config object \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:29\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n * Component to display an item containing a weather station summary in the interactive Sidebar\n */\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /** Weather station config object */\n  @Input() stationConfig: AlarmConfig;\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedAlarm: AlarmConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  */\n  ngOnInit() { }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass(): string {\n    if (this.selectedAlarm && (this.selectedAlarm.alarm_id === this.stationConfig.alarm_id)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./weather-station-sidebar.component.scss\n                \n                .weather-station-sidebar {\n    height: 60px;\n    line-height: 20px;\n    width: 100%;\n    padding-right: 50px;\n    border-radius: 4px;\n    position: absolute;\n    top:0;\n    left:0;\n\n    .weather-icons {\n      line-height: initial;\n      margin: 14px 0;\n    }\n\n    .icon {\n      padding: 0 10px;\n      width: fit-content;\n    }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                ./weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { WeatherService } from '../weather.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./weather-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n\n    .item {\n      border-right-width: 1px;\n      border-right-style: solid;\n\n      &.no-border {\n        border: solid;\n        border-width: 0;\n      }\n\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                ./wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDisabled\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.url;\n  }\n\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick() {\n    if (!this.url.match(/^https?:\\/\\//i)) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n  \n      \n  \n  \n      \n  \n\n\n    \n\n    \n                \n                    ./wiki-button.component.css\n                \n                .wiki-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 1px;\n  margin: 0px 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.wiki-button-icon {\n  width: 18px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/actions/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedTreeData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarmData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack/ack.component.ts\n            \n            \n                component\n            \n            \n                AckComponent\n            \n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                src/app/actions/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                component\n            \n            \n                ShelveComponent\n            \n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                interface\n            \n            \n                TimeoutOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/sidenav.service.ts\n            \n            \n                injectable\n            \n            \n                SidenavService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/actions/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                component\n            \n            \n                AntennaMarkerComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            \n                component\n            \n            \n                AntennasMapComponent\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            \n                component\n            \n            \n                AntennasSidebarComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            \n                component\n            \n            \n                AntennasSummaryComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            \n                injectable\n            \n            \n                AntennasService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas/antennas.component.ts\n            \n            \n                component\n            \n            \n                AntennasComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAntennasConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockDevicesConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesUnreliableSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app-routing/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/data/alarm-config.ts\n            \n            \n                class\n            \n            \n                AlarmConfig\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                class\n            \n            \n                AlarmSounds\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/map/fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/map/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialButtonsColorsComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialCardSampleComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialColorsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialSandboxComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialToggleColorsComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                SandboxAlarmComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                SandboxAlarmLabelComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                SandboxAlarmTileComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                AntennasSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                WeatherSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-card/alarm-card.component.ts\n            \n            \n                component\n            \n            \n                AlarmCardComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-card/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/alarm-header.component.ts\n            \n            \n                component\n            \n            \n                AlarmHeaderComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-info/alarm-info.component.ts\n            \n            \n                component\n            \n            \n                AlarmInfoComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/alarm-label.component.ts\n            \n            \n                component\n            \n            \n                AlarmLabelComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedClassesWhenHiddenText\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedClassesWhenShowText\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/alarm-tile.component.ts\n            \n            \n                component\n            \n            \n                AlarmTileComponent\n            \n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tooltip/alarm-tooltip.component.ts\n            \n            \n                component\n            \n            \n                AlarmTooltipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ChangedAlarm2\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ChangedAlarm5\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedReducedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedReducedTableRowsAfterChange\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarmsToDisplay\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/table.component.ts\n            \n            \n                component\n            \n            \n                TableComponent\n            \n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                alarm_types\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAntennas\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockPadsStatus\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherStationsConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherBackupWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherDataMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsConnectorComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map/weather-map.component.ts\n            \n            \n                component\n            \n            \n                WeatherMapComponent\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherSidebarComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherStationSidebarComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                src/app/weather/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.docker.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 7.2.3\n        \n            @angular/cdk : ^7.3.0\n        \n            @angular/common : 7.2.3\n        \n            @angular/compiler : 7.2.3\n        \n            @angular/core : 7.2.3\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : 7.2.3\n        \n            @angular/http : 7.2.3\n        \n            @angular/material : ^7.3.0\n        \n            @angular/platform-browser : 7.2.3\n        \n            @angular/platform-browser-dynamic : 7.2.3\n        \n            @angular/platform-server : 7.2.3\n        \n            @angular/router : 7.2.3\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.2\n        \n            bootstrap : ^4.2.1\n        \n            core-js : ^2.6.3\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.24.0\n        \n            ngx-clipboard : ^11.1.9\n        \n            ngx-spinner : ^7.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.4.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 malfunctioning\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialSandboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_MaterialSandboxModule\n\n\n\ncluster_MaterialSandboxModule_declarations\n\n\n\ncluster_MaterialSandboxModule_exports\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\nHealthModule -->\n\nIasMaterialModule->HealthModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nMaterialSandboxModule -->\n\nIasMaterialModule->MaterialSandboxModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\nMaterialSandboxModule -->\n\nSharedModule->MaterialSandboxModule\n\n\n\n\n\nAlarmCardComponent \n\nAlarmCardComponent \n\nAlarmCardComponent  -->\n\nSharedModule->AlarmCardComponent \n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nAlarmInfoComponent \n\nAlarmInfoComponent \n\nAlarmInfoComponent  -->\n\nSharedModule->AlarmInfoComponent \n\n\n\n\n\nAlarmLabelComponent \n\nAlarmLabelComponent \n\nAlarmLabelComponent  -->\n\nSharedModule->AlarmLabelComponent \n\n\n\n\n\nAlarmTileComponent \n\nAlarmTileComponent \n\nAlarmTileComponent  -->\n\nSharedModule->AlarmTileComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\nAntennasModule -->\n\nTabularModule->AntennasModule\n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nTabularModule->TableComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\nAppRoutingModule -->\n\nMaterialSandboxModule->AppRoutingModule\n\n\n\n\n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent  -->\n\nMaterialSandboxModule->MaterialButtonsColorsComponent \n\n\n\n\n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent  -->\n\nMaterialSandboxModule->MaterialCardSampleComponent \n\n\n\n\n\nMaterialColorsComponent \n\nMaterialColorsComponent \n\nMaterialColorsComponent  -->\n\nMaterialSandboxModule->MaterialColorsComponent \n\n\n\n\n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent  -->\n\nMaterialSandboxModule->MaterialToggleColorsComponent \n\n\n\n\n\nSandboxAlarmComponent \n\nSandboxAlarmComponent \n\nSandboxAlarmComponent  -->\n\nMaterialSandboxModule->SandboxAlarmComponent \n\n\n\n\n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent  -->\n\nMaterialSandboxModule->SandboxAlarmLabelComponent \n\n\n\n\n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent  -->\n\nMaterialSandboxModule->SandboxAlarmTileComponent \n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nMaterialButtonsColorsComponent\n\nMaterialButtonsColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialButtonsColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialCardSampleComponent\n\nMaterialCardSampleComponent\n\nMaterialSandboxModule -->\n\nMaterialCardSampleComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialColorsComponent\n\nMaterialColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialToggleColorsComponent\n\nMaterialToggleColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialToggleColorsComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmComponent\n\nSandboxAlarmComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmLabelComponent\n\nSandboxAlarmLabelComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmLabelComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmTileComponent\n\nSandboxAlarmTileComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmTileComponent->MaterialSandboxModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmCardComponent\n\nAlarmCardComponent\n\nSharedModule -->\n\nAlarmCardComponent->SharedModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nAlarmInfoComponent\n\nAlarmInfoComponent\n\nSharedModule -->\n\nAlarmInfoComponent->SharedModule\n\n\n\n\n\nAlarmLabelComponent\n\nAlarmLabelComponent\n\nSharedModule -->\n\nAlarmLabelComponent->SharedModule\n\n\n\n\n\nAlarmTileComponent\n\nAlarmTileComponent\n\nSharedModule -->\n\nAlarmTileComponent->SharedModule\n\n\n\n\n\nAlarmTooltipComponent\n\nAlarmTooltipComponent\n\nSharedModule -->\n\nAlarmTooltipComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTabularModule -->\n\nTableComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    46 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
