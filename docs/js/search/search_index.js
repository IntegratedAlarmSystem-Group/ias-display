var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.159,1,0.67]],["body/components/AckButtonComponent.html",[0,0.316,1,1.081,2,0.121,3,0.087,4,0.703,5,1.374,6,0.671,7,0.071,8,4.972,9,5.452,10,2.409,11,0.346,12,1.464,13,0.733,14,3.042,15,2.984,16,2.728,17,2.777,18,4.158,19,0.86,20,0.996,21,4.814,22,0.736,23,1.397,24,1.331,25,1.304,26,0.86,27,3.72,28,0.86,29,3.72,30,0.292,31,0.86,32,1.256,33,3.499,34,0.753,35,6.061,36,5.225,37,5.225,38,1.081,39,3.132,40,1.631,41,0.713,42,0.533,43,2.953,44,6.094,45,6.094,46,0.622,47,4.158,48,0.705,49,0.78,50,0.946,51,0.018,52,0.63,53,0.796,54,0.78,55,1.398,56,3.374,57,0.753,58,3.86,59,2.565,60,4.675,61,5.225,62,2.421,63,1.706,64,1.625,65,3.425,66,2.421,67,4.823,68,0.745,69,2.467,70,1.706,71,3.425,72,1.963,73,4.675,74,1.865,75,3.425,76,1.135,77,1.631,78,3.393,79,4.158,80,3.72,81,3.72,82,4.158,83,4.158,84,0.816,85,3.425,86,3.72,87,5.225,88,3.425,89,1.783,90,3.936,91,2.915,92,3.72,93,2.915,94,2.953,95,0.245,96,0.121,97,2.953,98,2.224,99,0.771,100,0.104,101,0.036,102,1.03,103,1.242,104,1.103,105,2.953,106,2.953,107,2.953,108,0.82,109,2.224,110,1.103,111,2.953,112,2.409,113,3.425,114,3.425,115,0.425,116,1.037,117,1.037,118,0.991,119,1.303,120,0.736,121,1.037,122,0.582,123,0.736,124,0.582,125,0.736,126,0.425,127,0.736,128,0.611,129,0.736,130,0.611,131,0.932,132,1.303,133,0.582,134,0.736,135,0.641,136,1.2,137,0.611,138,1.2,139,0.611,140,1.2,141,0.611,142,0.736,143,0.611,144,0.736,145,0.611,146,0.703,147,0.611,148,0.736,149,0.611,150,0.611,151,0.582,152,0.736,153,0.611,154,0.611,155,0.736,156,0.582,157,0.736,158,0.611,159,0.582,160,0.736,161,0.582,162,0.527,163,1.037,164,0.582,165,0.671,166,0.611,167,1.069,168,0.671,169,1.095,170,0.582,171,0.736,172,0.611,173,0.379,174,0.641,175,0.611,176,0.902,177,0.736,178,0.611,179,0.611,180,0.611,181,0.554,182,0.611,183,0.611,184,0.703,185,0.736,186,0.011,187,0.011]],["title/components/AckComponent.html",[0,0.159,122,0.638]],["body/components/AckComponent.html",[0,0.312,1,0.407,2,0.081,3,0.058,4,0.468,5,0.49,6,0.447,7,0.047,11,0.333,12,0.447,13,0.682,14,2.489,15,2.569,16,2.482,17,2.96,19,0.636,20,0.783,22,0.49,23,1.352,24,1.288,25,1.228,26,0.636,28,0.636,30,0.194,31,0.636,32,1.284,33,3.27,34,0.709,38,0.885,40,0.959,41,0.755,42,0.394,46,0.618,50,0.699,51,0.018,52,0.516,53,0.851,54,0.577,55,1.302,56,2.997,57,0.668,58,3.602,59,1.213,62,1.789,63,1.606,68,0.746,69,1.451,70,1.235,72,1.451,74,1.35,76,0.839,77,1.335,80,2.75,84,1.026,89,1.99,91,2.154,95,0.241,96,0.081,98,1.481,99,0.513,100,0.069,101,0.024,102,0.969,103,1.669,104,1.597,108,0.606,109,2.849,110,0.734,112,2.508,115,0.283,116,0.766,117,0.766,118,0.732,119,1.066,120,0.49,121,0.766,122,0.843,123,0.49,124,0.388,125,0.49,126,0.283,127,0.49,128,0.407,129,0.49,130,0.407,131,0.763,132,1.066,133,0.388,134,0.49,135,0.427,136,0.943,137,0.407,138,0.943,139,0.407,140,0.943,141,0.407,142,0.49,143,0.407,144,0.49,145,0.407,146,0.468,147,0.407,148,0.49,149,0.407,150,0.407,151,0.388,152,0.49,153,0.407,154,0.407,155,0.49,156,0.388,157,0.49,158,0.407,159,0.388,160,0.49,161,0.388,162,0.351,163,0.766,164,0.388,165,0.447,166,0.407,167,0.949,168,0.447,169,0.86,170,0.388,171,0.49,172,0.407,173,0.252,174,0.427,175,0.407,176,0.667,177,0.49,178,0.407,179,0.407,180,0.407,181,0.369,182,0.407,183,0.407,184,0.468,185,0.49,186,0.013,187,0.008,188,1.967,189,2.569,190,3.783,191,3.565,192,3.565,193,4.96,194,2.863,195,4.96,196,4.561,197,4.648,198,4.96,199,5.589,200,4.96,201,4.96,202,5.589,203,4.276,204,4.276,205,4.276,206,4.4,207,4.276,208,3.565,209,2.281,210,5.317,211,1.944,212,2.862,213,4.276,214,4.64,215,4.276,216,3.565,217,0.766,218,2.423,219,3.221,220,3.064,221,1.923,222,1.923,223,2.508,224,3.372,225,2.154,226,2.281,227,3.254,228,2.281,229,1.896,230,2.088,231,2.281,232,2.806,233,5.465,234,2.75,235,2.281,236,3.489,237,1.277,238,2.75,239,1.302,240,2.281,241,3.073,242,4.276,243,3.073,244,4.21,245,3.221,246,2.489,247,2.281,248,3.073,249,2.281,250,1.896,251,2.281,252,2.281,253,2.75,254,2.281,255,2.154,256,1.789,257,2.508,258,2.315,259,3.073,260,3.565,261,2.281,262,2.016,263,2.51,264,2.322,265,3.826,266,2.75,267,1.221,268,1.157,269,2.281,270,2.281,271,4.96,272,2.281,273,1.515,274,2.281,275,3.565,276,4.276,277,2.281,278,1.605,279,2.508,280,5.139,281,2.281,282,2.281,283,3.565,284,2.712,285,1.896,286,3.073,287,3.073,288,3.01,289,3.073,290,3.783,291,2.281,292,1.378,293,1.481,294,1.213,295,0.843,296,3.073,297,0.614,298,1.967,299,1.967,300,1.967,301,1.967,302,1.967,303,1.967,304,1.967,305,1.967,306,1.967,307,2.281,308,3.073,309,1.967,310,4.64,311,1.967,312,1.967,313,3.073,314,2.281,315,3.565,316,1.967,317,2.281,318,3.073,319,3.786,320,1.967,321,1.967,322,1.967,323,2.281,324,0.614,325,2.281,326,3.565,327,2.281,328,3.565,329,2.281,330,2.281,331,2.154,332,2.281,333,4.96,334,2.281,335,2.281,336,2.281,337,1.481,338,1.967,339,1.759,340,1.759,341,1.759,342,1.967,343,1.759,344,1.967,345,1.967,346,1.967,347,1.967,348,3.565,349,3.565,350,1.789,351,2.508,352,3.073,353,3.565,354,3.565,355,3.565]],["title/modules/ActionsModule.html",[356,0.807,357,1.884]],["body/modules/ActionsModule.html",[1,1.364,2,0.161,3,0.116,7,0.094,9,3.514,25,1.042,33,3.421,51,0.018,57,0.566,95,0.316,96,0.161,98,2.958,100,0.207,101,0.047,115,0.566,122,1.3,124,1.224,126,0.566,143,1.364,158,1.364,159,1.3,183,1.364,184,0.936,186,0.013,187,0.013,222,2.502,224,2.577,292,2.753,294,2.423,356,1.257,357,3.993,358,1.467,359,2.761,360,1.949,361,3.928,362,3.928,363,3.928,364,3.928,365,3.928,366,3.244,367,3.244,368,3.244,369,2.632,370,2.051,371,1.949,372,4.556,373,2.632,374,2.933,375,2.051,376,4.556,377,4.556,378,6.454,379,3.514,380,3.514,381,3.205,382,4.556,383,1.608,384,4.508,385,4.508,386,4.508,387,1.854,388,2.423,389,2.577,390,2.577,391,2.577,392,4.556]],["title/components/AlarmComponent.html",[0,0.159,126,0.466]],["body/components/AlarmComponent.html",[0,0.319,1,0.564,2,0.112,3,0.081,4,0.649,5,0.679,6,0.62,7,0.065,11,0.196,12,0.62,13,0.81,17,1.766,19,0.812,20,0.952,22,0.679,23,1.389,24,1.324,25,1.042,26,0.812,28,0.812,30,0.269,31,0.812,32,1.532,34,0.566,38,1.042,40,1.895,41,0.761,42,0.59,46,0.645,48,0.462,49,0.511,51,0.018,52,0.708,53,0.767,54,0.864,57,0.769,63,1.872,64,1.969,66,2.68,68,0.732,69,2.174,70,1.872,72,1.854,74,1.402,76,1.072,77,1.226,84,0.462,93,2.752,95,0.184,96,0.112,99,0.711,100,0.139,101,0.071,102,0.537,103,1.375,108,0.537,115,0.393,116,0.979,117,0.979,118,0.935,119,1.257,120,0.679,121,0.979,122,0.537,123,0.679,124,0.537,125,0.679,126,0.726,127,0.679,128,0.564,129,0.679,130,0.564,131,0.899,132,1.257,133,0.537,134,0.679,135,0.591,136,1.148,137,0.564,138,1.148,139,0.564,140,1.148,141,0.564,142,0.679,143,0.564,144,0.679,145,0.564,146,0.649,147,0.564,148,0.679,149,0.564,150,0.564,151,0.537,152,0.679,153,0.564,154,0.564,155,0.679,156,0.537,157,0.679,158,0.564,159,0.537,160,0.679,161,0.537,162,0.899,163,0.979,164,0.537,165,0.62,166,0.564,167,1.047,168,0.62,169,1.047,170,0.537,171,0.679,172,0.564,173,0.349,174,0.591,175,0.564,176,0.852,177,0.679,178,0.564,179,0.564,180,0.564,181,0.511,182,0.564,183,0.564,184,0.649,185,0.679,186,0.01,187,0.01,217,0.979,221,2.764,230,1.467,236,3.504,237,1.785,239,1.333,263,1.286,267,1.637,268,1.586,278,2.405,297,0.851,324,0.851,358,1.018,393,2.438,394,2.286,395,2.65,396,3.757,397,3.927,398,3.927,399,5.564,400,4.119,401,5.34,402,5.34,403,5.34,404,4.604,405,4.604,406,6.461,407,4.604,408,3.757,409,4.879,410,4.555,411,3.16,412,1.799,413,2.627,414,3.16,415,2.163,416,1.949,417,3.16,418,4.112,419,4.112,420,3.204,421,3.204,422,3.16,423,5.039,424,3.16,425,3.16,426,3.16,427,4.555,428,2.725,429,3.16,430,2.052,431,3.16,432,2.725,433,3.16,434,3.16,435,3.16,436,4.604,437,3.16,438,3.927,439,3.927,440,3.927,441,2.576,442,3.927,443,1.788,444,2.438,445,1.065,446,2.438,447,2.163,448,2.286,449,2.286,450,2.286,451,2.286,452,2.163,453,2.163,454,3.468,455,1.423,456,1.681,457,2.052,458,2.052,459,2.725,460,4.555]],["title/components/AlarmHeaderComponent.html",[0,0.159,128,0.67]],["body/components/AlarmHeaderComponent.html",[0,0.321,1,0.552,2,0.11,3,0.079,4,0.636,5,0.666,6,0.607,7,0.064,11,0.192,12,0.607,13,0.748,17,2.485,19,0.8,20,0.942,22,0.666,23,1.387,24,1.322,25,0.8,26,0.8,28,0.8,30,0.264,34,0.719,38,1.033,40,1.857,41,0.763,42,0.584,46,0.653,48,0.656,49,0.726,51,0.018,52,0.769,53,0.407,54,0.726,57,0.763,63,1.263,64,1.512,68,0.769,69,2.608,70,1.972,72,2.608,74,1.782,76,1.056,77,1.208,84,0.452,95,0.182,96,0.11,99,0.697,100,0.094,101,0.064,104,0.997,108,0.763,109,3.759,110,2.063,111,2.67,115,0.385,116,0.965,117,0.965,118,0.922,119,1.245,120,0.666,121,0.965,122,0.526,123,0.666,124,0.526,125,0.666,126,0.385,127,0.666,128,1.033,129,0.666,130,0.552,131,0.89,132,1.245,133,0.526,134,0.666,135,0.579,136,1.135,137,0.552,138,1.135,139,0.552,140,1.135,141,0.552,142,0.666,143,0.552,144,0.666,145,0.552,146,0.636,147,0.552,148,0.666,149,0.552,150,0.552,151,0.526,152,0.666,153,0.552,154,0.552,155,0.666,156,0.526,157,0.666,158,0.552,159,0.526,160,0.666,161,0.526,162,0.812,163,0.965,164,0.526,165,0.607,166,0.552,167,1.041,168,0.607,169,1.035,170,0.526,171,0.666,172,0.552,173,0.342,174,0.579,175,0.552,176,0.84,177,0.666,178,0.552,179,0.552,180,0.552,181,0.501,182,0.552,183,0.552,184,0.636,185,0.666,186,0.014,187,0.01,230,1.445,237,1.904,239,1.199,256,2.905,263,1.827,267,1.699,268,1.456,273,1.263,284,1.325,339,2.388,358,1.445,395,1.92,400,4.465,404,4.991,405,4.991,408,3.714,409,3.157,418,3.157,419,4.508,420,3.157,421,3.157,432,3.869,443,1.752,461,6.12,462,5.475,463,2.67,464,4.943,465,2.252,466,4.488,467,4.488,468,5.789,469,6.145,470,6.145,471,4.488,472,3.096,473,3.869,474,4.991,475,4.488,476,3.096,477,5.789,478,3.869,479,3.096,480,3.096,481,4.488,482,4.488,483,3.869,484,3.096,485,3.157,486,3.096,487,3.096,488,3.096,489,5.279,490,4.488,491,3.714,492,4.488,493,2.67,494,2.67,495,2.67,496,3.096,497,5.298,498,2.388,499,2.67,500,4.488,501,2.67,502,2.67,503,4.488,504,2.67,505,2.67,506,4.488,507,6.145,508,5.279,509,3.096,510,4.488,511,3.096,512,2.388,513,4.488]],["title/classes/AlarmImageSet.html",[101,0.039,413,1.528]],["body/classes/AlarmImageSet.html",[0,0.308,2,0.137,3,0.099,7,0.08,11,0.325,13,0.849,17,1.505,19,0.692,20,0.938,23,0.692,24,0.66,26,0.692,28,0.692,30,0.33,31,0.938,32,1.754,38,0.692,40,1.896,41,0.764,42,0.581,46,0.636,48,0.768,49,0.851,50,0.761,51,0.018,52,0.62,53,0.954,54,0.851,57,0.856,63,2.017,64,1.772,66,1.948,70,1.48,72,1.58,76,0.914,77,1.045,93,2.345,95,0.213,96,0.137,99,0.873,100,0.16,101,0.07,102,0.66,103,0.999,108,0.66,126,0.482,162,0.597,186,0.012,187,0.012,217,0.835,221,2.979,230,1.25,236,2.195,237,1.646,239,1.458,267,0.956,268,1.652,297,1.415,324,1.415,393,2.994,394,1.948,395,2.25,396,4.196,397,3.346,398,3.346,399,4.534,406,6.678,407,3.346,408,2.731,409,4.196,412,1.619,413,2.804,415,1.843,416,1.66,418,2.731,419,2.731,420,2.731,421,2.731,423,4.534,438,3.346,439,3.346,440,3.346,441,2.195,442,3.346,443,2.195,444,4.056,445,1.772,446,4.056,447,3.271,448,3.457,449,3.457,450,3.457,451,3.457,452,3.271,453,3.271,454,4.339,455,2.368,456,2.797,457,3.415,458,2.52,459,3.346,514,5.259,515,3.881,516,3.881,517,3.881,518,3.881,519,3.881,520,3.881,521,3.881]],["title/classes/AlarmItemFlatNode.html",[101,0.039,522,2.642]],["body/classes/AlarmItemFlatNode.html",[0,0.268,2,0.095,3,0.103,6,1.418,7,0.084,8,3.805,11,0.167,13,0.641,17,1.043,19,0.48,20,0.722,23,0.48,24,0.457,25,1.034,26,0.48,28,0.48,30,0.229,31,0.722,38,0.48,40,1.089,41,0.706,46,0.46,48,0.591,51,0.018,52,0.505,53,0.71,55,0.553,63,1.714,66,1.35,68,0.773,69,2.838,70,1.83,72,2.201,74,2.047,76,0.952,84,0.591,95,0.263,96,0.143,99,0.605,100,0.148,101,0.056,102,1.22,103,0.693,104,2.345,108,0.688,110,1.566,124,0.457,151,0.919,173,0.719,186,0.012,187,0.009,211,1.706,217,0.579,219,2.627,220,1.212,225,2.938,230,0.866,232,3.833,234,4.699,239,1.085,258,1.747,262,1.522,263,2.479,264,2.838,265,2.076,267,0.662,268,1.163,273,1.139,278,2.743,284,2.704,288,1.278,295,0.995,297,1.79,350,2.44,358,0.866,381,3.805,416,1.151,430,2.627,455,1.822,522,5.207,523,2.076,524,4.699,525,4.68,526,6.818,527,5.227,528,6.35,529,2.691,530,2.691,531,2.691,532,3.421,533,2.289,534,3.488,535,0.757,536,2.32,537,2.32,538,3.488,539,2.32,540,3.488,541,3.488,542,2.076,543,2.32,544,2.876,545,1.35,546,1.278,547,4.446,548,2.32,549,3.059,550,1.522,551,2.32,552,2.32,553,3.121,554,2.076,555,2.32,556,2.32,557,1.86,558,4.663,559,3.121,560,1.431,561,1.893,562,2.32,563,4.192,564,2.32,565,2.076,566,2.32,567,2.076,568,2.32,569,4.192,570,2.32,571,2.32,572,3.751,573,2.32,574,2.32,575,2.32,576,2.32,577,2.32,578,2.32,579,2.32,580,1.893,581,3.121,582,2.32,583,3.488,584,2.32,585,3.488,586,2.32,587,2.32,588,3.488,589,2.32,590,2.32,591,2.32,592,3.488,593,2.32,594,2.32,595,2.32,596,2.32,597,2.32,598,2.289,599,2.076,600,2.32,601,4.192,602,2.32,603,2.32,604,2.32,605,3.488,606,2.627,607,2.32,608,2.32,609,2.32,610,2.32,611,2.32,612,2.32,613,2.32,614,3.121,615,3.488,616,2.32,617,3.121,618,2.32,619,2.32,620,2.893,621,3.488,622,2.32,623,2.32,624,2.32,625,2.32,626,2.32,627,2.32,628,2.32,629,2.32,630,2.32,631,2.32,632,2.32,633,2.32,634,3.488,635,2.32,636,2.32,637,2.076,638,3.488,639,2.32,640,3.751,641,4.999,642,2.32,643,4.663,644,2.076,645,2.32,646,3.488,647,2.32,648,2.32,649,3.121,650,2.32,651,2.076,652,5.606,653,2.32,654,3.488,655,2.32,656,2.32,657,2.32,658,3.488,659,2.32,660,2.32,661,3.121,662,6.011,663,2.32,664,4.663,665,2.32,666,3.488,667,2.076,668,2.32,669,4.192,670,4.663,671,2.32,672,2.32,673,2.32,674,2.32,675,2.32,676,1.626,677,2.32,678,2.32,679,2.32,680,2.32,681,2.32,682,2.32,683,2.32,684,2.32,685,2.32,686,2.32,687,2.32,688,2.32]],["title/classes/AlarmItemNode.html",[101,0.039,547,2.642]],["body/classes/AlarmItemNode.html",[0,0.269,2,0.096,3,0.104,6,1.421,7,0.084,8,3.441,11,0.168,13,0.644,17,1.054,19,0.485,20,0.727,23,0.485,24,0.462,25,1.039,26,0.485,28,0.485,30,0.231,31,0.727,38,0.485,40,1.097,41,0.711,46,0.416,48,0.595,51,0.018,52,0.508,53,0.642,55,0.558,63,1.721,66,1.364,68,0.774,69,2.765,70,1.784,72,2.212,74,2.007,76,0.959,84,0.595,95,0.264,96,0.144,99,0.611,100,0.149,101,0.057,102,1.222,103,0.699,104,2.349,108,0.693,110,1.575,124,0.462,151,0.923,173,0.721,186,0.012,187,0.009,211,1.714,217,0.584,219,2.647,220,1.224,225,2.955,230,0.875,232,3.689,234,5.24,239,1.089,258,1.764,262,1.537,263,2.581,264,2.844,265,2.096,267,0.669,268,1.168,273,1.147,278,2.753,284,2.712,288,1.29,295,1.005,297,1.795,350,2.045,358,0.875,381,3.441,416,1.162,430,2.647,455,1.835,522,5.189,523,2.096,524,4.491,525,4.692,526,6.818,527,4.491,528,6.15,532,3.441,533,2.305,534,3.514,535,0.765,536,2.343,537,2.343,538,3.514,539,2.343,540,3.514,541,3.514,542,2.096,543,2.343,544,2.89,545,1.364,546,1.29,547,4.779,548,2.343,549,3.074,550,1.537,551,2.343,552,2.343,553,3.144,554,2.096,555,2.343,556,2.343,557,1.866,558,4.685,559,3.144,560,1.445,561,1.912,562,2.343,563,4.217,564,2.343,565,2.096,566,2.343,567,2.096,568,2.343,569,4.217,570,2.343,571,2.343,572,3.773,573,2.343,574,2.343,575,2.343,576,2.343,577,2.343,578,2.343,579,2.343,580,1.912,581,3.144,582,2.343,583,3.514,584,2.343,585,3.514,586,2.343,587,2.343,588,3.514,589,2.343,590,2.343,591,2.343,592,3.514,593,2.343,594,2.343,595,2.343,596,2.343,597,2.343,598,2.305,599,2.096,600,2.343,601,4.217,602,2.343,603,2.343,604,2.343,605,3.514,606,2.647,607,2.343,608,2.343,609,2.343,610,2.343,611,2.343,612,2.343,613,2.343,614,3.144,615,3.514,616,2.343,617,3.144,618,2.343,619,2.343,620,2.903,621,3.514,622,2.343,623,2.343,624,2.343,625,2.343,626,2.343,627,2.343,628,2.343,629,2.343,630,2.343,631,2.343,632,2.343,633,2.343,634,3.514,635,2.343,636,2.343,637,2.096,638,3.514,639,2.343,640,3.773,641,5.02,642,2.343,643,4.685,644,2.096,645,2.343,646,3.514,647,2.343,648,2.343,649,3.144,650,2.343,651,2.096,652,5.622,653,2.343,654,3.514,655,2.343,656,2.343,657,2.343,658,3.514,659,2.343,660,2.343,661,3.144,662,6.024,663,2.343,664,4.685,665,2.343,666,3.514,667,2.096,668,2.343,669,4.217,670,4.685,671,2.343,672,2.343,673,2.343,674,2.343,675,2.343,676,1.642,677,2.343,678,2.343,679,2.343,680,2.343,681,2.343,682,2.343,683,2.343,684,2.343,685,2.343,686,2.343,687,2.343,688,2.343,689,2.717,690,2.717]],["title/classes/AlarmSounds.html",[101,0.039,691,2.896]],["body/classes/AlarmSounds.html",[2,0.08,3,0.057,7,0.047,13,0.591,14,1.13,15,1.014,16,1.996,17,1.91,25,0.629,30,0.3,31,0.629,32,1.382,34,0.664,41,0.76,42,0.249,46,0.505,48,0.329,49,0.364,50,0.692,51,0.018,52,0.234,53,0.779,54,0.571,55,1.261,57,0.763,62,1.13,63,1.777,68,0.777,69,1.771,70,1.225,72,0.917,74,1.516,77,0.95,78,1.584,89,1.305,91,3.232,95,0.262,96,0.08,99,0.507,100,0.107,101,0.045,102,1.225,103,1.12,104,2.321,108,1.137,110,0.725,162,0.873,173,0.481,186,0.008,187,0.008,189,1.014,194,3.169,196,1.584,197,5.191,211,1.038,218,2.409,219,1.462,220,2.671,221,1.368,225,2.132,227,3.483,230,1.722,232,1.996,233,3.042,237,0.58,239,1.38,250,1.198,262,3.474,263,2.499,264,0.917,267,1.317,268,1.416,273,1.777,278,1.959,279,2.483,284,0.963,288,1.676,297,1.699,341,2.722,350,2.472,358,0.725,387,0.917,412,1.086,416,1.51,443,1.274,445,1.189,455,2.409,456,1.877,478,4.892,485,1.584,498,3.356,535,0.993,544,1.198,545,1.13,546,1.069,557,1.67,561,1.584,598,2.461,599,2.722,606,2.291,620,2.54,691,2.722,692,1.941,693,6.135,694,5.114,695,5.349,696,5.349,697,5.349,698,5.349,699,3.529,700,2.252,701,3.529,702,2.252,703,3.529,704,2.252,705,3.529,706,2.252,707,3.529,708,2.252,709,3.529,710,2.252,711,6.94,712,1.941,713,2.252,714,2.252,715,5.349,716,3.752,717,3.752,718,1.584,719,1.941,720,1.274,721,3.356,722,0.833,723,3.232,724,2.252,725,2.409,726,2.977,727,1.274,728,4.926,729,2.252,730,2.252,731,2.252,732,2.252,733,5.443,734,4.377,735,2.786,736,5.349,737,4.926,738,4.612,739,2.252,740,3.529,741,3.752,742,2.252,743,1.462,744,3.529,745,2.252,746,2.252,747,2.252,748,2.252,749,2.291,750,2.252,751,1.941,752,3.042,753,1.941,754,2.252,755,5.349,756,2.252,757,2.252,758,2.252,759,2.252,760,2.252,761,2.252,762,2.252,763,2.252,764,2.722,765,3.529,766,4.351,767,3.529,768,2.252,769,2.252,770,2.252,771,3.061,772,3.529,773,2.252,774,2.252,775,2.252,776,4.926,777,3.529,778,2.252,779,3.529,780,2.252,781,2.252,782,2.252,783,2.252,784,2.252,785,2.252,786,3.529,787,2.252,788,2.252,789,2.252,790,2.252,791,1.361,792,2.252,793,2.252,794,2.252,795,5.932,796,2.252,797,4.351,798,3.529,799,2.252,800,2.252,801,2.252,802,4.246,803,2.252,804,2.252,805,3.529,806,2.252,807,2.252,808,2.252,809,2.252,810,2.252,811,3.752,812,2.252,813,3.529,814,2.252,815,2.252,816,2.252,817,2.252,818,2.252,819,1.941,820,2.252,821,3.356,822,2.252,823,1.737,824,2.252,825,2.252,826,1.941,827,4.351,828,2.291,829,2.252,830,3.529,831,3.529,832,2.252,833,3.752,834,3.529,835,2.252,836,3.529,837,2.252,838,4.351,839,4.351,840,4.926,841,2.252,842,2.252,843,3.529,844,2.252,845,2.252,846,3.529,847,2.252,848,2.252,849,2.252,850,4.351,851,3.529,852,3.529,853,2.252,854,3.752,855,2.252,856,6.141,857,4.351,858,4.926,859,4.351,860,3.529,861,2.252,862,2.252,863,2.252,864,2.252,865,2.252,866,2.252,867,2.252,868,2.252,869,2.252,870,2.252,871,3.529,872,2.252,873,1.737,874,4.351,875,2.252,876,2.252,877,2.252,878,2.252,879,3.529,880,2.252,881,1.737,882,2.252,883,2.252,884,2.252,885,2.252,886,1.941,887,4.351,888,1.941,889,1.941,890,2.252,891,2.252,892,1.941,893,1.941,894,1.737,895,1.941,896,3.529,897,2.252,898,2.252,899,2.252,900,3.529,901,4.351,902,2.252,903,2.252,904,2.252,905,2.252,906,2.252,907,1.941,908,1.941,909,2.252]],["title/classes/AntennaConfig.html",[101,0.039,910,2.269]],["body/classes/AntennaConfig.html",[0,0.249,2,0.134,3,0.096,7,0.078,11,0.234,13,0.571,30,0.44,31,0.921,32,1.694,34,0.469,41,0.741,42,0.418,46,0.563,48,0.552,49,0.611,51,0.018,53,0.772,55,1.299,57,0.641,64,1.74,68,0.537,70,1.064,74,1.59,77,1.782,84,0.859,89,1.397,95,0.283,96,0.134,99,0.85,100,0.157,101,0.061,102,0.642,103,1.329,104,2.132,108,1.161,126,0.469,131,1.204,167,0.973,173,0.571,181,0.952,186,0.011,187,0.011,189,1.702,218,3.253,220,2.326,221,2.002,227,2.952,229,3.721,239,1.391,250,2.01,256,1.897,273,2.076,285,3.129,297,1.39,331,4,356,0.813,383,1.334,395,2.832,412,2.103,413,2.695,415,2.452,445,1.74,447,2.452,448,2.592,449,2.592,450,2.592,451,2.592,452,2.452,453,2.452,455,1.702,535,1.453,544,3.363,545,1.897,546,1.795,557,2.011,620,2.452,720,2.138,722,1.397,725,2.649,726,1.897,727,2.138,735,2.138,910,3.821,911,2.915,912,4.106,913,3.363,914,3.779,915,3.121,916,3.779,917,3.779,918,2.659,919,2.659,920,2.454,921,2.915,922,2.338,923,1.702,924,2.01,925,2.915,926,2.454,927,1.897,928,3.121,929,3.258,930,2.284,931,2.454,932,2.138,933,3.258,934,3.258,935,1.897,936,3.258,937,3.258,938,3.258,939,2.454,940,2.659,941,2.659,942,3.121,943,3.633,944,3.258,945,2.659,946,2.284,947,3.258,948,3.258,949,3.258,950,3.258,951,3.258,952,3.258,953,3.258,954,3.258,955,3.258,956,2.659,957,2.659,958,3.258,959,2.659,960,2.659,961,3.258,962,4.3,963,4.106,964,5.451,965,4.106,966,3.633,967,3.633,968,3.258]],["title/components/AntennaMarkerComponent.html",[0,0.159,130,0.67]],["body/components/AntennaMarkerComponent.html",[0,0.298,1,0.594,2,0.118,3,0.085,4,0.684,5,0.716,6,0.653,7,0.069,11,0.293,12,0.653,13,0.726,19,0.843,20,0.98,22,0.716,23,1.395,24,1.329,25,0.843,26,0.843,28,0.843,30,0.283,31,0.843,32,1.477,34,0.587,38,1.067,40,1.89,41,0.709,42,0.523,46,0.613,48,0.691,49,0.765,50,0.653,51,0.018,52,0.657,53,0.786,54,0.538,55,1.494,57,0.413,64,1.593,68,0.622,70,0.937,76,1.113,84,0.486,89,2.032,95,0.242,96,0.118,99,0.749,100,0.101,101,0.035,102,0.803,108,0.566,115,0.413,116,1.016,117,1.016,118,0.971,119,1.287,120,0.716,121,1.016,122,0.566,123,0.716,124,0.566,125,0.716,126,0.413,127,0.716,128,0.594,129,0.716,130,1.067,131,1.19,132,1.287,133,0.566,134,0.716,135,0.623,136,1.182,137,0.594,138,1.182,139,0.594,140,1.182,141,0.594,142,0.716,143,0.594,144,0.716,145,0.594,146,0.684,147,0.594,148,0.716,149,0.594,150,0.594,151,0.566,152,0.716,153,0.594,154,0.594,155,0.716,156,0.566,157,0.716,158,0.594,159,0.566,160,0.716,161,0.566,162,0.512,163,1.016,164,0.566,165,0.653,166,0.594,167,1.062,168,0.653,169,1.078,170,0.566,171,0.716,172,0.594,173,0.368,174,0.623,175,0.594,176,0.884,177,0.716,178,0.594,179,0.594,180,0.594,181,0.538,182,0.594,183,0.594,184,0.684,185,0.716,186,0.011,187,0.011,211,2.174,217,1.016,237,1.217,267,1.556,268,1.412,284,3.138,288,2.245,295,1.231,394,3.003,415,1.581,443,1.883,491,2.342,493,2.87,494,2.87,495,2.87,497,5.449,498,2.568,499,2.87,501,2.87,502,2.87,504,2.87,505,2.87,533,1.883,557,2.174,907,5.159,913,3.592,922,2.032,927,3.39,930,3.322,932,3.385,969,5.117,970,5.61,971,5.61,972,2.162,973,3.326,974,3.326,975,5.984,976,5.497,977,5.497,978,5.497,979,4.739,980,3.329,981,3.646,982,3.329,983,5.984,984,4.727,985,5.984,986,3.329,987,4.727,988,3.329,989,5.984,990,4.727,991,4.727,992,2.568,993,4.727,994,2.568,995,2.87,996,3.329,997,3.329,998,3.329,999,3.329,1000,7.274,1001,5.984,1002,3.329,1003,3.329,1004,4.727,1005,4.076]],["title/components/AntennasComponent.html",[0,0.159,133,0.638]],["body/components/AntennasComponent.html",[0,0.325,1,0.74,2,0.147,3,0.106,4,0.852,5,0.892,6,0.814,7,0.086,11,0.257,12,0.814,13,0.726,15,2.476,19,0.981,20,1.1,22,0.892,23,1.414,24,1.347,25,0.981,26,0.981,28,0.981,30,0.353,31,0.981,34,0.683,38,1.171,41,0.602,42,0.682,46,0.559,48,0.803,49,0.89,50,0.814,51,0.018,52,0.745,53,0.722,54,0.671,57,0.515,68,0.572,76,1.294,84,0.901,95,0.223,96,0.147,100,0.126,101,0.043,102,0.705,108,0.934,110,1.771,115,0.515,116,1.182,117,1.182,118,1.129,119,1.412,120,0.892,121,1.182,122,0.705,123,0.892,124,0.705,125,0.892,126,0.515,127,0.892,128,0.74,129,0.892,130,0.74,131,1.119,132,1.412,133,1.116,134,0.892,135,0.776,136,1.326,137,0.74,138,1.326,139,0.74,140,1.326,141,0.74,142,0.892,143,0.74,144,0.892,145,0.74,146,0.852,147,0.74,148,0.892,149,0.74,150,0.74,151,0.705,152,0.892,153,0.74,154,0.74,155,0.892,156,0.705,157,0.892,158,0.74,159,0.705,160,0.892,161,0.705,162,0.638,163,1.182,164,0.705,165,0.814,166,0.74,167,1.119,168,0.814,169,1.209,170,0.705,171,0.892,172,0.74,173,0.459,174,0.776,175,0.74,176,1.029,177,0.892,178,0.74,179,0.74,180,0.74,181,0.671,182,0.74,183,0.74,184,0.852,185,0.892,186,0.012,187,0.012,217,1.51,237,1.416,246,2.76,262,3.111,264,2.673,266,5.066,267,1.021,268,0.892,557,1.933,749,3.571,910,4.396,913,3.493,1006,3.577,1007,4.242,1008,5.499,1009,5.499,1010,5.499,1011,5.499,1012,6.055,1013,5.499,1014,5.499,1015,4.149,1016,5.499,1017,4.149,1018,4.741,1019,2.919,1020,3.577]],["title/modules/AntennasModule.html",[356,0.807,924,1.997]],["body/modules/AntennasModule.html",[2,0.171,3,0.123,7,0.1,51,0.018,95,0.316,96,0.171,100,0.211,101,0.05,115,0.599,130,1.304,131,1.069,133,1.242,135,1.368,137,1.304,139,1.375,186,0.013,187,0.013,222,2.57,356,1.303,357,3.669,358,1.553,359,2.835,360,2.064,366,3.292,367,3.292,368,3.292,369,2.729,370,2.172,371,2.064,373,2.729,374,3.042,375,2.172,387,1.964,388,2.566,389,2.729,390,2.729,391,2.729,557,1.42,924,4.228,927,3.669,970,3.721,971,3.721,1019,3.394,1021,4.159,1022,4.159,1023,4.159,1024,4.159,1025,4.159,1026,4.136,1027,4.824,1028,4.824,1029,4.159,1030,4.159,1031,3.721,1032,4.159,1033,3.133,1034,3.721,1035,4.159,1036,3.721,1037,3.721]],["title/injectables/AntennasService.html",[535,1.057,927,1.884]],["body/injectables/AntennasService.html",[0,0.28,2,0.12,3,0.087,7,0.07,11,0.297,13,0.668,30,0.474,31,0.856,32,1.702,34,0.751,41,0.712,42,0.531,46,0.635,48,0.701,49,0.777,50,0.667,51,0.018,52,0.354,53,0.892,54,0.55,55,1.425,57,0.596,64,1.147,68,0.687,70,0.958,74,1.712,77,1.966,84,0.966,89,1.775,95,0.275,96,0.12,99,0.766,100,0.146,101,0.05,102,0.578,103,1.556,104,2.052,108,1.124,126,0.423,131,1.192,167,0.98,173,0.668,181,0.9,186,0.011,187,0.011,189,2.162,218,3.178,220,2.721,221,1.862,227,2.792,229,3.615,239,1.298,250,2.554,256,2.41,267,1.37,268,1.196,273,2.013,285,2.959,297,1.292,331,3.996,356,1.032,383,1.201,395,2.969,412,2.136,413,2.873,415,2.642,445,1.147,447,2.28,448,2.41,449,2.41,450,2.41,451,2.41,452,2.28,453,2.28,455,2.162,535,1.566,544,3.518,545,1.708,546,1.616,557,1.946,620,2.87,720,1.925,722,1.258,725,2.87,726,2.41,727,1.925,735,2.716,910,3.362,911,2.625,912,3.118,913,1.81,915,2.056,918,2.394,919,2.394,920,2.21,921,2.625,922,2.566,923,2.162,924,2.554,925,2.625,926,2.21,927,2.41,928,3.362,929,5.21,930,2.901,931,3.118,932,2.716,933,5.21,934,4.139,935,2.41,936,5.21,937,5.21,938,5.21,939,3.118,940,4.252,941,3.378,942,3.362,943,3.378,944,2.934,945,2.394,946,2.901,947,5.21,948,2.934,949,2.934,950,2.934,951,2.934,952,2.934,953,2.934,954,2.934,955,2.934,956,4.252,957,2.394,958,2.934,959,2.394,960,4.252,961,2.934,962,4.241,963,3.924,964,5.21,965,3.924,966,3.378,967,3.378,968,2.934,1038,2.934,1039,4.801,1040,3.403,1041,3.403,1042,3.403,1043,3.403,1044,3.403,1045,3.403,1046,4.801,1047,3.403,1048,3.403,1049,3.403]],["title/components/AntennasSidebarComponent.html",[0,0.159,137,0.67]],["body/components/AntennasSidebarComponent.html",[0,0.299,1,0.503,2,0.1,3,0.072,4,0.58,5,0.607,6,0.553,7,0.058,11,0.384,12,0.553,13,0.758,15,2.253,19,0.748,20,0.892,22,0.607,23,1.377,24,1.312,25,0.748,26,0.748,28,0.748,30,0.24,31,0.748,32,1.395,34,0.521,38,0.988,39,2.723,40,1.49,41,0.735,42,0.463,46,0.616,48,0.809,49,0.678,50,1.216,51,0.018,52,0.732,53,0.885,54,1.003,55,1.318,57,0.351,63,1.18,64,1.413,68,0.786,69,2.036,70,1.18,74,1.29,76,0.987,77,1.49,84,0.731,90,3.596,95,0.251,96,0.1,99,0.635,100,0.086,101,0.029,102,1.121,103,0.726,108,1.054,110,1.996,115,0.351,116,0.901,117,0.901,118,0.861,119,1.191,120,0.607,121,0.901,122,0.48,123,0.607,124,0.48,125,0.607,126,0.521,127,0.607,128,0.503,129,0.607,130,0.503,131,1.194,132,1.191,133,0.48,134,0.607,135,0.528,136,1.076,137,0.988,138,1.076,139,0.503,140,1.076,141,0.503,142,0.607,143,0.503,144,0.607,145,0.503,146,0.58,147,0.503,148,0.607,149,0.503,150,0.503,151,0.48,152,0.607,153,0.503,154,0.503,155,0.607,156,0.48,157,0.607,158,0.503,159,0.48,160,0.607,161,0.48,162,0.434,163,0.901,164,0.48,165,0.553,166,0.503,167,1.014,168,0.553,169,0.981,170,0.48,171,0.607,172,0.503,173,0.312,174,0.528,175,0.503,176,0.784,177,0.607,178,0.503,179,0.503,180,0.503,181,0.456,182,0.503,183,0.503,184,0.58,185,0.607,186,0.009,187,0.009,189,1.888,194,2.104,211,2.146,212,2.23,217,0.901,230,1.35,237,1.596,239,1.344,246,2.104,255,2.534,256,2.104,263,2.867,264,2.867,267,0.695,268,0.607,273,1.93,295,1.043,297,0.76,324,0.76,383,0.996,430,2.723,465,2.104,532,3.519,533,3.132,560,2.23,749,2.723,910,4.433,912,2.723,922,2.632,923,2.253,927,3.634,928,3.747,969,5.053,1012,4.313,1019,1.985,1020,5.101,1031,5.54,1050,1.985,1051,3.234,1052,3.234,1053,2.104,1054,4.193,1055,4.193,1056,5.537,1057,3.615,1058,5.537,1059,5.003,1060,2.822,1061,3.615,1062,3.234,1063,2.433,1064,3.234,1065,2.95,1066,2.822,1067,4.193,1068,2.822,1069,4.193,1070,4.193,1071,3.234,1072,3.896,1073,4.193,1074,2.822,1075,2.822,1076,2.822,1077,4.193,1078,2.822,1079,5.917,1080,2.822,1081,2.723,1082,4.193,1083,2.433,1084,2.822,1085,3.615,1086,2.822,1087,2.433,1088,2.375,1089,1.833,1090,2.723,1091,2.375,1092,2.433,1093,1.985,1094,2.822,1095,2.822,1096,2.822,1097,2.822,1098,4.193,1099,5.537,1100,4.193,1101,1.705,1102,1.705,1103,3.249,1104,1.985,1105,1.833,1106,1.985,1107,1.985,1108,1.985,1109,4.193,1110,4.193,1111,4.193,1112,4.193,1113,5.537,1114,3.615,1115,4.193,1116,5.537,1117,4.193,1118,4.193,1119,4.193]],["title/components/AntennasSummaryComponent.html",[0,0.159,139,0.67]],["body/components/AntennasSummaryComponent.html",[0,0.304,1,0.653,2,0.13,3,0.093,4,0.752,5,0.787,6,0.718,7,0.076,11,0.358,12,0.718,13,0.793,19,0.901,20,1.032,22,0.787,23,1.403,24,1.337,25,0.901,26,0.901,28,0.901,30,0.312,31,0.901,32,1.302,34,0.627,38,1.113,41,0.735,42,0.558,46,0.576,48,0.738,49,1.009,50,0.99,51,0.018,52,0.648,53,0.76,54,0.817,55,1.424,57,0.455,68,0.735,76,1.189,77,1.679,84,0.845,95,0.281,96,0.13,99,0.823,100,0.111,101,0.038,102,1.06,103,1.3,108,0.983,115,0.455,116,1.086,117,1.086,118,1.037,119,1.341,120,0.787,121,1.086,122,0.622,123,0.787,124,0.622,125,0.787,126,0.627,127,0.787,128,0.653,129,0.787,130,0.653,131,1.169,132,1.341,133,0.622,134,0.787,135,0.685,136,1.244,137,0.653,138,1.244,139,1.113,140,1.244,141,0.653,142,0.787,143,0.653,144,0.787,145,0.653,146,0.752,147,0.653,148,0.787,149,0.653,150,0.653,151,0.622,152,0.787,153,0.653,154,0.653,155,0.787,156,0.622,157,0.787,158,0.653,159,0.622,160,0.787,161,0.622,162,0.89,163,1.086,164,0.622,165,0.718,166,0.653,167,1.117,168,0.718,169,1.134,170,0.622,171,0.787,172,0.653,173,0.405,174,0.685,175,0.653,176,0.945,177,0.787,178,0.653,179,0.653,180,0.653,181,0.592,182,0.653,183,0.653,184,0.752,185,0.787,186,0.011,187,0.011,211,2.08,212,3.318,217,1.086,239,1.224,295,1.353,324,1.36,383,1.291,412,1.126,413,1.49,416,2.161,465,3.131,485,3.554,722,1.353,922,2.139,927,3.8,935,2.535,969,4.879,1019,2.575,1036,5.35,1053,1.837,1081,3.28,1088,3.108,1089,2.377,1090,4.715,1091,3.356,1092,3.155,1101,3.053,1102,3.053,1103,4.395,1104,3.554,1105,3.28,1106,3.554,1107,3.554,1108,2.575,1120,2.575,1121,3.28,1122,3.897,1123,3.897,1124,3.897,1125,3.897,1126,2.575,1127,3.155,1128,3.897,1129,3.155,1130,3.66,1131,3.155,1132,3.155,1133,3.66,1134,3.66,1135,3.66]],["title/components/AppComponent.html",[0,0.159,141,0.67]],["body/components/AppComponent.html",[0,0.291,1,0.544,2,0.108,3,0.078,4,0.627,5,0.955,6,0.598,7,0.063,11,0.324,12,0.598,13,0.579,19,0.792,20,0.934,22,0.656,23,1.386,24,1.32,25,0.792,26,0.792,28,0.792,30,0.26,31,0.792,32,1.434,33,3.125,34,0.714,38,1.025,41,0.642,42,0.491,46,0.585,48,0.649,49,0.718,50,0.87,51,0.018,52,0.598,53,0.837,54,0.718,55,1.351,57,0.379,58,4.4,59,3.058,62,2.228,63,0.859,68,0.726,69,2.13,70,1.966,76,1.045,77,1.547,84,0.446,92,3.425,95,0.258,96,0.108,100,0.093,101,0.032,102,1.038,103,1.347,108,1.246,110,0.982,115,0.379,116,0.955,117,0.955,118,0.912,119,1.236,120,0.656,121,0.955,122,0.518,123,0.656,124,0.518,125,0.656,126,0.379,127,0.656,128,0.544,129,0.656,130,0.544,131,1.037,132,1.236,133,0.518,134,0.656,135,0.571,136,1.125,137,0.544,138,1.125,139,0.544,140,1.125,141,1.025,142,0.656,143,0.544,144,0.656,145,0.544,146,0.627,147,0.544,148,0.656,149,0.544,150,0.544,151,0.977,152,0.656,153,0.544,154,1.09,155,0.656,156,0.518,157,0.656,158,0.544,159,0.518,160,0.656,161,0.518,162,0.469,163,0.955,164,0.518,165,1.026,166,0.544,167,1.1,168,0.598,169,1.026,170,0.518,171,0.656,172,0.544,173,0.337,174,0.571,175,0.544,176,1.193,177,0.656,178,0.544,179,0.544,180,0.544,181,0.493,182,0.544,183,0.544,184,0.627,185,0.656,186,0.01,187,0.01,211,2.055,230,1.967,239,0.831,244,2.883,245,4.464,246,2.228,267,1.289,268,1.313,295,1.128,395,3.138,416,1.899,445,1.496,455,1.999,465,2.228,525,4.044,527,3.425,549,2.961,567,3.425,644,2.353,676,2.683,771,2.146,915,3.852,926,2.883,1091,2.108,1126,2.146,1136,2.63,1137,4.913,1138,4.44,1139,4.44,1140,6.743,1141,6.875,1142,6.375,1143,5.749,1144,6.278,1145,4.44,1146,5.749,1147,6.984,1148,6.743,1149,3.051,1150,4.44,1151,3.828,1152,4.956,1153,4.44,1154,3.051,1155,4.485,1156,3.828,1157,3.425,1158,3.051,1159,3.425,1160,3.051,1161,4.44,1162,2.683,1163,4.956,1164,3.051,1165,4.44,1166,3.051,1167,4.44,1168,3.051,1169,3.051,1170,5.234,1171,6.875,1172,5.234,1173,5.234,1174,5.234,1175,3.051,1176,5.749,1177,4.44,1178,5.749,1179,3.051,1180,2.146,1181,3.051,1182,2.63,1183,2.146,1184,2.146,1185,3.051,1186,3.051,1187,3.051,1188,5.749,1189,5.749,1190,5.749,1191,3.051,1192,3.051,1193,3.051,1194,3.051,1195,3.051,1196,3.051,1197,3.051,1198,4.44,1199,5.234,1200,5.749,1201,4.44]],["title/modules/AppModule.html",[356,0.807,1202,2.642]],["body/modules/AppModule.html",[0,0.309,2,0.147,3,0.106,7,0.086,51,0.018,95,0.32,96,0.147,100,0.188,101,0.043,104,1.341,115,0.517,122,0.937,126,0.517,131,0.64,133,0.937,141,1.346,150,1.279,151,0.708,154,0.983,156,0.937,159,0.937,164,1.05,165,0.816,167,0.64,170,0.937,186,0.012,187,0.012,212,3.287,222,2.396,224,2.355,230,1.775,292,2.516,293,2.704,294,2.215,356,1.329,357,3.528,358,1.341,359,2.643,360,2.643,366,3.165,367,3.165,368,3.165,369,2.482,370,1.875,371,1.781,373,2.482,375,2.482,383,1.469,384,4.252,385,4.252,386,4.252,387,1.695,388,2.215,389,2.355,390,2.355,391,2.355,924,3.739,1026,3.976,1033,2.704,1034,3.212,1137,3.878,1155,3.878,1183,2.929,1184,2.929,1202,5.552,1203,3.59,1204,3.59,1205,3.59,1206,3.59,1207,4.248,1208,4.565,1209,4.565,1210,3.739,1211,4.164,1212,5.512,1213,5.512,1214,4.164,1215,4.752,1216,3.59,1217,4.164,1218,4.164,1219,3.59,1220,3.59,1221,4.164,1222,4.164,1223,3.212,1224,3.212,1225,4.164,1226,4.164,1227,4.164,1228,4.164,1229,4.164,1230,5.512,1231,3.59,1232,3.212,1233,4.164,1234,4.164,1235,5.683,1236,4.164,1237,4.164,1238,4.164,1239,4.164,1240,4.164,1241,4.164,1242,3.59,1243,4.164,1244,4.164]],["title/components/ButtonsComponent.html",[0,0.159,143,0.67]],["body/components/ButtonsComponent.html",[0,0.315,1,1.128,2,0.154,3,0.111,4,0.896,5,0.938,6,0.855,7,0.09,11,0.27,12,1.422,13,0.628,14,2.852,19,1.014,20,1.128,22,0.938,23,1.418,24,1.351,25,1.014,26,1.014,28,1.014,30,0.371,34,0.832,38,1.195,40,1.803,41,0.725,42,0.699,46,0.538,48,0.83,49,0.919,51,0.018,52,0.591,53,0.573,57,0.542,63,1.6,64,1.915,68,0.454,76,1.338,77,1.53,84,0.637,95,0.23,96,0.154,99,0.982,100,0.133,101,0.045,115,0.542,116,1.222,117,1.222,118,1.167,119,1.44,120,0.938,121,1.222,122,0.741,123,0.938,124,0.741,125,0.938,126,0.542,127,0.938,128,0.778,129,0.938,130,0.778,131,1.03,132,1.44,133,0.741,134,0.938,135,0.816,136,1.359,137,0.778,138,1.359,139,0.778,140,1.359,141,0.778,142,0.938,143,1.195,144,0.938,145,0.778,146,0.896,147,0.778,148,0.938,149,0.778,150,0.778,151,0.741,152,0.938,153,0.778,154,0.778,155,0.938,156,0.741,157,0.938,158,1.128,159,0.741,160,0.938,161,0.741,162,0.671,163,1.222,164,0.741,165,0.855,166,0.778,167,1.131,168,0.855,169,1.239,170,0.741,171,0.938,172,0.778,173,0.482,174,0.816,175,0.778,176,1.063,177,0.938,178,0.778,179,0.778,180,0.778,181,0.706,182,0.778,183,0.778,184,0.896,185,0.938,186,0.013,187,0.013,211,1.673,230,1.83,324,1.53,337,3.691,412,1.749,1245,3.761,1246,5.684,1247,5.684,1248,5.684,1249,5.684,1250,5.684,1251,5.684,1252,4.363]],["title/injectables/CdbService.html",[535,1.057,723,2.269]],["body/injectables/CdbService.html",[0,0.24,2,0.154,3,0.111,7,0.09,11,0.351,13,0.627,14,2.847,30,0.37,31,1.012,32,1.421,34,0.705,42,0.627,46,0.617,50,1.238,51,0.018,52,0.452,53,0.571,54,0.704,55,1.509,68,0.764,77,1.801,91,3.428,95,0.294,96,0.154,100,0.132,101,0.045,102,0.739,103,1.12,173,0.829,186,0.013,187,0.013,189,2.555,217,1.22,220,3.376,221,2.2,267,1.397,268,1.439,285,3.018,297,1.527,324,1.527,350,2.847,387,3.164,412,1.339,445,1.912,535,1.777,544,2.314,545,2.184,546,2.066,557,1.28,598,3.209,620,2.694,712,3.751,720,2.461,723,3.428,725,3.309,726,3.358,727,2.461,735,4.157,743,3.684,752,6.135,823,4.376,828,3.684,886,6.135,893,5.768,895,5.768,920,2.825,922,2.81,1064,4.376,1162,3.428,1253,3.751,1254,6.691,1255,6.691,1256,6.691,1257,6.691,1258,6.691,1259,4.351,1260,5.674,1261,4.351,1262,4.351,1263,5.674,1264,5.674,1265,5.674,1266,4.351,1267,5.674,1268,4.351,1269,5.674,1270,4.351,1271,4.351,1272,4.351,1273,4.351,1274,3.061,1275,4.351,1276,4.351,1277,4.351,1278,4.351,1279,4.351,1280,4.351,1281,4.351,1282,4.351,1283,4.351]],["title/modules/DataModule.html",[356,0.807,366,1.691]],["body/modules/DataModule.html",[2,0.189,3,0.136,7,0.11,11,0.33,51,0.018,55,1.324,95,0.31,96,0.189,100,0.211,101,0.056,115,0.662,173,0.713,186,0.014,187,0.014,211,2.205,222,2.687,324,1.736,356,1.548,358,1.717,359,2.759,360,2.282,366,3.516,369,2.904,370,2.402,371,2.282,373,2.904,374,3.236,375,2.402,444,4.974,723,4.527,725,3.374,726,2.677,727,3.017,942,3.896,1088,3.558,1284,4.598,1285,4.598,1286,5.334,1287,6.931,1288,4.598,1289,5.334,1290,5.334,1291,5.334]],["title/modules/HealthModule.html",[356,0.807,1207,2.269]],["body/modules/HealthModule.html",[0,0.275,2,0.191,3,0.137,7,0.111,11,0.333,51,0.018,64,2.186,95,0.308,96,0.191,100,0.22,101,0.056,115,0.669,145,1.394,146,1.43,186,0.014,187,0.014,222,2.089,324,1.746,356,1.553,358,1.735,359,2.978,360,2.305,366,3.382,368,3.382,369,2.921,370,2.426,371,2.305,373,2.921,374,3.256,375,2.426,387,2.641,390,3.048,391,3.048,1037,4.156,1207,4.706,1292,4.645,1293,4.645,1294,5.388,1295,4.645,1296,5.388,1297,4.156]],["title/components/HealthSummaryComponent.html",[0,0.159,145,0.67]],["body/components/HealthSummaryComponent.html",[0,0.304,1,0.586,2,0.116,3,0.084,4,0.674,5,0.706,6,0.644,7,0.068,11,0.338,12,0.644,13,0.722,19,0.835,20,0.973,22,0.706,23,1.393,24,1.327,25,0.835,26,0.835,28,0.835,30,0.279,31,0.835,32,1.575,34,0.581,38,1.061,41,0.743,42,0.517,46,0.604,48,0.684,49,0.962,50,0.918,51,0.018,52,0.618,53,0.825,54,0.757,55,1.221,57,0.678,68,0.715,84,0.797,95,0.265,96,0.116,99,0.739,100,0.1,101,0.034,102,0.927,103,1.205,108,0.927,115,0.408,116,1.006,117,1.006,118,0.961,119,1.279,120,0.706,121,1.006,122,0.558,123,0.706,124,0.558,125,0.706,126,0.581,127,0.706,128,0.586,129,0.706,130,0.586,131,0.915,132,1.279,133,0.558,134,0.706,135,0.614,136,1.173,137,0.586,138,1.173,139,0.586,140,1.173,141,0.586,142,0.706,143,0.586,144,0.706,145,1.061,146,1.49,147,0.586,148,0.706,149,0.586,150,0.586,151,0.558,152,0.706,153,0.586,154,0.586,155,0.706,156,0.558,157,0.706,158,0.586,159,0.558,160,0.706,161,0.558,162,0.505,163,1.006,164,0.558,165,0.644,166,0.586,167,1.092,168,0.644,169,1.069,170,0.558,171,0.706,172,0.586,173,0.363,174,0.614,175,0.586,176,0.876,177,0.706,178,0.586,179,0.586,180,0.586,181,0.531,182,0.586,183,0.586,184,0.674,185,0.706,186,0.01,187,0.01,211,2.089,212,3.163,218,3.097,229,3.658,239,1.286,273,1.317,295,1.214,297,1.601,324,1.26,383,1.158,387,2.559,395,2.942,412,2.07,413,2.849,415,2.59,416,2.002,447,2.223,448,2.349,449,2.349,450,2.349,451,2.349,452,2.223,453,2.223,456,2.49,465,2.984,722,1.214,908,4.035,935,2.349,946,2.828,962,4.22,963,3.862,965,3.862,1053,1.647,1088,2.985,1089,2.132,1090,3.862,1091,3.104,1101,2.828,1102,2.828,1103,4.244,1104,3.293,1105,3.039,1106,3.293,1107,3.293,1108,2.309,1120,2.309,1121,3.039,1122,3.61,1123,3.61,1124,3.61,1125,3.61,1126,2.309,1128,3.61,1297,5.398,1298,6.034,1299,4.184,1300,5.947,1301,5.947,1302,5.947,1303,4.681,1304,3.283,1305,3.283,1306,2.83,1307,3.283,1308,3.283,1309,3.283,1310,3.283,1311,3.283,1312,3.283,1313,3.283,1314,3.283,1315,7.46,1316,4.184,1317,3.61,1318,3.61,1319,3.283]],["title/injectables/HttpClientService.html",[535,1.057,725,1.691]],["body/injectables/HttpClientService.html",[2,0.14,3,0.101,7,0.082,11,0.428,30,0.336,34,0.93,42,0.665,46,0.602,50,1.387,51,0.018,52,0.735,53,0.929,54,1.144,55,1.091,56,3.212,63,1.496,66,2.667,68,0.797,95,0.261,96,0.14,100,0.12,101,0.041,102,1.202,103,1.548,104,2.072,173,0.837,186,0.012,187,0.012,220,3.371,221,3.041,227,3.757,230,1.711,239,1.39,264,2.163,273,1.496,297,1.732,319,4.869,396,2.774,445,1.791,464,4.963,535,1.692,580,2.774,617,4.963,620,3.055,718,2.774,719,3.399,725,2.393,726,3.473,802,6.454,826,5.547,942,3.888,1152,6.35,1288,4.582,1320,6.201,1321,3.399,1322,5.315,1323,5.315,1324,4.099,1325,5.315,1326,6.434,1327,6.434,1328,5.315,1329,3.943,1330,3.943,1331,5.315,1332,3.943,1333,5.315,1334,3.943,1335,5.315,1336,3.943,1337,6.012,1338,5.315,1339,5.315,1340,3.943,1341,5.315,1342,3.943,1343,5.315,1344,3.943,1345,5.315,1346,5.315,1347,4.582,1348,6.718,1349,3.943,1350,3.943,1351,3.943,1352,3.943,1353,7.192,1354,6.434,1355,3.943,1356,3.943,1357,3.943,1358,3.943,1359,3.943]],["title/modules/IasMaterialModule.html",[356,0.807,367,1.691]],["body/modules/IasMaterialModule.html",[0,0.262,2,0.177,3,0.127,7,0.103,11,0.309,51,0.018,95,0.321,96,0.177,100,0.188,101,0.052,151,1.052,186,0.014,187,0.014,224,2.823,279,3.512,351,4.356,356,1.447,359,2.135,367,2.788,373,2.788,388,2.655,542,3.85,549,3.502,676,3.016,1182,4.303,1183,3.512,1360,4.991,1361,4.991,1362,6.731,1363,4.991,1364,6.731,1365,4.991,1366,6.731,1367,4.991,1368,6.731,1369,4.991,1370,6.731,1371,4.991,1372,6.731,1373,4.991,1374,6.731,1375,4.991,1376,6.731,1377,4.991,1378,6.731,1379,6.731,1380,4.991,1381,6.731,1382,4.991,1383,6.731,1384,4.991,1385,6.731,1386,6.731,1387,4.991,1388,6.731,1389,4.991,1390,6.731,1391,4.991,1392,6.731,1393,4.991,1394,6.731,1395,4.991,1396,6.731,1397,4.991,1398,4.303,1399,6.731,1400,4.303,1401,3.85]],["title/classes/Iasio.html",[101,0.039,1274,2.642]],["body/classes/Iasio.html",[2,0.155,3,0.112,7,0.09,11,0.441,30,0.372,31,1.016,34,0.885,41,0.654,42,0.484,46,0.626,48,0.832,49,1.024,50,1.241,51,0.018,52,0.658,53,0.977,54,1.024,60,4.883,63,2.194,64,1.919,68,0.773,69,2.829,70,1.602,74,1.347,93,2.644,100,0.133,101,0.076,102,1.139,104,2.159,108,1.076,110,1.409,176,0.818,186,0.013,187,0.013,221,2.208,232,2.475,239,1.423,273,1.602,278,3.019,297,1.704,324,1.533,331,2.644,454,4.514,455,2.564,456,3.029,457,3.697,458,2.841,550,3.221,572,4.392,620,3.184,693,6.144,734,4.392,791,3.441,821,4.392,823,3.375,1274,5.536,1402,3.772,1403,6.33,1404,7.127,1405,7.127,1406,7.127,1407,7.127,1408,5.694,1409,5.694,1410,5.694,1411,4.375,1412,5.694,1413,4.909,1414,4.375,1415,4.375,1416,5.694,1417,5.694,1418,4.375,1419,4.392,1420,5.694,1421,4.375,1422,4.375,1423,4.375,1424,4.375,1425,4.375,1426,4.375,1427,4.375,1428,4.375,1429,4.375,1430,4.375,1431,4.375]],["title/components/LegendComponent.html",[0,0.159,147,0.67]],["body/components/LegendComponent.html",[0,0.304,1,0.581,2,0.115,3,0.083,4,0.669,5,0.7,6,0.639,7,0.067,11,0.202,12,0.639,13,0.843,19,0.83,20,0.969,22,0.7,23,1.392,24,1.327,25,0.83,26,0.83,28,0.83,30,0.277,31,0.83,34,0.578,38,1.057,41,0.75,42,0.6,46,0.622,48,0.68,49,0.753,51,0.018,52,0.484,57,0.405,62,3.83,68,0.339,84,0.476,95,0.189,96,0.115,100,0.099,101,0.034,115,0.834,116,1.001,117,1.001,118,0.956,119,1.274,120,0.7,121,1.001,122,0.554,123,0.7,124,0.554,125,0.7,126,0.405,127,0.7,128,0.581,129,0.7,130,0.581,131,0.912,132,1.274,133,0.554,134,0.7,135,0.609,136,1.168,137,0.581,138,1.168,139,0.581,140,1.168,141,0.581,142,0.7,143,0.581,144,0.7,145,0.581,146,0.669,147,1.057,148,0.7,149,0.581,150,0.581,151,0.554,152,0.7,153,0.581,154,0.581,155,0.7,156,0.554,157,0.7,158,0.581,159,0.554,160,0.7,161,0.554,162,0.501,163,1.001,164,0.554,165,0.639,166,0.581,167,1.056,168,0.639,169,1.065,170,0.554,171,0.7,172,0.581,173,0.36,174,0.609,175,0.581,176,0.871,177,0.7,178,0.581,179,0.581,180,0.581,181,0.527,182,0.581,183,0.581,184,0.669,185,0.7,186,0.01,187,0.01,217,1.001,218,3.09,229,3.65,237,1.975,267,1.766,268,1.542,395,3.264,412,2.249,416,3.099,428,5.109,447,3.496,452,3.365,453,3.365,465,2.336,722,1.205,962,4.316,1432,2.809,1433,4.655,1434,4.655,1435,5.926,1436,5.926,1437,5.926,1438,5.926,1439,5.926,1440,5.926,1441,5.926,1442,5.926,1443,5.926,1444,4.655,1445,3.258,1446,5.109,1447,3.258,1448,5.917,1449,3.258,1450,3.258,1451,6.537,1452,4.014,1453,3.258,1454,4.655,1455,4.014,1456,3.258,1457,5.926,1458,4.014,1459,3.258,1460,4.014,1461,3.258,1462,5.926,1463,4.014,1464,5.926,1465,3.258,1466,3.258,1467,3.258]],["title/components/MapComponent.html",[0,0.159,149,0.67]],["body/components/MapComponent.html",[0,0.32,1,0.774,2,0.154,3,0.111,4,0.891,5,0.933,6,0.851,7,0.09,11,0.269,12,0.851,13,0.626,19,1.01,20,1.125,22,0.933,23,1.417,24,1.35,25,1.01,26,1.01,28,1.01,30,0.369,34,0.703,38,1.192,40,1.866,41,0.423,42,0.697,46,0.605,48,0.827,49,0.916,51,0.018,52,0.589,57,0.539,68,0.451,72,2.305,74,1.743,77,1.524,84,0.634,95,0.176,96,0.154,100,0.132,101,0.045,115,0.539,116,1.218,117,1.218,118,1.163,119,1.437,120,0.933,121,1.218,122,0.737,123,0.933,124,0.737,125,0.933,126,0.539,127,0.933,128,0.774,129,0.933,130,0.774,131,1.028,132,1.437,133,0.737,134,0.933,135,0.812,136,1.356,137,0.774,138,1.356,139,0.774,140,1.356,141,0.774,142,0.933,143,0.774,144,0.933,145,0.774,146,0.891,147,0.774,148,0.933,149,1.192,150,0.774,151,0.737,152,0.933,153,0.774,154,0.774,155,0.933,156,0.737,157,0.933,158,0.774,159,0.737,160,0.933,161,0.737,162,0.667,163,1.218,164,0.737,165,0.851,166,0.774,167,1.13,168,0.851,169,1.236,170,0.737,171,0.933,172,0.774,173,0.697,174,0.812,175,0.774,176,1.059,177,0.933,178,0.774,179,0.774,180,0.774,181,0.702,182,0.774,183,0.774,184,0.891,185,0.933,186,0.013,187,0.013,237,1.721,267,1.394,268,1.218,324,1.524,441,3.204,533,2.454,557,2.162,922,2.094,932,3.781,1468,3.741,1469,4.368,1470,5.664,1471,5.664,1472,6.305,1473,6.305,1474,5.664,1475,4.339,1476,4.339]],["title/modules/MapModule.html",[356,0.807,1026,2.124]],["body/modules/MapModule.html",[2,0.197,3,0.142,7,0.115,51,0.018,95,0.302,96,0.197,100,0.222,101,0.058,115,0.691,149,1.4,186,0.015,187,0.015,222,2.737,356,1.422,358,1.792,359,3.019,360,2.381,369,2.978,370,2.506,371,2.381,373,2.978,374,3.32,375,2.506,1026,4.385,1477,4.798,1478,4.798,1479,4.798,1480,4.798,1481,4.913,1482,5.565,1483,5.565,1484,5.565]],["title/injectables/MapService.html",[535,1.057,1481,2.438]],["body/injectables/MapService.html",[2,0.186,3,0.134,7,0.109,11,0.426,13,0.761,30,0.447,34,0.793,42,0.761,46,0.61,48,0.933,49,1.033,50,1.252,51,0.018,52,0.664,54,1.033,55,1.471,68,0.716,89,2.362,95,0.213,96,0.186,100,0.16,101,0.055,102,0.892,104,1.691,186,0.014,187,0.014,232,2.97,263,2.802,268,1.129,284,2.945,409,3.694,473,4.527,535,1.937,557,2.026,640,4.927,649,4.927,913,2.793,928,4.511,979,4.527,1235,5.662,1481,4.148,1485,4.527,1486,6.388,1487,6.388,1488,5.251,1489,6.388,1490,5.251,1491,7.341,1492,7.163,1493,5.251,1494,5.251,1495,5.251,1496,5.251,1497,4.527,1498,5.251,1499,4.05,1500,5.251,1501,5.251,1502,5.251]],["title/components/MaterialSandboxComponent.html",[0,0.159,150,0.67]],["body/components/MaterialSandboxComponent.html",[0,0.306,1,0.601,2,0.119,3,0.086,4,0.692,5,0.725,6,0.661,7,0.07,11,0.209,12,1.519,13,0.527,19,0.851,20,0.987,22,0.725,23,1.396,24,1.333,25,0.851,26,0.851,28,0.851,30,0.287,34,0.592,38,1.073,41,0.329,42,0.702,46,0.406,51,0.017,52,0.496,54,0.772,57,0.419,66,2.394,68,0.35,73,5.937,76,1.123,77,1.284,84,0.493,95,0.137,96,0.119,100,0.103,101,0.035,108,1.12,115,0.419,116,1.026,117,1.418,118,0.98,119,1.294,120,0.725,121,1.026,122,0.573,123,0.725,124,0.573,125,0.725,126,0.419,127,0.725,128,0.601,129,0.725,130,0.601,131,0.926,132,1.294,133,0.573,134,0.725,135,0.631,136,1.19,137,0.601,138,1.19,139,0.601,140,1.19,141,0.601,142,0.725,143,0.601,144,0.725,145,0.601,146,0.692,147,0.601,148,0.725,149,0.601,150,1.073,151,1.227,152,0.725,153,0.601,154,0.601,155,0.725,156,0.573,157,0.725,158,0.601,159,0.573,160,0.725,161,0.573,162,0.851,163,1.026,164,0.573,165,0.661,166,0.601,167,1.065,168,0.661,169,1.085,170,0.573,171,0.725,172,0.601,173,0.373,174,0.631,175,0.601,176,1.401,177,0.725,178,0.601,179,0.601,180,0.601,181,0.545,182,0.601,183,0.601,184,0.692,185,0.725,186,0.011,187,0.011,236,3.917,237,1.228,263,1.941,264,2.45,267,0.83,278,2.148,395,2.717,436,4.112,524,2.6,549,2.698,676,3.345,819,5.685,1085,4.112,1137,3.356,1232,4.27,1242,4.112,1398,5.189,1497,4.112,1503,4.772,1504,2.907,1505,4.77,1506,4.112,1507,4.77,1508,4.77,1509,4.77,1510,3.371,1511,3.371,1512,6.594,1513,6.594,1514,6.594,1515,6.594,1516,6.594,1517,6.594,1518,6.594,1519,5.685,1520,6.594,1521,6.594,1522,6.594,1523,6.594,1524,7.402,1525,7.35,1526,6.018,1527,3.679,1528,4.112,1529,4.77,1530,5.535,1531,4.77,1532,4.77,1533,4.77,1534,6.018,1535,4.77,1536,4.77,1537,6.594,1538,7.221,1539,7.402,1540,6.018,1541,3.371,1542,6.594,1543,6.594,1544,6.594,1545,6.018,1546,4.77,1547,4.77,1548,6.018,1549,4.77,1550,4.77,1551,4.77,1552,4.112,1553,4.77,1554,4.77,1555,4.77,1556,4.112,1557,4.77,1558,4.77,1559,4.77,1560,4.77,1561,3.679,1562,3.371,1563,3.371,1564,3.371,1565,3.371,1566,3.371,1567,3.371]],["title/components/OverviewCardComponent.html",[0,0.159,153,0.67]],["body/components/OverviewCardComponent.html",[0,0.317,1,0.804,2,0.16,3,0.115,4,0.926,5,0.969,6,0.884,7,0.093,11,0.279,12,0.884,19,1.035,20,1.145,22,0.969,23,1.42,24,1.353,25,1.035,26,1.035,28,1.035,30,0.384,34,0.721,38,1.21,41,0.44,42,0.71,46,0.494,48,0.848,49,0.939,51,0.018,52,0.603,57,0.56,68,0.469,84,0.659,95,0.183,96,0.16,100,0.137,101,0.047,115,0.56,116,1.248,117,1.248,118,1.192,119,1.458,120,0.969,121,1.248,122,0.766,123,0.969,124,0.766,125,0.969,126,0.56,127,0.969,128,0.804,129,0.969,130,0.804,131,1.043,132,1.458,133,0.766,134,0.969,135,0.843,136,1.381,137,0.804,138,1.381,139,0.804,140,1.381,141,0.804,142,0.969,143,0.804,144,0.969,145,0.804,146,0.926,147,0.804,148,0.969,149,0.804,150,0.804,151,0.766,152,0.969,153,1.21,154,1.334,155,0.969,156,0.766,157,0.969,158,0.804,159,0.766,160,0.969,161,0.766,162,0.693,163,1.248,164,0.766,165,0.884,166,0.804,167,1.139,168,0.884,169,1.259,170,0.766,171,0.969,172,0.804,173,0.498,174,0.843,175,0.804,176,1.086,177,0.969,178,0.804,179,0.804,180,0.804,181,0.729,182,0.804,183,0.804,184,0.926,185,0.969,186,0.013,187,0.013,217,1.248,255,3.508,416,2.484,1121,3.77,1469,4.478,1528,5.847,1568,5.536,1569,4.953,1570,3.886,1571,5.005,1572,5.806,1573,5.806,1574,4.508,1575,4.508]],["title/components/OverviewComponent.html",[0,0.159,156,0.638]],["body/components/OverviewComponent.html",[0,0.322,1,0.806,2,0.16,3,0.115,4,0.928,5,0.972,6,0.886,7,0.093,11,0.28,12,0.886,19,1.037,20,1.147,22,0.972,23,1.42,24,1.353,25,1.037,26,1.037,28,1.037,30,0.385,34,0.722,38,1.211,41,0.441,42,0.711,46,0.495,48,0.85,49,0.941,51,0.018,52,0.605,57,0.561,68,0.47,84,0.66,95,0.183,96,0.16,100,0.137,101,0.047,115,0.561,116,1.251,117,1.251,118,1.194,119,1.46,120,0.972,121,1.251,122,0.768,123,0.972,124,0.768,125,0.972,126,0.561,127,0.972,128,0.806,129,0.972,130,0.806,131,1.106,132,1.46,133,0.768,134,0.972,135,0.846,136,1.383,137,0.806,138,1.383,139,0.806,140,1.383,141,0.806,142,0.972,143,0.806,144,0.972,145,0.806,146,1.321,147,0.806,148,0.972,149,0.806,150,0.806,151,0.768,152,0.972,153,0.806,154,1.147,155,0.972,156,1.154,157,0.972,158,0.806,159,0.768,160,0.972,161,0.768,162,0.695,163,1.251,164,0.768,165,0.886,166,0.806,167,1.161,168,0.886,169,1.261,170,0.768,171,0.972,172,0.806,173,0.5,174,0.846,175,0.806,176,1.088,177,0.972,178,0.806,179,0.806,180,0.806,181,0.731,182,0.806,183,0.806,184,0.928,185,0.972,186,0.013,187,0.013,217,1.251,324,1.565,387,2.367,915,3.515,1090,3.777,1091,3.224,1576,3.898,1577,5.014,1578,5.816,1579,5.816,1580,5.816,1581,4.521,1582,4.521]],["title/modules/OverviewModule.html",[356,0.807,1208,2.438]],["body/modules/OverviewModule.html",[0,0.259,2,0.173,3,0.124,7,0.101,11,0.302,46,0.52,51,0.018,59,3.713,64,2.057,95,0.313,96,0.173,100,0.212,101,0.051,115,0.606,153,1.377,154,1.282,156,1.312,186,0.014,187,0.014,222,1.892,324,1.643,356,1.576,358,1.571,359,2.85,360,2.087,366,3.302,367,3.302,368,3.302,369,2.749,370,2.197,371,2.087,373,2.749,374,3.063,375,2.197,387,1.986,388,2.595,389,2.76,390,2.76,391,2.76,828,3.964,881,4.708,924,3.9,1207,4.431,1208,5.137,1210,3.9,1216,4.206,1219,4.206,1220,4.206,1569,3.763,1583,4.206,1584,4.206,1585,4.879,1586,4.206,1587,4.879,1588,6.104,1589,4.294,1590,4.879,1591,4.879]],["title/injectables/RoutingService.html",[535,1.057,1088,1.783]],["body/injectables/RoutingService.html",[2,0.158,3,0.114,7,0.092,11,0.433,13,0.637,17,2.711,30,0.379,34,0.716,41,0.659,42,0.493,46,0.62,49,0.932,50,1.324,51,0.018,52,0.702,53,0.887,54,1.092,55,1.387,57,0.793,68,0.745,81,3.438,84,1.046,89,1.648,91,3.483,92,5.758,95,0.233,96,0.158,100,0.136,101,0.046,102,1.147,108,0.757,110,1.435,131,0.886,164,1.147,167,0.886,186,0.013,187,0.013,194,3.594,212,2.371,217,1.239,221,2.777,230,2.403,239,1.426,245,3.742,253,4.445,268,1.452,273,1.9,293,2.894,535,1.798,549,3.26,580,3.136,614,3.438,771,3.136,1088,2.737,1091,3.507,1103,4.733,1155,5.039,1159,5.208,1592,3.843,1593,5.763,1594,5.763,1595,6.753,1596,4.969,1597,6.753,1598,4.969,1599,6.753,1600,5.763,1601,4.457,1602,4.457,1603,4.457,1604,4.969,1605,4.457,1606,5.807,1607,4.457,1608,4.969,1609,4.457,1610,4.969,1611,4.457,1612,5.763,1613,4.457,1614,4.457,1615,4.457,1616,4.457,1617,4.457,1618,4.457,1619,6.387]],["title/modules/SharedModule.html",[356,0.807,368,1.691]],["body/modules/SharedModule.html",[0,0.31,2,0.171,3,0.123,7,0.1,11,0.298,12,1.188,13,0.67,17,2.695,41,0.646,51,0.018,57,0.863,95,0.312,96,0.171,100,0.211,101,0.05,115,0.599,126,0.965,128,1.386,161,1.32,162,0.741,186,0.013,187,0.013,222,1.869,224,2.726,230,1.95,292,2.912,294,2.563,324,1.63,356,1.572,357,2.419,358,1.552,359,2.834,360,2.062,366,3.291,367,3.291,368,3.527,369,2.728,370,2.17,371,2.062,373,2.728,374,3.04,375,2.17,384,4.672,385,4.672,386,4.672,387,1.962,388,2.563,389,2.726,390,2.726,462,3.717,1033,3.129,1224,3.717,1561,4.672,1620,4.155,1621,4.155,1622,4.819,1623,4.155,1624,4.819,1625,6.057,1626,6.057,1627,5.222,1628,6.057,1629,4.819,1630,3.39,1631,4.819]],["title/components/ShelveButtonComponent.html",[0,0.159,158,0.67]],["body/components/ShelveButtonComponent.html",[0,0.317,1,0.613,2,0.122,3,0.088,4,0.705,5,1.375,6,0.673,7,0.071,10,2.416,11,0.346,12,1.491,13,0.733,14,3.045,15,2.987,16,2.734,17,2.168,18,4.167,19,0.862,20,0.997,21,4.821,22,0.739,23,1.398,24,1.331,25,0.862,26,0.862,27,3.728,28,0.862,29,3.728,30,0.292,31,0.862,32,1.258,33,3.501,34,0.754,36,5.232,37,5.232,38,1.082,39,3.138,40,1.633,41,0.69,42,0.534,43,2.961,44,6.098,45,6.098,46,0.61,47,4.167,50,0.948,51,0.018,52,0.631,53,0.797,54,0.782,55,1.313,56,3.379,57,0.944,58,3.379,59,2.571,60,4.681,61,5.232,62,2.426,63,1.708,64,1.629,68,0.766,69,1.967,70,1.36,72,1.967,73,4.681,74,1.488,76,1.138,77,1.633,78,3.4,79,4.167,80,3.728,81,3.728,82,4.167,83,4.167,84,0.817,86,3.728,87,5.232,89,1.787,90,3.941,93,2.921,95,0.246,96,0.122,97,2.961,98,2.23,99,0.773,100,0.104,101,0.036,102,1.031,103,1.244,104,1.106,105,2.961,106,2.961,107,2.961,109,2.23,110,1.106,112,2.416,115,0.427,116,1.039,117,1.039,118,0.993,119,1.305,120,0.739,121,1.039,122,0.584,123,0.739,124,0.584,125,0.739,126,0.427,127,0.739,128,0.613,129,0.739,130,0.613,131,0.933,132,1.305,133,0.584,134,0.739,135,0.643,136,1.202,137,0.613,138,1.202,139,0.613,140,1.202,141,0.613,142,0.739,143,0.613,144,0.739,145,0.613,146,0.705,147,0.613,148,0.739,149,0.613,150,0.613,151,0.584,152,0.739,153,0.613,154,0.613,155,0.739,156,0.584,157,0.739,158,1.082,159,0.584,160,0.739,161,0.584,162,0.528,163,1.039,164,0.584,165,0.673,166,0.613,167,1.07,168,0.673,169,1.096,170,0.584,171,0.739,172,0.613,173,0.38,174,0.643,175,0.613,176,0.904,177,0.739,178,0.613,179,0.613,180,0.613,181,0.556,182,0.613,183,0.613,184,0.705,185,0.739,186,0.011,187,0.011,217,1.039,236,3.433,237,1.562,238,4.313,239,1.046,246,2.426,379,5.455,491,2.416,1632,6.098,1633,6.068,1634,3.435,1635,4.167,1636,4.833,1637,3.435,1638,3.435,1639,3.435,1640,3.435,1641,3.435,1642,3.435]],["title/injectables/SidenavService.html",[33,1.783,535,1.057]],["body/injectables/SidenavService.html",[2,0.143,3,0.103,7,0.083,11,0.402,13,0.596,16,3.939,17,2.7,30,0.343,31,0.962,32,1.759,33,2.561,34,0.67,41,0.679,42,0.596,46,0.643,48,0.788,49,0.872,50,1.273,51,0.018,52,0.675,53,0.914,54,1.05,55,1.43,57,0.806,58,4.697,62,3.495,68,0.751,70,1.518,72,2.195,84,0.989,89,1.994,95,0.263,96,0.143,100,0.123,101,0.042,102,1.033,103,1.671,108,0.685,162,0.83,186,0.012,187,0.012,194,3.495,230,2.242,237,1.388,239,1.383,244,4.693,267,1.497,268,1.307,273,1.96,297,1.452,412,1.66,535,1.711,545,2.022,546,1.913,598,3.051,676,4.208,721,4.16,733,4.65,738,4.65,741,4.65,743,3.502,925,3.108,926,2.617,1088,3.307,1089,2.617,1091,3.083,1155,4.567,1163,6.231,1180,2.835,1596,4.65,1598,4.65,1604,4.65,1606,5.007,1608,4.65,1610,4.65,1643,3.474,1644,5.393,1645,5.393,1646,6.492,1647,6.492,1648,6.492,1649,5.393,1650,4.03,1651,5.393,1652,4.03,1653,4.03,1654,4.03,1655,4.03,1656,5.393,1657,4.03,1658,4.03,1659,5.393,1660,4.03,1661,4.03,1662,4.03,1663,4.03,1664,4.03,1665,4.03,1666,4.03,1667,4.03,1668,4.03,1669,5.393,1670,4.03,1671,4.03]],["title/components/StatusViewComponent.html",[0,0.159,161,0.638]],["body/components/StatusViewComponent.html",[0,0.314,1,0.574,2,0.114,3,0.082,4,0.661,5,0.692,6,0.631,7,0.067,11,0.199,12,0.631,17,1.79,19,0.823,20,0.963,22,0.692,23,1.391,24,1.325,25,0.823,26,0.823,28,0.823,30,0.274,31,0.823,32,1.567,34,0.573,38,1.051,40,1.842,41,0.749,42,0.597,46,0.639,51,0.018,52,0.48,53,0.819,57,0.732,63,1.299,64,1.556,68,0.48,70,1.659,72,1.879,84,0.675,95,0.239,96,0.114,99,0.725,100,0.098,101,0.034,103,1.389,108,0.547,115,0.4,116,0.993,117,0.993,118,0.948,119,1.267,120,0.692,121,0.993,122,0.547,123,0.692,124,0.547,125,0.692,126,0.573,127,0.692,128,0.574,129,0.692,130,0.574,131,0.907,132,1.267,133,0.547,134,0.692,135,0.602,136,1.16,137,0.574,138,1.16,139,0.574,140,1.16,141,0.574,142,0.692,143,0.574,144,0.692,145,0.574,146,0.661,147,0.574,148,0.692,149,0.574,150,0.574,151,0.547,152,0.692,153,0.574,154,0.574,155,0.692,156,0.547,157,0.692,158,0.574,159,0.547,160,0.692,161,1.002,162,1.029,163,0.993,164,0.547,165,0.631,166,0.574,167,1.052,168,0.631,169,1.058,170,0.547,171,0.692,172,0.574,173,0.356,174,0.602,175,0.574,176,0.864,177,0.692,178,0.574,179,0.574,180,0.574,181,0.521,182,0.574,183,0.574,184,0.661,185,0.692,186,0.01,187,0.01,217,0.993,218,2.079,229,2.456,230,1.487,237,1.189,239,0.864,255,2.79,263,1.879,267,1.536,268,1.471,297,1.453,383,1.136,395,3.12,408,3.797,412,2.312,413,2.968,415,2.563,416,2.778,418,3.248,419,3.248,420,3.248,421,3.248,443,1.822,446,3.561,447,3.176,448,2.709,449,2.709,450,2.709,451,2.709,452,2.963,453,2.963,722,1.191,946,2.79,962,4.335,1091,2.192,1105,2.998,1316,4.147,1347,3.98,1446,5.38,1448,5.767,1451,6.169,1452,5.082,1455,2.776,1458,2.776,1460,2.776,1463,2.776,1469,3.561,1630,5.034,1672,6.169,1673,2.776,1674,4.617,1675,4.617,1676,5.895,1677,5.895,1678,5.895,1679,6.494,1680,5.895,1681,4.617,1682,3.22,1683,4.617,1684,6.494,1685,3.22,1686,3.22,1687,3.561,1688,3.22,1689,4.617,1690,4.617,1691,3.22,1692,3.22,1693,3.22,1694,3.22,1695,3.22,1696,2.776,1697,3.22,1698,3.22,1699,3.22]],["title/modules/TabularModule.html",[356,0.807,1209,2.438]],["body/modules/TabularModule.html",[0,0.269,2,0.183,3,0.132,7,0.107,11,0.321,51,0.018,95,0.312,96,0.183,100,0.217,101,0.054,115,0.644,147,1.327,161,0.881,164,1.322,165,1.016,186,0.014,187,0.014,222,2.009,324,1.706,356,1.533,357,3.734,358,1.669,359,2.928,360,2.217,367,3.351,368,3.351,369,2.853,370,2.334,371,2.217,373,2.853,374,3.18,375,2.334,387,2.109,388,2.756,389,2.931,391,2.931,445,2.135,465,3.18,1033,3.365,1091,3.009,1209,5.099,1223,3.997,1224,4.887,1630,3.646,1700,4.468,1701,4.468,1702,5.182,1703,4.468,1704,5.182,1705,5.182,1706,5.182]],["title/interfaces/TimeoutOption.html",[1707,2.438,1708,2.896]],["body/interfaces/TimeoutOption.html",[0,0.28,2,0.1,3,0.072,7,0.058,11,0.175,12,0.822,13,0.612,14,1.416,16,2.372,17,1.626,19,0.503,20,0.748,23,0.503,24,0.48,26,0.503,28,0.503,30,0.24,31,0.748,32,0.635,33,2.81,34,0.351,38,0.503,40,0.76,41,0.737,42,0.312,46,0.24,51,0.018,53,0.551,54,0.809,55,1.137,56,2.534,57,0.925,58,3.346,59,1.501,62,1.416,63,1.408,66,1.416,68,0.788,69,1.707,70,1.408,72,1.707,74,1.29,76,0.664,77,0.76,84,0.963,89,1.55,91,1.705,95,0.26,96,0.1,98,1.833,99,0.635,100,0.127,101,0.029,102,1.005,103,1.596,104,1.611,108,0.48,109,3.596,110,1.611,112,2.95,159,0.48,162,0.434,186,0.012,187,0.009,189,1.888,190,3.615,194,1.416,196,4.362,197,4.516,199,4.774,202,2.433,203,2.433,204,2.433,205,2.433,206,3.234,207,2.433,210,5.101,211,1.825,212,2.661,213,3.615,214,4.313,215,3.615,217,0.607,218,2.493,219,2.723,220,2.891,221,1.626,222,1.626,223,1.985,224,3.132,225,1.705,227,3.441,230,1.905,236,3.73,237,1.765,238,5.366,239,1.354,241,2.433,242,4.774,243,2.433,244,3.596,245,2.723,246,2.104,248,2.433,253,2.177,255,3.023,256,1.416,257,3.519,258,1.833,259,2.433,267,0.695,268,1.568,273,0.794,276,3.615,278,1.271,279,1.985,280,5.346,284,2.14,285,1.501,286,2.433,287,4.313,288,3.2,289,2.433,290,4.313,292,1.705,293,1.833,294,1.501,295,1.043,296,3.615,297,1.129,298,3.615,299,2.433,300,2.433,301,2.433,302,2.433,303,2.433,304,2.433,305,3.615,306,2.433,308,3.615,309,2.433,310,5.535,311,2.433,312,3.615,313,2.433,316,2.433,318,5.346,319,4.74,320,4.313,321,2.433,322,2.433,337,1.833,338,3.615,339,4.564,340,2.177,341,2.177,342,2.433,343,2.177,344,2.433,345,2.433,346,2.433,456,1.501,491,4.64,735,2.372,771,2.95,811,5.809,833,3.615,941,2.95,1005,3.615,1101,2.534,1144,4.774,1151,2.433,1299,1.985,1413,3.615,1635,3.615,1707,2.723,1708,3.859,1709,2.433,1710,3.615,1711,6.857,1712,4.193,1713,3.859,1714,2.822,1715,2.822,1716,2.822,1717,2.822,1718,4.193,1719,2.822,1720,2.822,1721,2.822,1722,5.537,1723,2.822,1724,2.177,1725,2.822,1726,2.177,1727,2.822,1728,2.822,1729,2.822,1730,2.822,1731,2.822,1732,2.822,1733,4.193,1734,2.822,1735,5.003,1736,2.822,1737,2.433,1738,2.822,1739,2.822,1740,2.822,1741,2.822,1742,2.822,1743,4.193,1744,4.193,1745,2.822,1746,2.822,1747,5.917,1748,2.822,1749,2.822,1750,2.822,1751,2.822,1752,2.822,1753,2.822,1754,2.822,1755,2.822,1756,2.822,1757,2.822,1758,2.433,1759,2.822,1760,2.822,1761,2.822,1762,4.193,1763,2.822,1764,2.822,1765,4.193,1766,4.193,1767,2.822]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.159,166,0.67]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.317,1,0.647,2,0.128,3,0.093,4,0.745,5,0.78,6,0.712,7,0.075,11,0.311,12,0.712,13,0.746,19,0.896,20,1.027,22,0.78,23,1.403,24,1.336,25,0.896,26,0.896,28,0.896,30,0.309,31,0.896,32,1.611,34,0.624,38,1.109,40,1.673,41,0.725,42,0.555,46,0.589,48,0.734,49,0.812,50,0.712,51,0.018,52,0.599,53,0.857,54,0.587,55,1.386,57,0.451,68,0.702,76,1.182,84,0.53,95,0.28,96,0.128,99,0.817,100,0.11,101,0.038,102,0.853,108,0.853,115,0.451,116,1.08,117,1.08,118,1.031,119,1.336,120,0.78,121,1.08,122,0.617,123,0.78,124,0.617,125,0.78,126,0.624,127,0.78,128,0.647,129,0.78,130,0.647,131,0.956,132,1.336,133,0.617,134,0.78,135,0.679,136,1.238,137,0.647,138,1.238,139,0.647,140,1.238,141,0.647,142,0.78,143,0.647,144,0.78,145,0.647,146,0.745,147,0.647,148,0.78,149,0.647,150,0.647,151,0.617,152,0.78,153,0.647,154,0.647,155,0.78,156,0.617,157,0.78,158,0.647,159,0.617,160,0.78,161,0.617,162,0.558,163,1.08,164,0.617,165,0.712,166,1.109,167,1.173,168,1.522,169,1.522,170,0.617,171,0.78,172,0.647,173,0.401,174,0.679,175,0.647,176,0.939,177,0.78,178,0.647,179,0.647,180,0.647,181,1.119,182,0.647,183,0.647,184,0.745,185,0.78,186,0.011,187,0.011,211,2.203,217,1.08,237,1.293,239,1.077,273,1.413,295,1.342,383,1.772,394,3.119,412,1.117,413,1.477,445,1.692,557,2.133,722,1.342,791,3.035,922,2.129,923,2.593,972,2.357,973,3.533,974,3.533,981,2.799,992,2.799,994,3.874,1053,3.119,1299,4.373,1768,3.751,1769,4.262,1770,4.58,1771,3.182,1772,3.74,1773,2.357,1774,3.261,1775,2.735,1776,3.129,1777,3.129,1778,3.129,1779,1.93,1780,3.129]],["title/components/WeatherComponent.html",[0,0.159,170,0.638]],["body/components/WeatherComponent.html",[0,0.325,1,0.738,2,0.147,3,0.106,4,0.85,5,0.89,6,0.811,7,0.086,11,0.256,12,0.811,13,0.725,15,2.472,19,0.979,20,1.099,22,0.89,23,1.414,24,1.347,25,0.979,26,0.979,28,0.979,30,0.352,31,0.979,34,0.682,38,1.17,40,1.114,41,0.601,42,0.681,46,0.558,48,0.802,49,0.888,50,0.811,51,0.018,52,0.744,53,0.721,54,0.669,57,0.514,68,0.571,76,1.292,84,0.9,95,0.222,96,0.147,100,0.126,101,0.043,102,0.703,108,0.933,110,1.768,115,0.514,116,1.18,117,1.18,118,1.127,119,1.411,120,0.89,121,1.18,122,0.703,123,0.89,124,0.703,125,0.89,126,0.514,127,0.89,128,0.738,129,0.89,130,0.738,131,1.009,132,1.411,133,0.703,134,0.89,135,0.774,136,1.325,137,0.738,138,1.325,139,0.738,140,1.325,141,0.738,142,0.89,143,0.738,144,0.89,145,0.738,146,0.85,147,0.738,148,0.89,149,0.738,150,0.738,151,0.703,152,0.89,153,0.738,154,0.738,155,0.89,156,0.703,157,0.89,158,0.738,159,0.703,160,0.89,161,0.703,162,0.637,163,1.18,164,0.703,165,0.811,166,0.738,167,1.16,168,0.811,169,1.208,170,1.115,171,0.89,172,0.738,173,0.457,174,0.774,175,0.738,176,1.027,177,0.89,178,0.738,179,0.738,180,0.738,181,0.669,182,0.738,183,0.738,184,0.85,185,0.89,186,0.012,187,0.012,217,1.509,237,1.413,246,2.755,262,3.105,264,2.671,266,5.061,267,1.019,268,0.89,533,2.341,557,1.931,749,3.565,913,3.49,1007,4.235,1018,4.733,1775,3.452,1779,2.201,1781,3.568,1782,5.49,1783,5.49,1784,5.49,1785,5.49,1786,6.05,1787,5.49,1788,5.49,1789,5.49,1790,4.139,1791,4.139,1792,3.568]],["title/components/WeatherDataMarkerComponent.html",[0,0.159,172,0.67]],["body/components/WeatherDataMarkerComponent.html",[0,0.32,1,0.632,2,0.126,3,0.09,4,0.728,5,0.762,6,0.695,7,0.073,11,0.352,12,0.695,13,0.741,19,0.881,20,1.015,22,0.762,23,1.4,24,1.334,25,0.881,26,0.881,28,0.881,30,0.302,31,0.881,32,1.508,34,0.614,38,1.097,40,1.804,41,0.717,42,0.546,46,0.597,48,0.722,49,0.799,50,0.969,51,0.018,52,0.64,53,0.85,54,0.799,55,1.376,56,3.718,57,0.44,68,0.697,74,1.894,76,1.163,84,0.518,95,0.262,96,0.126,99,0.798,100,0.108,101,0.037,102,0.967,108,1.046,115,0.44,116,1.062,117,1.062,118,1.015,119,1.323,120,0.762,121,1.062,122,0.602,123,0.762,124,0.602,125,0.762,126,0.614,127,0.762,128,0.632,129,0.762,130,0.632,131,0.946,132,1.323,133,0.602,134,0.762,135,0.663,136,1.223,137,0.632,138,1.223,139,0.632,140,1.223,141,0.632,142,0.762,143,0.632,144,0.762,145,0.632,146,0.728,147,0.632,148,0.762,149,0.632,150,0.632,151,0.602,152,0.762,153,0.632,154,0.632,155,0.762,156,0.602,157,0.762,158,0.632,159,0.602,160,0.762,161,0.602,162,0.545,163,1.062,164,0.602,165,0.695,166,0.632,167,1.16,168,0.695,169,1.115,170,0.602,171,0.762,172,1.097,173,0.857,174,0.663,175,0.632,176,0.924,177,0.762,178,0.632,179,0.632,180,0.632,181,1.047,182,0.632,183,0.632,184,0.728,185,0.762,186,0.011,187,0.011,194,2.48,211,2.219,217,1.062,237,1.272,239,1.151,264,2.634,267,1.216,268,1.062,273,1.732,295,1.311,350,2.48,383,1.251,394,3.519,445,1.665,553,3.811,557,2.146,560,2.628,922,2.103,923,2.561,935,2.48,972,2.302,973,3.476,974,3.476,995,3.056,1053,2.48,1065,3.476,1093,2.494,1162,3.718,1527,3.811,1627,4.26,1768,3.789,1769,4.304,1770,4.626,1771,3.17,1772,3.694,1773,2.302,1774,3.209,1775,2.701,1779,1.886,1793,4.904,1794,4.941,1795,4.746,1796,3.545,1797,3.545,1798,3.545,1799,3.545,1800,3.545]],["title/modules/WeatherModule.html",[356,0.807,1210,1.997]],["body/modules/WeatherModule.html",[0,0.241,2,0.154,3,0.111,7,0.09,11,0.27,51,0.018,59,3.021,95,0.316,96,0.154,100,0.204,101,0.045,115,0.541,166,1.27,167,1.153,168,1.114,169,1.396,170,1.21,172,1.27,173,0.628,174,1.332,175,1.27,176,1.252,178,1.27,179,1.27,180,1.27,181,0.919,182,1.356,186,0.013,187,0.013,222,2.45,294,2.318,324,1.529,356,1.44,357,3.573,358,1.404,359,2.703,360,1.865,366,3.206,367,3.206,368,3.206,369,2.558,370,1.963,371,1.865,373,2.558,374,2.851,375,1.963,387,1.774,388,2.318,389,2.466,390,2.466,391,2.466,445,1.914,557,1.97,1026,4.027,1030,3.758,1032,4.897,1033,2.83,1034,3.362,1035,5.448,1037,3.362,1210,4.231,1769,4.046,1770,4.103,1771,3.046,1779,2.318,1801,3.758,1802,3.758,1803,4.359,1804,3.758,1805,3.758,1806,4.359,1807,5.68,1808,3.362,1809,3.362,1810,3.758,1811,4.359,1812,3.996,1813,3.362,1814,4.359]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.159,175,0.67]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.305,1,0.662,2,0.132,3,0.095,4,0.763,5,0.799,6,0.728,7,0.077,11,0.23,12,0.728,13,0.564,15,2.298,19,0.91,20,1.04,22,0.799,23,1.405,24,1.338,25,0.91,26,0.91,28,0.91,30,0.316,34,0.634,38,1.12,40,1.83,41,0.362,42,0.644,46,0.579,48,0.746,49,0.825,51,0.018,52,0.53,53,0.488,57,0.461,68,0.707,74,1.571,76,1.201,84,0.543,93,3.084,95,0.15,96,0.132,100,0.113,101,0.039,104,1.196,115,0.461,116,1.097,117,1.097,118,1.048,119,1.35,120,0.799,121,1.097,122,0.631,123,0.799,124,0.631,125,0.799,126,0.461,127,0.799,128,0.662,129,0.799,130,0.662,131,0.965,132,1.35,133,0.631,134,0.799,135,0.695,136,1.254,137,0.662,138,1.254,139,0.662,140,1.254,141,0.662,142,0.799,143,0.662,144,0.799,145,0.662,146,0.763,147,0.662,148,0.799,149,0.662,150,0.662,151,0.631,152,0.799,153,0.662,154,0.662,155,0.799,156,0.631,157,0.799,158,0.662,159,0.631,160,0.799,161,0.631,162,0.571,163,1.097,164,0.631,165,0.728,166,0.662,167,1.176,168,0.728,169,1.519,170,0.631,171,0.799,172,0.662,173,0.411,174,0.695,175,1.12,176,1.446,177,0.799,178,0.662,179,0.662,180,0.662,181,0.943,182,0.662,183,0.662,184,0.763,185,0.799,186,0.011,187,0.011,217,1.097,239,1.091,264,2.373,268,1.35,284,2.685,288,1.764,350,2.561,394,3.15,445,1.72,485,3.59,557,2.164,931,3.314,932,2.887,1121,3.314,1235,5.244,1527,3.936,1768,3.704,1769,4.208,1793,5.026,1795,4.842,1813,5.371,1815,3.202,1816,5.861,1817,7.282,1818,5.103,1819,5.103,1820,5.103,1821,6.277,1822,6.277,1823,5.103,1824,3.714,1825,3.714,1826,3.714,1827,5.412,1828,3.714,1829,6.277,1830,5.83,1831,3.714,1832,3.714,1833,5.103,1834,5.103,1835,3.714]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.159,178,0.67]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.317,1,0.647,2,0.128,3,0.092,4,0.745,5,0.78,6,0.711,7,0.075,11,0.311,12,0.711,13,0.746,19,0.895,20,1.027,22,0.78,23,1.402,24,1.336,25,0.895,26,0.895,28,0.895,30,0.309,31,0.895,32,1.611,34,0.623,38,1.108,40,1.672,41,0.725,42,0.555,46,0.589,48,0.733,49,0.812,50,0.711,51,0.018,52,0.598,53,0.857,54,0.587,55,1.386,57,0.45,68,0.701,76,1.182,84,0.53,95,0.28,96,0.128,99,0.816,100,0.11,101,0.038,102,0.853,108,0.978,115,0.45,116,1.079,117,1.079,118,1.031,119,1.336,120,0.78,121,1.079,122,0.616,123,0.78,124,0.616,125,0.78,126,0.623,127,0.78,128,0.647,129,0.78,130,0.647,131,0.956,132,1.336,133,0.616,134,0.78,135,0.678,136,1.238,137,0.647,138,1.238,139,0.647,140,1.238,141,0.647,142,0.78,143,0.647,144,0.78,145,0.647,146,0.745,147,0.647,148,0.78,149,0.647,150,0.647,151,0.616,152,0.78,153,0.647,154,0.647,155,0.78,156,0.616,157,0.78,158,0.647,159,0.616,160,0.78,161,0.616,162,0.558,163,1.079,164,0.616,165,0.711,166,0.647,167,1.163,168,0.711,169,1.522,170,0.616,171,0.78,172,0.647,173,0.401,174,0.678,175,0.647,176,1.455,177,0.78,178,1.108,179,0.647,180,0.647,181,1.055,182,0.647,183,0.647,184,0.745,185,0.78,186,0.011,187,0.011,211,2.225,217,1.079,237,1.292,239,1.077,273,1.749,295,1.341,383,1.771,394,3.118,412,1.116,413,1.476,445,1.692,557,2.133,560,2.67,722,1.341,922,2.129,923,2.592,972,2.355,973,3.531,974,3.531,981,2.797,992,2.797,994,3.872,1053,3.118,1299,4.371,1768,3.751,1769,4.261,1770,4.579,1771,3.182,1772,3.738,1773,2.355,1774,3.26,1775,2.734,1776,3.126,1777,3.126,1778,3.126,1779,1.929,1780,3.126]],["title/injectables/WeatherService.html",[535,1.057,1771,1.606]],["body/injectables/WeatherService.html",[0,0.243,2,0.082,3,0.059,7,0.048,11,0.222,13,0.551,30,0.376,31,0.641,32,1.736,34,0.446,41,0.686,42,0.397,46,0.63,48,0.336,49,0.373,50,0.866,51,0.018,52,0.459,53,0.906,54,0.714,55,1.335,57,0.769,63,1.403,64,0.776,68,0.676,70,0.648,74,1.359,77,1.666,84,0.728,89,1.328,95,0.242,96,0.082,99,0.518,100,0.109,101,0.037,102,0.61,103,1.284,104,1.156,108,1.016,110,1.606,126,0.286,131,0.552,162,0.881,167,1.035,173,0.684,181,1.103,186,0.008,187,0.008,189,1.617,217,0.772,218,3.429,220,2.579,221,1.393,223,2.527,227,2.502,229,3.975,239,1.259,250,1.91,256,1.802,267,1.228,268,1.072,273,1.894,278,1.617,285,2.348,297,1.783,324,0.62,331,2.17,383,0.813,394,2.874,395,3.177,412,2.286,413,3.081,415,3.195,441,2.032,445,1.21,447,2.938,448,3.105,449,3.105,450,3.105,451,3.105,452,2.938,453,2.938,454,2.867,455,1.988,456,1.225,457,1.496,458,1.496,535,1.242,544,3.523,545,1.156,546,1.094,557,1.913,620,2.72,720,1.303,722,0.852,725,2.434,726,1.802,727,1.303,735,2.032,743,2.332,912,2.867,913,2.652,915,1.392,918,1.62,919,1.62,920,1.496,922,2.118,923,1.617,928,3.267,930,2.17,931,2.332,932,2.032,935,1.802,939,2.332,940,3.508,942,2.668,943,2.527,945,1.62,946,3.013,956,3.508,957,1.62,959,2.527,960,3.508,962,4.435,963,4.568,965,4.568,966,2.527,967,2.527,1038,1.986,1072,4.03,1162,3.013,1210,1.91,1316,4.733,1317,4.418,1318,4.418,1589,2.527,1687,2.77,1771,1.536,1775,3.087,1836,1.777,1837,4.299,1838,4.299,1839,4.299,1840,4.299,1841,4.299,1842,4.299,1843,4.299,1844,4.299,1845,4.299,1846,4.299,1847,4.299,1848,4.299,1849,4.299,1850,3.592,1851,3.592,1852,4.299,1853,3.592,1854,2.303,1855,3.096,1856,2.303,1857,3.096,1858,2.77,1859,2.303,1860,2.303,1861,3.096,1862,2.303,1863,2.303,1864,2.303,1865,4.773,1866,2.303,1867,2.303,1868,2.303,1869,2.303,1870,2.303,1871,2.303,1872,4.773,1873,2.303,1874,3.096,1875,2.303,1876,2.303,1877,2.303,1878,2.303,1879,4.418,1880,4.418,1881,2.303,1882,1.777,1883,1.986,1884,1.986,1885,3.096,1886,1.986,1887,1.986,1888,1.986,1889,1.986,1890,1.986,1891,1.986,1892,1.986,1893,1.986,1894,1.986,1895,1.986,1896,1.986,1897,1.986,1898,1.986,1899,6.065,1900,1.986,1901,6.065,1902,1.986,1903,6.065,1904,1.986,1905,1.986,1906,1.986,1907,1.986,1908,6.065,1909,4.299,1910,1.986]],["title/components/WeatherSidebarComponent.html",[0,0.159,179,0.67]],["body/components/WeatherSidebarComponent.html",[0,0.301,1,0.477,2,0.095,3,0.068,4,0.549,5,0.575,6,0.524,7,0.055,11,0.376,12,0.95,13,0.778,14,2.021,15,2.181,19,0.718,20,0.864,22,0.575,23,1.371,24,1.306,25,0.718,26,0.718,28,0.718,30,0.228,31,0.718,32,1.494,34,0.5,38,0.962,39,2.615,40,1.451,41,0.705,42,0.445,46,0.599,48,0.588,49,0.651,50,1.236,51,0.018,52,0.714,53,0.914,54,1.02,55,1.411,57,0.332,63,1.133,64,1.817,68,0.765,69,2.354,70,1.517,74,1.659,76,0.948,77,1.451,84,0.708,90,3.501,95,0.263,96,0.095,99,0.602,100,0.081,101,0.028,102,1.168,103,0.688,104,1.957,108,0.983,110,1.862,115,0.332,116,0.866,117,0.866,118,0.827,119,1.159,120,0.575,121,0.866,122,0.454,123,0.575,124,0.454,125,0.575,126,0.5,127,0.575,128,0.477,129,0.575,130,0.477,131,1.132,132,1.159,133,0.454,134,0.575,135,0.5,136,1.042,137,0.477,138,1.042,139,0.477,140,1.042,141,0.477,142,0.575,143,0.477,144,0.575,145,0.477,146,0.549,147,0.477,148,0.575,149,0.477,150,0.477,151,0.454,152,0.575,153,0.477,154,0.477,155,0.575,156,0.454,157,0.575,158,0.477,159,0.454,160,0.575,161,0.454,162,0.829,163,0.866,164,0.454,165,0.524,166,0.477,167,1.186,168,0.524,169,0.95,170,0.454,171,0.575,172,0.477,173,0.535,174,0.5,175,0.477,176,0.753,177,0.575,178,0.477,179,0.962,180,0.477,181,1.219,182,0.477,183,0.477,184,0.549,185,0.575,186,0.011,187,0.009,189,1.814,194,2.021,197,4.672,211,2.127,217,0.866,227,1.342,230,2.179,236,2.278,237,1.037,239,1.361,246,2.706,255,3.672,256,2.021,257,3.408,263,2.474,264,2.754,267,0.658,268,0.575,273,1.71,294,1.422,295,0.989,297,0.72,319,1.881,350,2.021,383,0.944,412,0.823,474,3.472,532,3.408,533,3.05,560,2.142,606,3.501,722,0.989,749,2.615,922,2.332,923,2.181,1050,1.881,1051,3.106,1052,3.106,1053,2.021,1057,3.472,1062,3.106,1064,4.461,1065,2.833,1072,2.833,1081,2.615,1083,2.306,1093,1.881,1102,2.434,1180,1.881,1419,5.219,1737,2.306,1758,2.306,1768,3.782,1771,3.068,1772,4.095,1773,1.737,1774,2.615,1775,3.455,1779,1.422,1786,4.177,1792,4.648,1808,4.688,1812,5.003,1911,3.472,1912,7.111,1913,4.027,1914,4.027,1915,4.027,1916,4.844,1917,6.641,1918,6.307,1919,4.027,1920,2.674,1921,4.027,1922,2.674,1923,2.674,1924,4.027,1925,2.674,1926,5.391,1927,4.027,1928,2.306,1929,4.027,1930,2.674,1931,4.027,1932,2.674,1933,3.472,1934,4.027,1935,2.674,1936,2.306,1937,2.674,1938,2.306,1939,2.674,1940,2.674,1941,2.674,1942,2.674,1943,2.674,1944,2.674,1945,2.674,1946,2.674,1947,2.674,1948,2.674,1949,2.674,1950,4.027,1951,4.027,1952,2.674,1953,2.674,1954,2.674,1955,2.674,1956,2.674]],["title/classes/WeatherStationConfig.html",[101,0.039,1775,1.783]],["body/classes/WeatherStationConfig.html",[0,0.202,2,0.092,3,0.066,7,0.054,11,0.244,13,0.436,30,0.336,31,0.703,32,1.716,41,0.715,42,0.436,46,0.561,48,0.576,49,0.638,50,0.51,51,0.018,52,0.27,53,0.82,54,0.42,55,1.173,57,0.799,63,1.811,64,1.328,68,0.552,70,0.732,74,1.213,77,1.282,89,0.961,95,0.253,96,0.092,99,0.585,100,0.12,101,0.05,102,0.67,103,1.015,104,1.269,108,1.061,110,0.837,126,0.323,131,0.4,162,0.732,167,1.064,173,0.587,181,1.163,186,0.009,187,0.009,189,1.171,217,0.559,218,3.465,220,2.144,221,1.528,223,1.829,227,2.667,229,4.028,239,1.378,250,1.383,256,1.305,273,2.008,278,1.171,285,2.533,297,1.837,324,1.061,331,1.571,383,0.917,394,2.667,395,3.098,412,2.243,413,2.948,415,3.055,441,1.47,445,0.876,447,3.055,448,3.229,449,3.229,450,3.229,451,3.229,452,3.055,453,3.055,454,3.709,455,2.144,456,2.097,457,2.56,458,1.688,535,1.109,544,3.322,545,1.305,546,1.234,557,1.893,620,2.261,720,1.47,722,0.961,725,2.144,726,1.305,727,1.47,735,1.47,743,1.688,912,3.092,913,3.322,915,2.382,918,1.829,919,1.829,920,1.688,922,1.761,923,1.171,928,3.774,930,1.571,931,1.688,932,1.47,935,1.305,939,1.688,940,1.829,942,2.382,943,2.773,945,1.829,946,2.382,956,1.829,957,1.829,959,2.773,960,1.829,962,4.462,963,4.67,965,4.67,966,2.773,967,2.773,1072,3.35,1162,2.382,1210,1.383,1316,4.868,1317,4.637,1318,4.637,1589,1.829,1687,2.005,1771,1.112,1775,3.055,1836,2.005,1837,2.241,1838,2.241,1839,2.241,1840,2.241,1841,2.241,1842,2.241,1843,2.241,1844,2.241,1845,2.241,1846,2.241,1847,2.241,1848,2.241,1849,2.241,1852,2.241,1855,2.241,1857,2.241,1858,2.005,1861,2.241,1865,5.181,1872,5.181,1874,2.241,1879,4.099,1880,4.099,1882,2.005,1883,3.399,1884,3.399,1885,5.183,1886,2.241,1887,2.241,1888,2.241,1889,2.241,1890,2.241,1891,2.241,1892,2.241,1893,2.241,1894,2.241,1895,2.241,1896,2.241,1897,2.241,1898,2.241,1899,6.2,1900,2.241,1901,6.2,1902,2.241,1903,6.2,1904,2.241,1905,2.241,1906,2.241,1907,2.241,1908,6.2,1909,4.582,1910,2.241,1957,3.942,1958,2.6,1959,2.6,1960,2.6,1961,2.6,1962,2.6]],["title/components/WeatherStationSidebarComponent.html",[0,0.159,180,0.67]],["body/components/WeatherStationSidebarComponent.html",[0,0.319,1,0.625,2,0.124,3,0.089,4,0.719,5,0.753,6,0.687,7,0.072,11,0.35,12,0.687,13,0.738,19,0.874,20,1.008,22,0.753,23,1.399,24,1.333,25,0.874,26,0.874,28,0.874,30,0.298,31,0.874,32,1.502,34,0.609,38,1.092,40,1.734,41,0.716,42,0.542,46,0.595,48,0.716,49,0.793,50,0.961,51,0.018,52,0.636,53,0.877,54,0.793,55,1.371,57,0.435,63,1.723,68,0.763,76,1.154,84,0.512,95,0.27,96,0.124,99,0.788,100,0.107,101,0.067,102,0.96,108,1.04,110,1.971,115,0.435,116,1.054,117,1.054,118,1.006,119,1.316,120,0.753,121,1.054,122,0.595,123,0.753,124,0.595,125,0.753,126,0.609,127,0.753,128,0.625,129,0.753,130,0.625,131,0.941,132,1.316,133,0.595,134,0.753,135,0.655,136,1.215,137,0.625,138,1.215,139,0.625,140,1.215,141,0.625,142,0.753,143,0.625,144,0.753,145,0.625,146,0.719,147,0.625,148,0.753,149,0.625,150,0.625,151,0.595,152,0.753,153,0.625,154,0.625,155,0.753,156,0.595,157,0.753,158,0.625,159,0.595,160,0.753,161,0.595,162,0.539,163,1.054,164,0.595,165,0.687,166,0.625,167,1.176,168,0.687,169,1.108,170,0.595,171,0.753,172,0.625,173,0.387,174,0.655,175,0.625,176,0.917,177,0.753,178,0.625,179,0.625,180,1.092,181,1.264,182,0.625,183,0.625,184,0.719,185,0.753,186,0.011,187,0.011,194,2.459,211,2.215,217,1.054,237,1.262,239,1.205,246,3.072,264,2.717,267,0.862,268,0.753,273,1.723,295,1.295,324,1.319,383,1.236,400,4.722,412,1.078,525,3.448,554,4.36,560,2.606,722,1.295,791,2.961,922,2.09,923,2.545,935,2.459,1050,2.465,1051,3.78,1052,3.78,1053,2.459,1061,4.225,1062,3.78,1063,3.02,1065,3.448,1087,3.02,1093,2.465,1768,3.779,1771,3.164,1772,3.67,1773,2.275,1774,3.975,1775,3.059,1779,1.863,1795,5.149,1812,4.998,1911,4.225,1928,3.02,1936,3.02,1963,3.503,1964,3.503,1965,3.503,1966,3.503,1967,3.503]],["title/components/WeatherSummaryComponent.html",[0,0.159,182,0.67]],["body/components/WeatherSummaryComponent.html",[0,0.303,1,0.641,2,0.127,3,0.092,4,0.739,5,0.773,6,0.705,7,0.074,11,0.355,12,0.705,13,0.79,19,0.89,20,1.022,22,0.773,23,1.402,24,1.335,25,0.89,26,0.89,28,0.89,30,0.306,31,0.89,32,1.29,34,0.62,38,1.104,41,0.729,42,0.552,46,0.573,48,0.729,49,1.001,50,1.124,51,0.018,52,0.676,53,0.813,54,0.927,55,1.418,57,0.447,68,0.732,77,1.812,84,0.837,89,2.119,95,0.28,96,0.127,99,0.809,100,0.109,101,0.037,102,1.052,103,1.285,108,0.974,115,0.447,116,1.073,117,1.073,118,1.025,119,1.331,120,0.773,121,1.073,122,0.611,123,0.773,124,0.611,125,0.773,126,0.62,127,0.773,128,0.641,129,0.773,130,0.641,131,0.952,132,1.331,133,0.611,134,0.773,135,0.673,136,1.232,137,0.641,138,1.232,139,0.641,140,1.232,141,0.641,142,0.773,143,0.641,144,0.773,145,0.641,146,0.739,147,0.641,148,0.773,149,0.641,150,0.641,151,0.611,152,0.773,153,0.641,154,0.641,155,0.773,156,0.611,157,0.773,158,0.641,159,0.611,160,0.773,161,0.611,162,0.553,163,1.073,164,0.611,165,0.705,166,0.641,167,1.188,168,0.705,169,1.124,170,0.611,171,0.773,172,0.641,173,0.684,174,0.673,175,0.641,176,0.934,177,0.773,178,0.641,179,0.641,180,0.641,181,0.582,182,1.104,183,0.641,184,0.739,185,0.773,186,0.011,187,0.011,211,2.071,212,3.293,239,1.316,295,1.33,324,1.343,383,1.269,412,1.107,416,2.135,465,3.107,722,1.33,922,2.119,930,3.463,935,2.505,1053,2.505,1081,3.241,1088,3.088,1089,2.335,1090,4.698,1091,3.342,1101,3.016,1102,3.016,1103,4.371,1104,3.511,1105,3.241,1106,3.511,1107,3.511,1108,2.53,1120,2.53,1121,3.241,1122,3.849,1123,3.849,1124,3.849,1126,2.53,1127,3.1,1128,3.849,1129,3.1,1131,3.1,1132,3.1,1306,3.1,1571,4.303,1768,3.671,1771,3.231,1779,1.913,1809,5.324,1865,3.849,1872,3.849,1879,3.849,1880,3.849,1938,3.1,1968,4.991,1969,3.596,1970,3.596,1971,3.596,1972,3.596,1973,3.596]],["title/components/WikiButtonComponent.html",[0,0.159,183,0.67]],["body/components/WikiButtonComponent.html",[0,0.313,1,0.752,2,0.149,3,0.108,4,0.866,5,0.906,6,0.827,7,0.087,10,2.966,11,0.261,12,1.41,13,0.614,14,2.789,15,2.799,16,3.738,19,0.991,20,1.109,22,0.906,23,1.415,24,1.348,25,0.991,26,0.991,27,4.287,28,0.991,29,4.287,30,0.359,34,0.69,38,1.179,39,3.609,40,1.779,41,0.606,42,0.687,46,0.563,48,0.812,49,0.899,50,0.827,51,0.018,52,0.646,53,0.554,54,0.682,57,0.524,68,0.578,84,0.812,86,4.287,89,2.055,90,3.609,94,3.635,95,0.171,96,0.149,100,0.128,101,0.044,115,0.524,116,1.195,117,1.195,118,1.141,119,1.421,120,0.906,121,1.195,122,0.716,123,0.906,124,0.716,125,0.906,126,0.524,127,0.906,128,0.752,129,0.906,130,0.752,131,1.017,132,1.421,133,0.716,134,0.906,135,0.789,136,1.337,137,0.752,138,1.337,139,0.752,140,1.337,141,0.752,142,0.906,143,0.752,144,0.906,145,0.752,146,0.866,147,0.752,148,0.906,149,0.752,150,0.752,151,0.716,152,0.906,153,0.752,154,0.752,155,0.906,156,0.716,157,0.906,158,0.752,159,0.716,160,0.906,161,0.716,162,0.648,163,1.195,164,0.716,165,0.827,166,0.752,167,1.123,168,0.827,169,1.219,170,0.716,171,0.906,172,0.752,173,0.466,174,0.789,175,0.752,176,1.04,177,0.906,178,0.752,179,0.752,180,0.752,181,0.682,182,0.752,183,1.179,184,1.543,185,0.906,186,0.012,187,0.012,217,1.195,221,2.789,239,1.04,380,5.298,550,3.738,726,2.116,751,4.791,1974,5.922,1975,5.557,1976,4.216,1977,5.557,1978,5.557,1979,4.216,1980,5.557,1981,4.216,1982,4.216]],["title/coverage.html",[1983,4.433]],["body/coverage.html",[0,0.332,1,0.639,7,0.074,8,4.731,9,2.765,10,4.026,33,1.702,41,0.35,51,0.018,53,0.471,101,0.073,122,0.609,124,0.609,126,0.445,128,0.639,130,0.639,133,0.609,135,0.671,137,0.639,139,0.639,141,0.639,143,0.639,145,0.639,147,0.639,149,0.639,150,0.639,153,0.639,156,0.609,158,0.639,159,0.609,161,0.609,164,0.609,166,0.639,168,0.976,169,1.318,170,0.609,172,0.639,173,0.55,174,0.671,175,0.639,176,1.157,178,0.639,179,0.639,180,0.639,181,0.806,182,0.639,183,0.639,186,0.011,187,0.011,188,3.091,211,1.055,284,2.13,297,0.965,379,2.765,380,2.765,381,4.026,393,3.841,413,1.459,461,4.294,462,2.765,463,3.091,465,1.799,522,2.522,523,4.414,535,1.979,547,2.522,550,2.028,557,2.03,691,2.765,692,4.294,718,4.026,720,2.028,721,2.765,722,1.326,723,2.166,725,1.614,910,2.166,911,3.841,921,2.765,927,1.799,969,4.35,970,2.765,971,2.765,972,4.015,1006,3.091,1029,3.091,1031,2.765,1036,2.765,1050,4.026,1088,1.702,1120,4.026,1136,3.091,1162,4.719,1215,3.091,1223,2.765,1232,2.765,1245,3.091,1253,3.091,1274,2.522,1297,2.765,1298,3.091,1320,3.091,1321,3.091,1402,3.091,1432,3.091,1468,3.091,1481,2.328,1485,3.091,1503,3.091,1504,3.091,1519,6.906,1568,3.091,1569,2.765,1570,3.091,1576,3.091,1592,3.091,1630,2.522,1632,3.091,1643,3.091,1672,3.091,1673,4.294,1707,2.328,1708,2.765,1709,4.294,1768,3.74,1769,3.736,1770,3.716,1771,1.534,1775,1.702,1781,3.091,1809,2.765,1810,3.091,1812,3.504,1813,2.765,1815,3.091,1836,3.841,1882,2.765,1974,3.091,1983,3.091,1984,3.585,1985,3.091,1986,6.183,1987,3.585,1988,6.183,1989,6.497,1990,4.98,1991,3.585,1992,7.797,1993,3.585,1994,3.585,1995,3.585,1996,3.585,1997,4.98,1998,6.183,1999,3.585,2000,3.585,2001,4.98,2002,3.585,2003,5.722,2004,3.585,2005,4.98,2006,3.585,2007,3.585,2008,3.585,2009,3.091,2010,3.585,2011,7.032,2012,3.585,2013,6.897,2014,3.091,2015,3.585,2016,4.98,2017,3.585,2018,6.183,2019,3.585,2020,5.722,2021,3.585,2022,3.585,2023,6.897,2024,6.724,2025,3.585,2026,3.585,2027,3.585,2028,3.585,2029,3.585,2030,3.585,2031,3.585,2032,6.497,2033,3.585,2034,3.585,2035,3.585,2036,3.585,2037,4.98,2038,3.585,2039,3.585,2040,3.585,2041,3.585,2042,3.585,2043,3.585,2044,3.585]],["title/dependencies.html",[358,1.456,2045,3.128]],["body/dependencies.html",[51,0.018,96,0.196,186,0.015,187,0.015,224,3.129,292,3.343,293,3.593,294,3.506,358,1.781,360,2.82,375,2.491,546,3.13,716,4.77,717,4.77,821,4.267,1180,3.892,1183,4.953,1184,4.637,1231,4.77,1400,4.77,1401,4.267,1713,4.267,1808,4.267,2046,5.533,2047,7.783,2048,5.533,2049,6.592,2050,5.533,2051,6.592,2052,5.533,2053,5.533,2054,4.77,2055,5.533,2056,5.533,2057,5.533,2058,5.533,2059,5.533,2060,5.533,2061,5.533,2062,5.533,2063,5.533,2064,5.533,2065,5.533,2066,5.533,2067,5.533,2068,5.533,2069,5.533,2070,5.533,2071,5.533,2072,6.592,2073,4.77,2074,5.533,2075,5.533]],["title/miscellaneous/enumerations.html",[2076,2.696,2077,3.898]],["body/miscellaneous/enumerations.html",[30,0.474,41,0.543,51,0.018,77,1.5,186,0.015,187,0.015,218,3.18,244,3.618,263,2.874,268,1.713,284,3.021,288,3.353,415,2.646,443,3.744,447,2.646,448,2.796,449,2.796,450,2.796,451,2.796,452,2.646,453,2.646,512,5.106,581,4.297,894,4.297,1114,4.803,1324,5.106,1499,5.106,1696,4.803,1724,5.106,1726,4.297,2009,4.803,2076,4.803,2077,4.803,2078,7.062,2079,7.062,2080,4.803,2081,5.571,2082,5.571,2083,4.803,2084,4.803]],["title/index.html",[30,0.266,250,1.663,764,2.412]],["body/index.html",[0,0.289,3,0.131,7,0.106,13,0.754,24,0.873,48,1.066,51,0.014,52,0.534,76,1.484,78,4.434,186,0.014,187,0.014,206,3.963,237,1.83,245,3.336,262,2.906,278,2.313,285,2.732,297,1.383,337,3.336,340,3.963,351,3.614,371,2.198,387,2.894,430,3.336,441,2.906,445,1.731,549,4.021,550,4.021,559,5.259,598,2.906,718,3.614,791,3.104,828,4.616,873,3.963,881,3.963,926,3.336,939,3.336,1071,3.963,1157,3.963,1577,4.429,1606,3.963,1713,4.861,2014,4.429,2054,6.485,2083,4.429,2085,5.137,2086,6.818,2087,7.109,2088,5.434,2089,5.137,2090,6.303,2091,5.137,2092,5.137,2093,5.137,2094,5.137,2095,5.137,2096,5.137,2097,5.137,2098,5.137,2099,5.137,2100,6.402,2101,5.137,2102,6.303,2103,7.296,2104,6.818,2105,6.303,2106,5.137,2107,5.137,2108,4.429,2109,5.137,2110,6.598,2111,5.137,2112,5.137,2113,5.137,2114,5.137,2115,5.137,2116,5.137,2117,5.137,2118,5.137,2119,5.137,2120,5.137,2121,5.137,2122,6.303,2123,7.296,2124,6.303,2125,5.137,2126,7.109,2127,5.137,2128,5.137,2129,5.137,2130,5.137,2131,5.137]],["title/license.html",[250,1.663,764,2.412,2132,2.696]],["body/license.html",[3,0.175,4,0.672,7,0.097,13,0.802,15,1.474,32,1.632,46,0.464,50,0.642,51,0.01,54,0.881,59,2.485,62,3.152,63,1.838,66,3.152,76,1.1,101,0.034,108,1.142,118,0.672,151,0.925,173,0.656,186,0.01,187,0.01,189,1.474,196,3.832,222,2.606,225,3.291,232,3.081,237,0.843,257,3.286,258,2.126,263,1.332,284,1.998,288,2.218,297,1.466,324,0.881,337,4.078,343,2.525,347,4.696,350,3.152,351,2.303,352,2.822,396,2.303,464,3.603,483,2.822,512,5.301,550,3.36,560,1.741,561,4.834,565,3.603,598,1.852,606,2.126,637,2.525,651,3.603,661,2.525,667,4.201,694,2.822,734,4.201,753,2.822,791,4.226,828,4.662,854,2.822,873,5.472,888,2.822,889,2.822,892,2.822,894,2.525,923,1.474,941,2.303,1007,3.603,1071,5.538,1081,2.126,1101,2.823,1102,3.795,1125,2.525,1137,5.246,1156,2.822,1157,2.525,1159,2.525,1324,3.603,1401,2.525,1419,5.593,1499,3.603,1506,4.027,1552,2.822,1556,2.822,1561,2.525,1589,4.178,1707,3.537,1710,2.822,1724,2.525,1726,4.581,1816,2.822,1858,3.603,1933,2.822,1985,2.822,2073,2.822,2080,2.822,2088,6.715,2100,5.121,2108,6.749,2110,2.822,2132,6.633,2133,7.612,2134,6.994,2135,3.274,2136,3.274,2137,4.671,2138,5.447,2139,4.671,2140,5.939,2141,5.939,2142,5.939,2143,3.274,2144,3.274,2145,3.274,2146,4.671,2147,3.274,2148,3.274,2149,5.939,2150,6.872,2151,4.671,2152,3.274,2153,5.447,2154,4.671,2155,4.671,2156,3.274,2157,7.095,2158,6.28,2159,7.693,2160,3.274,2161,7.635,2162,4.671,2163,4.671,2164,3.274,2165,3.274,2166,5.447,2167,3.274,2168,3.274,2169,5.447,2170,4.671,2171,4.671,2172,4.671,2173,3.274,2174,4.671,2175,3.274,2176,3.274,2177,6.53,2178,7.095,2179,3.274,2180,3.274,2181,5.447,2182,6.721,2183,4.671,2184,3.274,2185,3.274,2186,3.274,2187,3.274,2188,3.274,2189,3.274,2190,3.274,2191,3.274,2192,3.274,2193,3.274,2194,6.28,2195,6.53,2196,5.447,2197,3.274,2198,3.274,2199,3.274,2200,3.274,2201,3.274,2202,3.274,2203,5.447,2204,5.447,2205,6.53,2206,6.28,2207,4.671,2208,3.274,2209,3.274,2210,3.274,2211,3.274,2212,3.274,2213,5.447,2214,4.671,2215,4.671,2216,4.671,2217,4.671,2218,4.671,2219,3.274,2220,3.274,2221,3.274,2222,3.274,2223,3.274,2224,3.274,2225,3.274,2226,3.274,2227,4.671,2228,3.274,2229,4.671,2230,3.274,2231,4.671,2232,5.939,2233,3.274,2234,3.274,2235,3.274,2236,3.274,2237,3.274,2238,3.274,2239,3.274,2240,4.671,2241,3.274,2242,3.274,2243,3.274,2244,3.274,2245,3.274,2246,3.274,2247,3.274,2248,3.274]],["title/modules.html",[356,1.105]],["body/modules.html",[51,0.015,186,0.015,187,0.015,356,1.248,357,2.912,366,2.613,367,2.613,368,2.613,441,3.283,924,3.086,1026,3.283,1184,5.512,1202,4.083,1207,3.507,1208,3.768,1209,3.768,1210,3.086,1827,6.755,2249,7.835,2250,7.863,2251,5.803]],["title/overview.html",[154,0.917]],["body/overview.html",[0,0.151,1,1.229,33,2.712,51,0.018,100,0.109,101,0.037,115,0.444,122,1.171,124,0.97,126,0.856,128,1.229,130,1.019,133,0.97,135,1.068,137,1.019,139,1.229,141,1.229,143,1.229,145,1.229,147,1.019,149,1.229,150,1.019,153,1.229,154,0.637,156,1.171,158,1.229,159,1.171,161,1.171,164,1.171,166,1.019,170,0.97,172,1.019,174,1.068,175,1.019,178,1.019,179,1.019,180,1.019,182,1.229,183,1.229,186,0.011,187,0.011,211,1.681,222,1.385,288,1.696,356,1.068,357,3.942,358,1.15,359,1.528,360,1.528,361,3.079,362,3.079,363,3.079,364,3.079,365,3.079,366,3.413,367,3.213,368,3.469,369,2.237,370,1.608,371,1.528,535,1.005,723,3.451,725,2.572,924,4.139,927,2.866,1021,3.079,1022,3.079,1023,3.079,1024,3.079,1025,3.079,1026,4.087,1088,2.712,1202,5.475,1203,3.079,1204,3.079,1205,3.079,1206,3.079,1207,4.412,1208,4.989,1209,4.849,1210,4.183,1284,3.079,1285,3.079,1292,3.079,1293,3.079,1295,3.079,1477,3.079,1478,3.079,1479,3.079,1480,3.079,1481,3.708,1583,3.079,1584,3.079,1586,3.079,1620,3.079,1621,3.079,1623,3.079,1700,3.079,1701,3.079,1703,3.079,1707,2.319,1771,2.443,1801,3.079,1802,3.079,1804,3.079,1805,3.079,2084,4.282,2252,3.572,2253,3.572]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":284,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.8.26",{"_index":2075,"title":{},"body":{"dependencies.html":{}}}],["0.svg",{"_index":1452,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["0/1",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["00:15:00",{"_index":1716,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["00:30:00",{"_index":1719,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["01:00:00",{"_index":1721,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["02:00:00",{"_index":1723,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["06:00:00",{"_index":1725,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1",{"_index":288,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1).subscrib",{"_index":1755,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1.0",{"_index":1501,"title":{},"body":{"injectables/MapService.html":{}}}],["1.1.8",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2089,"title":{},"body":{"index.html":{}}}],["1.svg",{"_index":1455,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":907,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{}}}],["10/10",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1519,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["1000",{"_index":902,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["11",{"_index":2252,"title":{},"body":{"overview.html":{}}}],["11.1.3",{"_index":2069,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1728,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["12/12",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["12:00:00",{"_index":1727,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["14/14",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1717,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["16/16",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1724,"title":{},"body":{"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.0.8",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["2.svg",{"_index":1458,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":474,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["200",{"_index":819,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialSandboxComponent.html":{}}}],["20000",{"_index":1954,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["2007",{"_index":2137,"title":{},"body":{"license.html":{}}}],["201",{"_index":814,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["21/22",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["25/25",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["25/28",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["26/26",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":2135,"title":{},"body":{"license.html":{}}}],["3",{"_index":512,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0.0",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1460,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/3",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1720,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["30/30",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["30/31",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1518,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["32",{"_index":2253,"title":{},"body":{"overview.html":{}}}],["36/36",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1499,"title":{},"body":{"injectables/MapService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.3",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":1463,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1517,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["4d0",{"_index":2224,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":2225,"title":{},"body":{"license.html":{}}}],["5",{"_index":894,"title":{},"body":{"classes/AlarmSounds.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/5",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1520,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["500",{"_index":1516,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["6",{"_index":1726,"title":{},"body":{"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.0.0",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1515,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["7",{"_index":2083,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["7/7",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1514,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["8",{"_index":2084,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["8/8",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1513,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["89",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1512,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["91",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":614,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":1982,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getsubtree(alarm",{"_index":626,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initi",{"_index":940,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["_nodedata",{"_index":615,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":616,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":619,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["a100",{"_index":1523,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a400",{"_index":1522,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a700",{"_index":1521,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accent",{"_index":1524,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accept",{"_index":2246,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1125,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"license.html":{}}}],["accompani",{"_index":2206,"title":{},"body":{"license.html":{}}}],["accord",{"_index":275,"title":{},"body":{"components/AckComponent.html":{}}}],["ack",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'nam",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack.component.html",{"_index":192,"title":{},"body":{"components/AckComponent.html":{}}}],["ack.component.scss",{"_index":191,"title":{},"body":{"components/AckComponent.html":{}}}],["ack/ack.compon",{"_index":376,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcompon",{"_index":122,"title":{"components/AckComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":556,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledg",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1240,"title":{},"body":{"modules/AppModule.html":{}}}],["acknowledge/unacknowledg",{"_index":271,"title":{},"body":{"components/AckComponent.html":{}}}],["acknowledgealarms(alarms_id",{"_index":794,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["acknowledgedalarm",{"_index":193,"title":{},"body":{"components/AckComponent.html":{}}}],["acktre",{"_index":323,"title":{},"body":{"components/AckComponent.html":{}}}],["acktreecompon",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":230,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions/ack/ack.compon",{"_index":1226,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/actions.modul",{"_index":1033,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.compon",{"_index":1227,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/sidenav.servic",{"_index":1181,"title":{},"body":{"components/AppComponent.html":{}}}],["actionsmodul",{"_index":357,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1140,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservic",{"_index":1141,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":436,"title":{},"body":{"components/AlarmComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["activatedrout",{"_index":213,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["actual",{"_index":1712,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["actual_compon",{"_index":185,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ad",{"_index":1346,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["add",{"_index":833,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["add_or_update_alarm(alarm",{"_index":837,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["addit",{"_index":2153,"title":{},"body":{"license.html":{}}}],["address",{"_index":2236,"title":{},"body":{"license.html":{}}}],["addsvgicon",{"_index":1188,"title":{},"body":{"components/AppComponent.html":{}}}],["administr",{"_index":346,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["again",{"_index":342,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["agil",{"_index":1553,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["alarm",{"_index":41,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'nam",{"_index":127,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.ack",{"_index":852,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.acknowledg",{"_index":799,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.asalarm(obj",{"_index":830,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.component.html",{"_index":398,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":397,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.core_id",{"_index":840,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.depend",{"_index":629,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.length",{"_index":627,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.servic",{"_index":1289,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.shelv",{"_index":816,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.shouldrepeat",{"_index":857,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.sound",{"_index":850,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.unshelv",{"_index":820,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valid",{"_index":876,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valu",{"_index":849,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm/alarm.compon",{"_index":1629,"title":{},"body":{"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":348,"title":{},"body":{"components/AckComponent.html":{}}}],["alarm?.descript",{"_index":349,"title":{},"body":{"components/AckComponent.html":{}}}],["alarm_id",{"_index":194,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["alarm_sound_1.mp3",{"_index":701,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_2.mp3",{"_index":703,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_3.mp3",{"_index":705,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_4.mp3",{"_index":707,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_typ",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["alarmchangestream",{"_index":747,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmcompon",{"_index":126,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmconfig",{"_index":1079,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmconfig.placemark",{"_index":1100,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmheadercompon",{"_index":128,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":1676,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":1677,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":1678,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":1299,"title":{},"body":{"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":413,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["alarmitemflatnod",{"_index":522,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":547,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":678,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmnam",{"_index":507,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.length",{"_index":509,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.substring(0",{"_index":511,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmnamemaxs",{"_index":469,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarms_d",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["alarms_id",{"_index":795,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsarray",{"_index":744,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmservic",{"_index":211,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmsindex",{"_index":746,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmslist",{"_index":834,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsound",{"_index":691,"title":{"classes/AlarmSounds.html":{}},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["alarmsounds.getsoundsource(sound",{"_index":864,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type1",{"_index":729,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type2",{"_index":730,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type3",{"_index":731,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type4",{"_index":732,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmstoack",{"_index":195,"title":{},"body":{"components/AckComponent.html":{}}}],["alarmstoackfromselect",{"_index":555,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":1679,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["allow",{"_index":753,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["alreadi",{"_index":1081,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":2174,"title":{},"body":{"license.html":{}}}],["angular",{"_index":549,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"index.html":{}}}],["angular/anim",{"_index":2046,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collect",{"_index":537,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/cdk/tre",{"_index":539,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":2107,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":375,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1288,"title":{},"body":{"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1400,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":292,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":1180,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1377,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1380,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1387,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expans",{"_index":1395,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":1389,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1182,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1365,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1384,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1367,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1369,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":1391,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1382,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1371,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":1397,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1373,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1375,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1393,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":542,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":293,"title":{},"body":{"components/AckComponent.html":{},"modules/AppModule.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["anoth",{"_index":1977,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna'",{"_index":1070,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antenna.svg",{"_index":1193,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclick",{"_index":1059,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig",{"_index":910,"title":{"classes/AntennaConfig.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["antennaconfig.antenna",{"_index":1095,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":937,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":938,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennamarkercompon",{"_index":130,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas'},{'nam",{"_index":134,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":1011,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":1010,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.join",{"_index":1940,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["antennas.servic",{"_index":1019,"title":{},"body":{"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.compon",{"_index":1028,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.modul",{"_index":1220,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.servic",{"_index":999,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.compon",{"_index":1229,"title":{},"body":{"modules/AppModule.html":{}}}],["antennascompon",{"_index":133,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":929,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmap",{"_index":1009,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennasmapcompon",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapnam",{"_index":933,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmodul",{"_index":924,"title":{"modules/AntennasModule.html":{}},"body":{"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservic",{"_index":927,"title":{"injectables/AntennasService.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasset",{"_index":921,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":934,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennassidebar",{"_index":1008,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennassidebarcompon",{"_index":137,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycompon",{"_index":139,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":936,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.compon",{"_index":1221,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1139,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1138,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1212,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":141,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1101,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":1137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["application/json",{"_index":1354,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["appmodul",{"_index":1202,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":1234,"title":{},"body":{"modules/AppModule.html":{}}}],["argument",{"_index":2184,"title":{},"body":{"license.html":{}}}],["array",{"_index":485,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["arrayindex",{"_index":745,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["artifact",{"_index":2117,"title":{},"body":{"index.html":{}}}],["asiasio",{"_index":1408,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1417,"title":{},"body":{"classes/Iasio.html":{}}}],["asset",{"_index":722,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icon",{"_index":962,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["assets.sound",{"_index":728,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["assets/img/ia",{"_index":1190,"title":{},"body":{"components/AppComponent.html":{}}}],["associ",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["asterisc",{"_index":1766,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["attribut",{"_index":454,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["audio",{"_index":755,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["author",{"_index":2248,"title":{},"body":{"license.html":{}}}],["automat",{"_index":2114,"title":{},"body":{"index.html":{}}}],["auxiliari",{"_index":625,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["avail",{"_index":441,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MapComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{},"modules.html":{}}}],["avoid",{"_index":750,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["axi",{"_index":985,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":2194,"title":{},"body":{"license.html":{}}}],["backend",{"_index":765,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurl",{"_index":720,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["backendurls.antennas_summari",{"_index":953,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":948,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.cdb_ia",{"_index":1269,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":957,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["backendurls.pads_statu",{"_index":1889,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["backendurls.shelve_regs_filt",{"_index":809,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurls.tickets_info",{"_index":804,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["background",{"_index":1526,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["backup",{"_index":168,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["badg",{"_index":418,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":1398,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["base",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":1538,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["be",{"_index":258,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["befor",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":545,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(fals",{"_index":743,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(tru",{"_index":748,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["belong",{"_index":1884,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["below",{"_index":2155,"title":{},"body":{"license.html":{}}}],["besid",{"_index":421,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["beta.17",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1818,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["block",{"_index":259,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["blue",{"_index":1002,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["bootstrap",{"_index":360,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["both",{"_index":1007,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["bound",{"_index":2180,"title":{},"body":{"license.html":{}}}],["branch",{"_index":2099,"title":{},"body":{"index.html":{}}}],["bred",{"_index":1559,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["breed",{"_index":1545,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["broadcastfactor",{"_index":895,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["brows",{"_index":2250,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1363,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":1362,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browsermodul",{"_index":1213,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":1626,"title":{},"body":{"modules/SharedModule.html":{}}}],["build",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":639,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["built",{"_index":1069,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["button",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":378,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":1975,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:19",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":1976,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:28",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.ts:29",{"_index":1641,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:36",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:37",{"_index":1639,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:43",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:44",{"_index":1638,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:52",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:53",{"_index":1634,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:64",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:68",{"_index":1637,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:72",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:76",{"_index":1640,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":379,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":380,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons'},{'nam",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1249,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1250,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.compon",{"_index":392,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscompon",{"_index":143,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":2139,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":1496,"title":{},"body":{"injectables/MapService.html":{}}}],["call",{"_index":941,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["canacknowledg",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["cancel",{"_index":355,"title":{},"body":{"components/AckComponent.html":{}}}],["canclos",{"_index":1646,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":1738,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["cansound",{"_index":754,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["card",{"_index":1528,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card'},{'nam",{"_index":155,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":1591,"title":{},"body":{"modules/OverviewModule.html":{}}}],["card.component.html",{"_index":1573,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":1572,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":1570,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1574,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:18",{"_index":1575,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card/overview",{"_index":1569,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["case",{"_index":477,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["catch",{"_index":891,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cdb.servic",{"_index":1290,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservic",{"_index":723,"title":{"injectables/CdbService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"coverage.html":{},"overview.html":{}}}],["cento",{"_index":2092,"title":{},"body":{"index.html":{}}}],["central",{"_index":1593,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":2239,"title":{},"body":{"license.html":{}}}],["chang",{"_index":598,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"index.html":{},"license.html":{}}}],["changealarms(ani",{"_index":762,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["changeselectedst",{"_index":1787,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedst",{"_index":1789,"title":{},"body":{"components/WeatherComponent.html":{}}}],["channel",{"_index":717,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["charact",{"_index":475,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["check",{"_index":278,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"components/MaterialSandboxComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["checkbox",{"_index":548,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":576,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":577,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chevron_left",{"_index":1109,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":265,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm",{"_index":630,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm.ack",{"_index":632,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":628,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":234,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chip",{"_index":1532,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["choic",{"_index":2196,"title":{},"body":{"license.html":{}}}],["choos",{"_index":2240,"title":{},"body":{"license.html":{}}}],["class",{"_index":101,"title":{"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"classes/Iasio.html":{},"classes/WeatherStationConfig.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["class=\"sect",{"_index":354,"title":{},"body":{"components/AckComponent.html":{}}}],["clean",{"_index":253,"title":{},"body":{"components/AckComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["cleanactionoutlet",{"_index":1595,"title":{},"body":{"injectables/RoutingService.html":{}}}],["clear",{"_index":447,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["clear.svg",{"_index":963,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["clear_invalid",{"_index":1435,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":1436,"title":{},"body":{"components/LegendComponent.html":{}}}],["clearsoundsifack(alarm",{"_index":870,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cli",{"_index":2087,"title":{},"body":{"index.html":{}}}],["click",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["client",{"_index":1322,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":727,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["client.service.t",{"_index":1321,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:13",{"_index":1330,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:22",{"_index":1336,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:32",{"_index":1334,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:47",{"_index":1340,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:62",{"_index":1342,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:76",{"_index":1332,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:90",{"_index":1344,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":1808,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["clipboardmodul",{"_index":1807,"title":{},"body":{"modules/WeatherModule.html":{}}}],["clipboardservic",{"_index":1917,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["close",{"_index":244,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_actionsmodul",{"_index":361,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declar",{"_index":362,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_export",{"_index":364,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_import",{"_index":363,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_provid",{"_index":365,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodul",{"_index":1021,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declar",{"_index":1022,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_export",{"_index":1024,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_import",{"_index":1023,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_provid",{"_index":1025,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":1203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":1204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":1205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1284,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1285,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1292,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1293,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1295,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1294,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodul",{"_index":1477,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":1478,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":1479,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_provid",{"_index":1480,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_overviewmodul",{"_index":1583,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":1584,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":1586,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":1585,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":1620,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1621,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1623,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1622,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":1700,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":1701,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":1703,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":1702,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":1801,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":1802,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":1804,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":1803,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_provid",{"_index":1805,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":1071,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["colorclass",{"_index":1000,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["combin",{"_index":2161,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":374,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["comparecurrentandlastreceivedmessagetimestamp",{"_index":885,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["compat",{"_index":2073,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["complement",{"_index":1150,"title":{},"body":{"components/AppComponent.html":{}}}],["complementari",{"_index":759,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["complet",{"_index":822,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["compodoc",{"_index":2129,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["componet",{"_index":442,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["comput",{"_index":2220,"title":{},"body":{"license.html":{}}}],["concern",{"_index":2237,"title":{},"body":{"license.html":{}}}],["condit",{"_index":2151,"title":{},"body":{"license.html":{}}}],["config",{"_index":1774,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["configur",{"_index":922,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connect",{"_index":733,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["connectionpath",{"_index":786,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatusstream",{"_index":742,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connector",{"_index":1817,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'nam",{"_index":177,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.compon",{"_index":1814,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":1820,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":1819,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.t",{"_index":1815,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":1824,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":1825,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":1823,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":1828,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":1826,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weath",{"_index":1813,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["consid",{"_index":1157,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1349,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.log('cal",{"_index":862,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('connect",{"_index":790,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('error",{"_index":320,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["console.log('notifi",{"_index":778,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('request",{"_index":783,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["const",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservic",{"_index":1126,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["constructor(antennasservic",{"_index":1060,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attribut",{"_index":457,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor(formbuild",{"_index":209,"title":{},"body":{"components/AckComponent.html":{}}}],["constructor(http",{"_index":1329,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["constructor(httpcli",{"_index":1038,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["constructor(httpclientservic",{"_index":1259,"title":{},"body":{"injectables/CdbService.html":{}}}],["constructor(priv",{"_index":580,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":1601,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(routingservic",{"_index":1650,"title":{},"body":{"injectables/SidenavService.html":{}}}],["constructor(servic",{"_index":980,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["constructor(sidenavservic",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservic",{"_index":1773,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["contact",{"_index":345,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["contain",{"_index":324,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["content",{"_index":617,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{}}}],["continu",{"_index":633,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["contract",{"_index":1161,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":567,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["convert",{"_index":572,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":2178,"title":{},"body":{"license.html":{}}}],["coord",{"_index":1822,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":1833,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":1834,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordin",{"_index":931,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["cope",{"_index":1554,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["copi",{"_index":1419,"title":{},"body":{"classes/Iasio.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["copyantenna",{"_index":1913,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyantennas(stationconfig",{"_index":1921,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyright",{"_index":2138,"title":{},"body":{"license.html":{}}}],["core",{"_index":821,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":478,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{}}}],["correspond",{"_index":791,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["count",{"_index":333,"title":{},"body":{"components/AckComponent.html":{}}}],["counter",{"_index":1830,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["cover",{"_index":2158,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":1983,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":456,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["critic",{"_index":1464,"title":{},"body":{"components/LegendComponent.html":{}}}],["critical.svg",{"_index":965,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["crud",{"_index":1323,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["css",{"_index":432,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["currenlti",{"_index":757,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["current",{"_index":430,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"index.html":{}}}],["custom",{"_index":1152,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpClientService.html":{}}}],["cut",{"_index":1119,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["cx",{"_index":976,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":977,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["cycl",{"_index":884,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["d",{"_index":2212,"title":{},"body":{"license.html":{}}}],["dash",{"_index":1683,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":173,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data).pip",{"_index":797,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data.push(nod",{"_index":648,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data/alarm",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":295,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/cdb.servic",{"_index":724,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data/data.modul",{"_index":390,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":920,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["data/iasio",{"_index":1275,"title":{},"body":{"injectables/CdbService.html":{}}}],["data/routing.servic",{"_index":1089,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{}}}],["databas",{"_index":823,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodul",{"_index":366,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":575,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["date()).gettim",{"_index":880,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["date).gettim",{"_index":740,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["datepip",{"_index":1215,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["debug",{"_index":889,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["decid",{"_index":2242,"title":{},"body":{"license.html":{}}}],["declar",{"_index":359,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1164,"title":{},"body":{"components/AppComponent.html":{}}}],["deem",{"_index":2165,"title":{},"body":{"license.html":{}}}],["default",{"_index":267,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":1729,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["defin",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["definealarmsandicon",{"_index":1302,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":1680,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["definit",{"_index":1710,"title":{},"body":{"interfaces/TimeoutOption.html":{},"license.html":{}}}],["degrad",{"_index":2082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delet",{"_index":826,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["delete(url",{"_index":1331,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1351,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deped",{"_index":1740,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["depend",{"_index":358,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":662,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":665,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":675,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":663,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":668,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describ",{"_index":989,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destroy",{"_index":248,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":2235,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2112,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2091,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1529,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dictionari",{"_index":455,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["differ",{"_index":1156,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["direct",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":2116,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2119,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["disableacknowledg",{"_index":200,"title":{},"body":{"components/AckComponent.html":{}}}],["display",{"_index":237,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":2097,"title":{},"body":{"index.html":{}}}],["dist",{"_index":2118,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":1549,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["distinguish",{"_index":2238,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":2147,"title":{},"body":{"license.html":{}}}],["divid",{"_index":1534,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["django",{"_index":716,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["doc_url",{"_index":1404,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":550,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":1544,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanit",{"_index":1148,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":1737,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["doubl",{"_index":1412,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":932,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["durat",{"_index":1758,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["dure",{"_index":1933,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["dy",{"_index":1500,"title":{},"body":{"injectables/MapService.html":{}}}],["dynam",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":892,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["e2",{"_index":2127,"title":{},"body":{"index.html":{}}}],["each",{"_index":1589,"title":{},"body":{"modules/OverviewModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["effect",{"_index":2208,"title":{},"body":{"license.html":{}}}],["effort",{"_index":2188,"title":{},"body":{"license.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["emit",{"_index":749,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["emitsound(sound",{"_index":861,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["end",{"_index":2126,"title":{},"body":{"index.html":{}}}],["engin",{"_index":2211,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2189,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":1628,"title":{},"body":{"modules/SharedModule.html":{}}}],["enumer",{"_index":2077,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":718,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":1359,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environment.websocketpath",{"_index":787,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["environments/environ",{"_index":719,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["error",{"_index":319,"title":{},"body":{"components/AckComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["error['error",{"_index":1765,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["errormessag",{"_index":1731,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["etc",{"_index":1413,"title":{},"body":{"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["evalu",{"_index":772,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["event",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":532,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["everyon",{"_index":2145,"title":{},"body":{"license.html":{}}}],["everytim",{"_index":597,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["exampl",{"_index":1627,"title":{},"body":{"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["except",{"_index":888,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["exclud",{"_index":2171,"title":{},"body":{"license.html":{}}}],["execut",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["expand",{"_index":527,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":568,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expectedfilteredtablerow",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["expectedtablerow",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["explain",{"_index":2230,"title":{},"body":{"license.html":{}}}],["export",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extent",{"_index":2222,"title":{},"body":{"license.html":{}}}],["fab",{"_index":1540,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["facil",{"_index":2182,"title":{},"body":{"license.html":{}}}],["factor",{"_index":1264,"title":{},"body":{"injectables/CdbService.html":{}}}],["fail",{"_index":290,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["failur",{"_index":1116,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["faith",{"_index":2187,"title":{},"body":{"license.html":{}}}],["fals",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["favorit",{"_index":1539,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["fewer",{"_index":2202,"title":{},"body":{"license.html":{}}}],["field",{"_index":279,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"modules/IasMaterialModule.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":1103,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replac",{"_index":1614,"title":{},"body":{"injectables/RoutingService.html":{}}}],["find",{"_index":560,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["fire",{"_index":1113,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["fix",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":939,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["flat",{"_index":524,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialSandboxComponent.html":{}}}],["flatnod",{"_index":652,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":658,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":656,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":657,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":562,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":563,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":538,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":591,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flexlayoutmodul",{"_index":1399,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["fo",{"_index":325,"title":{},"body":{"components/AckComponent.html":{}}}],["focu",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focus",{"_index":1531,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["focusmonitor",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":2101,"title":{},"body":{"index.html":{}}}],["follow",{"_index":337,"title":{},"body":{"components/AckComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{},"license.html":{}}}],["foreground",{"_index":1533,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["forkjoin",{"_index":1271,"title":{},"body":{"injectables/CdbService.html":{}}}],["form",{"_index":196,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":621,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["formbuild",{"_index":210,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":280,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":1734,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":276,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formsmodul",{"_index":384,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":2142,"title":{},"body":{"license.html":{}}}],["free",{"_index":2140,"title":{},"body":{"license.html":{}}}],["full",{"_index":1238,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":225,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["further",{"_index":2130,"title":{},"body":{"index.html":{}}}],["futur",{"_index":2243,"title":{},"body":{"license.html":{}}}],["g",{"_index":2106,"title":{},"body":{"index.html":{}}}],["gener",{"_index":828,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":250,"title":{"index.html":{},"license.html":{}},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["get(core_id",{"_index":792,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["get(url",{"_index":1333,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":1739,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1145,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1153,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":1053,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["getalarm(alarm_id",{"_index":1065,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getalarm(keyword",{"_index":1968,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["getalarmlist",{"_index":824,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmnam",{"_index":468,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["getantenna",{"_index":1914,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["getantennanam",{"_index":1054,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(antennaconfig",{"_index":1067,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(this.selectedantenna",{"_index":1110,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennas(stationconfig",{"_index":1924,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["getantennasbygroup",{"_index":1055,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennasbygroup(groupid",{"_index":1073,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennasgroup",{"_index":1056,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getbuttontooltiptext",{"_index":1633,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":611,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getclass",{"_index":400,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getconfigurationdata",{"_index":1257,"title":{},"body":{"injectables/CdbService.html":{}}}],["getimag",{"_index":401,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getlevel",{"_index":607,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":956,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getmissingacks(alarm_id",{"_index":803,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getmissingacksinfo",{"_index":201,"title":{},"body":{"components/AckComponent.html":{}}}],["getngclass",{"_index":975,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["getpadsstatu",{"_index":1850,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getpadsstatus(group",{"_index":1855,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getpath",{"_index":1821,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getrefreshrateparamet",{"_index":1258,"title":{},"body":{"injectables/CdbService.html":{}}}],["getresponsemessagetext",{"_index":202,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitl",{"_index":1742,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getshelveregistries(alarm_id",{"_index":808,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsourc",{"_index":699,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsource(sound",{"_index":709,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsvgpath",{"_index":1486,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":1489,"title":{},"body":{"injectables/MapService.html":{}}}],["gettextclass",{"_index":402,"title":{},"body":{"components/AlarmComponent.html":{}}}],["gettitletext",{"_index":1741,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["gettreedata",{"_index":622,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["give",{"_index":2203,"title":{},"body":{"license.html":{}}}],["given",{"_index":606,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["global",{"_index":1313,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["gnu",{"_index":2133,"title":{},"body":{"license.html":{}}}],["go",{"_index":1606,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["good",{"_index":2186,"title":{},"body":{"license.html":{}}}],["gotoacknowledg",{"_index":1596,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoacknowledge(alarm_id",{"_index":1604,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoantenna",{"_index":1597,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotoshelv",{"_index":1598,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoshelve(alarm_id",{"_index":1608,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gototablefilteredbi",{"_index":1124,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1107,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweath",{"_index":1599,"title":{},"body":{"injectables/RoutingService.html":{}}}],["govern",{"_index":2160,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2157,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2251,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1001,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["grey",{"_index":1003,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["group",{"_index":928,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["group.github.io/ia",{"_index":2096,"title":{},"body":{"index.html":{}}}],["groupid",{"_index":1075,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["hammerj",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1325,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1335,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["haschild",{"_index":613,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":618,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["header",{"_index":464,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["header'},{'nam",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.compon",{"_index":1631,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":467,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":466,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.t",{"_index":463,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:105",{"_index":480,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":472,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":479,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":476,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":471,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":486,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:50",{"_index":484,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:86",{"_index":487,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:94",{"_index":488,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":462,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.t",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["health",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":1216,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":1207,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":145,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":559,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":2156,"title":{},"body":{"license.html":{}}}],["hide",{"_index":241,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hidespinn",{"_index":203,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["high",{"_index":1462,"title":{},"body":{"components/LegendComponent.html":{}}}],["highlight",{"_index":1795,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":1535,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["hour",{"_index":1722,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":1527,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["html",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":726,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":2113,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":942,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["httpclientmodul",{"_index":1287,"title":{},"body":{"modules/DataModule.html":{}}}],["httpclientservic",{"_index":725,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1348,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httpmodul",{"_index":1230,"title":{},"body":{"modules/AppModule.html":{}}}],["httpoption",{"_index":1353,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1337,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":2144,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":2095,"title":{},"body":{"index.html":{}}}],["hum",{"_index":1899,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humid",{"_index":1865,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["humidityimageset",{"_index":1837,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humidityimageunreliableset",{"_index":1838,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["hunt",{"_index":1560,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["hvac",{"_index":1117,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["ia",{"_index":387,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["ias_antenna",{"_index":1173,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1315,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1170,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_tabl",{"_index":1174,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_typ",{"_index":1405,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weath",{"_index":1172,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfigur",{"_index":1254,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":1255,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":2085,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":1274,"title":{"classes/Iasio.html":{}},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodul",{"_index":367,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1256,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":395,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["iconset",{"_index":1300,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1301,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":273,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["identifi",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":406,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":407,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["implement",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":2143,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1506,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["incorpor",{"_index":2149,"title":{},"body":{"license.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indic",{"_index":256,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inform",{"_index":350,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["init",{"_index":1689,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initi",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":1267,"title":{},"body":{"injectables/CdbService.html":{}}}],["inject",{"_index":535,"title":{"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":2200,"title":{},"body":{"license.html":{}}}],["inner",{"_index":266,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["input",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instal",{"_index":2100,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":2109,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":217,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instead",{"_index":584,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["instruct",{"_index":2090,"title":{},"body":{"index.html":{}}}],["int",{"_index":807,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["integr",{"_index":1178,"title":{},"body":{"components/AppComponent.html":{}}}],["interact",{"_index":1911,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["interfac",{"_index":1707,"title":{"interfaces/TimeoutOption.html":{}},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["intern",{"_index":1018,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["internalobserv",{"_index":904,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["intervalobserv",{"_index":713,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["intervalobservable.create(1000",{"_index":906,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["inu",{"_index":1543,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["invalid",{"_index":229,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["invalid.svg",{"_index":1446,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["invok",{"_index":2185,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":1406,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicon",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["isdis",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isexpand",{"_index":609,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isnavigationcompact",{"_index":1142,"title":{},"body":{"components/AppComponent.html":{}}}],["isol",{"_index":2173,"title":{},"body":{"license.html":{}}}],["isselect",{"_index":1057,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":1077,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(stationconfig",{"_index":1927,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["issu",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["istextalarm",{"_index":403,"title":{},"body":{"components/AlarmComponent.html":{}}}],["isubscript",{"_index":919,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["isvalidiasio",{"_index":1409,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1420,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":525,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["item.icon",{"_index":1200,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1198,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":1201,"title":{},"body":{"components/AppComponent.html":{}}}],["japan",{"_index":1551,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["jqueri",{"_index":2065,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":620,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["json.hasownproperty('doc_url",{"_index":1425,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1424,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1422,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('short_desc",{"_index":1423,"title":{},"body":{"classes/Iasio.html":{}}}],["json['doc_url",{"_index":1431,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1430,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1428,"title":{},"body":{"classes/Iasio.html":{}}}],["json['short_desc",{"_index":1429,"title":{},"body":{"classes/Iasio.html":{}}}],["june",{"_index":2136,"title":{},"body":{"license.html":{}}}],["k",{"_index":640,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":2125,"title":{},"body":{"index.html":{}}}],["keep",{"_index":564,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["key",{"_index":331,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["keyword",{"_index":1969,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["know",{"_index":1857,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["l",{"_index":1832,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["last",{"_index":738,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["lastalarmid",{"_index":1647,"title":{},"body":{"injectables/SidenavService.html":{}}}],["lastreceivedmessagetimestamp",{"_index":739,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["later",{"_index":651,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1401,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{},"license.html":{}}}],["left",{"_index":1177,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":148,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1433,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1434,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":1705,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":147,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":483,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"license.html":{}}}],["lesser",{"_index":2134,"title":{},"body":{"license.html":{}}}],["level",{"_index":528,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":440,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["librari",{"_index":2108,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":2132,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":883,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["limit",{"_index":2197,"title":{},"body":{"license.html":{}}}],["line",{"_index":1816,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"license.html":{}}}],["link",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linkflat",{"_index":1565,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkicon",{"_index":1566,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkmini",{"_index":1567,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkrais",{"_index":1564,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linux",{"_index":2093,"title":{},"body":{"index.html":{}}}],["list",{"_index":263,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":946,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["liter",{"_index":1046,"title":{},"body":{"injectables/AntennasService.html":{}}}],["load",{"_index":223,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadalarmsconfig",{"_index":947,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["loadimag",{"_index":960,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadpadsstatu",{"_index":1851,"title":{},"body":{"injectables/WeatherService.html":{}}}],["loadpadsstatus(group",{"_index":1861,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadweatherstationsconfig",{"_index":1852,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["local",{"_index":2014,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["locat",{"_index":912,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["look",{"_index":1505,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["low",{"_index":1457,"title":{},"body":{"components/LegendComponent.html":{}}}],["low.svg",{"_index":1316,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["m",{"_index":1835,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macro",{"_index":2199,"title":{},"body":{"license.html":{}}}],["made",{"_index":2168,"title":{},"body":{"license.html":{}}}],["main",{"_index":915,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["maint.svg",{"_index":1318,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mainten",{"_index":453,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":967,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["make",{"_index":2162,"title":{},"body":{"license.html":{}}}],["malfunct",{"_index":1114,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["manag",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":2216,"title":{},"body":{"license.html":{}}}],["map",{"_index":557,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["map'},{'nam",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map.compon",{"_index":1030,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":1471,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1470,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["map.servic",{"_index":1484,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antenna",{"_index":1029,"title":{},"body":{"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.compon",{"_index":1483,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.modul",{"_index":1034,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/weath",{"_index":1810,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapantennaconfig",{"_index":1094,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["mapcompon",{"_index":149,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":1472,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataavail",{"_index":1473,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataprocess",{"_index":1487,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroup",{"_index":1493,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodul",{"_index":1026,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["mapservic",{"_index":1481,"title":{"injectables/MapService.html":{}},"body":{"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":394,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["marker'},{'nam",{"_index":132,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.compon",{"_index":1035,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":974,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":973,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.t",{"_index":972,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:17",{"_index":982,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:19",{"_index":1797,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":992,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:23",{"_index":994,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":1796,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:26",{"_index":986,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:28",{"_index":1794,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:29",{"_index":988,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:31",{"_index":1778,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":981,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:36",{"_index":1800,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":1799,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:38",{"_index":1777,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:40",{"_index":998,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:41",{"_index":997,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:43",{"_index":1798,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:45",{"_index":1776,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:47",{"_index":996,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:50",{"_index":995,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker/antenna",{"_index":971,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weath",{"_index":1770,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markerimageset",{"_index":1839,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markerimageunreliableset",{"_index":1840,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markers/antenna",{"_index":970,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weath",{"_index":1769,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":2098,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":1376,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1379,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":187,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matcheckboxmodul",{"_index":1386,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":151,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.modul",{"_index":389,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.t",{"_index":1361,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":388,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialsandboxcompon",{"_index":150,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":1394,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodul",{"_index":1388,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":1378,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistri",{"_index":1147,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":1364,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1383,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1366,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1368,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodul",{"_index":1390,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1163,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodul",{"_index":1381,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1370,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbar",{"_index":1918,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["matsnackbarmodul",{"_index":1396,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsortmodul",{"_index":1372,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattablemodul",{"_index":1374,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1392,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":541,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":593,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":540,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":586,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1385,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":473,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/MapService.html":{}}}],["max_seconds_without_messag",{"_index":896,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["maxci",{"_index":1502,"title":{},"body":{"injectables/MapService.html":{}}}],["maximum",{"_index":482,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["md",{"_index":423,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["mean",{"_index":2170,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":2193,"title":{},"body":{"license.html":{}}}],["meant",{"_index":1625,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":2217,"title":{},"body":{"license.html":{}}}],["medium",{"_index":428,"title":{},"body":{"components/AlarmComponent.html":{},"components/LegendComponent.html":{}}}],["medium.svg",{"_index":1909,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mention",{"_index":283,"title":{},"body":{"components/AckComponent.html":{}}}],["menu",{"_index":1176,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":197,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["millisecondsdelta",{"_index":901,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["min",{"_index":1497,"title":{},"body":{"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{}}}],["mini",{"_index":1541,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["minim",{"_index":2169,"title":{},"body":{"license.html":{}}}],["minut",{"_index":1718,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["miscellan",{"_index":2076,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":233,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{}}}],["missedack",{"_index":198,"title":{},"body":{"components/AckComponent.html":{}}}],["mockalarm",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["mockalarmdata",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["mockiasio",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["mockimagesset",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":2080,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["model",{"_index":444,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"modules/DataModule.html":{}}}],["modif",{"_index":2181,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":561,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"license.html":{}}}],["modul",{"_index":356,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["monitor",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["more",{"_index":1577,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountain",{"_index":1557,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["mouseev",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["multipl",{"_index":579,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["multipli",{"_index":1263,"title":{},"body":{"injectables/CdbService.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["navig",{"_index":245,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["navigationsidenavitem",{"_index":1143,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":1956,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["nearbi",{"_index":1926,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["necessari",{"_index":2223,"title":{},"body":{"license.html":{}}}],["need",{"_index":923,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nest",{"_index":558,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":566,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["new",{"_index":297,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["newlength",{"_index":846,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["ng",{"_index":2054,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngmodul",{"_index":373,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":583,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ngondestroy",{"_index":204,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":294,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":386,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":215,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["noalarmstoack",{"_index":326,"title":{},"body":{"components/AckComponent.html":{}}}],["node",{"_index":526,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":646,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":610,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":643,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":608,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":2102,"title":{},"body":{"index.html":{}}}],["non",{"_index":874,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["none",{"_index":694,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["normal",{"_index":573,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["noselecteddescendants(nod",{"_index":674,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":881,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/OverviewModule.html":{},"index.html":{}}}],["noth",{"_index":1062,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["notic",{"_index":2205,"title":{},"body":{"license.html":{}}}],["notif",{"_index":741,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["notifi",{"_index":1064,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["now",{"_index":900,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["npm",{"_index":2103,"title":{},"body":{"index.html":{}}}],["null",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":232,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"license.html":{}}}],["number(this.iasconfiguration['broadcastfactor",{"_index":1283,"title":{},"body":{"injectables/CdbService.html":{}}}],["number(this.iasconfiguration['refreshr",{"_index":1281,"title":{},"body":{"injectables/CdbService.html":{}}}],["number(this.iasconfiguration['toler",{"_index":1282,"title":{},"body":{"injectables/CdbService.html":{}}}],["numer",{"_index":2198,"title":{},"body":{"license.html":{}}}],["obj",{"_index":827,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["object",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["object.assign(thi",{"_index":458,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["object.entries(respons",{"_index":332,"title":{},"body":{"components/AckComponent.html":{}}}],["object.keys(this.antennasservice.antennasconfig",{"_index":1096,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["observ",{"_index":544,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["observableforkjoin",{"_index":1272,"title":{},"body":{"injectables/CdbService.html":{}}}],["occur",{"_index":1350,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["ofobserv",{"_index":543,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":612,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["old",{"_index":800,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm",{"_index":842,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.ack",{"_index":845,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.valu",{"_index":844,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_ack",{"_index":839,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_valu",{"_index":838,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["on",{"_index":1858,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["onchang",{"_index":534,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["onclick",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":1082,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclick(ev",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(stationconfig",{"_index":1929,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["onclos",{"_index":205,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":190,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["onhov",{"_index":1793,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["open/clos",{"_index":1659,"title":{},"body":{"injectables/SidenavService.html":{}}}],["opensnackbar",{"_index":1915,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["opensnackbar(messag",{"_index":1931,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["oper",{"_index":1324,"title":{},"body":{"injectables/HttpClientService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":443,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.unknown",{"_index":494,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["opt_ci",{"_index":991,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["opt_cx",{"_index":990,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["optionalalarmnam",{"_index":470,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["order",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["origin",{"_index":1548,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["otherwis",{"_index":2163,"title":{},"body":{"license.html":{}}}],["out",{"_index":371,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1155,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["output",{"_index":533,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MapComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["over",{"_index":1246,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["overview",{"_index":154,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":157,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":1580,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1579,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1191,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.compon",{"_index":1590,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":1217,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":1225,"title":{},"body":{"modules/AppModule.html":{}}}],["overviewcardcompon",{"_index":153,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":156,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":1208,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["packag",{"_index":2045,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1072,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["pad_nam",{"_index":1946,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["pads[pad_nam",{"_index":1947,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["padsstatu",{"_index":1841,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["padsstatusavail",{"_index":1842,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["page",{"_index":751,"title":{},"body":{"classes/AlarmSounds.html":{},"components/WikiButtonComponent.html":{}}}],["panel",{"_index":1645,"title":{},"body":{"injectables/SidenavService.html":{}}}],["panelclass",{"_index":1955,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panelclick",{"_index":1916,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["par",{"_index":887,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["param",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["paramet",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["parammap",{"_index":302,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":304,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":553,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["pars['broadcastfactor",{"_index":898,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pars['refreshr",{"_index":897,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pars['toler",{"_index":899,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["part",{"_index":667,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":2167,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1159,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{},"license.html":{}}}],["path",{"_index":1235,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1237,"title":{},"body":{"modules/AppModule.html":{}}}],["pathsgroup",{"_index":1492,"title":{},"body":{"injectables/MapService.html":{}}}],["pathstr",{"_index":1829,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["payload",{"_index":776,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["payload.data",{"_index":781,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pend",{"_index":419,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":189,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["period",{"_index":872,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["perman",{"_index":2247,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":2154,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2146,"title":{},"body":{"license.html":{}}}],["persist",{"_index":344,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["pk",{"_index":1426,"title":{},"body":{"classes/Iasio.html":{}}}],["place",{"_index":2226,"title":{},"body":{"license.html":{}}}],["placemark",{"_index":913,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"injectables/MapService.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["placemarksgroup",{"_index":1498,"title":{},"body":{"injectables/MapService.html":{}}}],["play",{"_index":756,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["playalarmsound(alarm",{"_index":855,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pleas",{"_index":340,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":1403,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.j",{"_index":2070,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":2172,"title":{},"body":{"license.html":{}}}],["posit",{"_index":983,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["possibl",{"_index":2079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":1326,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1339,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["power",{"_index":1118,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["present",{"_index":2218,"title":{},"body":{"license.html":{}}}],["primari",{"_index":176,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["prioriti",{"_index":1451,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priority_0",{"_index":1437,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":1438,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":1439,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":1440,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":1441,"title":{},"body":{"components/LegendComponent.html":{}}}],["privat",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":343,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["process",{"_index":1347,"title":{},"body":{"injectables/HttpClientService.html":{},"components/StatusViewComponent.html":{}}}],["prod",{"_index":2120,"title":{},"body":{"index.html":{}}}],["produc",{"_index":2166,"title":{},"body":{"license.html":{}}}],["product",{"_index":2121,"title":{},"body":{"index.html":{}}}],["proess",{"_index":1345,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["program",{"_index":2176,"title":{},"body":{"license.html":{}}}],["project",{"_index":2086,"title":{},"body":{"index.html":{}}}],["promin",{"_index":2204,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1338,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1352,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properli",{"_index":2221,"title":{},"body":{"license.html":{}}}],["properti",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["protractor",{"_index":2128,"title":{},"body":{"index.html":{}}}],["provid",{"_index":222,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":925,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/SidenavService.html":{}}}],["proxi",{"_index":2241,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":2245,"title":{},"body":{"license.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":2232,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":396,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":1690,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1327,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1341,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":978,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["radiu",{"_index":993,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["rais",{"_index":1530,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["rate",{"_index":886,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["re",{"_index":1278,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":385,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":599,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{}}}],["read_url",{"_index":1328,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":1343,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readalarmmessage(act",{"_index":829,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readalarmmessageslist(alarmslist",{"_index":835,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readm",{"_index":2131,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":734,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"license.html":{}}}],["recombin",{"_index":2214,"title":{},"body":{"license.html":{}}}],["record",{"_index":650,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":570,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":1005,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":1090,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":1236,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["refresh",{"_index":752,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["refreshr",{"_index":893,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["registri",{"_index":1151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["registry['shelved_at",{"_index":1757,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["registry['timeout']).viewvalu",{"_index":1759,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["relat",{"_index":445,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["releas",{"_index":2094,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":1696,"title":{},"body":{"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":2215,"title":{},"body":{"license.html":{}}}],["reload",{"_index":206,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["remain",{"_index":2192,"title":{},"body":{"license.html":{}}}],["repeat",{"_index":856,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["repres",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["reproduc",{"_index":854,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["request",{"_index":220,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["requestshelveinfo",{"_index":1753,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatu",{"_index":199,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requeststatusli",{"_index":286,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requir",{"_index":351,"title":{},"body":{"components/AckComponent.html":{},"modules/IasMaterialModule.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":370,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["respect",{"_index":1687,"title":{},"body":{"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["respond",{"_index":1746,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["respons",{"_index":227,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["response.push(pads[pad_nam",{"_index":1948,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response.sort",{"_index":1949,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response['statu",{"_index":813,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["response[0",{"_index":1756,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["response[key",{"_index":951,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["restrict",{"_index":2209,"title":{},"body":{"license.html":{}}}],["result",{"_index":186,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["result.push('blu",{"_index":489,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":496,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":492,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('r",{"_index":503,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('unreli",{"_index":490,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":500,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["retriev",{"_index":930,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["retun",{"_index":605,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":1469,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":2210,"title":{},"body":{"license.html":{}}}],["review",{"_index":882,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["revis",{"_index":2231,"title":{},"body":{"license.html":{}}}],["right",{"_index":1167,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":926,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":212,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{}}}],["router",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"injectables/RoutingService.html":{}}}],["routermodul",{"_index":1214,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1243,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.servic",{"_index":1291,"title":{},"body":{"modules/DataModule.html":{}}}],["routingservic",{"_index":1088,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":2110,"title":{},"body":{"index.html":{},"license.html":{}}}],["rxj",{"_index":546,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"dependencies.html":{}}}],["rxjs/observable/intervalobserv",{"_index":714,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["rxjs/oper",{"_index":712,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["rxjs/rx",{"_index":1273,"title":{},"body":{"injectables/CdbService.html":{}}}],["s",{"_index":335,"title":{},"body":{"components/AckComponent.html":{}}}],["s_low.svg",{"_index":964,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["same",{"_index":565,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sandbox",{"_index":1242,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["sandbox'},{'nam",{"_index":152,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.compon",{"_index":1233,"title":{},"body":{"modules/AppModule.html":{}}}],["sandbox.component.html",{"_index":1509,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.scss",{"_index":1508,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.t",{"_index":1504,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sandbox.component.ts:12",{"_index":1510,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.ts:22",{"_index":1511,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox/materi",{"_index":1232,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sanit",{"_index":1186,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffold",{"_index":2115,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1495,"title":{},"body":{"injectables/MapService.html":{}}}],["second",{"_index":1934,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["secondari",{"_index":1536,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["section",{"_index":2177,"title":{},"body":{"license.html":{}}}],["select",{"_index":264,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["select/deselect",{"_index":677,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":686,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":554,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":1012,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescend",{"_index":669,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedst",{"_index":1786,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["selectionmodel",{"_index":536,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":578,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["send",{"_index":219,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["sent",{"_index":287,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["separ",{"_index":1105,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serv",{"_index":2111,"title":{},"body":{"index.html":{}}}],["server",{"_index":1713,"title":{},"body":{"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":412,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set_crit",{"_index":451,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":450,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":1442,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":448,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":449,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":1443,"title":{},"body":{"components/LegendComponent.html":{}}}],["setsidenav",{"_index":1649,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":1656,"title":{},"body":{"injectables/SidenavService.html":{}}}],["shall",{"_index":2244,"title":{},"body":{"license.html":{}}}],["share",{"_index":1561,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":383,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":391,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["shared/statu",{"_index":1706,"title":{},"body":{"modules/TabularModule.html":{}}}],["sharedmodul",{"_index":368,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":420,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["shelv",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'nam",{"_index":160,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":1714,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":1715,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1241,"title":{},"body":{"modules/AppModule.html":{}}}],["shelve/shelve.compon",{"_index":377,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelv",{"_index":1635,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvealarm(alarm_id",{"_index":810,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shelvebuttoncompon",{"_index":158,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecompon",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":242,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvedatmessag",{"_index":1732,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelveregistri",{"_index":806,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shiba",{"_index":1542,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["shleve/unshelv",{"_index":1610,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["short",{"_index":1416,"title":{},"body":{"classes/Iasio.html":{}}}],["short_desc",{"_index":1407,"title":{},"body":{"classes/Iasio.html":{}}}],["shorten",{"_index":481,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["shouldreload",{"_index":1648,"title":{},"body":{"injectables/SidenavService.html":{}}}],["show",{"_index":255,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["showactionbadg",{"_index":408,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":404,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showasshelv",{"_index":405,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showspinn",{"_index":207,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shuttedown",{"_index":2081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["side",{"_index":2227,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":246,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":138,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.compon",{"_index":1032,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":1052,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1051,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":1050,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:107",{"_index":1930,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:121",{"_index":1932,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":1063,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:21",{"_index":1920,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":1061,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":1919,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":1964,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1087,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:32",{"_index":1086,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:34",{"_index":1937,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":1935,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:37",{"_index":1936,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:40",{"_index":1080,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:44",{"_index":1928,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:49",{"_index":1066,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":1963,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:53",{"_index":1922,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:58",{"_index":1068,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:66",{"_index":1076,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:72",{"_index":1925,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:74",{"_index":1074,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:81",{"_index":1084,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:90",{"_index":1923,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:91",{"_index":1078,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:99",{"_index":1083,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar/antenna",{"_index":1031,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weath",{"_index":1812,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenav.servic",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavservic",{"_index":33,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["sidenv",{"_index":1644,"title":{},"body":{"injectables/SidenavService.html":{}}}],["similar",{"_index":2233,"title":{},"body":{"license.html":{}}}],["singl",{"_index":2228,"title":{},"body":{"license.html":{}}}],["six",{"_index":1547,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["size",{"_index":409,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/MapService.html":{}}}],["sizeopt",{"_index":399,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["slider",{"_index":1537,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sm",{"_index":439,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["small",{"_index":1552,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["smallest",{"_index":1546,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["snackbar",{"_index":1912,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["softwar",{"_index":2141,"title":{},"body":{"license.html":{}}}],["sound",{"_index":711,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["soundingalarm",{"_index":758,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1104,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["special",{"_index":1128,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":1578,"title":{},"body":{"components/OverviewComponent.html":{}}}],["specifi",{"_index":1102,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["speed",{"_index":1880,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["spinner",{"_index":224,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":214,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":2234,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":1550,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["src/.../alarm.t",{"_index":2078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.t",{"_index":188,"title":{},"body":{"components/AckComponent.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.ts:104",{"_index":252,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:113",{"_index":251,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:121",{"_index":226,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:145",{"_index":254,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:154",{"_index":240,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:163",{"_index":261,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:171",{"_index":228,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:180",{"_index":231,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:204",{"_index":235,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:22",{"_index":272,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:27",{"_index":270,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:32",{"_index":277,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:37",{"_index":281,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:42",{"_index":274,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:47",{"_index":269,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:52",{"_index":282,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:60",{"_index":216,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:74",{"_index":291,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:81",{"_index":249,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:97",{"_index":247,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/actions.module.t",{"_index":372,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.t",{"_index":1245,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1251,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:28",{"_index":1252,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelv",{"_index":1632,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.t",{"_index":1709,"title":{},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.t",{"_index":1643,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:18",{"_index":1661,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:23",{"_index":1651,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:33",{"_index":1662,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:36",{"_index":1660,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:42",{"_index":1657,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:49",{"_index":1655,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:56",{"_index":1652,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:64",{"_index":1658,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:72",{"_index":1653,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:80",{"_index":1654,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":1974,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antenna",{"_index":969,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.t",{"_index":1027,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.t",{"_index":911,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:107",{"_index":1043,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:15",{"_index":916,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":917,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":914,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:34",{"_index":1047,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:37",{"_index":1048,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:40",{"_index":1049,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:43",{"_index":1044,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:46",{"_index":1045,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:49",{"_index":1039,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:63",{"_index":1041,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:74",{"_index":1042,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:99",{"_index":1040,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.t",{"_index":1006,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:16",{"_index":1014,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":1015,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:32",{"_index":1017,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/app.component.t",{"_index":1136,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:105",{"_index":1160,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":1166,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":1179,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":1169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":1175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":1149,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":1168,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":1158,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:93",{"_index":1154,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":1211,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/data/alarm.service.t",{"_index":692,"title":{},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.ts:14",{"_index":700,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:15",{"_index":702,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:16",{"_index":704,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:17",{"_index":706,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:18",{"_index":708,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:20",{"_index":710,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.t",{"_index":2009,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/cdb.service.t",{"_index":1253,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:18",{"_index":1270,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:23",{"_index":1268,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:28",{"_index":1260,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:42",{"_index":1266,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:53",{"_index":1261,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:62",{"_index":1262,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":1286,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1320,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":1402,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":1415,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":1411,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":1410,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":1421,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":1418,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":1414,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/routing.service.t",{"_index":1592,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/data/routing.service.ts:20",{"_index":1613,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:28",{"_index":1607,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:35",{"_index":1611,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:43",{"_index":1605,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:51",{"_index":1609,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:58",{"_index":1603,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:8",{"_index":1602,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/health/health",{"_index":1298,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1296,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":1360,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.t",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.t",{"_index":1482,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.t",{"_index":1485,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":1490,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:44",{"_index":1494,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":1488,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.t",{"_index":1468,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":1475,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":1474,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":1476,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/materi",{"_index":1503,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":1568,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":1587,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":1576,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":1581,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":1582,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":461,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":393,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:108",{"_index":426,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:116",{"_index":429,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:12",{"_index":519,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:149",{"_index":431,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:15",{"_index":520,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:18",{"_index":518,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:188",{"_index":433,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:196",{"_index":435,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:204",{"_index":437,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:21",{"_index":517,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:24",{"_index":521,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:27",{"_index":516,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:30",{"_index":514,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:56",{"_index":411,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:61",{"_index":425,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:66",{"_index":414,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:71",{"_index":417,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:77",{"_index":422,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:82",{"_index":424,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:87",{"_index":410,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:9",{"_index":515,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:97",{"_index":434,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1624,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/statu",{"_index":1672,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":1432,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:15",{"_index":1449,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":1447,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":1467,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":1450,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":1466,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":1465,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:33",{"_index":1453,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:36",{"_index":1456,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:39",{"_index":1459,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:42",{"_index":1461,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:45",{"_index":1444,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:51",{"_index":1445,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/tabular",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":1704,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/temp_fixtures.t",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/test_fixtures.t",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weath",{"_index":1768,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":1806,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.t",{"_index":1836,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["src/app/weather/weather.service.ts:101",{"_index":1859,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:114",{"_index":1854,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:124",{"_index":1856,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:132",{"_index":1862,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:145",{"_index":1863,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:157",{"_index":1860,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:16",{"_index":1959,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:19",{"_index":1958,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:22",{"_index":1960,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:25",{"_index":1961,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:28",{"_index":1962,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:31",{"_index":1957,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:50",{"_index":1864,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:53",{"_index":1871,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:56",{"_index":1878,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:59",{"_index":1867,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:62",{"_index":1866,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:65",{"_index":1873,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:68",{"_index":1881,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:71",{"_index":1868,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:74",{"_index":1877,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:77",{"_index":1876,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:80",{"_index":1875,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:82",{"_index":1869,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:85",{"_index":1870,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:88",{"_index":1853,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather/weather.component.t",{"_index":1781,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:16",{"_index":1788,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:27",{"_index":1791,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:33",{"_index":1790,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.t",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":764,"title":{"index.html":{},"license.html":{}},"body":{"classes/AlarmSounds.html":{}}}],["startlastreceivedmessagetimestampcheck",{"_index":905,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["startup",{"_index":581,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":416,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["statement",{"_index":1985,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":693,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{}}}],["station",{"_index":181,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":1772,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["stationconfig.group",{"_index":1944,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["stationconfig.placemark",{"_index":1951,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["statu",{"_index":162,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":446,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcompon",{"_index":161,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":2190,"title":{},"body":{"license.html":{}}}],["stop",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["storageitem",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":285,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["stream",{"_index":721,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{},"coverage.html":{}}}],["streamnam",{"_index":777,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["string",{"_index":239,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["structur",{"_index":637,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":427,"title":{},"body":{"components/AlarmComponent.html":{}}}],["styleurl",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":638,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subclass",{"_index":2164,"title":{},"body":{"license.html":{}}}],["subcompon",{"_index":1247,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["subscrib",{"_index":908,"title":{},"body":{"classes/AlarmSounds.html":{},"components/HealthSummaryComponent.html":{}}}],["subscriptionlik",{"_index":918,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["subsubtre",{"_index":634,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":1571,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":569,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":636,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesfulli",{"_index":338,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["successfulli",{"_index":289,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["such",{"_index":2195,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":2104,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":2213,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1121,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":935,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":1037,"title":{},"body":{"modules/AntennasModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1123,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1122,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1120,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:17",{"_index":1127,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:19",{"_index":1307,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:22",{"_index":1308,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:25",{"_index":1303,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":1132,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:34",{"_index":1970,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":1130,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":1306,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:43",{"_index":1133,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:48",{"_index":1309,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:52",{"_index":1129,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:55",{"_index":1304,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:59",{"_index":1131,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:88",{"_index":1305,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antenna",{"_index":1036,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1297,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":1809,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":952,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["supplement",{"_index":2152,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":2183,"title":{},"body":{"license.html":{}}}],["support",{"_index":2249,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1827,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1171,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpath",{"_index":1491,"title":{},"body":{"injectables/MapService.html":{}}}],["system",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.valu",{"_index":1744,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["tabl",{"_index":465,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"modules/TabularModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table.svg",{"_index":1194,"title":{},"body":{"components/AppComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":1600,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":1612,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":165,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":1239,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular",{"_index":1222,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular.modul",{"_index":1218,"title":{},"body":{"modules/AppModule.html":{}}}],["tabularmodul",{"_index":1209,"title":{"modules/TabularModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":164,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":1684,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["taken",{"_index":352,"title":{},"body":{"components/AckComponent.html":{},"license.html":{}}}],["target",{"_index":802,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["temp",{"_index":1901,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["temperatur",{"_index":1872,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["tempimageset",{"_index":1843,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["tempimageunreliableset",{"_index":1844,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":2201,"title":{},"body":{"license.html":{}}}],["term",{"_index":2150,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":1558,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["test",{"_index":2123,"title":{},"body":{"index.html":{}}}],["text",{"_index":236,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["this._getsubtree(childalarm",{"_index":635,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":624,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initi",{"_index":943,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.acklist",{"_index":684,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":687,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acknowledgedalarm",{"_index":317,"title":{},"body":{"components/AckComponent.html":{}}}],["this.actionssidenavservice.canclos",{"_index":1197,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1196,"title":{},"body":{"components/AppComponent.html":{}}}],["this.add_or_update_alarm(alarm",{"_index":831,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarm",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.core_id",{"_index":339,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mod",{"_index":493,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelv",{"_index":491,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.showasmainten",{"_index":495,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valid",{"_index":505,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valu",{"_index":497,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm_id",{"_index":303,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmchangestream.next(ani",{"_index":763,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmiconspriorityset",{"_index":1699,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":1697,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":1698,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmid",{"_index":1312,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmnamemaxs",{"_index":510,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.alarmsarray",{"_index":871,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray.push(alarm",{"_index":847,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[alarm.core_id",{"_index":843,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[core_id",{"_index":793,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmservice.acknowledgealarm",{"_index":314,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1093,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":631,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":309,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmid",{"_index":1311,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.antennasservice.antennassummaryconfig",{"_index":1134,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.st",{"_index":1780,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.get(this.weatherservice.weathersummaryconfig[keyword",{"_index":1972,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.getmissingacks(this.alarm.core_id).subscrib",{"_index":330,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.getshelveregistries(this.alarm_id",{"_index":1754,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.initi",{"_index":1195,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.shelvealarm(this.alarm.core_id",{"_index":1763,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":1767,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmsindex",{"_index":841,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsindexes[alarm.core_id",{"_index":848,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmstoack",{"_index":315,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoack.length",{"_index":327,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":688,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1098,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":961,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":968,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasconfig[key",{"_index":950,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasmapnam",{"_index":958,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig[groupid",{"_index":1097,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initi",{"_index":1092,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":955,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.audio",{"_index":767,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.addeventlistener('end",{"_index":865,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.load",{"_index":868,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.paus",{"_index":859,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.play",{"_index":869,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.src",{"_index":863,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.buildfiletree(tree_data",{"_index":604,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":647,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":1762,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.cansound",{"_index":766,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.getrefreshrateparamet",{"_index":890,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.initi",{"_index":774,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms('al",{"_index":836,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms(alarm.core_id",{"_index":832,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":682,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":673,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":666,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descend",{"_index":671,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":680,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe(data",{"_index":594,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":685,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":681,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":672,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":679,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.clearsoundsifack(alarm",{"_index":853,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.clipboardservice.copyfromcontent(result",{"_index":1941,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.comparecurrentandlastreceivedmessagetimestamp",{"_index":909,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connect",{"_index":768,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(fals",{"_index":903,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(tru",{"_index":770,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.subscrib",{"_index":760,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.coord",{"_index":1831,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.currenttim",{"_index":866,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.datasourc",{"_index":592,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.datasource.data",{"_index":603,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.definealarmsandicon",{"_index":1310,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":1695,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1189,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.emitsound(alarm.sound",{"_index":860,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.errormessag",{"_index":1747,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":659,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":299,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').value).subscrib",{"_index":316,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":313,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":300,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.get(alarm_id",{"_index":815,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(id",{"_index":798,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmlist",{"_index":773,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmnam",{"_index":513,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.getantennas(stationconfig",{"_index":1939,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.getchildren",{"_index":589,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().subscribe((r",{"_index":1276,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getlevel",{"_index":587,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmissingacksinfo",{"_index":307,"title":{},"body":{"components/AckComponent.html":{}}}],["this.getpadsstatus(group).subscrib",{"_index":1890,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.gettreedata",{"_index":602,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.hidespinn",{"_index":318,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":1358,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":1355,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(this.read_url(url",{"_index":1356,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.put(this.read_url(url",{"_index":1357,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(backendurls.weather_summary).subscribe((respons",{"_index":1896,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(backendurls.weather_view).subscribe((respons",{"_index":1894,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(summary_url).subscribe((respons",{"_index":954,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclient.get(url",{"_index":959,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(url).subscribe((respons",{"_index":949,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1280,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(url).pip",{"_index":805,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.post(backendurls.shelve_api",{"_index":812,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.tickets_multiple_ack",{"_index":796,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.unshelve_api",{"_index":818,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.humidityimageset",{"_index":1898,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.humidityimageunreliableset",{"_index":1904,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.iasconfigur",{"_index":1277,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(tru",{"_index":1279,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1314,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1319,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.isexpand",{"_index":588,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isnavigationcompact",{"_index":1199,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isvalidiasio(json",{"_index":1427,"title":{},"body":{"classes/Iasio.html":{}}}],["this.lastalarmid",{"_index":1669,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.lastreceivedmessagetimestamp",{"_index":879,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.loadalarmsconfig",{"_index":944,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.loadimag",{"_index":945,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadpadsstatu",{"_index":1887,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadweatherstationsconfig",{"_index":1886,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.markerimageset",{"_index":1907,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.markerimageunreliableset",{"_index":1910,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.maticonregistri",{"_index":1187,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messag",{"_index":296,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":311,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.valu",{"_index":1760,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.missedack",{"_index":329,"title":{},"body":{"components/AckComponent.html":{}}}],["this.missedacks.push(text",{"_index":336,"title":{},"body":{"components/AckComponent.html":{}}}],["this.nestednodemap.get(nod",{"_index":654,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":655,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":653,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":660,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.ngonchang",{"_index":596,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.opensnackbar(messag",{"_index":1942,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.optionalalarmnam",{"_index":508,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.padsstatu",{"_index":1892,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.padsstatusavailable.next(fals",{"_index":1891,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.padsstatusavailable.next(tru",{"_index":1893,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.panelclicked.emit(this.selectedst",{"_index":1952,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.play",{"_index":867,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.playalarmsound(alarm",{"_index":851,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessage(payload.act",{"_index":780,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessageslist(payload.data",{"_index":784,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.reload",{"_index":305,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.requestshelveinfo",{"_index":1748,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.requeststatu",{"_index":310,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.route.parammap.subscrib",{"_index":301,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.router.navigate(['/tabular",{"_index":1616,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antenna",{"_index":1617,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weath",{"_index":1618,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([{outlet",{"_index":1619,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.routing.gotoantenna",{"_index":1135,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweath",{"_index":1973,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1108,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.routingservice.cleanactionoutlet",{"_index":1665,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoacknowledge(alarm_id",{"_index":1668,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoshelve(alarm_id",{"_index":1671,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.selectedalarm",{"_index":1965,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.st",{"_index":1966,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":1020,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm",{"_index":1111,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.antenna",{"_index":1112,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1099,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedst",{"_index":1792,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["this.selectedstation.placemark",{"_index":1950,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.shelv",{"_index":1752,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shelvedatmessag",{"_index":1735,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shouldreload.next(tru",{"_index":1670,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.showactionbadg",{"_index":506,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.showspinn",{"_index":312,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenav",{"_index":1663,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.clos",{"_index":1666,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":1664,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggl",{"_index":1667,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavservice.canclos",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.clos",{"_index":308,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.gotoacknowledge(this.alarm.core_id",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.sidenavservice.gotoshelve(this.alarm.core_id",{"_index":1642,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.sidenavservice.open",{"_index":306,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.shouldreload.subscrib",{"_index":1736,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.s",{"_index":459,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.snackbar.open(messag",{"_index":1953,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.soundingalarm",{"_index":858,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.spinnerservice.hid",{"_index":322,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":321,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.startlastreceivedmessagetimestampcheck",{"_index":785,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.stationconfig.st",{"_index":1967,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.tempimageset",{"_index":1900,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.tempimageunreliableset",{"_index":1905,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.text",{"_index":460,"title":{},"body":{"components/AlarmComponent.html":{}}}],["this.timeout",{"_index":1733,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":1749,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.valu",{"_index":1761,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalu",{"_index":1745,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":1743,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].valu",{"_index":1730,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.treecontrol",{"_index":590,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":664,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":585,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.triggeralarmsnonvalidconnectionst",{"_index":761,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.unshelv",{"_index":1751,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":595,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.updatelastreceivedmessagetimestamp",{"_index":779,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.url",{"_index":1980,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.startswith('http",{"_index":1979,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.weathermapnam",{"_index":1888,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weatherservice.initi",{"_index":1938,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.weatherservice.padsstatu",{"_index":1943,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.padsstatus[stationconfig.group",{"_index":1945,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.weathersummaryconfig",{"_index":1971,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.weatherstationsconfig",{"_index":1895,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weathersummaryconfig",{"_index":1897,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.websocketbridge.connect(connectionpath",{"_index":788,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.alarm",{"_index":775,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.upd",{"_index":782,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.listen(connectionpath",{"_index":789,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.addeventlisten",{"_index":769,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.stream(streams.updates).send",{"_index":825,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.windsimageset",{"_index":1902,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageunreliableset",{"_index":1906,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["thorugh",{"_index":1594,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":1507,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["through",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["ticket",{"_index":801,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["time",{"_index":347,"title":{},"body":{"components/AckComponent.html":{},"license.html":{}}}],["timeout",{"_index":811,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["timeout).subscrib",{"_index":1764,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["timeoutopt",{"_index":1708,"title":{"interfaces/TimeoutOption.html":{}},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timestamp",{"_index":737,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["titl",{"_index":1144,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["todo",{"_index":771,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["togeth",{"_index":2207,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":676,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{}}}],["toggledefault",{"_index":1562,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["toggleshelveunshelv",{"_index":1750,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1146,"title":{},"body":{"components/AppComponent.html":{}}}],["toler",{"_index":1265,"title":{},"body":{"injectables/CdbService.html":{}}}],["tooltip",{"_index":1636,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["transform",{"_index":649,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":125,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":382,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":551,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":552,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":523,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":689,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":690,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":530,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":531,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":529,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":381,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.t",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":601,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":623,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":571,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":574,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":341,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["trigger",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["triggeralarmsnonvalidconnectionst",{"_index":875,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["true",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["type",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["type1",{"_index":695,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type2",{"_index":696,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type3",{"_index":697,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type4",{"_index":698,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["typeof",{"_index":645,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unblock",{"_index":243,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["uncombin",{"_index":2229,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":644,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["under",{"_index":873,"title":{},"body":{"classes/AlarmSounds.html":{},"index.html":{},"license.html":{}}}],["unit",{"_index":2122,"title":{},"body":{"index.html":{}}}],["unkn.svg",{"_index":1317,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unknown",{"_index":452,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":966,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unreli",{"_index":415,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unselect",{"_index":1085,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["unselectantenna",{"_index":1058,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselecteddescend",{"_index":670,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unshelv",{"_index":238,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unshelvealarms(alarms_id",{"_index":817,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["unus",{"_index":582,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["up",{"_index":1115,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["updat",{"_index":262,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["updateacklist",{"_index":683,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatealarmstoack",{"_index":208,"title":{},"body":{"components/AckComponent.html":{}}}],["updatealarmstoack(ev",{"_index":260,"title":{},"body":{"components/AckComponent.html":{}}}],["updatelastreceivedmessagetimestamp",{"_index":878,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["updateselectedantenna",{"_index":1013,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":1016,"title":{},"body":{"components/AntennasComponent.html":{}}}],["url",{"_index":221,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":257,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["user'",{"_index":2219,"title":{},"body":{"license.html":{}}}],["usevalu",{"_index":1244,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":2175,"title":{},"body":{"license.html":{}}}],["v",{"_index":641,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":218,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["valid.svg",{"_index":1448,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["validators.requir",{"_index":298,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validform",{"_index":328,"title":{},"body":{"components/AckComponent.html":{}}}],["validity.unreli",{"_index":877,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["valu",{"_index":268,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.clear",{"_index":498,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.length",{"_index":334,"title":{},"body":{"components/AckComponent.html":{}}}],["value.set_crit",{"_index":504,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":502,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":499,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":501,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":642,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":1162,"title":{},"body":{"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["verbatim",{"_index":2148,"title":{},"body":{"license.html":{}}}],["veri",{"_index":1555,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["version",{"_index":2088,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":2124,"title":{},"body":{"index.html":{}}}],["view",{"_index":1091,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":163,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":1224,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":1674,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":1675,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.t",{"_index":1673,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:19",{"_index":1682,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:22",{"_index":1685,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:25",{"_index":1694,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:28",{"_index":1692,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":1693,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":1691,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:40",{"_index":1681,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:50",{"_index":1688,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:57",{"_index":1686,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view/fixtures.t",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["view/statu",{"_index":1630,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1223,"title":{},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["viewbox",{"_index":979,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{}}}],["viewchild",{"_index":1165,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1185,"title":{},"body":{"components/AppComponent.html":{}}}],["viewvalu",{"_index":1711,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["visual",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":1525,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["warnbas",{"_index":1563,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["weather",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'nam",{"_index":171,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":1785,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1784,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1779,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1192,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.compon",{"_index":1811,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.modul",{"_index":1219,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.compon",{"_index":1228,"title":{},"body":{"modules/AppModule.html":{}}}],["weather_",{"_index":1908,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherbackupwsmarkercompon",{"_index":166,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercompon",{"_index":170,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercompon",{"_index":172,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":1783,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcompon",{"_index":174,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermapnam",{"_index":1845,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathermodul",{"_index":1210,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcompon",{"_index":175,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercompon",{"_index":178,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservic",{"_index":1771,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherset",{"_index":1882,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["weathersettings.mapkey",{"_index":1874,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathersidebar",{"_index":1782,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcompon",{"_index":179,"title":{"components/WeatherSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherst",{"_index":1883,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationconfig",{"_index":1775,"title":{"classes/WeatherStationConfig.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["weatherstationsconfig",{"_index":1846,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationsidebarcompon",{"_index":180,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":182,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummaryconfig",{"_index":1847,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["webserv",{"_index":735,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["websocket",{"_index":736,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websocketbridg",{"_index":715,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["well",{"_index":1556,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["wether",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatev",{"_index":2191,"title":{},"body":{"license.html":{}}}],["whether",{"_index":661,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["whevenv",{"_index":600,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["wikbuttoncompon",{"_index":1248,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["wiki",{"_index":184,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncompon",{"_index":183,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wind",{"_index":1879,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["wind_",{"_index":1903,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["window",{"_index":1978,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":1981,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["windsimageset",{"_index":1848,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windsimageunreliableset",{"_index":1849,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windspe",{"_index":1885,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["without",{"_index":2179,"title":{},"body":{"license.html":{}}}],["word",{"_index":1106,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":2159,"title":{},"body":{"license.html":{}}}],["worth",{"_index":1588,"title":{},"body":{"modules/OverviewModule.html":{}}}],["write",{"_index":353,"title":{},"body":{"components/AckComponent.html":{}}}],["wrong",{"_index":1615,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":169,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":984,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":438,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["y",{"_index":987,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["yellow",{"_index":1004,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":2105,"title":{},"body":{"index.html":{}}}],["zero",{"_index":1454,"title":{},"body":{"components/LegendComponent.html":{}}}],["zone.j",{"_index":2074,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":369,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers ack sidenav through the Router service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:28\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @return {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  canAcknowledge() {\n    if (this.alarm != null) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose || !this.canAcknowledge();\n  }\n\n  /**\n  * Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.sidenavService.goToAcknowledge(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AckComponent.html":{"url":"components/AckComponent.html","title":"component - AckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack/ack.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to perform acknowledgement of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack\n            \n\n            \n                styleUrls\n                ack.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ack.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledgedAlarms\n                            \n                            \n                                alarm\n                            \n                            \n                                alarm_id\n                            \n                            \n                                alarmsToAck\n                            \n                            \n                                form\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                missedAcks\n                            \n                            \n                                requestStatus\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                disableAcknowledgment\n                            \n                            \n                                getMissingAcksInfo\n                            \n                            \n                                getResponseMessageText\n                            \n                            \n                                    Private\n                                hideSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                reload\n                            \n                            \n                                    Private\n                                showSpinner\n                            \n                            \n                                updateAlarmsToAck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, alarmService: AlarmService, route: ActivatedRoute, sidenavService: SidenavService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack/ack.component.ts:60\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle the sidenav where the component is opened\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Send the acknowledge request through the method provided by the\nAlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableAcknowledgment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableAcknowledgment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:171\n                            \n                        \n\n\n                \n                    \n                            Method to invalidate ack action\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if ack action can be performed and false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcksInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcksInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:180\n                            \n                        \n\n\n                \n                    \n                            Get the number of missed acknowledgements of the alarm and its children\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:204\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Hides the spinner after the Alarm has been shelved/unshelved\nIt also unblocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, by getting the alarm_id from the url.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reload\n                            \n                            \n                        \n                    \n                \n                \n                    \nreload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Cleans the component and reloads the Alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\nIt also blocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAlarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAlarmsToAck(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Update the list of alarms to ack from the selection on the child component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                event triggered by the inner {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledgedAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        acknowledgedAlarms:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:47\n                            \n                        \n\n                \n                    \n                        List of alarms that were acknowledged by the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:27\n                            \n                        \n\n                \n                    \n                        Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:22\n                            \n                        \n\n                \n                    \n                        Id of the Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsToAck:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:42\n                            \n                        \n\n                \n                    \n                        List of alarms to ack according to selection from child component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:32\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:37\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            missedAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        missedAcks:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:52\n                            \n                        \n\n                \n                    \n                        List of messages to mention the alarms with missed acknowledgments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestStatus:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:60\n                            \n                        \n\n                \n                    \n                        Stores wether or not the action has been executed requestStatusly\nIf requestStatus = 0, the request has not been sent yet\nIf requestStatus = 1, the request was successfully\nIf requestStatus = -1, the request has failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:74\n                            \n                        \n\n                \n                    \n                        Service to handle the sidenav where the component is opened\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Component used to perform acknowledgement of an Alarm\n*/\n@Component({\n  selector: 'app-ack',\n  templateUrl: './ack.component.html',\n  styleUrls: ['./ack.component.scss']\n})\nexport class AckComponent implements OnInit, OnDestroy {\n\n  /**\n   * Id of the Alarm object to be acknowledge/unacknowledge\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be acknowledge/unacknowledge\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * List of alarms to ack according to selection from child component\n  */\n  alarmsToAck: string[] = [];\n\n  /**\n  * List of alarms that were acknowledged by the request\n  */\n  acknowledgedAlarms: string[] = [];\n\n  /**\n  * List of messages to mention the alarms with missed acknowledgments\n  */\n  public missedAcks: string[] = [];\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService\n  ) { }\n\n  /**\n  * Initiates the component, by getting the alarm_id from the url.\n  */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n    this.getMissingAcksInfo();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.sidenavService.close();\n  }\n\n  /**\n   * Send the acknowledge request through the method provided by the\n   * {@link AlarmService} and handle the response.\n   */\n  acknowledge(): void {\n    this.showSpinner();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        this.alarmsToAck, this.form.get('message').value).subscribe(\n          (response) => {\n            this.acknowledgedAlarms =  response;\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Update the list of alarms to ack from the selection on the child component\n   * @param {Event} event event triggered by the inner {@link AckTree}, containing the IDs fo the alarms to acknowledge\n   */\n  updateAlarmsToAck(event): void {\n    this.alarmsToAck = event;\n  }\n\n  /**\n  * Method to invalidate ack action\n  * @returns {boolean} True if ack action can be performed and false if not\n  */\n  disableAcknowledgment() {\n    const noAlarmsToAck = (this.alarmsToAck.length === 0);\n    const validForm = this.form.valid;\n    return (noAlarmsToAck || !validForm);\n  }\n\n  /**\n  * Get the number of missed acknowledgements of the alarm and its children\n  */\n  getMissingAcksInfo(): void {\n    if (this.alarm) {\n      this.missedAcks = [];\n      this.alarmService.getMissingAcks(this.alarm.core_id).subscribe(\n        (response) => {\n          for (const [key, value] of Object.entries(response)) {\n            const count = value.length;\n            if (count > 0) {\n              let text = key + ' has ' + count + ' missed acknowledgement';\n              if (count > 1) {\n                text += 's';\n              }\n              this.missedAcks.push(text);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      response = 'The following alarms have been acknowledged succesfully:';\n\n    } else if (this.requestStatus === -1) {\n      response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been acknowledged.';\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    }\n    return response;\n  }\n}\n\n    \n\n    \n        \n  \n     ALARM ACKNOWLEDGEMENT \n    \n      &times;\n    \n  \n\n  \n    \n\n      \n        \n          \n            Alarm ID\n            {{alarm?.core_id}}\n          \n          \n            Description\n            {{ alarm?.description }}\n          \n        \n      \n\n       \n\n      \n        \n          Information required to acknowledge the Alarm\n          \n             Action to be taken \n            \n             You must write a message in order to Acknowledge \n          \n        \n\n        \n           Select alarms for acknowledgment \n          \n        \n\n         0\" class=\"section missed-acks\">\n           Missed acknowledgements \n          \n            \n              {{text}}\n            \n          \n        \n      \n\n      \n         \n\n        \n          \n             Acknowledgement results \n             {{ getResponseMessageText() }} \n            \n              \n                {{ alarm }}\n              \n            \n          \n        \n\n        \n          \n             Error Acknowledging \n             {{ getResponseMessageText() }} \n          \n        \n      \n\n      \n        \n           Acknowledgement results \n           {{ getResponseMessageText() }} \n          \n            \n              {{ alarm }}\n            \n          \n        \n       -->\n\n    \n  \n\n  \n     \n    \n      Close\n    \n\n    \n      Cancel\n      Acknowledge\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       ALARM ACKNOWLEDGEMENT           ×                                                Alarm ID            {{alarm?.core_id}}                                Description            {{ alarm?.description }}                                                       Information required to acknowledge the Alarm                       Action to be taken                          You must write a message in order to Acknowledge                                      Select alarms for acknowledgment                            0\" class=\"section missed-acks\">           Missed acknowledgements                                     {{text}}                                                                                  Acknowledgement results              {{ getResponseMessageText() }}                                           {{ alarm }}                                                                           Error Acknowledging              {{ getResponseMessageText() }}                                                  Acknowledgement results            {{ getResponseMessageText() }}                                     {{ alarm }}                                     -->                       Close              Cancel      Acknowledge      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AckButtonComponent\n                            \n                            \n                                AckComponent\n                            \n                            \n                                AckTreeComponent\n                            \n                            \n                                ButtonsComponent\n                            \n                            \n                                ShelveButtonComponent\n                            \n                            \n                                ShelveComponent\n                            \n                            \n                                WikiButtonComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SidenavService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AckButtonComponent\n                            \n                            \n                                    AckComponent\n                            \n                            \n                                    ButtonsComponent\n                            \n                            \n                                    ShelveButtonComponent\n                            \n                            \n                                    ShelveComponent\n                            \n                            \n                                    WikiButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { AlarmComponent } from '../shared/alarm/alarm.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getImage\n                            \n                            \n                                getTextClass\n                            \n                            \n                                isTextAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:87\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:82\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                    \n                        Alarm object associated to the component\n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Returns the style class name based on the optional input size. By default\nthe class is medium size.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    style class name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    url of the image\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Returns the class to be used to display the text\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    list of css classes\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTextAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nisTextAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed as a text alarm or as an icon alarm\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:196\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the pending ack badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the pending ack must be activated, false if it must not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:204\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the shelve badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the alarm is shelved, false if it is not\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:87\n                            \n                        \n\n                \n                    \n                        Available sizes for the alarm componet\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n    \n        \n   \n\n  \n    \n      {{this.text}}\n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               {{this.text}}                                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as headers in a table or list\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as headers in a table or list\n */\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n}\n\n    \n\n    \n        \n\n    {{this.getAlarmName()}}\n\n\n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{this.getAlarmName()}}                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmSounds.html":{"url":"classes/AlarmSounds.html","title":"class - AlarmSounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmSounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                none\n                            \n                            \n                                    Static\n                                type1\n                            \n                            \n                                    Static\n                                type2\n                            \n                            \n                                    Static\n                                type3\n                            \n                            \n                                    Static\n                                type4\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSoundsource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            none\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        none:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_1.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_2.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type3:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_3.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type4:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_4.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getSoundsource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSoundsource(sound: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sound\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable ,  BehaviorSubject } from 'rxjs';\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable';\nimport { WebSocketBridge } from 'django-channels';\nimport { environment } from '../../environments/environment';\nimport { Alarm, OperationalMode, Validity, Value } from '../data/alarm';\nimport { BackendUrls, Streams, Assets } from '../settings';\nimport { CdbService } from '../data/cdb.service';\nimport { HttpClientService } from './http-client.service';\n\n\nexport class AlarmSounds {\n    static none = '';\n    static type1 = 'Alarm_Sound_1.mp3';\n    static type2 = 'Alarm_Sound_2.mp3';\n    static type3 = 'Alarm_Sound_3.mp3';\n    static type4 = 'Alarm_Sound_4.mp3';\n\n  static getSoundsource(sound: string) {\n    if (sound === 'TYPE1') {\n      return Assets.SOUNDS + AlarmSounds.type1;\n    } else if (sound === 'TYPE2') {\n      return Assets.SOUNDS + AlarmSounds.type2;\n    } else if (sound === 'TYPE3') {\n      return Assets.SOUNDS + AlarmSounds.type3;\n    } else if (sound === 'TYPE4') {\n      return Assets.SOUNDS + AlarmSounds.type4;\n    }\n  }\n}\n\n/**\n* Service that connects and receives {@link Alarm} messages from the\n* IAS Webserver through Websockets\n*/\n@Injectable()\nexport class AlarmService {\n\n  /**\n  * Timestamp related with the last received message\n  */\n  public lastReceivedMessageTimestamp: number = (new Date).getTime();\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public connectionStatusStream = new BehaviorSubject(false);\n\n  /**\n  * Array of {@link Alarm} objects\n  */\n  public alarmsArray: Alarm[] = [];\n\n  /**\n  * Index for the alarmsArray { core_id: arrayIndex }\n  */\n  public alarmsIndexes: {[core_id: string]: number} = {};\n\n  /**\n  * Stream of notifications of changes in\n  * the dictionary of {@link Alarm} objects\n  */\n  public alarmChangeStream = new BehaviorSubject(true);\n\n  /**\n  * Django Channels WebsocketBridge,\n  * used to connect to Django Channels through Websockets\n  */\n  private webSocketBridge: WebSocketBridge = new WebSocketBridge();\n\n  /**\n  * Defines wether or not the display should emit sounds when alarms are triggered.\n  * It is used to avoid sounds when the page is refreshed, and only allow them after that\n  */\n  public canSound: boolean;\n\n  /**\n  * Reference to the audio object used to play the sounds\n  */\n  public audio = new Audio();\n\n  /**\n  * Id of the currenlty sounding Alarm\n  */\n  public soundingAlarm: string;\n\n  /**\n   * Builds an instance of the service\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private cdbService: CdbService,\n    private httpClientService: HttpClientService,\n  ) {\n    this.connectionStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.triggerAlarmsNonValidConnectionState();\n        }\n      }\n    );\n  }\n\n  /**\n  * Sends an {@link Alarm} change event\n  *\n  * @param {Any} any the core_id of the updated alarm,\n  * or 'all' if all were updated\n  */\n  changeAlarms(any) {\n    this.alarmChangeStream.next(any);\n  }\n\n  /******* SERVICE INITIALIZATION *******/\n\n  /**\n  * Start connection to the backend through websockets\n  */\n  initialize() {\n    this.canSound = false;\n    this.audio = new Audio();\n    this.connect();\n    this.webSocketBridge.socket.addEventListener(\n      'open', () => {\n        this.connectionStatusStream.next(true);\n        /* TODO: Evaluate function for webserver requests */\n        this.getAlarmList();\n        this.cdbService.initialize();\n      }\n    );\n    this.webSocketBridge.demultiplex(Streams.ALARMS, (payload, streamName) => {\n      // console.log('notify ', payload);\n      this.updateLastReceivedMessageTimestamp();\n      this.readAlarmMessage(payload.action, payload.data);\n    });\n    this.webSocketBridge.demultiplex(Streams.UPDATES, (payload, streamName) => {\n      // console.log('request', payload);\n      this.updateLastReceivedMessageTimestamp();\n      this.readAlarmMessagesList(payload.data);\n    });\n    this.startLastReceivedMessageTimestampCheck();\n  }\n\n   /**\n   *  Start connection to the backend through websockets\n   */\n  connect() {\n    const connectionPath = environment.websocketPath;\n    this.webSocketBridge.connect(connectionPath);\n    this.webSocketBridge.listen(connectionPath);\n    console.log('Connected to webserver at: ' + connectionPath);\n  }\n\n  /******* ALARM HANDLING *******/\n\n  /**\n   * Returns an Alarm object\n   * @param core_id core_id of the Alarm to return\n   * @returns {Alarm} Alarm object corresponding to the given core_id\n   */\n  get(core_id: string): Alarm {\n    return this.alarmsArray[this.alarmsIndexes[core_id]] as Alarm;\n  }\n\n  /**\n   * Acknowledges a list of Alarms with a message\n   * @param alarms list of ids of the alarms to acknowledge\n   * @param message message of the acknowledgement\n   * @returns {json} response of the HTTP request of the acknowledge\n   */\n  acknowledgeAlarms(alarms_ids, message) {\n    const data = {\n      'alarms_ids': alarms_ids,\n      'message': message,\n    };\n    return this.httpClientService.put(BackendUrls.TICKETS_MULTIPLE_ACK, data).pipe(\n    map(\n      (response) => {\n        for (const id of alarms_ids) {\n          const alarm = this.get(id);\n          alarm.acknowledge();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Get information about old tickets related to a target alarm\n   * @param alarm_id id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getMissingAcks(alarm_id) {\n    const url = BackendUrls.TICKETS_INFO + '?alarm_id=' + alarm_id;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Gets the open {@link ShelveRegistry} for an {@link Alarm}\n   * @param {string} alarm_id id of the target alarm\n   * @param {int} status id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getShelveRegistries(alarm_id, status) {\n    const url = BackendUrls.SHELVE_REGS_FILTER + '?alarm_id=' + alarm_id + '&status=' + status;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarm_id id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  shelveAlarm(alarm_id, message, timeout) {\n    const data = {\n      'alarm_id': alarm_id,\n      'message': message,\n      'timeout': timeout,\n    };\n    return this.httpClientService.post(BackendUrls.SHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 201) {\n          const alarm = this.get(alarm_id);\n          alarm.shelve();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarms_ids id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  unshelveAlarms(alarms_ids, message) {\n    const data = {\n      'alarms_ids': alarms_ids,\n    };\n    return this.httpClientService.put(BackendUrls.UNSHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 200) {\n          for (const id of alarms_ids) {\n            const alarm = this.get(id);\n            alarm.unshelve();\n          }\n        }\n        return response;\n      }\n    ));\n  }\n\n  /******* HANDLING OF ALARM MESSAGES FROM THE CORE *******/\n\n  /**\n  * Get the complete list of alarms from the webserver database\n   * through the websocket\n   */\n  getAlarmList() {\n    this.webSocketBridge.stream(Streams.UPDATES).send({\n      'action': 'list'\n    });\n  }\n\n  /**\n   * Reads an alarm message from the Core and modify the service alarms list\n   * depending on the action value.\n   * @param {string} action create, update or delete\n   * @param {Object} obj dictionary with values for alarm fields (as generic object)\n   */\n  readAlarmMessage(action, obj) {\n    if ( action === 'create' || action === 'update' ) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n      this.changeAlarms(alarm.core_id);\n    }\n  }\n\n  /**\n   * Reads a list of alarm messages form the Core and add them to the\n   * service alarms list\n   * @param {Object[]} alarmsList list of dictionaries with values for alarm fields (as generic objects)\n   */\n  readAlarmMessagesList(alarmsList) {\n    for (const obj of alarmsList) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n    }\n    this.changeAlarms('all');\n    this.canSound = true;\n  }\n\n  /**\n   * Adds or updates an {@link Alarm} to the AlarmService\n   * @param {Alarm} alarm the {@link Alarm} to add or update\n   */\n  add_or_update_alarm(alarm) {\n    let old_alarm_value = Value.cleared;\n    let old_alarm_ack = true;\n    if (alarm.core_id in this.alarmsIndexes) {\n      const old_alarm = this.alarmsArray[this.alarmsIndexes[alarm.core_id]];\n      old_alarm_value = old_alarm.value;\n      old_alarm_ack = old_alarm.ack;\n      this.alarmsArray[this.alarmsIndexes[alarm.core_id]] = alarm;\n    } else {\n      const newLength = this.alarmsArray.push(alarm);\n      this.alarmsIndexes[alarm.core_id] = newLength - 1;\n    }\n    if (old_alarm_value === Value.cleared && alarm.value !== Value.cleared) {\n      if (alarm.sound !== 'NONE') {\n        this.playAlarmSound(alarm);\n      }\n    }\n    if (!old_alarm_ack && alarm.ack) {\n      if (alarm.sound !== 'NONE') {\n        this.clearSoundsIfAck(alarm);\n      }\n    }\n  }\n\n  /**\n   * Reproduces the sound of a given {@link Alarm}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  playAlarmSound(alarm: Alarm) {\n    if (!this.canSound) {\n      return;\n    }\n    const repeat = alarm.shouldRepeat();\n    if (repeat) {\n      this.soundingAlarm = alarm.core_id;\n      this.audio.pause();\n      this.emitSound(alarm.sound, repeat);\n    } else if (this.audio.paused) {\n      this.emitSound(alarm.sound, repeat);\n    }\n  }\n\n  /**\n   * Reproduces a sound\n   * @param {string} sound the type of sound to reproduce\n   * @param {boolean} repeat true if the sound should be repeated, false if not\n   */\n  emitSound(sound: string, repeat: boolean) {\n    console.log('calling emit with: ', sound);\n    this.audio = new Audio();\n    this.audio.src = AlarmSounds.getSoundsource(sound);\n    if (repeat) {\n      this.audio.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n    this.audio.load();\n    this.audio.play();\n  }\n\n  clearSoundsIfAck(alarm: Alarm) {\n    if (!alarm.shouldRepeat()) {\n      return;\n    }\n    if (this.soundingAlarm === alarm.core_id) {\n      this.audio.pause();\n      this.soundingAlarm = null;\n      for (alarm of this.alarmsArray) {\n        if (!alarm.ack && alarm.sound !== 'NONE' && alarm.shouldRepeat()) {\n          this.soundingAlarm = alarm.core_id;\n          this.playAlarmSound(alarm);\n          return;\n        }\n      }\n    }\n  }\n\n  /******* PERIODIC CHECK OF VALIDITY OF ALARMS *******/\n\n  /**\n   * Set selected state to alarms under an non-valid connection\n   */\n  triggerAlarmsNonValidConnectionState() {\n    for (const alarm of this.alarmsArray) {\n      alarm.validity = Validity.unreliable;\n    }\n    this.changeAlarms('all');\n  }\n\n  /**\n   * Method to update the last received message timestamp\n   */\n  updateLastReceivedMessageTimestamp() {\n    this.lastReceivedMessageTimestamp = (new Date()).getTime();\n  }\n\n  /**\n   * Method to check the last received message timestamp\n   * Note: If non-valid, the connection state is non-valid\n   * TODO: Review the life cycle of the connection status.\n   */\n  compareCurrentAndLastReceivedMessageTimestamp() {\n\n    /* Refresh rate parameters */\n    let pars;\n\n    /* TODO: Evaluate try exception. Here for debug options. */\n    try {\n      pars = this.cdbService.getRefreshRateParameters();\n    } catch (e) {\n      pars = {'refreshRate': 5, 'broadcastFactor': 1};\n    }\n\n    const MAX_SECONDS_WITHOUT_MESSAGES = pars['refreshRate'] * pars['broadcastFactor'] + pars['tolerance'];\n\n    const now = (new Date).getTime();\n    let millisecondsDelta;\n\n    millisecondsDelta = now - this.lastReceivedMessageTimestamp;\n    if (millisecondsDelta >= 1000 * MAX_SECONDS_WITHOUT_MESSAGES ) {\n      this.connectionStatusStream.next(false);\n    }\n  }\n\n  /**\n   * Method to update the last received message timestamp\n   * @returns {InternalObservable} for notifications to check the last received message\n   */\n  startLastReceivedMessageTimestampCheck() {\n    return IntervalObservable.create(1000 * 10)\n      .subscribe(() => {\n      this.compareCurrentAndLastReceivedMessageTimestamp();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AntennaConfig.html":{"url":"classes/AntennaConfig.html","title":"class - AntennaConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AntennaConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the antennas and location related to an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                            \n                                    Public\n                                antenna\n                            \n                            \n                                    Public\n                                placemark\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antenna:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:15\n                            \n                        \n\n                \n                    \n                        ID of the Antenna associated with the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** Dictionary of Alarm configuration indexed by antennas group ID **/\n  public antennasConfig: {[group: string]: AntennaConfig [] } = {};\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasConfig[key] = response[key] as AntennaConfig[];\n        }\n      }\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNgClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        The Alarm to associate to the antenna \n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                    \n                        The position of the antenna in the X axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                    \n                        The position of the antenna in the Y axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                    \n                        Radius of the antenna \n\n                        \n                            Default value : 1\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : '0 0 10 10'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNgClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNgClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:41\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:40\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  getNgClass() {\n    let colorClass = 'green';\n    if (this.alarm.shelved === true) {\n      colorClass = 'green';\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      colorClass = 'blue';\n    } else if (this.alarm.showAsMaintenance()) {\n      colorClass = 'grey';\n    } else if (this.alarm.value === Value.cleared) {\n      colorClass = 'green';\n    } else if (this.alarm.value === Value.set_low) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_medium) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_high) {\n      colorClass = 'red';\n    } else if (this.alarm.value === Value.set_critical) {\n      colorClass = 'red';\n    } else {\n      colorClass = 'green';\n    }\n\n    if (this.alarm.validity === 0) {\n      return [colorClass, 'unreliable'];\n    } else {\n      return [colorClass];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Antennas Alarms both in a sidebar (instantiated in a AntennasSidebar),\nand a map (instantiated by a AntennasMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAntenna:     AntennaConfig\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AntennaConfig } from '../antennas.service';\n\n/**\n* Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\n* and a map (instantiated by a {@link AntennasMap})\n*/\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna: AntennaConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AntennaConfig}\n   */\n  updateSelectedAntenna(selectedAntenna: AntennaConfig): void {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n  Modules\n  AntennasModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AntennaMarkerComponent\n                            \n                            \n                                AntennasComponent\n                            \n                            \n                                AntennasMapComponent\n                            \n                            \n                                AntennasSidebarComponent\n                            \n                            \n                                AntennasSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AntennasService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AntennasSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    ActionsModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the AntennasModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:49\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the initialize method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:49\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:43\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:46\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasConfig:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:34\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm configuration indexed by antennas group ID *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:37\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasSummaryConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:40\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** Dictionary of Alarm configuration indexed by antennas group ID **/\n  public antennasConfig: {[group: string]: AntennaConfig [] } = {};\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasConfig[key] = response[key] as AntennaConfig[];\n        }\n      }\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Display used to show the list of antennas' alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaName\n                            \n                            \n                                getAntennasByGroup\n                            \n                            \n                                getAntennasGroups\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Selected antenna object, null if it is nothing selected \n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                    \n                        Event emitted to notify when an antenna is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaName(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the Antenna configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the antenna name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennasByGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennasByGroup(groupID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration by group\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AntennaConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennasGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennasGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas groups Ids defined in the configuration\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    List of groups IDS\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked antenna\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\n// import { RoutingService } from '../../data/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Display used to show the list of antennas' alarms\n */\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit {\n\n  /** Selected antenna object, null if it is nothing selected */\n  @Input() selectedAntenna = null;\n\n  /** Event emitted to notify when an antenna is selected */\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {RoutingService} routing Service used to redirect to other views\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService,\n    // private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n   * @param {MapAntennaConfig} antennaConfig the Antenna configuration\n   * @returns {string} the antenna name to display\n   */\n  getAntennaName(antennaConfig: AntennaConfig ): string {\n    return antennaConfig.antenna;\n  }\n\n  /**\n  * Return the list of antennas groups Ids defined in the configuration\n  * @returns {list} List of groups IDS\n  */\n  getAntennasGroups(): string [] {\n    return Object.keys(this.antennasService.antennasConfig);\n  }\n\n  /**\n  * Return the list of Alarm configuration by group\n  * @returns {list} list of {@link AntennaConfig}\n  */\n  getAntennasByGroup(groupID: string): AntennaConfig [] {\n    return this.antennasService.antennasConfig[groupID];\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AntennaConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AntennaConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  * @param {AntennaConfig} alarmConfig configuration of the clicked antenna\n  */\n  onClick(alarmConfig: AntennaConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  // /**\n  //  * Redirect to table view applying the specified filter\n  //  * @param filter Space-separated String that contains words used to\n  //  * filter the alarms in the table view\n  //  */\n  // goToTableFilteredBy(filter: string) {\n  //   this.routing.tableWithFilter(filter);\n  // }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n     chevron_left  {{getAntennaName(this.selectedAntenna)}}  \n\n\n\n\n  \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Alarm ID\n        {{this.selectedAntenna.alarm}}\n      \n      \n        Antenna\n        {{this.selectedAntenna.antenna}}\n      \n      \n        Location (PAD)\n        {{this.selectedAntenna.placemark}}\n      \n    \n  \n\n  \n    \n      \n        Antenna\n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        Fire\n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        Fire Malfunction\n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        UPS Failure\n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        HVAC Failure \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        Power Cut\n        \n          \n            \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS      chevron_left  {{getAntennaName(this.selectedAntenna)}}                                                                        Alarm ID        {{this.selectedAntenna.alarm}}                    Antenna        {{this.selectedAntenna.antenna}}                    Location (PAD)        {{this.selectedAntenna.placemark}}                                Antenna                                                                                              Fire                                                                                              Fire Malfunction                                                                                              UPS Failure                                                                                              HVAC Failure                                                                                               Power Cut                                                                                      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get Antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to get Antennas configuration\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:43\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {AntennasService} antennasService Service used to get Antennas configuration\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.antennasService.antennasSummaryConfig);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              STATUS\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    STATUS                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                            Builds an instance of the application, with its related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Returns the links for the router outlets to navigate the different views, considering of the actionsSidenav can be closed or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an item of the navigation sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { outlets: { primary: any; actions: any; }; } | { outlets: { primary: any; actions?: undefined; }...\n\n                            \n                                \n                                    The links in a dictionary\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Method executed when the application is initiated\nInitializes the AlarmService and passes its actionsSidenav to the ActionsSidenavService for it to control it\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                        Reference to the Actions sidenav (right sidenav)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNavigationCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navigationSidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Overview', link: 'overview', icon: 'ias_overview', svgIcon: true},\n    { title: 'Weather', link: 'weather', icon: 'ias_weather', svgIcon: true},\n    { title: 'Antennas', link: 'antennas', icon: 'ias_antenna', svgIcon: true},\n    { title: 'Table', link: 'tabular', icon: 'ias_table', svgIcon: true}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  // TODO: Use only custom svgIcons\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  navigationSidenavItems = [\n    { title: 'Overview', link: 'overview', icon: 'ias_overview', svgIcon: true},\n    { title: 'Weather', link: 'weather', icon: 'ias_weather', svgIcon: true},\n    { title: 'Antennas', link: 'antennas', icon: 'ias_antenna', svgIcon: true},\n    { title: 'Table', link: 'tabular', icon: 'ias_table', svgIcon: true}\n  ];\n\n  /**\n   * Builds an instance of the application, with its related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Method executed when the application is initiated\n   * Initializes the {@link AlarmService} and passes its {@link actionsSidenav} to the {@link ActionsSidenavService} for it to control it\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n  }\n\n  /**\n  * Returns the links for the router outlets to navigate the different views, considering of the actionsSidenav can be closed or not\n  * @param {any} item an item of the navigation sidenav\n  * @returns {Object} The links in a dictionary\n  */\n  getActionsLink(item: any) {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n  \n\n  \n    \n      \n        \n          \n            \n              {{ item.icon }}\n            \n            \n              {{ item.icon }}\n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                                                               {{ item.icon }}                                      {{ item.icon }}                        {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppModule -->\n\nMaterialSandboxComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                MaterialSandboxComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    OverviewModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TabularModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_BASE_HREF } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { HealthModule } from './health/health.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { MapModule } from './map/map.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppComponent } from './app.component';\nimport { TabularViewComponent } from './tabular/tabular-view/tabular-view.component';\nimport { OverviewComponent } from './overview/overview/overview.component';\nimport { AckComponent } from './actions/ack/ack.component';\nimport { ShelveComponent } from './actions/shelve/shelve.component';\nimport { WeatherComponent } from './weather/weather/weather.component';\nimport { AlarmComponent } from './shared/alarm/alarm.component';\nimport { AntennasComponent } from './antennas/antennas/antennas.component';\n\nimport { HttpModule } from '@angular/http';\nimport { MaterialSandboxComponent } from './material-sandbox/material-sandbox.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'overview', component: OverviewComponent },\n  { path: 'tabular', component: TabularViewComponent },\n  { path: 'tabular/:filter', component: TabularViewComponent },\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions'},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions'},\n  { path: 'weather', component: WeatherComponent},\n  { path: 'sandbox', component: MaterialSandboxComponent},\n  { path: 'antennas', component: AntennasComponent},\n];\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent,\n    MaterialSandboxComponent,\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    HttpModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Set of buttons used to trigger actions over AlarmService\nContains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the buttons\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Set of buttons used to trigger actions over AlarmService\n * Contains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n */\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfigurationData\n                            \n                            \n                                getRefreshRateParameters\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRefreshRateParameters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRefreshRateParameters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Get refresh rate parameters from IAS configuration data\nThese are refresh rate value and related multiplier factor\n\n\n                            \n                            \n                            \n                                Returns :     { 'refreshRate': any; 'tolerance': any; 'broadcastFactor': any; }\n\n                            \n                                \n                                    contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:23\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:18\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {forkJoin as observableForkJoin,  BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Rx';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { Iasio } from '../data/iasio';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      this.iasConfiguration = res;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh rate parameters from IAS configuration data\n  * These are refresh rate value and related multiplier factor\n  * @returns {json} contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n  */\n  getRefreshRateParameters() {\n    return {\n      'refreshRate': Number(this.iasConfiguration['refreshRate']),\n      'tolerance': Number(this.iasConfiguration['tolerance']),\n      'broadcastFactor': Number(this.iasConfiguration['broadcastFactor'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the services and data models\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AlarmService\n                            \n                            \n                                     CdbService\n                            \n                            \n                                     HttpClientService\n                            \n                            \n                                     RoutingService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { RoutingService } from './routing.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    RoutingService,\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n  Modules\n  HealthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the components associated to the health of the IAS\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HealthSummaryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HealthSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:19\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:48\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.alarmId);\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n    this.alarmId = 'IAS-Health-Global';\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-valid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-valid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-valid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-invalid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-invalid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              IAS HEALTH\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    IAS HEALTH                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:13\n                            \n                        \n\n                \n                    \n                            The \"constructor\" \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:76\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /** The \"constructor\" */\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  IasMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for the required Angular Material components\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in maintenance state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_0:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority zero (clear) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_1:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority low \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_2:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority medium \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_3:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority high \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_4:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority critical \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in unknown state \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Reference to the icon used to display Alarms in clear and valid states */\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n\n  /** Reference to the icon used to display Alarms in clear and invalid states */\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n\n  /** Reference to the icon used to display Alarms in unknown state */\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n\n  /** Reference to the icon used to display Alarms in maintenance state */\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and valid states */\n  set_valid = Assets.ICONS + 'set-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and invalid states */\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n\n  /** Reference to the icon used to display Alarms with priority zero (clear) */\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n\n  /** Reference to the icon used to display Alarms with priority low */\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n\n  /** Reference to the icon used to display Alarms with priority medium */\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n\n  /** Reference to the icon used to display Alarms with priority high */\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n\n  /** Reference to the icon used to display Alarms with priority critical */\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                    \n                        contains the configuration to draw the map\n\n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                    \n                        Defines wether or no there is data available to draw the map\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n  Modules\n  MapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MapComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: , pathsGroups: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Scaling and calculation of max and min values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of groups of placemarks\n\n                                                        \n                                                \n                                                \n                                                        pathsGroups\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    The viewbox: list of 4 numbers used to define the size of the map\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup) {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                material-sandbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/material-sandbox/material-sandbox.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Executed when initiating the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that displays some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.component.html',\n  styleUrls: ['./material-sandbox.component.scss']\n})\nexport class MaterialSandboxComponent implements OnInit {\n\n  /**\n  * Constructor of the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when initiating the component\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Primary\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nAccent\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nWarn\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nBackground\n\n   status-bar \n   app-bar \n   background \n   hover \n   card \n   dialog \n   disabled-button \n\n\n   raised-button \n   focused-button \n   selected-button \n   selected-disabled-button \n   disabled-button-toggle \n   unselected-chip \n   disabled-list-option \n\n\nForeground\n\n   base \n   divider \n   dividers \n   disabled \n   disabled-button \n   disabled-text \n\n\n   hint-text \n   secondary-text \n   icon \n   icons \n   text \n   slider-min \n   slider-off \n   slider-off-active \n\n\n\n\n\n\nMaterial Toggle\nDefault \nPrimary \nAccent \nWarn\n\nBasic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\n\n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Primary   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Accent   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Warn   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Background   status-bar    app-bar    background    hover    card    dialog    disabled-button    raised-button    focused-button    selected-button    selected-disabled-button    disabled-button-toggle    unselected-chip    disabled-list-option Foreground   base    divider    dividers    disabled    disabled-button    disabled-text    hint-text    secondary-text    icon    icons    text    slider-min    slider-off    slider-off-active Material ToggleDefault Primary Accent WarnBasic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    Link          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n    \n    \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n    \n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     IAS HEALTH                                                                  ANTENNAS                                                                  WEATHER                                                 '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n  Modules\n  OverviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OverviewCardComponent\n                            \n                            \n                                OverviewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    OverviewCardComponent\n                            \n                            \n                                    OverviewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanActionOutlet\n                            \n                            \n                                goToAcknowledge\n                            \n                            \n                                goToAntennas\n                            \n                            \n                                goToShelve\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cleanActionOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \ncleanActionOutlet()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TabularViewComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TabularViewComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TabularViewComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TabularViewComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  goToAcknowledge(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', alarm_id]}}]);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  goToShelve(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['shelve', alarm_id]}}]);\n  }\n\n  /**\n  * Clean action outlet\n  */\n  cleanActionOutlet() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AlarmComponent\n                            \n                            \n                                    AlarmHeaderComponent\n                            \n                            \n                                    StatusViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:29\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n\n  /**\n   * Instantiates the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.sidenavService.goToShelve(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                lastAlarmId\n                            \n                            \n                                    Public\n                                shouldReload\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                goToAcknowledge\n                            \n                            \n                                    Public\n                                goToShelve\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routingService: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routingService\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:80\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Opens the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the reference to the sidenav\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Reference to the sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Toggles the sidenav (open/close)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:36\n                            \n                        \n\n                \n                    \n                        Defines wether or not the sidenav can be closed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                        Id of the last Alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldReload:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe status of the service connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the sidenav \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs';\nimport { RoutingService } from '../data/routing.service';\n\n/**\n* Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public shouldReload = new BehaviorSubject(false);\n\n  /**\n  * Id of the last {@link Alarm}\n  */\n  lastAlarmId = '';\n\n  /**\n   * Builds an instance of the service\n   */\n  constructor(\n    private routingService: RoutingService\n  ) { }\n\n  /** Reference to the sidenav */\n  private sidenav: MatSidenav;\n\n  /** Defines wether or not the sidenav can be closed */\n  public canClose = true;\n\n  /**\n  * Sets the reference to the sidenav\n  * @param {MatSidenav} sidenav Reference to the sidenav\n  */\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  /**\n  * Opens the sidenav\n  */\n  public open() {\n    return this.sidenav.open();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  public close() {\n    this.routingService.cleanActionOutlet();\n    return this.sidenav.close();\n  }\n\n  /**\n  * Toggles the sidenav (open/close)\n  */\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  public goToAcknowledge(alarm_id: string) {\n    this.routingService.goToAcknowledge(alarm_id);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  public goToShelve(alarm_id: string) {\n    if (alarm_id === this.lastAlarmId) {\n      this.shouldReload.next(true);\n    } else {\n      this.lastAlarmId = alarm_id;\n    }\n    this.routingService.goToShelve(alarm_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the alarmTags\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsPrioritySet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid.svg',\n      set_critical: Assets.ICONS + 'set-valid.svg',\n      unknown: Assets.ICONS + 'unknown-valid.svg',\n      maintenance: Assets.ICONS + 'maintenance-valid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid.svg',\n      set_critical: Assets.ICONS + 'set-invalid.svg',\n      unknown: Assets.ICONS + 'unknown-invalid.svg',\n      maintenance: Assets.ICONS + 'maintenance-invalid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n  Modules\n  TabularModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Table view\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LegendComponent\n                            \n                            \n                                TabularViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TabularViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { StatusViewComponent } from '../shared/status-view/status-view.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TabularViewComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '00:15:00', viewValue: '15 minutes'},\n    {value: '00:30:00', viewValue: '30 minutes'},\n    {value: '01:00:00', viewValue: '1 hour'},\n    {value: '02:00:00', viewValue: '2 hours'},\n    {value: '06:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  errorMessage = '';\n\n  shelvedAtMessage = '';\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.shelvedAtMessage = '';\n    this.form = this.formBuilder.group({\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.shouldReload.subscribe(\n      value => {\n        if (value === true) {\n          this.reload();\n        }\n      }\n    );\n    this.sidenavService.open();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    if (!this.alarm.shelved) {\n      return 'Shelving';\n    } else {\n      return 'Unshelving';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        return 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        return 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      let response = '';\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' The server responded the following: ' +  this.errorMessage;\n      // response += ' Please try again. If the problem persists, contact the system administrator.';\n      return response;\n    }\n  }\n\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.shelvedAtMessage = '';\n    this.alarm = this.alarmService.get(this.alarm_id);\n    if (this.alarm.shelved) {\n      this.requestShelveInfo();\n    }\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  requestShelveInfo(): void {\n    this.alarmService.getShelveRegistries(this.alarm_id, 1).subscribe(\n        (response) => {\n          const registry = response[0];\n          this.shelvedAtMessage = 'This Alarm was shelved at ' + registry['shelved_at'] +\n          ' with a duration of ' + this.timeouts.find(t => t.value === registry['timeout']).viewValue;\n        },\n        (error) => {\n          console.log('Error: ', error);\n          return error;\n        }\n      );\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(this.alarm.core_id, message, timeout).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display backups weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display backups weather station in a map\n */\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a WeatherSidebar),\nand a map (instantiated by a WeatherMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStation:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { WeatherStationConfig } from '../weather.service';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedStation: WeatherStationConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {WeatherStationConfig}\n   */\n  changeSelectedStation(selectedStation: WeatherStationConfig): void {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display the weather station summary information in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:36\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\n\n\n/**\n * Marker to display the weather station summary information in a map\n */\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Weather system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherBackupWsMarkerComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WeatherDataMarkerComponent\n                            \n                            \n                                WeatherMapComponent\n                            \n                            \n                                WeatherPrimaryWsConnectorComponent\n                            \n                            \n                                WeatherPrimaryWsMarkerComponent\n                            \n                            \n                                WeatherSidebarComponent\n                            \n                            \n                                WeatherStationSidebarComponent\n                            \n                            \n                                WeatherSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WeatherSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n    \n        Description\n    \n    \n        Line connector between the weather station marker and the summarized weather\ninformation marker in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                    \n                        Array of coordinates for the connector path \n\n                            \n                            Type :    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Value to highlight the connector \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns the svg path used to draw the line in the map\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    svg path that represent the line\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\n/**\n * Line connector between the weather station marker and the summarized weather\n * information marker in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  /**\n  * Builds an instance of the component */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the svg path used to draw the line in the map\n   * @returns {string} svg path that represent the line\n   */\n  getPath(): string {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display primary weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display primary weather station in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the WeatherModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                markerImageSet\n                            \n                            \n                                    Public\n                                markerImageUnreliableSet\n                            \n                            \n                                    Public\n                                padsStatus\n                            \n                            \n                                    Public\n                                padsStatusAvailable\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                weatherMapName\n                            \n                            \n                                    Public\n                                weatherStationsConfig\n                            \n                            \n                                    Public\n                                weatherSummaryConfig\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                getPadsStatus\n                            \n                            \n                                initialize\n                            \n                            \n                                loadImages\n                            \n                            \n                                loadPadsStatus\n                            \n                            \n                                loadWeatherStationsConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:88\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            Requests data for the pads status, to know if each one is in use\nto locate, or not, an antenna\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            Loads the pads status in the related variable of this service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWeatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWeatherStationsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:145\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:88\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:50\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:62\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:59\n                            \n                        \n\n                \n                    \n                        Set of Marker icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:71\n                            \n                        \n\n                \n                    \n                        Set of Marker Unreliable icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        padsStatus:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatusAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        padsStatusAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:85\n                            \n                        \n\n                \n                    \n                        Variable to check if pads status is available \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:53\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:65\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherStationsConfig:     WeatherStationConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:77\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm Ids of the Weather Stations, indexed by placemark *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherSummaryConfig:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:74\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the weather summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:56\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:68\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** Group of placemarks who the alarm belongs */\n  public group: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  public padsStatus = null;\n\n  /** Variable to check if pads status is available */\n  public padsStatusAvailable = new BehaviorSubject(false);\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this.loadPadsStatus('');\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Requests data for the pads status, to know if each one is in use\n  * to locate, or not, an antenna\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getPadsStatus(group: string): Observable {\n    const url = BackendUrls.PADS_STATUS + group;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Loads the pads status in the related variable of this service\n  */\n  loadPadsStatus(group: string) {\n\n    this.getPadsStatus(group).subscribe(\n      (response) => {\n        this.padsStatusAvailable.next(false);\n        this.padsStatus = response;\n        this.padsStatusAvailable.next(true);\n    });\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSidebarComponent.html":{"url":"components/WeatherSidebarComponent.html","title":"component - WeatherSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms in an interactive sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-sidebar\n            \n\n            \n                styleUrls\n                weather-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyAntennas\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                panelClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, clipboardService: ClipboardService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        clipboardService\n                                                  \n                                                        \n                                                                    ClipboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to copy text to clipboard\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to notify user actions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        panelClicked\n                    \n                    \n                        Event emitted to notify when an weather station is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyAntennas(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Copy list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the data was copied to the clipboard, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Indicates if the weather station is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Action performed when the weather station is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string, action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Triggers the snackBar during 20 seconds and show the information specified\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the snackbar\n\n                                                        \n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the button of the snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to notify user actions\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:34\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n* Component used to display Weather Alarms in an interactive sidebar\n*/\n@Component({\n  selector: 'app-weather-sidebar',\n  templateUrl: './weather-sidebar.component.html',\n  styleUrls: ['./weather-sidebar.component.scss']\n})\nexport class WeatherSidebarComponent implements OnInit {\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedStation: WeatherStationConfig = null;\n\n  /** Event emitted to notify when an weather station is selected */\n  @Output() panelClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {ClipboardService} clipboardService Service used to copy text to clipboard\n  * @param {MatSnackBar} snackBar Service used to notify user actions\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private clipboardService: ClipboardService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  * Initializes the {@link WeatherService} if not already initialized\n  */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n  * Copy list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {boolean} true if the data was copied to the clipboard, false if not\n  */\n  copyAntennas(stationConfig: WeatherStationConfig): boolean {\n    const antennas = this.getAntennas(stationConfig);\n    const result = antennas.join(',');\n    const status = this.clipboardService.copyFromContent(result);\n    let message = '';\n    if (status) {\n      message = 'Antennas copied to clipboard';\n    } else {\n      message = 'ERROR: Antennas were not copied!';\n    }\n    this.openSnackBar(message, 'Done');\n    return status;\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(stationConfig: WeatherStationConfig): string[] {\n    const response = [];\n    if ( this.weatherService.padsStatus && stationConfig.group !== '' ) {\n        const pads = this.weatherService.padsStatus[stationConfig.group];\n        for (const pad_name in pads) {\n            if (pads[pad_name]) {\n                response.push(pads[pad_name]);\n            }\n        }\n    }\n    return response.sort();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Indicates if the weather station is selected or not\n  * @param {WeatherStationConfig} stationConfig configuration of the weather station\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(stationConfig: WeatherStationConfig) {\n    return this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark);\n  }\n\n  /**\n  * Action performed when the weather station is clicked\n  * @param {WeatherStationConfig} stationConfig configuration of the clicked weather station\n  */\n  onClick(stationConfig: WeatherStationConfig) {\n    if ( this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark) ) {\n      this.selectedStation = null;\n    } else {\n      this.selectedStation = stationConfig;\n    }\n    this.panelClicked.emit(this.selectedStation);\n  }\n\n  /**\n   * Triggers the snackBar during 20 seconds and show the information specified\n   * @param {string} message Message to show in the snackbar\n   * @param {string} action Message to show in the button of the snackbar\n   */\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 20000,\n      panelClass: ['snackbar']\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    WEATHER STATIONS\n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n              Station -->\n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n          \n             Nearby Antennas \n            \n               &nbsp;  Copy antennas \n            \n          \n          \n            \n               {{antenna}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      WEATHER STATIONS                                                                                          Stationearby Antennas                               Copy antennas                                                            {{antenna}}                                           '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherStationConfig.html":{"url":"classes/WeatherStationConfig.html","title":"class - WeatherStationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherStationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the Alarm objects associated to a WeatherStation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                humidity\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:31\n                            \n                        \n\n                \n                    \n                            Builds a new WeatherStationConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:19\n                            \n                        \n\n                \n                    \n                        Group of placemarks who the alarm belongs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:31\n                            \n                        \n\n                \n                    \n                        ID of the humidity Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:16\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:22\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temperature:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the temperature Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windspeed:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                        ID of the windspeed Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** Group of placemarks who the alarm belongs */\n  public group: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  public padsStatus = null;\n\n  /** Variable to check if pads status is available */\n  public padsStatusAvailable = new BehaviorSubject(false);\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this.loadPadsStatus('');\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Requests data for the pads status, to know if each one is in use\n  * to locate, or not, an antenna\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getPadsStatus(group: string): Observable {\n    const url = BackendUrls.PADS_STATUS + group;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Loads the pads status in the related variable of this service\n  */\n  loadPadsStatus(group: string) {\n\n    this.getPadsStatus(group).subscribe(\n      (response) => {\n        this.padsStatusAvailable.next(false);\n        this.padsStatus = response;\n        this.padsStatusAvailable.next(true);\n    });\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display an item containing a weather station summary in the interactive Sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Weather station config object \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     \"highlighted\" | \"\"\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Component to display an item containing a weather station summary in the interactive Sidebar\n */\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /** Weather station config object */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedAlarm: WeatherStationConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass() {\n    if (this.selectedAlarm && (this.selectedAlarm.station === this.stationConfig.station)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, weatherService: WeatherService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(keyword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the instance of the Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../data/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public weatherService: WeatherService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(keyword: string): Alarm {\n    if (this.weatherService.weatherSummaryConfig) {\n      return this.alarmService.get(this.weatherService.weatherSummaryConfig[keyword]);\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              WIND SPEED\n              \n                \n              \n          \n      \n      \n          \n              HUMIDITY\n              \n                \n              \n          \n      \n      \n          \n              TEMPERATURE\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    WIND SPEED                                                                                          HUMIDITY                                                                                          TEMPERATURE                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick(event) {\n    if (!this.url.startsWith('http://')) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/actions/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedTreeData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarmData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack/ack.component.ts\n            \n            \n                component\n            \n            \n                AckComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/actions/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                component\n            \n            \n                ShelveComponent\n            \n            \n                89 %\n                (25/28)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                interface\n            \n            \n                TimeoutOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/sidenav.service.ts\n            \n            \n                injectable\n            \n            \n                SidenavService\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/actions/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                component\n            \n            \n                AntennaMarkerComponent\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            \n                component\n            \n            \n                AntennasMapComponent\n            \n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            \n                component\n            \n            \n                AntennasSidebarComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            \n                component\n            \n            \n                AntennasSummaryComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            \n                class\n            \n            \n                AntennaConfig\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            \n                injectable\n            \n            \n                AntennasService\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas/antennas.component.ts\n            \n            \n                component\n            \n            \n                AntennasComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                class\n            \n            \n                AlarmSounds\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                96 %\n                (30/31)\n            \n        \n        \n            \n                \n                src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/map/fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/map/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.component.ts\n            \n            \n                component\n            \n            \n                MaterialSandboxComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                AntennasSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                WeatherSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/alarm-header.component.ts\n            \n            \n                component\n            \n            \n                AlarmHeaderComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                alarms_date\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                datepipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                src/app/weather/temp_fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                alarm_types\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherStationsConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherBackupWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherDataMarkerComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsConnectorComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map/weather-map.component.ts\n            \n            \n                component\n            \n            \n                WeatherMapComponent\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherSidebarComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherStationSidebarComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            \n                class\n            \n            \n                WeatherStationConfig\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                src/app/weather/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.docker.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.2\n        \n            @angular/cdk : ^6.4.3\n        \n            @angular/common : 6.1.2\n        \n            @angular/compiler : 6.1.2\n        \n            @angular/core : 6.1.2\n        \n            @angular/flex-layout : ^6.0.0-beta.17\n        \n            @angular/forms : 6.1.2\n        \n            @angular/http : 6.1.2\n        \n            @angular/material : ^6.4.3\n        \n            @angular/platform-browser : 6.1.2\n        \n            @angular/platform-browser-dynamic : 6.1.2\n        \n            @angular/platform-server : 6.1.2\n        \n            @angular/router : 6.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.7\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.22.2\n        \n            ngx-clipboard : ^11.1.3\n        \n            ngx-spinner : ^6.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 malfunctioning\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppModule -->\n\nMaterialSandboxComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
