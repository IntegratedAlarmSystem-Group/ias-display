var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.178,1,0.641]],["body/components/AckButtonComponent.html",[0,0.356,1,1.044,2,0.115,3,0.083,4,0.682,5,1.313,6,0.652,7,0.068,8,5.115,9,5.596,10,2.513,11,0.296,12,1.4,13,0.682,14,3.006,15,2.966,16,2.847,17,2.943,18,4.296,19,0.797,20,0.92,21,4.446,22,0.712,23,1.28,24,1.222,25,1.254,26,0.797,27,3.852,28,0.797,29,3.852,30,0.276,31,0.797,32,1.202,33,3.455,34,0.74,35,6.214,36,5.372,37,4.817,38,0.997,39,3.036,40,1.479,41,0.706,42,0.5,43,3.067,44,4.593,45,6.241,46,6.241,47,0.58,48,4.296,49,0.761,50,0.835,51,0.874,52,0.017,53,0.588,54,0.74,55,0.725,56,1.338,57,3.096,58,0.74,59,3.748,60,3.171,61,2.261,62,2.682,63,4.817,64,5.372,65,2.403,66,1.543,67,1.657,68,3.547,69,2.174,70,4.969,71,0.692,72,2.261,73,1.543,74,3.547,75,1.978,76,4.817,77,1.749,78,3.547,79,1.087,80,1.479,81,3.852,82,4.296,83,3.036,84,3.852,85,4.296,86,4.296,87,0.797,88,3.547,89,3.852,90,5.372,91,3.547,92,3.56,93,2.682,94,0.92,95,2.847,96,3.547,97,0.274,98,0.132,99,3.067,100,2.167,101,1.81,102,0.744,103,0.099,104,0.047,105,1.002,106,1.424,107,0.999,108,3.067,109,3.067,110,3.067,111,1.915,112,1.183,113,3.067,114,2.325,115,3.547,116,2.325,117,1.041,118,2.167,119,0.422,120,0.998,121,0.998,122,0.955,123,1.248,124,0.712,125,0.998,126,0.569,127,0.712,128,0.569,129,0.712,130,0.422,131,0.712,132,0.596,133,0.712,134,0.569,135,0.864,136,1.248,137,0.569,138,0.712,139,0.596,140,1.151,141,0.596,142,1.151,143,0.596,144,1.151,145,0.596,146,0.712,147,0.596,148,0.712,149,0.596,150,0.682,151,0.596,152,0.712,153,0.596,154,0.596,155,0.569,156,0.712,157,0.596,158,0.596,159,0.712,160,0.569,161,0.712,162,0.596,163,0.543,164,0.712,165,0.543,166,0.569,167,0.998,168,0.543,169,0.652,170,0.596,171,1.037,172,0.652,173,1.055,174,0.569,175,0.712,176,0.596,177,0.4,178,0.624,179,0.596,180,0.835,181,0.712,182,0.596,183,0.596,184,0.596,185,0.543,186,0.596,187,0.596,188,0.682,189,0.712,190,0.01,191,0.01]],["title/components/AckComponent.html",[0,0.178,126,0.612]],["body/components/AckComponent.html",[0,0.352,1,0.411,2,0.08,3,0.057,4,0.47,5,0.491,6,0.45,7,0.047,11,0.29,12,0.45,13,0.673,14,2.51,15,2.594,16,2.644,17,3.084,19,0.606,20,0.741,22,0.491,23,1.243,24,1.186,25,1.19,26,0.606,28,0.606,30,0.19,31,0.606,32,1.243,33,3.255,34,0.706,38,0.833,40,0.899,41,0.746,42,0.38,44,4.161,47,0.578,51,0.664,52,0.017,53,0.491,54,0.797,55,0.551,56,1.259,57,2.801,58,0.668,59,3.541,60,1.248,61,2.041,62,3.2,65,1.827,66,1.472,71,0.697,72,1.374,73,1.146,75,1.503,77,1.299,79,0.826,80,1.236,83,2.308,87,1.002,93,2.801,94,0.606,97,0.259,98,0.091,100,1.494,101,1.248,102,0.513,103,0.068,104,0.032,105,0.946,106,1.691,107,1.461,111,2.491,112,1.259,114,2.475,116,1.602,117,1.999,118,1.494,119,0.291,120,0.758,121,0.758,122,0.726,123,1.042,124,0.491,125,0.758,126,0.833,127,0.491,128,0.392,129,0.491,130,0.291,131,0.491,132,0.411,133,0.491,134,0.392,135,0.721,136,1.042,137,0.392,138,0.491,139,0.411,140,0.926,141,0.411,142,0.926,143,0.411,144,0.926,145,0.411,146,0.491,147,0.411,148,0.491,149,0.411,150,0.47,151,0.411,152,0.491,153,0.411,154,0.411,155,0.392,156,0.491,157,0.411,158,0.411,159,0.491,160,0.392,161,0.491,162,0.411,163,0.374,164,0.491,165,0.374,166,0.392,167,0.758,168,0.374,169,0.45,170,0.411,171,0.932,172,0.45,173,0.849,174,0.392,175,0.491,176,0.411,177,0.276,178,0.43,179,0.411,180,0.635,181,0.491,182,0.411,183,0.411,184,0.411,185,0.374,186,0.411,187,0.411,188,0.47,189,0.491,190,0.011,191,0.008,192,2.114,193,2.725,194,3.269,195,3.777,196,3.777,197,5.19,198,3.2,199,5.19,200,4.385,201,4.463,202,5.19,203,5.188,204,5.19,205,5.19,206,4.596,207,4.023,208,3.677,209,4.023,210,4.201,211,4.023,212,3.777,213,2.114,214,4.949,215,1.839,216,2.713,217,3.677,218,4.349,219,4.023,220,3.777,221,0.695,222,2.339,223,3.401,224,3.219,225,1.888,226,1.888,227,2.928,228,3.336,229,2.164,230,1.827,231,2.164,232,2.446,233,3.612,234,2.446,235,2.039,236,2.446,237,2.801,238,6.552,239,2.928,240,2.446,241,3.9,242,1.236,243,2.475,244,1.202,245,2.446,246,2.928,247,4.023,248,2.928,249,3.834,250,2.51,251,2.446,252,2.676,253,2.446,254,2.164,255,2.446,256,2.446,257,2.928,258,2.446,259,2.039,260,1.827,261,2.308,262,2.308,263,2.928,264,3.777,265,2.446,266,2.308,267,2.428,268,2.36,269,4.023,270,2.928,271,1.236,272,1.078,273,2.446,274,2.446,275,5.19,276,2.446,277,1.579,278,2.446,279,3.265,280,4.023,281,2.446,282,1.736,283,2.475,284,4.791,285,2.446,286,2.446,287,3.777,288,2.608,289,1.827,290,2.928,291,2.928,292,2.608,293,2.928,294,3.577,295,2.446,296,1.401,297,1.248,298,0.781,299,2.928,300,0.582,301,1.896,302,1.896,303,1.896,304,1.896,305,1.896,306,1.896,307,1.896,308,1.896,309,1.896,310,2.446,311,1.896,312,1.896,313,4.349,314,1.896,315,1.896,316,2.928,317,2.446,318,3.777,319,1.896,320,2.446,321,2.928,322,3.024,323,1.896,324,1.896,325,1.896,326,2.446,327,0.582,328,2.446,329,3.777,330,2.446,331,3.777,332,2.446,333,2.446,334,2.039,335,2.446,336,5.19,337,2.446,338,2.446,339,2.446,340,1.733,341,1.896,342,1.733,343,1.896,344,1.896,345,1.733,346,1.896,347,1.896,348,1.896,349,1.733,350,3.265,351,3.265,352,1.927,353,2.475,354,3.265,355,2.928,356,3.777,357,3.265]],["title/modules/ActionsModule.html",[358,0.871,359,2.06]],["body/modules/ActionsModule.html",[1,1.311,2,0.154,3,0.111,7,0.09,9,3.671,25,1.013,33,3.387,52,0.017,58,0.564,97,0.334,98,0.176,100,2.894,103,0.195,104,0.063,119,0.564,126,1.252,128,1.183,130,0.564,147,1.311,162,1.311,163,1.195,187,1.311,188,0.91,190,0.012,191,0.012,226,2.413,228,2.556,296,2.714,297,2.417,358,1.376,359,4.373,360,1.579,361,2.901,362,2.072,363,4.094,364,4.094,365,4.094,366,4.094,367,4.094,368,3.387,369,3.387,370,3.387,371,2.771,372,2.177,373,2.072,374,4.736,375,2.771,376,3.076,377,2.177,378,4.736,379,4.736,380,6.632,381,3.671,382,3.671,383,3.356,384,4.736,385,1.801,386,4.673,387,4.673,388,4.673,389,1.975,390,2.556,391,2.714,392,2.714,393,2.714,394,4.736]],["title/classes/Alarm.html",[41,0.361,104,0.05]],["body/classes/Alarm.html",[2,0.147,3,0.056,7,0.045,11,0.359,13,0.514,17,2.83,25,1.232,30,0.184,31,0.592,34,0.697,41,0.758,42,0.239,47,0.596,49,0.565,50,1.028,51,0.898,52,0.017,53,0.554,54,0.854,55,0.745,58,0.904,66,1.83,71,0.756,72,2.743,73,1.374,77,1.649,80,0.565,83,4.25,93,2.757,94,1.247,95,2.115,103,0.143,104,0.084,105,1.016,106,1.454,107,2.063,112,0.791,165,0.782,166,1.222,180,0.399,190,0.008,191,0.008,201,3.838,222,3.155,225,2.3,237,3.505,242,1.394,243,3.838,244,1.346,249,1.36,267,1.943,272,1.444,277,1.438,279,3.19,282,2.347,288,2.332,292,2.202,300,1.216,327,0.879,334,1.281,360,2.108,389,2.443,395,1.84,396,5.465,397,5.858,398,4.864,399,5.858,400,6.114,401,4.528,402,5.858,403,5.064,404,3.691,405,3.691,406,5.108,407,1.992,408,3.691,409,3.313,410,1.614,411,1.785,412,2.374,413,2.374,414,3.96,415,4.541,416,2.374,417,5.064,418,2.115,419,2.374,420,3.691,421,2.374,422,3.19,423,2.833,424,2.374,425,3.92,426,2.374,427,2.615,428,2.374,429,2.115,430,1.943,431,2.374,432,1.992,433,2.374,434,2.374,435,2.202,436,1.438,437,2.374,438,5.24,439,2.374,440,2.861,441,2.081,442,3.19,443,3.691,444,7.231,445,2.374,446,5.465,447,2.13,448,2.374,449,3.691,450,2.374,451,2.861,452,2.615,453,2.234,454,2.615,455,3.691,456,2.374,457,2.255,458,2.374,459,2.374,460,2.595,461,2.967,462,2.374,463,1.555,464,3.691,465,2.374,466,2.374,467,3.691,468,2.374,469,2.374,470,2.374,471,2.374,472,2.374,473,2.374,474,2.374,475,2.374,476,3.691,477,1.785,478,2.374,479,2.374,480,5.613,481,3.691,482,4.528,483,1.682,484,2.418,485,2.052,486,2.615,487,0.99,488,3.208,489,1.84,490,2.052,491,1.555,492,0.99,493,1.84,494,3.19,495,1.038,496,3.347,497,1.038,498,1.038,499,1.038,500,1.038,501,1.281,502,2.374,503,2.374,504,2.374,505,2.374,506,2.374,507,2.374,508,2.374,509,2.374,510,2.374,511,2.374,512,2.374,513,2.374,514,2.052,515,1.84,516,2.374,517,2.374,518,2.374,519,2.374,520,2.374,521,2.374,522,2.374,523,2.374,524,2.374,525,2.374,526,2.374,527,2.374,528,2.374,529,2.374,530,2.374,531,2.374,532,2.374,533,2.374,534,2.374,535,5.108,536,2.374,537,1.682,538,2.374,539,2.374,540,2.374,541,5.108,542,4.541,543,2.374,544,2.374,545,2.374,546,2.374,547,2.374,548,2.374,549,2.374,550,2.374,551,2.374,552,2.374,553,2.374,554,2.374,555,2.374,556,2.374,557,1.682,558,2.374,559,2.374,560,2.374,561,2.374,562,2.374,563,1.682,564,1.682,565,1.555,566,1.682,567,5.108,568,2.052,569,1.84,570,2.374,571,2.374,572,2.374,573,2.374]],["title/classes/AlarmColorsSet.html",[104,0.05,574,2.704]],["body/classes/AlarmColorsSet.html",[0,0.276,2,0.103,3,0.074,7,0.06,11,0.237,13,0.779,19,0.509,20,0.737,23,0.509,24,0.486,26,0.509,28,0.509,30,0.247,31,0.737,32,1.637,38,0.509,40,1.604,41,0.735,42,0.461,47,0.562,49,0.826,50,0.906,51,0.558,52,0.017,53,0.434,54,0.837,55,0.463,56,1.136,58,0.822,61,1.155,66,1.623,67,1.058,69,2.008,71,0.704,73,0.788,79,0.694,80,1.093,94,0.865,97,0.248,98,0.118,102,0.665,103,0.128,104,0.071,105,0.96,111,1.713,134,0.509,135,1.057,166,0.737,190,0.009,191,0.009,215,1.692,221,0.584,242,1.643,244,1.312,272,1.456,288,2.683,292,1.263,298,1.014,300,1.093,327,1.407,407,2.478,409,2.752,410,2.008,418,1.819,423,1.535,430,2.248,435,2.747,436,2.12,453,2.743,477,1.535,487,2.878,492,2.878,495,2.008,496,3.008,497,2.859,498,2.859,499,2.859,500,2.859,501,1.713,563,3.252,564,3.252,565,3.008,566,3.252,574,4.889,575,4.362,576,2.123,577,5.059,578,5.059,579,1.939,580,6.824,581,4.591,582,3.174,583,3.174,584,2.744,585,3.174,586,3.174,587,3.174,588,3.174,589,1.619,590,2.716,591,2.744,592,2.11,593,2.08,594,2.08,595,2.609,596,3.968,597,2.478,598,2.744,599,2.744,600,2.249,601,3.968,602,3.968,603,2.744,604,3.968,605,2.744,606,2.744,607,2.744,608,2.744,609,2.744,610,4.662,611,6.547,612,2.744,613,4.662,614,6.778,615,2.744,616,1.619,617,1.105,618,1.713,619,3.968,620,2.744,621,2.744,622,2.744,623,6.173,624,2.744,625,2.744,626,6.173,627,3.968,628,5.108,629,3.968,630,3.968,631,2.46,632,3.968,633,3.968,634,1.939,635,2.744,636,2.744,637,4.181,638,2.46,639,3.968,640,3.968,641,2.46,642,2.46,643,2.744,644,2.744,645,4.86,646,2.46,647,2.744,648,2.744,649,2.46,650,2.744,651,2.744,652,2.46,653,2.744,654,2.744,655,2.46,656,2.744,657,2.744,658,2.46,659,2.744,660,2.744,661,2.744,662,3.968,663,3.252,664,2.744,665,2.744,666,2.744]],["title/components/AlarmComponent.html",[0,0.178,130,0.454]],["body/components/AlarmComponent.html",[0,0.358,1,0.586,2,0.113,3,0.082,4,0.67,5,0.699,6,0.641,7,0.066,11,0.18,12,0.641,13,0.754,17,1.953,19,0.787,20,0.911,22,0.699,23,1.279,24,1.22,25,1.036,26,0.787,28,0.787,30,0.271,31,0.787,32,1.482,34,0.584,38,0.989,40,1.711,41,0.75,42,0.571,47,0.598,49,0.533,50,0.586,52,0.017,53,0.669,54,0.734,55,0.829,58,0.774,66,1.613,67,1.636,69,2.484,71,0.655,72,1.785,73,1.674,75,1.953,77,1.381,79,1.073,80,1.168,87,0.484,94,0.787,95,2.811,97,0.206,98,0.13,102,0.73,103,0.137,104,0.089,105,0.533,106,1.41,117,1.44,119,0.415,120,0.985,121,0.985,122,0.943,123,1.238,124,0.699,125,0.985,126,0.559,127,0.699,128,0.559,129,0.699,130,0.734,131,0.699,132,0.586,133,0.699,134,0.559,135,0.857,136,1.238,137,0.559,138,0.699,139,0.586,140,1.14,141,0.586,142,1.14,143,0.586,144,1.14,145,0.586,146,0.699,147,0.586,148,0.699,149,0.586,150,0.67,151,0.586,152,0.699,153,0.586,154,0.586,155,0.559,156,0.699,157,0.586,158,0.586,159,0.699,160,0.559,161,0.699,162,0.586,163,0.533,164,0.699,165,0.533,166,0.989,167,0.985,168,0.533,169,0.641,170,0.586,171,1.032,172,0.641,173,1.044,174,0.559,175,0.699,176,0.586,177,0.393,178,0.613,179,0.586,180,0.825,181,0.699,182,0.586,183,0.586,184,0.586,185,0.533,186,0.586,187,0.586,188,0.67,189,0.699,190,0.01,191,0.01,221,0.902,225,2.68,242,1.649,244,1.225,271,1.605,272,1.451,282,2.255,300,0.829,327,0.829,360,1.162,407,1.88,409,2.898,410,1.524,411,1.685,423,1.685,430,1.866,435,1.953,436,1.735,461,3.721,487,2.046,492,2.046,495,2.146,497,2.146,498,2.146,499,2.146,500,2.146,501,1.88,565,2.283,592,2.255,667,2.701,668,2.697,669,4.241,670,4.241,671,5.827,672,4.402,673,5.679,674,4.909,675,4.909,676,6.657,677,4.909,678,4.024,679,5.094,680,4.906,681,3.484,682,2.811,683,3.484,684,3.484,685,4.368,686,4.368,687,3.215,688,3.476,689,3.484,690,5.329,691,3.484,692,3.484,693,4.906,694,3.484,695,2.283,696,3.484,697,3.484,698,4.402,699,3.484,700,4.241,701,4.241,702,4.241,703,2.997,704,4.241,705,2.701,706,1.325,707,2.701,708,3.012]],["title/components/AlarmHeaderComponent.html",[0,0.178,132,0.641]],["body/components/AlarmHeaderComponent.html",[0,0.361,1,0.55,2,0.107,3,0.077,4,0.629,5,0.657,6,0.602,7,0.062,11,0.169,12,0.602,13,0.7,17,2.629,19,0.754,20,0.881,22,0.657,23,1.273,24,1.215,25,0.789,26,0.754,28,0.754,30,0.254,34,0.714,38,0.962,40,1.687,41,0.755,42,0.552,47,0.608,49,0.719,50,0.789,52,0.017,53,0.716,54,0.39,55,0.685,58,0.756,66,1.166,67,1.566,71,0.72,72,2.403,73,1.785,75,2.629,77,1.688,79,1.027,80,1.118,87,0.455,94,0.962,97,0.197,98,0.122,102,0.686,103,0.092,104,0.084,107,0.922,111,3.236,112,2.202,113,2.831,117,1.378,118,2.001,119,0.39,120,0.943,121,0.943,122,0.902,123,1.204,124,0.657,125,0.943,126,0.526,127,0.657,128,0.526,129,0.657,130,0.39,131,0.657,132,1.008,133,0.657,134,0.526,135,0.833,136,1.204,137,0.526,138,0.657,139,0.55,140,1.102,141,0.55,142,1.102,143,0.55,144,1.102,145,0.55,146,0.657,147,0.55,148,0.657,149,0.55,150,0.629,151,0.55,152,0.657,153,0.55,154,0.55,155,0.526,156,0.657,157,0.55,158,0.55,159,0.657,160,0.526,161,0.657,162,0.55,163,0.501,164,0.657,165,0.501,166,0.881,167,0.943,168,0.501,169,0.602,170,0.55,171,1.016,172,0.602,173,1.009,174,0.526,175,0.657,176,0.55,177,0.369,178,0.576,179,0.55,180,0.789,181,0.657,182,0.55,183,0.55,184,0.55,185,0.501,186,0.55,187,0.55,188,0.629,189,0.657,190,0.013,191,0.01,242,1.801,244,1.11,260,2.9,267,1.786,271,1.687,272,1.338,277,1.322,288,1.304,360,1.566,396,4.059,423,1.584,441,2.158,486,2.32,631,2.539,634,3.353,637,4.255,638,2.539,641,2.539,642,2.539,645,4.92,646,2.539,649,2.539,652,2.539,655,2.539,658,2.539,668,2.054,672,4.648,674,5.183,675,5.183,678,3.889,679,3.327,685,3.327,686,4.68,687,3.077,688,3.327,709,6.292,710,5.642,711,2.831,712,4.68,713,4.695,714,4.695,715,5.996,716,6.347,717,6.347,718,4.695,719,3.275,720,4.059,721,5.183,722,4.695,723,3.275,724,5.996,725,3.275,726,3.275,727,4.695,728,4.695,729,4.059,730,3.275,731,4.695,732,3.327,733,3.275,734,3.275,735,3.275,736,5.489,737,4.695,738,4.695,739,3.275,740,4.695,741,4.695,742,4.695,743,5.996,744,4.695,745,3.275,746,4.695,747,3.275,748,4.695]],["title/classes/AlarmImageSet.html",[104,0.05,682,1.591]],["body/classes/AlarmImageSet.html",[0,0.344,2,0.134,3,0.096,7,0.078,11,0.284,13,0.789,17,1.634,19,0.659,20,0.881,23,0.659,24,0.629,26,0.659,28,0.659,30,0.319,31,0.881,32,1.667,38,0.659,40,1.687,41,0.755,42,0.552,47,0.594,49,0.841,50,0.923,51,0.722,52,0.017,53,0.586,54,0.887,55,0.802,58,0.844,66,1.797,67,1.369,69,1.796,73,1.364,75,1.634,79,0.898,80,0.977,94,0.659,95,2.353,97,0.23,98,0.153,102,0.861,103,0.154,104,0.091,105,0.629,106,1.019,117,1.205,130,0.489,166,0.659,190,0.011,191,0.011,221,0.755,225,2.855,242,1.573,244,1.337,271,0.977,272,1.508,300,1.307,327,1.307,407,2.964,409,3.514,410,2.402,411,2.656,423,1.986,430,1.562,435,2.821,436,1.546,461,4.055,487,2.956,492,2.956,495,1.796,497,3.1,498,3.1,499,3.1,500,3.1,501,2.216,592,1.887,667,3.183,668,2.402,669,3.549,670,3.549,671,4.748,676,6.836,677,3.549,678,2.909,679,4.385,682,2.956,685,2.909,686,2.909,687,2.69,688,2.909,690,4.748,700,3.549,701,3.549,702,3.549,703,2.508,704,3.549,705,4.257,706,2.089,707,4.257,708,3.549,749,5.492,750,4.106,751,4.106,752,4.106,753,4.106,754,4.106,755,4.106,756,4.106]],["title/classes/AlarmItemFlatNode.html",[104,0.05,757,2.704]],["body/classes/AlarmItemFlatNode.html",[0,0.305,2,0.093,3,0.1,6,1.364,7,0.081,8,3.992,11,0.148,13,0.605,17,1.144,19,0.461,20,0.685,23,0.461,24,0.44,25,1.012,26,0.461,28,0.461,30,0.223,31,0.685,38,0.461,40,1.016,41,0.702,47,0.438,49,0.653,52,0.017,53,0.482,54,0.671,56,0.552,66,1.566,69,1.257,71,0.72,72,2.607,73,1.666,75,2.243,77,1.93,79,0.934,87,0.593,94,0.685,97,0.281,98,0.159,102,0.602,103,0.142,104,0.075,105,1.128,106,0.713,107,2.101,112,1.697,117,0.843,128,0.461,155,0.904,177,0.756,190,0.012,191,0.009,215,1.625,221,0.528,223,2.796,224,1.32,229,2.917,230,2.726,237,3.765,239,4.89,244,1.012,262,1.755,266,1.755,267,2.4,268,2.852,269,2.227,271,0.684,272,1.083,277,1.201,282,2.899,288,2.6,292,1.144,298,0.918,300,1.632,352,2.598,360,0.958,383,3.992,410,1.867,427,3.023,429,2.445,430,1.093,432,1.551,453,2.76,454,3.607,483,3.023,537,3.023,557,2.036,576,1.917,589,2.177,695,2.796,757,5.368,758,2.227,759,4.89,760,4.857,761,6.969,762,5.408,763,6.521,764,2.873,765,2.873,766,2.873,767,3.336,768,3.689,769,0.843,770,2.484,771,2.227,772,3.689,773,2.484,774,3.689,775,3.689,776,2.227,777,2.484,778,2.726,779,1.466,780,1.39,781,4.628,782,2.484,783,2.484,784,2.484,785,2.227,786,2.484,787,2.484,788,4.871,789,3.308,790,1.551,791,2.227,792,2.484,793,4.401,794,2.484,795,2.227,796,2.484,797,2.484,798,2.484,799,4.401,800,2.484,801,2.484,802,2.227,803,2.484,804,2.227,805,2.484,806,2.484,807,2.484,808,2.484,809,2.036,810,2.484,811,3.689,812,2.484,813,3.689,814,2.484,815,2.484,816,3.689,817,2.484,818,2.484,819,2.484,820,3.308,821,2.484,822,2.484,823,2.484,824,2.484,825,2.484,826,2.227,827,2.484,828,4.401,829,2.484,830,2.227,831,2.484,832,3.689,833,2.607,834,2.484,835,2.484,836,2.484,837,2.484,838,2.484,839,2.484,840,2.484,841,3.308,842,3.689,843,2.484,844,3.308,845,2.484,846,2.484,847,2.484,848,2.484,849,2.484,850,2.484,851,2.484,852,2.484,853,2.484,854,2.484,855,2.484,856,2.484,857,3.689,858,2.484,859,2.484,860,2.227,861,3.689,862,2.484,863,3.946,864,5.205,865,2.484,866,4.871,867,2.484,868,3.689,869,2.484,870,2.484,871,3.308,872,2.484,873,2.227,874,5.8,875,2.484,876,3.689,877,2.484,878,2.484,879,2.484,880,3.689,881,2.484,882,2.484,883,3.308,884,6.194,885,2.484,886,4.871,887,2.484,888,3.689,889,2.227,890,2.484,891,4.401,892,4.871,893,2.484,894,2.484,895,2.484,896,2.484,897,2.484,898,1.646,899,2.484,900,2.484,901,2.484,902,2.484,903,2.484,904,2.484,905,2.484,906,2.484,907,2.484,908,2.484,909,2.484,910,2.484]],["title/classes/AlarmItemNode.html",[104,0.05,781,2.704]],["body/classes/AlarmItemNode.html",[0,0.306,2,0.094,3,0.101,6,1.366,7,0.082,8,3.627,11,0.15,13,0.608,17,1.154,19,0.465,20,0.69,23,0.465,24,0.444,25,1.016,26,0.465,28,0.465,30,0.225,31,0.69,38,0.465,40,1.023,41,0.707,47,0.398,49,0.658,52,0.017,53,0.484,54,0.609,56,0.557,66,1.572,69,1.269,71,0.721,72,2.543,73,1.627,75,2.253,77,1.894,79,0.94,87,0.597,94,0.69,97,0.282,98,0.16,102,0.608,103,0.143,104,0.075,105,1.13,106,0.72,107,2.104,112,1.707,117,0.851,128,0.465,155,0.908,177,0.758,190,0.012,191,0.009,215,1.632,221,0.533,223,2.816,224,1.333,229,2.933,230,2.738,237,3.632,239,5.42,244,1.016,262,1.772,266,1.772,267,2.492,268,2.858,269,2.248,271,0.69,272,1.088,277,1.21,282,2.909,288,2.608,292,1.154,298,0.926,300,1.636,352,2.193,360,0.967,383,3.627,410,1.88,427,3.045,429,2.462,430,1.103,432,1.565,453,2.769,454,3.627,483,3.045,537,3.045,557,2.055,576,1.923,589,2.193,695,2.816,757,5.351,758,2.248,759,4.685,760,4.869,761,6.968,762,4.685,763,6.328,767,3.354,768,3.715,769,0.851,770,2.507,771,2.248,772,3.715,773,2.507,774,3.715,775,3.715,776,2.248,777,2.507,778,2.738,779,1.48,780,1.403,781,4.954,782,2.507,783,2.507,784,2.507,785,2.248,786,2.507,787,2.507,788,4.893,789,3.331,790,1.565,791,2.248,792,2.507,793,4.425,794,2.507,795,2.248,796,2.507,797,2.507,798,2.507,799,4.425,800,2.507,801,2.507,802,2.248,803,2.507,804,2.248,805,2.507,806,2.507,807,2.507,808,2.507,809,2.055,810,2.507,811,3.715,812,2.507,813,3.715,814,2.507,815,2.507,816,3.715,817,2.507,818,2.507,819,2.507,820,3.331,821,2.507,822,2.507,823,2.507,824,2.507,825,2.507,826,2.248,827,2.507,828,4.425,829,2.507,830,2.248,831,2.507,832,3.715,833,2.625,834,2.507,835,2.507,836,2.507,837,2.507,838,2.507,839,2.507,840,2.507,841,3.331,842,3.715,843,2.507,844,3.331,845,2.507,846,2.507,847,2.507,848,2.507,849,2.507,850,2.507,851,2.507,852,2.507,853,2.507,854,2.507,855,2.507,856,2.507,857,3.715,858,2.507,859,2.507,860,2.248,861,3.715,862,2.507,863,3.968,864,5.225,865,2.507,866,4.893,867,2.507,868,3.715,869,2.507,870,2.507,871,3.331,872,2.507,873,2.248,874,5.816,875,2.507,876,3.715,877,2.507,878,2.507,879,2.507,880,3.715,881,2.507,882,2.507,883,3.331,884,6.206,885,2.507,886,4.893,887,2.507,888,3.715,889,2.248,890,2.507,891,4.425,892,4.893,893,2.507,894,2.507,895,2.507,896,2.507,897,2.507,898,1.662,899,2.507,900,2.507,901,2.507,902,2.507,903,2.507,904,2.507,905,2.507,906,2.507,907,2.507,908,2.507,909,2.507,910,2.507,911,2.9,912,2.9]],["title/classes/AntennaConfig.html",[104,0.05,913,2.187]],["body/classes/AntennaConfig.html",[0,0.284,2,0.129,3,0.093,7,0.076,11,0.205,13,0.54,30,0.417,31,0.862,32,1.613,34,0.473,41,0.735,42,0.399,47,0.529,49,0.608,50,0.667,52,0.017,54,0.724,56,1.253,58,0.639,61,1.444,67,1.79,71,0.508,73,0.985,77,1.511,80,1.621,87,0.845,94,1.126,97,0.301,98,0.148,102,0.832,103,0.15,104,0.08,105,0.608,106,1.333,107,1.916,130,0.473,135,1.109,171,0.951,177,0.605,185,0.931,190,0.011,191,0.011,193,1.824,222,3.084,224,2.467,225,1.953,233,3.284,235,3.873,244,1.278,254,2.274,260,1.92,277,2.124,289,2.942,300,1.278,334,3.675,358,0.906,385,1.51,410,1.736,435,2.137,436,1.975,447,1.655,453,2.348,477,1.92,487,2.239,492,2.239,495,2.348,497,2.348,498,2.348,499,2.348,500,2.348,576,2.06,590,1.824,595,3.152,597,2.142,616,2.025,617,2.269,668,2.978,682,2.839,706,2.042,769,1.576,778,3.152,779,2.025,780,1.92,913,3.734,914,3.077,915,4.27,916,3.969,917,3.076,918,3.969,919,3.969,920,2.425,921,2.425,922,1.58,923,2.942,924,2.601,925,2.425,926,2.425,927,3.077,928,2.142,929,3.077,930,2.601,931,3.518,932,3.431,933,2.425,934,3.431,935,3.431,936,2.025,937,3.431,938,3.431,939,3.431,940,2.601,941,2.812,942,3.28,943,2.142,944,2.142,945,3.804,946,3.431,947,2.812,948,2.425,949,3.431,950,3.431,951,3.431,952,3.431,953,3.431,954,3.431,955,3.431,956,3.431,957,3.431,958,2.812,959,2.812,960,3.431,961,2.812,962,2.812,963,3.431,964,4.448,965,4.27,966,5.634,967,4.27,968,3.804,969,3.804,970,3.431]],["title/components/AntennaMarkerComponent.html",[0,0.178,134,0.612]],["body/components/AntennaMarkerComponent.html",[0,0.312,1,0.438,2,0.085,3,0.061,4,0.501,5,0.523,6,0.479,7,0.05,11,0.248,12,0.479,13,0.764,19,0.636,20,0.77,22,0.523,23,1.25,24,1.193,25,0.666,26,0.636,28,0.636,30,0.202,31,0.636,32,1.504,34,0.472,38,0.861,40,1.589,41,0.717,42,0.399,47,0.584,49,0.735,50,0.807,51,0.697,52,0.017,53,0.575,54,0.776,55,0.579,56,1.349,58,0.687,61,1.746,66,1.332,67,1.322,69,1.14,71,0.704,73,0.647,79,0.868,80,1.277,87,0.551,94,0.861,97,0.225,98,0.097,102,0.546,103,0.111,104,0.052,105,0.884,111,1.407,119,0.31,120,0.796,121,0.796,122,0.762,123,1.077,124,0.523,125,0.796,126,0.418,127,0.523,128,0.418,129,0.523,130,0.31,131,0.523,132,0.438,133,0.523,134,0.861,135,1.09,136,1.077,137,0.418,138,0.523,139,0.438,140,0.964,141,0.438,142,0.964,143,0.438,144,0.964,145,0.438,146,0.523,147,0.438,148,0.523,149,0.438,150,0.501,151,0.438,152,0.523,153,0.438,154,0.438,155,0.418,156,0.523,157,0.438,158,0.438,159,0.523,160,0.418,161,0.523,162,0.438,163,0.399,164,0.523,165,0.399,166,0.636,167,0.796,168,0.399,169,0.479,170,0.438,171,0.951,172,0.479,173,0.883,174,0.418,175,0.523,176,0.438,177,0.294,178,0.458,179,0.438,180,0.666,181,0.523,182,0.438,183,0.438,184,0.438,185,0.399,186,0.438,187,0.438,188,0.501,189,0.523,190,0.008,191,0.008,215,1.936,221,0.729,242,1.69,244,1.144,271,1.374,272,1.379,288,2.826,292,1.579,298,0.832,300,0.944,327,1.374,407,1.407,409,2.023,410,1.14,418,2.272,423,1.261,430,2.478,435,2.136,436,2.019,453,2.765,477,1.918,487,2.237,492,2.237,495,2.347,496,3.516,497,2.1,498,2.1,499,2.1,500,2.1,501,1.407,563,1.846,564,1.846,565,1.708,566,1.846,574,5.129,575,4.518,576,2.195,577,5.24,578,5.24,579,1.592,580,6.697,589,1.33,590,3.067,591,2.253,592,2.466,593,2.599,594,2.599,595,3.058,596,4.638,597,2.896,598,3.428,599,3.428,600,3.401,601,4.638,602,4.638,603,3.428,604,4.638,605,4.15,606,3.428,607,4.15,608,3.428,609,4.15,610,5.256,611,6.592,612,4.638,613,5.256,614,6.769,615,4.638,616,2.449,617,1.671,618,2.141,619,5.256,620,2.253,621,3.428,622,4.638,623,5.884,624,2.253,625,2.253,626,5.884,627,3.428,628,4.638,629,3.428,630,3.428,631,2.02,632,3.428,633,3.428,634,1.592,635,2.253,636,2.253,637,3.721,638,2.02,639,3.428,640,3.428,641,2.02,642,2.02,643,2.253,644,2.253,645,4.475,646,2.02,647,2.253,648,2.253,649,2.02,650,2.253,651,2.253,652,2.02,653,2.253,654,2.253,655,2.02,656,2.253,657,2.253,658,2.02,659,2.253,660,2.253,661,2.253,662,3.428,663,2.81,664,2.253,665,2.253,666,2.253,971,3.966,972,2.253,973,3.966,974,2.606,975,2.606,976,2.606,977,2.606,978,2.606,979,2.606,980,2.606,981,2.606,982,2.606,983,2.606,984,2.606,985,2.606,986,2.606,987,2.606,988,2.606]],["title/components/AntennasComponent.html",[0,0.178,137,0.612]],["body/components/AntennasComponent.html",[0,0.365,1,0.728,2,0.141,3,0.102,4,0.832,5,0.869,6,0.796,7,0.082,11,0.224,12,0.796,13,0.678,15,2.488,19,0.913,20,1.02,22,0.869,23,1.296,24,1.236,25,0.956,26,0.913,28,0.913,30,0.336,31,0.913,34,0.677,38,1.083,41,0.601,42,0.639,47,0.524,49,0.871,50,0.956,51,0.761,52,0.017,53,0.694,54,0.677,55,0.632,58,0.515,71,0.538,79,1.244,87,0.883,94,1.083,97,0.238,98,0.161,103,0.121,104,0.057,105,0.663,112,1.897,119,0.515,120,1.142,121,1.142,122,1.093,123,1.355,124,0.869,125,1.142,126,0.695,127,0.869,128,0.695,129,0.869,130,0.515,131,0.869,132,0.728,133,0.869,134,0.695,135,1.034,136,1.355,137,1.083,138,0.869,139,0.728,140,1.276,141,0.728,142,1.276,143,0.728,144,1.276,145,0.728,146,0.869,147,0.728,148,0.869,149,0.728,150,0.832,151,0.728,152,0.869,153,0.728,154,0.728,155,0.695,156,0.869,157,0.728,158,0.728,159,0.869,160,0.695,161,0.869,162,0.728,163,0.663,164,0.869,165,0.663,166,0.695,167,1.142,168,0.663,169,0.796,170,0.728,171,1.086,172,0.796,173,1.168,174,0.695,175,0.869,176,0.728,177,0.488,178,0.761,179,0.728,180,0.956,181,0.869,182,0.728,183,0.728,184,0.728,185,0.663,186,0.728,187,0.728,188,0.832,189,0.869,190,0.012,191,0.012,221,1.323,242,1.354,250,2.752,266,3.475,268,2.686,270,5.231,271,1.031,272,0.832,576,1.981,595,3.264,913,4.263,989,3.743,990,4.41,991,5.689,992,5.689,993,5.689,994,5.689,995,5.577,996,5.689,997,5.689,998,4.33,999,5.689,1000,4.33,1001,4.03,1002,4.918,1003,2.837,1004,3.356]],["title/components/AntennasMapComponent.html",[0,0.178,139,0.641]],["body/components/AntennasMapComponent.html",[0,0.342,1,0.409,2,0.079,3,0.145,4,0.468,5,0.488,6,0.447,7,0.046,11,0.329,12,0.447,13,0.684,15,1.064,19,0.604,20,0.738,22,0.488,23,1.243,24,1.186,25,0.632,26,0.604,28,0.604,30,0.435,31,0.604,32,1.62,34,0.704,38,0.831,39,2.298,40,1.232,41,0.73,42,0.378,47,0.588,49,0.857,50,0.632,51,1.085,52,0.017,53,0.696,54,0.876,55,0.9,56,1.414,57,2.794,58,0.29,66,1.756,71,0.716,72,2.152,73,1.532,77,1.666,79,0.823,80,1.716,87,0.639,92,2.156,93,2.031,94,0.738,97,0.248,98,0.09,102,0.51,103,0.068,104,0.074,105,1.002,107,1.575,112,1.866,117,1.104,119,0.29,120,0.755,121,1.342,122,0.723,123,1.039,124,0.488,125,0.755,126,0.39,127,0.488,128,0.39,129,0.488,130,0.29,131,0.488,132,0.409,133,0.488,134,0.39,135,1.047,136,1.039,137,0.39,138,0.488,139,0.87,140,0.923,141,0.409,142,0.923,143,0.409,144,0.923,145,0.409,146,0.488,147,0.409,148,0.488,149,0.409,150,0.468,151,0.409,152,0.488,153,0.409,154,0.409,155,0.39,156,0.488,157,0.409,158,0.409,159,0.488,160,0.39,161,0.488,162,0.409,163,0.373,164,0.488,165,0.373,166,0.39,167,0.755,168,0.373,169,0.447,170,0.409,171,0.93,172,0.447,173,0.846,174,0.39,175,0.488,176,0.409,177,0.696,178,0.428,179,0.409,180,0.632,181,0.488,182,0.409,183,0.409,184,0.409,185,0.373,186,0.409,187,0.409,188,0.468,189,0.488,190,0.008,191,0.008,198,2.031,215,1.91,221,0.692,226,1.369,244,1.221,267,2.542,268,2.537,271,1.557,272,1.284,277,1.944,282,2.379,292,0.969,298,0.777,300,1.095,414,2.916,423,1.177,440,2.916,447,1.918,477,1.82,575,4.604,576,2.16,589,2.641,590,3.006,592,2.719,595,3.693,600,2.666,616,1.92,617,2.59,618,2.031,703,3.615,706,2.424,767,3.014,778,1.177,779,1.241,780,1.177,913,4.282,917,2.156,920,1.486,921,1.486,931,4.379,933,3.162,944,2.794,972,2.103,995,3.566,1003,1.594,1004,4.012,1005,5.842,1006,2.103,1007,3.252,1008,3.252,1009,5.176,1010,4.474,1011,4.474,1012,5.176,1013,4.322,1014,4.474,1015,4.474,1016,4.474,1017,3.762,1018,1.82,1019,5.176,1020,3.762,1021,3.762,1022,2.916,1023,4.6,1024,3.762,1025,3.566,1026,3.877,1027,3.762,1028,2.433,1029,2.433,1030,3.762,1031,2.433,1032,3.762,1033,6.683,1034,2.465,1035,2.433,1036,2.433,1037,3.762,1038,2.433,1039,6.169,1040,4.012,1041,3.762,1042,2.433,1043,2.433,1044,3.762,1045,3.762,1046,2.433,1047,3.252,1048,2.433,1049,3.762,1050,2.433,1051,2.433,1052,2.433,1053,2.433,1054,3.252,1055,2.433,1056,3.762,1057,2.433,1058,2.433,1059,3.667,1060,2.433,1061,2.433,1062,2.433,1063,2.433,1064,2.916,1065,3.762,1066,2.433,1067,2.433,1068,2.433,1069,2.433,1070,2.433,1071,2.433,1072,2.433,1073,2.433,1074,2.433,1075,2.433,1076,2.433,1077,2.433,1078,2.433,1079,2.433,1080,2.433,1081,3.566,1082,2.433,1083,2.433,1084,2.433,1085,2.433,1086,2.433,1087,2.433,1088,2.433,1089,2.433,1090,2.433,1091,3.762,1092,2.433,1093,1.594,1094,2.433,1095,3.762,1096,2.433,1097,2.433,1098,2.103,1099,2.103,1100,2.433]],["title/modules/AntennasModule.html",[358,0.871,928,2.06]],["body/modules/AntennasModule.html",[2,0.165,3,0.119,7,0.096,52,0.017,97,0.332,98,0.188,103,0.2,104,0.067,119,0.602,134,1.203,135,0.994,137,1.203,139,1.26,141,1.26,143,1.323,190,0.013,191,0.013,226,2.487,358,1.435,360,1.687,361,2.991,362,2.214,368,3.444,369,3.444,370,3.444,371,2.888,372,2.326,373,2.214,375,2.888,376,3.207,377,2.326,389,2.11,390,2.732,391,2.9,392,2.9,393,2.9,576,1.486,577,3.586,578,3.586,590,3.444,928,4.364,1003,3.316,1005,3.923,1101,4.375,1102,4.375,1103,4.375,1104,4.375,1105,4.375,1106,4.294,1107,5.061,1108,5.061,1109,4.375,1110,3.923,1111,4.375,1112,3.923,1113,4.375,1114,3.923,1115,3.923]],["title/injectables/AntennasService.html",[590,1.754,769,1.12]],["body/injectables/AntennasService.html",[0,0.318,2,0.117,3,0.084,7,0.068,11,0.259,13,0.628,30,0.448,31,0.804,32,1.62,34,0.744,41,0.707,42,0.504,47,0.592,49,0.767,50,0.842,51,0.631,52,0.017,53,0.34,54,0.831,55,0.524,56,1.369,58,0.596,61,1.822,67,1.197,71,0.644,73,0.891,77,1.624,80,1.78,87,0.946,94,1.121,97,0.293,98,0.133,102,0.752,103,0.14,104,0.066,105,0.549,106,1.551,107,1.849,130,0.427,135,1.099,171,0.959,177,0.704,185,0.884,190,0.01,191,0.01,193,2.302,222,3.018,224,2.87,225,1.822,233,3.115,235,3.77,244,1.197,254,2.87,260,2.423,271,1.374,272,1.109,277,2.064,289,2.791,300,1.193,334,3.673,358,1.143,385,1.365,410,2.191,435,1.994,436,2.005,447,2.089,453,2.732,477,2.423,487,2.089,492,2.089,495,2.524,497,2.191,498,2.191,499,2.191,500,2.191,576,1.998,590,2.302,595,1.736,597,2.704,616,2.556,617,2.48,668,3.117,682,3.018,706,1.365,769,1.694,778,3.292,779,1.831,780,1.736,913,3.307,914,2.782,915,3.282,917,2.056,920,2.193,921,2.193,922,1.429,923,3.178,924,2.352,925,2.193,926,2.193,927,2.782,928,2.704,929,2.782,930,2.352,931,3.781,932,5.399,933,3.06,934,5.399,935,4.33,936,2.556,937,5.399,938,5.399,939,5.399,940,3.282,941,4.425,942,3.526,943,2.704,944,2.704,945,3.549,946,3.102,947,2.543,948,3.06,949,5.399,950,3.102,951,3.102,952,3.102,953,3.102,954,3.102,955,3.102,956,3.102,957,3.102,958,4.425,959,2.543,960,3.102,961,2.543,962,4.425,963,3.102,964,4.391,965,4.092,966,5.399,967,4.092,968,3.549,969,3.549,970,3.102,1116,3.102,1117,5.009,1118,3.589,1119,3.589,1120,3.589,1121,3.589,1122,3.589,1123,3.589,1124,5.009,1125,3.589,1126,3.589,1127,3.589]],["title/components/AntennasSidebarComponent.html",[0,0.178,141,0.641]],["body/components/AntennasSidebarComponent.html",[0,0.337,1,0.499,2,0.097,3,0.07,4,0.57,5,0.596,6,0.546,7,0.056,11,0.341,12,0.546,13,0.725,15,2.27,19,0.701,20,0.833,22,0.596,23,1.264,24,1.206,25,0.735,26,0.701,28,0.701,30,0.231,31,0.701,32,1.338,34,0.52,38,0.919,39,2.67,40,1.363,41,0.73,42,0.439,47,0.579,49,0.876,50,0.735,51,1.161,52,0.017,53,0.69,54,0.837,55,0.963,56,1.302,58,0.353,66,1.085,67,1.457,71,0.732,72,1.887,73,1.085,77,1.23,79,0.956,80,1.363,87,0.795,92,3.28,94,1.024,97,0.256,98,0.11,102,0.622,103,0.083,104,0.039,105,1.037,106,0.737,112,2.128,117,1.283,119,0.353,120,0.877,121,0.877,122,0.84,123,1.149,124,0.596,125,0.877,126,0.476,127,0.596,128,0.476,129,0.596,130,0.353,131,0.596,132,0.499,133,0.596,134,0.476,135,1.098,136,1.149,137,0.476,138,0.596,139,0.499,140,1.042,141,0.962,142,1.042,143,0.499,144,1.042,145,0.499,146,0.596,147,0.499,148,0.596,149,0.499,150,0.57,151,0.499,152,0.596,153,0.499,154,0.499,155,0.476,156,0.596,157,0.499,158,0.499,159,0.596,160,0.476,161,0.596,162,0.499,163,0.454,164,0.596,165,0.454,166,0.476,167,0.877,168,0.454,169,0.546,170,0.499,171,0.988,172,0.546,173,0.954,174,0.476,175,0.596,176,0.499,177,0.335,178,0.522,179,0.499,180,0.735,181,0.596,182,0.499,183,0.499,184,0.499,185,0.454,186,0.499,187,0.499,188,0.57,189,0.596,190,0.009,191,0.009,193,2.009,198,2.359,215,2.013,216,2.769,221,0.804,242,1.52,244,1.26,250,2.114,259,2.359,260,2.114,267,2.744,268,2.871,271,0.706,272,0.57,277,1.979,298,0.948,300,0.706,327,1.04,441,2.933,447,2.164,460,3.657,575,4.524,589,2.921,590,3.403,617,2.537,618,2.359,695,2.864,767,3.4,790,2.359,913,4.297,915,2.864,931,4.438,995,4.022,1001,3.097,1003,1.944,1004,4.73,1018,2.114,1022,3.388,1034,2.864,1093,1.944,1098,4.948,1099,2.565,1110,5.741,1128,2.102,1129,3.388,1130,3.388,1131,4.371,1132,4.371,1133,5.724,1134,3.097,1135,5.724,1136,5.188,1137,2.967,1138,3.113,1139,3.778,1140,3.751,1141,3.257,1142,3.388,1143,2.967,1144,3.388,1145,2.967,1146,4.371,1147,2.967,1148,4.371,1149,4.371,1150,3.388,1151,5.724,1152,4.371,1153,2.967,1154,2.967,1155,2.967,1156,3.097,1157,2.565,1158,2.359,1159,2.67,1160,3.097,1161,2.864,1162,3.097,1163,4.371,1164,2.565,1165,6.102,1166,2.967,1167,4.371,1168,2.565,1169,2.967,1170,3.778,1171,2.565,1172,2.565,1173,2.102,1174,2.565,1175,2.967,1176,2.967,1177,2.967,1178,2.967,1179,4.371,1180,4.371,1181,2.102,1182,4.371,1183,4.371,1184,4.371,1185,4.371,1186,3.097]],["title/components/AntennasSummaryComponent.html",[0,0.178,143,0.641]],["body/components/AntennasSummaryComponent.html",[0,0.343,1,0.648,2,0.125,3,0.09,4,0.741,5,0.774,6,0.709,7,0.073,11,0.31,12,0.709,13,0.739,19,0.845,20,0.962,22,0.774,23,1.287,24,1.228,25,0.885,26,0.845,28,0.845,30,0.3,31,0.845,32,1.256,34,0.627,38,1.033,41,0.725,42,0.529,47,0.541,49,0.806,50,1.082,51,0.926,52,0.017,53,0.609,54,0.713,55,0.768,56,1.369,58,0.459,71,0.686,79,1.151,80,1.533,87,0.833,94,0.962,97,0.299,98,0.143,102,0.808,103,0.108,104,0.051,105,0.986,106,1.307,119,0.459,120,1.057,121,1.057,122,1.012,123,1.293,124,0.774,125,1.057,126,0.619,127,0.774,128,0.619,129,0.774,130,0.627,131,0.774,132,0.648,133,0.774,134,0.619,135,1.079,136,1.293,137,0.619,138,0.774,139,0.648,140,1.203,141,0.648,142,1.203,143,1.082,144,1.203,145,0.648,146,0.774,147,0.648,148,0.774,149,0.648,150,0.741,151,0.648,152,0.774,153,0.648,154,0.648,155,0.619,156,0.774,157,0.648,158,0.648,159,0.774,160,0.619,161,0.774,162,0.648,163,0.59,164,0.774,165,0.59,166,0.962,167,1.057,168,0.59,169,0.709,170,0.648,171,1.085,172,0.709,173,1.102,174,0.619,175,0.774,176,0.648,177,0.435,178,0.678,179,0.648,180,0.885,181,0.774,182,0.648,183,0.648,184,0.648,185,0.59,186,0.648,187,0.648,188,0.741,189,0.774,190,0.011,191,0.011,215,1.957,216,3.115,221,0.968,244,1.133,298,1.232,327,1.253,385,1.466,430,2.002,436,1.085,441,2.959,460,3.986,463,2.526,575,4.351,590,3.555,617,2.086,618,2.841,682,1.608,732,3.729,922,1.535,936,2.686,1003,2.526,1018,1.865,1114,5.52,1134,3.729,1138,3.439,1140,4.873,1141,3.699,1156,3.729,1158,2.841,1159,3.216,1160,3.729,1161,3.449,1162,3.729,1173,2.731,1174,3.333,1181,2.731,1187,2.731,1188,3.449,1189,4.08,1190,4.08,1191,2.526,1192,3.333,1193,4.08,1194,3.333,1195,3.855,1196,3.333,1197,3.333,1198,3.855,1199,3.855,1200,3.855]],["title/components/AppComponent.html",[0,0.178,145,0.641]],["body/components/AppComponent.html",[0,0.333,1,0.567,2,0.11,3,0.079,4,0.649,5,0.963,6,0.621,7,0.064,11,0.248,12,0.621,13,0.561,19,0.77,20,0.896,22,0.678,23,1.276,24,1.217,25,0.806,26,0.77,28,0.77,30,0.262,31,0.77,32,1.399,33,3.154,34,0.571,38,0.976,41,0.65,42,0.482,47,0.555,51,0.844,52,0.017,53,0.575,54,0.794,55,0.7,56,1.319,58,0.402,59,4.147,60,3.102,62,3.466,65,1.633,71,0.65,72,2.031,73,1.797,87,0.469,94,1.145,97,0.28,98,0.126,103,0.094,104,0.045,105,0.931,106,1.386,112,1.126,117,1.784,119,0.402,120,0.963,121,0.963,122,0.922,123,1.22,124,0.678,125,0.963,126,0.542,127,0.678,128,0.542,129,0.678,130,0.402,131,0.678,132,0.567,133,0.678,134,0.542,135,0.975,136,1.22,137,0.542,138,0.678,139,0.567,140,1.121,141,0.567,142,1.121,143,0.567,144,1.121,145,1.022,146,0.678,147,0.567,148,0.678,149,0.567,150,0.649,151,0.567,152,0.678,153,0.567,154,0.567,155,0.976,156,0.678,157,0.567,158,1.079,159,0.678,160,0.542,161,0.678,162,0.567,163,0.517,164,0.678,165,0.517,166,0.542,167,0.963,168,0.517,169,1.027,170,0.567,171,1.079,172,0.621,173,1.027,174,0.542,175,0.678,176,0.567,177,0.381,178,0.594,179,0.567,180,1.121,181,0.678,182,0.567,183,0.567,184,0.567,185,0.517,186,0.567,187,0.567,188,0.649,189,0.678,190,0.01,191,0.01,215,1.954,221,1.118,230,2.7,231,3.823,244,0.806,250,2.321,271,1.329,272,1.234,298,1.079,430,1.825,441,2.205,557,2.392,668,3.306,706,1.825,760,2.392,762,3.72,898,2.749,917,3.823,930,3.144,1026,3.144,1191,2.212,1201,2.919,1202,4.799,1203,4.799,1204,6.079,1205,6.864,1206,6.673,1207,6.079,1208,5.822,1209,4.799,1210,6.079,1211,7.238,1212,7.015,1213,3.376,1214,4.799,1215,4.799,1216,4.712,1217,4.799,1218,3.376,1219,5.255,1220,3.376,1221,3.376,1222,4.799,1223,5.255,1224,2.919,1225,4.148,1226,3.376,1227,3.376,1228,3.376,1229,5.582,1230,7.137,1231,5.582,1232,5.582,1233,5.582,1234,3.376,1235,6.079,1236,4.799,1237,6.079,1238,3.376,1239,2.212,1240,3.376,1241,2.919,1242,2.392,1243,2.392,1244,3.376,1245,3.376,1246,2.392,1247,3.376,1248,3.376,1249,6.079,1250,6.079,1251,6.079,1252,3.376,1253,3.376,1254,3.376,1255,3.376,1256,3.376,1257,3.376,1258,3.376,1259,4.799,1260,5.582,1261,6.079,1262,4.799]],["title/modules/AppModule.html",[358,0.871,1263,2.704]],["body/modules/AppModule.html",[0,0.348,2,0.142,3,0.102,7,0.083,52,0.017,97,0.337,98,0.162,101,2.22,103,0.178,104,0.058,107,1.225,117,1.675,119,0.518,126,0.916,130,0.518,135,0.605,137,0.916,145,1.296,154,1.234,155,0.698,158,0.959,160,0.916,163,0.874,168,0.975,169,0.8,171,0.635,174,0.916,190,0.012,191,0.012,216,3.081,226,2.317,228,2.349,231,3.27,296,2.493,297,2.22,358,1.454,359,3.889,360,1.451,361,2.786,362,2.786,368,3.311,369,3.311,370,3.311,371,2.623,372,2,373,1.903,375,2.623,377,2.623,385,1.655,386,4.424,387,4.424,388,4.424,389,1.814,390,2.349,391,2.493,392,2.493,393,2.493,928,3.889,1059,5.338,1106,4.128,1112,3.373,1219,4.934,1242,3.083,1243,3.083,1263,5.697,1264,3.761,1265,3.761,1266,3.761,1267,3.761,1268,4.401,1269,4.721,1270,4.721,1271,3.889,1272,4.351,1273,5.707,1274,5.707,1275,4.351,1276,4.934,1277,3.083,1278,3.761,1279,4.351,1280,4.351,1281,3.761,1282,3.761,1283,4.351,1284,4.351,1285,3.083,1286,3.373,1287,4.351,1288,4.351,1289,4.351,1290,4.351,1291,4.351,1292,5.707,1293,3.761,1294,3.373,1295,4.351,1296,4.351,1297,4.351,1298,4.351,1299,4.351,1300,4.351,1301,4.351,1302,4.351,1303,3.761,1304,4.351,1305,4.351]],["title/components/ButtonsComponent.html",[0,0.178,147,0.641]],["body/components/ButtonsComponent.html",[0,0.355,1,1.094,2,0.148,3,0.107,4,0.875,5,0.914,6,0.837,7,0.087,11,0.235,12,1.365,13,0.591,14,2.843,19,0.943,20,1.045,22,0.914,23,1.299,24,1.24,25,0.988,26,0.943,28,0.943,30,0.354,34,0.819,38,1.104,40,1.637,41,0.719,42,0.654,47,0.506,49,0.9,50,0.988,52,0.017,53,0.556,54,0.542,58,0.542,66,1.459,67,1.959,71,0.431,79,1.286,80,1.399,87,0.632,97,0.246,98,0.169,102,0.954,103,0.127,104,0.06,117,1.725,119,0.542,120,1.18,121,1.18,122,1.13,123,1.381,124,0.914,125,1.18,126,0.73,127,0.914,128,0.73,129,0.914,130,0.542,131,0.914,132,0.765,133,0.914,134,0.73,135,0.956,136,1.381,137,0.73,138,0.914,139,0.765,140,1.307,141,0.765,142,1.307,143,0.765,144,1.307,145,0.765,146,0.914,147,1.156,148,0.914,149,0.765,150,0.875,151,0.765,152,0.914,153,0.765,154,0.765,155,0.73,156,0.914,157,0.765,158,0.765,159,0.914,160,0.73,161,0.914,162,1.094,163,0.697,164,0.914,165,0.697,166,0.73,167,1.18,168,0.697,169,0.837,170,0.765,171,1.097,172,0.837,173,1.197,174,0.73,175,0.914,176,0.765,177,0.513,178,0.8,179,0.765,180,0.988,181,0.914,182,0.765,183,0.765,184,0.765,185,0.697,186,0.765,187,0.765,188,0.875,189,0.914,190,0.012,191,0.012,215,1.586,327,1.399,340,4.164,436,1.654,1306,3.934,1307,5.877,1308,5.877,1309,5.877,1310,5.877,1311,5.877,1312,5.877,1313,4.551]],["title/injectables/CdbService.html",[769,1.12,1314,2.331]],["body/injectables/CdbService.html",[0,0.274,2,0.147,3,0.106,7,0.086,11,0.303,13,0.589,14,2.835,30,0.352,31,0.94,32,1.361,34,0.698,42,0.589,47,0.576,51,1.142,52,0.017,53,0.429,54,0.539,55,0.661,56,1.444,71,0.711,80,1.635,93,3.163,97,0.311,98,0.169,103,0.127,104,0.06,105,0.694,106,1.125,107,1.276,177,0.863,190,0.012,191,0.012,193,2.693,221,1.078,224,3.519,225,2.132,271,1.395,272,1.32,289,2.835,300,1.395,327,1.395,352,2.99,389,3.305,418,3.358,429,3.358,436,1.276,453,2.564,515,4.543,576,1.33,617,2.7,706,2.229,769,1.907,778,2.192,779,2.312,780,2.192,923,3.634,924,2.969,925,2.769,926,2.769,943,3.707,944,4.055,1026,3.84,1054,5.066,1144,4.543,1314,3.58,1315,3.917,1316,6.867,1317,6.867,1318,6.867,1319,6.867,1320,6.867,1321,4.532,1322,5.86,1323,4.532,1324,4.532,1325,7.284,1326,7.284,1327,5.86,1328,5.86,1329,6.867,1330,6.867,1331,4.532,1332,5.066,1333,4.532,1334,5.86,1335,4.532,1336,4.532,1337,4.532,1338,4.532,1339,4.532,1340,3.211,1341,4.532,1342,4.532,1343,5.86,1344,4.532,1345,4.532,1346,4.532,1347,4.532,1348,4.532,1349,4.532]],["title/modules/DataModule.html",[358,0.871,368,1.754]],["body/modules/DataModule.html",[2,0.179,3,0.129,7,0.105,11,0.284,52,0.017,56,1.27,97,0.327,98,0.204,103,0.198,104,0.073,119,0.654,177,0.745,190,0.014,191,0.014,215,2.063,226,2.578,327,1.573,358,1.678,360,1.83,361,2.89,362,2.402,368,3.655,371,3.036,372,2.523,373,2.402,375,3.036,376,3.371,377,2.523,705,5.121,923,3.696,925,3.354,942,4.036,943,2.963,1138,3.899,1314,4.669,1350,4.746,1351,4.746,1352,5.49,1353,7.086,1354,4.746,1355,5.49,1356,5.49,1357,5.49]],["title/modules/HealthModule.html",[358,0.871,1268,2.331]],["body/modules/HealthModule.html",[0,0.31,2,0.18,3,0.13,7,0.106,11,0.286,52,0.017,67,2.215,97,0.325,98,0.206,103,0.206,104,0.073,119,0.66,149,1.338,150,1.368,190,0.014,191,0.014,226,2.016,327,1.582,358,1.684,360,1.848,361,3.112,362,2.424,368,3.519,370,3.519,371,3.053,372,2.547,373,2.424,375,3.053,376,3.39,377,2.547,389,2.771,392,3.176,393,3.176,1115,4.296,1268,4.847,1358,4.791,1359,4.791,1360,5.542,1361,4.791,1362,5.542,1363,4.296]],["title/components/HealthSummaryComponent.html",[0,0.178,149,0.641]],["body/components/HealthSummaryComponent.html",[0,0.344,1,0.584,2,0.113,3,0.082,4,0.668,5,0.698,6,0.639,7,0.066,11,0.293,12,0.639,13,0.677,19,0.786,20,0.91,22,0.698,23,1.279,24,1.22,25,0.823,26,0.786,28,0.786,30,0.27,31,0.786,32,1.506,34,0.583,38,0.988,41,0.734,42,0.492,47,0.566,49,0.75,50,1.035,51,0.861,52,0.017,53,0.583,54,0.773,55,0.715,56,1.183,58,0.675,71,0.669,87,0.788,94,0.91,97,0.282,98,0.129,102,0.728,103,0.097,104,0.046,105,0.868,106,1.216,119,0.414,120,0.983,121,0.983,122,0.941,123,1.236,124,0.698,125,0.983,126,0.558,127,0.698,128,0.558,129,0.698,130,0.583,131,0.698,132,0.584,133,0.698,134,0.558,135,0.856,136,1.236,137,0.558,138,0.698,139,0.584,140,1.139,141,0.584,142,1.139,143,0.584,144,1.139,145,0.584,146,0.698,147,0.584,148,0.698,149,1.035,150,1.429,151,0.584,152,0.698,153,0.584,154,0.584,155,0.558,156,0.698,157,0.584,158,0.584,159,0.698,160,0.558,161,0.698,162,0.584,163,0.532,164,0.698,165,0.532,166,0.558,167,0.983,168,0.532,169,0.639,170,0.584,171,1.063,172,0.639,173,1.043,174,0.558,175,0.698,176,0.584,177,0.392,178,0.611,179,0.584,180,0.823,181,0.698,182,0.584,183,0.584,184,0.584,185,0.532,186,0.584,187,0.584,188,0.668,189,0.698,190,0.01,191,0.01,215,1.966,216,2.978,222,2.947,235,3.814,244,1.188,277,1.378,298,1.11,300,1.466,327,1.166,385,1.322,389,2.707,411,2.369,430,1.863,435,1.949,436,1.948,441,2.83,460,3.859,463,2.277,487,2.042,492,2.042,495,2.481,497,2.142,498,2.142,499,2.142,500,2.142,668,3.091,682,2.996,922,1.383,936,2.499,948,2.992,964,4.372,965,4.035,967,4.035,1018,1.681,1134,3.47,1138,3.312,1140,4.035,1141,3.437,1156,3.47,1158,2.643,1159,2.992,1160,3.47,1161,3.209,1162,3.47,1173,2.462,1181,2.462,1187,2.462,1188,3.209,1189,3.796,1190,3.796,1191,2.277,1193,3.796,1363,5.57,1364,6.211,1365,4.035,1366,6.158,1367,6.158,1368,6.158,1369,4.897,1370,3.475,1371,3.475,1372,3.004,1373,4.233,1374,3.475,1375,3.475,1376,3.475,1377,3.475,1378,3.475,1379,3.475,1380,3.475,1381,3.475,1382,7.63,1383,4.363,1384,3.796,1385,3.796,1386,3.475]],["title/injectables/HttpClientService.html",[769,1.12,923,1.846]],["body/injectables/HttpClientService.html",[2,0.134,3,0.097,7,0.078,11,0.366,30,0.32,34,0.91,42,0.623,47,0.563,51,1.274,52,0.017,53,0.685,54,0.862,55,1.057,56,1.058,57,2.971,66,1.366,69,2.407,71,0.741,97,0.277,98,0.153,103,0.115,104,0.054,105,1.109,106,1.539,107,1.862,117,1.616,177,0.872,190,0.011,191,0.011,224,3.514,225,2.914,233,4.127,244,1.276,268,2.191,277,1.549,300,1.575,322,4.648,425,3.899,453,2.894,461,2.699,706,2.093,712,4.687,769,1.819,809,2.918,844,5.129,923,2.662,942,4.042,943,3.829,1216,5.836,1354,4.758,1387,6.362,1388,3.56,1389,5.504,1390,5.504,1391,5.719,1392,5.504,1393,6.616,1394,6.616,1395,5.504,1396,4.119,1397,4.119,1398,5.504,1399,4.119,1400,7.646,1401,5.504,1402,4.119,1403,5.504,1404,4.119,1405,6.198,1406,5.504,1407,5.504,1408,4.119,1409,5.504,1410,4.119,1411,5.504,1412,4.119,1413,5.504,1414,5.504,1415,4.758,1416,6.895,1417,3.193,1418,4.119,1419,4.119,1420,4.119,1421,4.119,1422,4.119,1423,4.119,1424,7.36,1425,6.616,1426,4.119,1427,4.119,1428,4.119,1429,4.119,1430,4.119]],["title/modules/IasMaterialModule.html",[358,0.871,369,1.754]],["body/modules/IasMaterialModule.html",[0,0.297,2,0.168,3,0.121,7,0.098,11,0.267,52,0.017,97,0.338,98,0.192,103,0.178,104,0.068,155,1.021,190,0.013,191,0.013,228,2.785,230,3.077,283,3.381,353,4.169,358,1.574,361,2.257,369,2.924,375,2.924,390,2.785,776,4,898,2.957,1241,4.461,1242,3.656,1431,5.16,1432,5.16,1433,6.897,1434,5.16,1435,6.897,1436,5.16,1437,6.897,1438,5.16,1439,6.897,1440,5.16,1441,6.897,1442,5.16,1443,6.897,1444,5.16,1445,6.897,1446,5.16,1447,6.897,1448,5.16,1449,6.897,1450,6.897,1451,5.16,1452,6.897,1453,5.16,1454,6.897,1455,5.16,1456,6.897,1457,6.897,1458,5.16,1459,6.897,1460,5.16,1461,6.897,1462,5.16,1463,6.897,1464,5.16,1465,6.897,1466,5.16,1467,6.897,1468,5.16,1469,4.461,1470,6.897,1471,4.461,1472,4]],["title/classes/Iasio.html",[104,0.05,1340,2.704]],["body/classes/Iasio.html",[2,0.148,3,0.107,7,0.087,11,0.377,30,0.354,31,0.944,34,0.869,41,0.651,42,0.458,47,0.584,49,0.901,50,1.095,51,1.146,52,0.017,53,0.616,54,0.905,55,0.951,63,5.05,66,1.974,67,1.962,71,0.719,72,2.592,73,1.461,77,1.283,94,1.045,95,2.612,103,0.127,104,0.098,105,1.054,107,1.937,112,1.52,180,0.766,190,0.012,191,0.012,225,2.14,237,2.461,244,1.305,277,1.656,282,3.163,300,1.551,327,1.401,334,2.461,403,6.307,407,3.176,409,3.636,410,2.574,411,2.846,415,4.561,422,5.086,432,3.176,451,4.561,452,4.168,453,3.011,454,4.168,457,3.594,501,2.461,514,3.941,515,3.534,1340,5.681,1473,3.941,1474,6.514,1475,7.296,1476,7.296,1477,7.296,1478,7.296,1479,5.883,1480,5.883,1481,5.883,1482,4.559,1483,5.883,1484,4.561,1485,4.559,1486,4.559,1487,5.883,1488,4.559,1489,5.883,1490,4.559,1491,4.559,1492,4.559,1493,4.559,1494,4.559,1495,4.559,1496,4.559,1497,4.559,1498,4.559,1499,4.559]],["title/components/LegendComponent.html",[0,0.178,151,0.641]],["body/components/LegendComponent.html",[0,0.343,1,0.579,2,0.112,3,0.081,4,0.662,5,0.692,6,0.634,7,0.066,11,0.178,12,0.634,13,0.783,19,0.781,20,0.906,22,0.692,23,1.278,24,1.219,25,0.818,26,0.781,28,0.781,30,0.268,31,0.781,34,0.579,38,0.984,41,0.743,42,0.567,47,0.581,49,0.745,50,0.818,52,0.017,53,0.461,58,0.41,65,3.77,71,0.326,87,0.479,97,0.204,98,0.128,103,0.096,104,0.046,119,0.822,120,0.977,121,0.977,122,0.936,123,1.232,124,0.692,125,0.977,126,0.553,127,0.692,128,0.553,129,0.692,130,0.41,131,0.692,132,0.579,133,0.692,134,0.553,135,0.852,136,1.232,137,0.553,138,0.692,139,0.579,140,1.133,141,0.579,142,1.133,143,0.579,144,1.133,145,0.579,146,0.692,147,0.579,148,0.692,149,0.579,150,0.662,151,1.031,152,0.692,153,0.579,154,0.579,155,0.553,156,0.692,157,0.579,158,0.579,159,0.692,160,0.553,161,0.692,162,0.579,163,0.527,164,0.692,165,0.527,166,0.553,167,0.977,168,0.527,169,0.634,170,0.579,171,1.029,172,0.634,173,1.038,174,0.553,175,0.692,176,0.579,177,0.388,178,0.606,179,0.579,180,0.818,181,0.692,182,0.579,183,0.579,184,0.579,185,0.527,186,0.579,187,0.579,188,0.662,189,0.692,190,0.01,191,0.01,221,0.895,222,2.941,235,3.806,242,1.865,271,1.75,272,1.413,430,2.823,435,2.999,436,2.106,438,6.005,441,2.237,487,3.031,492,3.031,563,4.346,564,4.346,565,4.019,566,4.346,668,3.409,922,1.371,964,4.465,1500,2.978,1501,4.868,1502,4.868,1503,6.134,1504,6.134,1505,6.134,1506,6.134,1507,6.134,1508,6.134,1509,6.134,1510,6.134,1511,6.134,1512,4.868,1513,3.445,1514,5.303,1515,3.445,1516,6.096,1517,3.445,1518,3.445,1519,4.208,1520,3.445,1521,4.868,1522,4.208,1523,3.445,1524,4.208,1525,3.445,1526,4.208,1527,3.445,1528,4.208,1529,3.445,1530,3.445,1531,3.445]],["title/components/MapComponent.html",[0,0.178,153,0.641]],["body/components/MapComponent.html",[0,0.36,1,0.762,2,0.147,3,0.106,4,0.871,5,0.91,6,0.833,7,0.086,11,0.234,12,0.833,13,0.589,19,0.94,20,1.042,22,0.91,23,1.299,24,1.239,25,0.985,26,0.94,28,0.94,30,0.352,34,0.698,38,1.102,40,1.693,41,0.429,42,0.653,47,0.566,49,0.897,50,0.985,52,0.017,53,0.555,58,0.539,71,0.429,75,2.333,77,1.65,80,1.395,87,0.63,97,0.19,98,0.169,103,0.127,104,0.06,119,0.539,120,1.177,121,1.177,122,1.126,123,1.379,124,0.91,125,1.177,126,0.727,127,0.91,128,0.727,129,0.91,130,0.539,131,0.91,132,0.762,133,0.91,134,0.727,135,0.954,136,1.379,137,0.727,138,0.91,139,0.762,140,1.304,141,0.762,142,1.304,143,0.762,144,1.304,145,0.762,146,0.91,147,0.762,148,0.91,149,0.762,150,0.871,151,0.762,152,0.91,153,1.154,154,0.762,155,0.727,156,0.91,157,0.762,158,0.762,159,0.91,160,0.727,161,0.91,162,0.762,163,0.694,164,0.91,165,0.694,166,0.727,167,1.177,168,0.694,169,0.833,170,0.762,171,1.096,172,0.833,173,1.195,174,0.727,175,0.91,176,0.762,177,0.732,178,0.797,179,0.762,180,0.985,181,0.91,182,0.762,183,0.762,184,0.762,185,0.694,186,0.762,187,0.762,188,0.871,189,0.91,190,0.012,191,0.012,242,1.635,271,1.395,272,1.126,327,1.395,576,2.205,589,2.312,597,3.707,617,2.04,703,3.58,1007,5.066,1008,5.066,1010,5.615,1011,5.615,1532,3.917,1533,4.543,1534,5.86,1535,4.532,1536,4.532]],["title/modules/MapModule.html",[358,0.871,1106,2.187]],["body/modules/MapModule.html",[2,0.186,3,0.134,7,0.109,52,0.017,97,0.319,98,0.212,103,0.208,104,0.076,119,0.68,153,1.343,190,0.014,191,0.014,226,2.621,358,1.544,360,1.904,361,3.152,362,2.498,371,3.108,372,2.625,373,2.498,375,3.108,376,3.451,377,2.625,1013,4.711,1106,4.524,1537,4.937,1538,4.937,1539,4.937,1540,4.937,1541,5.711,1542,5.711,1543,5.711]],["title/injectables/MapService.html",[769,1.12,1013,2.331]],["body/injectables/MapService.html",[2,0.176,3,0.127,7,0.103,11,0.364,13,0.708,30,0.42,34,0.78,42,0.708,47,0.569,49,1.003,50,1.101,51,1.152,52,0.017,53,0.62,55,0.956,56,1.406,61,2.382,71,0.666,97,0.227,98,0.201,103,0.151,104,0.072,105,0.828,107,1.523,190,0.013,191,0.013,237,2.92,267,2.678,272,1.04,288,2.803,488,3.834,576,2.067,595,2.617,600,3.834,679,3.834,720,4.677,769,2.067,863,5.076,871,5.076,931,4.99,1013,4.001,1014,6.326,1015,4.677,1016,6.478,1059,5.309,1544,4.677,1545,6.548,1546,6.548,1547,5.411,1548,6.548,1549,5.411,1550,5.411,1551,5.411,1552,5.411,1553,5.411,1554,4.677,1555,5.411,1556,5.411,1557,5.411]],["title/components/MaterialSandboxComponent.html",[0,0.178,154,0.641]],["body/components/MaterialSandboxComponent.html",[0,0.346,1,0.598,2,0.116,3,0.083,4,0.684,5,0.715,6,0.655,7,0.068,11,0.184,12,1.453,13,0.501,19,0.799,20,0.922,22,0.715,23,1.281,24,1.224,25,0.837,26,0.799,28,0.799,30,0.277,34,0.593,38,0.999,41,0.337,42,0.658,47,0.387,52,0.016,53,0.471,55,0.727,58,0.424,69,2.179,71,0.337,76,6.09,79,1.09,80,1.186,87,0.495,94,1.089,97,0.149,98,0.132,103,0.1,104,0.047,119,0.424,120,1,121,1.363,122,0.957,123,1.249,124,0.715,125,1,126,0.571,127,0.715,128,0.571,129,0.715,130,0.424,131,0.715,132,0.598,133,0.715,134,0.571,135,0.865,136,1.249,137,0.571,138,0.715,139,0.598,140,1.153,141,0.598,142,1.153,143,0.598,144,1.153,145,0.598,146,0.715,147,0.598,148,0.715,149,0.598,150,0.684,151,0.598,152,0.715,153,0.598,154,1.046,155,1.187,156,0.715,157,0.598,158,0.598,159,0.715,160,0.571,161,0.715,162,0.598,163,0.545,164,0.715,165,0.545,166,0.922,167,1,168,0.545,169,0.655,170,0.598,171,1.038,172,0.655,173,1.057,174,0.571,175,0.715,176,0.598,177,0.401,178,0.626,179,0.598,180,1.287,181,0.715,182,0.598,183,0.598,184,0.598,185,0.545,186,0.598,187,0.598,188,0.684,189,0.715,190,0.01,191,0.01,230,2.409,231,2.854,241,4.344,242,1.186,267,1.895,268,2.477,271,0.847,282,2.289,668,2.865,698,3.861,759,2.759,898,3.292,1081,5.262,1170,4.306,1294,4.454,1303,4.306,1469,5.38,1554,4.306,1558,4.967,1559,3.077,1560,4.981,1561,4.306,1562,4.981,1563,4.981,1564,4.981,1565,3.56,1566,3.56,1567,6.788,1568,6.788,1569,6.788,1570,6.788,1571,6.788,1572,6.788,1573,6.788,1574,6.788,1575,6.788,1576,6.788,1577,6.788,1578,6.788,1579,7.573,1580,7.522,1581,6.223,1582,3.861,1583,4.306,1584,4.981,1585,5.746,1586,4.981,1587,4.981,1588,4.981,1589,6.223,1590,4.981,1591,4.981,1592,6.788,1593,7.398,1594,7.573,1595,6.223,1596,3.56,1597,6.788,1598,6.788,1599,6.788,1600,6.223,1601,4.981,1602,4.981,1603,6.223,1604,4.981,1605,4.981,1606,4.981,1607,4.306,1608,4.981,1609,4.981,1610,4.981,1611,4.306,1612,4.981,1613,4.981,1614,4.981,1615,4.981,1616,3.861,1617,3.56,1618,3.56,1619,3.56,1620,3.56,1621,3.56,1622,3.56]],["title/components/OverviewCardComponent.html",[0,0.178,157,0.641]],["body/components/OverviewCardComponent.html",[0,0.357,1,0.788,2,0.153,3,0.11,4,0.901,5,0.942,6,0.862,7,0.089,11,0.242,12,0.862,19,0.961,20,1.059,22,0.942,23,1.301,24,1.242,25,1.007,26,0.961,28,0.961,30,0.364,34,0.713,38,1.116,41,0.444,42,0.664,47,0.465,49,0.917,50,1.007,52,0.017,53,0.567,58,0.558,71,0.444,87,0.652,97,0.197,98,0.174,103,0.131,104,0.062,119,0.558,120,1.203,121,1.203,122,1.151,123,1.397,124,0.942,125,1.203,126,0.753,127,0.942,128,0.753,129,0.942,130,0.558,131,0.942,132,0.788,133,0.942,134,0.753,135,0.967,136,1.397,137,0.753,138,0.942,139,0.788,140,1.325,141,0.788,142,1.325,143,0.788,144,1.325,145,0.788,146,0.942,147,0.788,148,0.942,149,0.788,150,0.901,151,0.788,152,0.942,153,0.788,154,0.788,155,0.753,156,0.942,157,1.169,158,1.284,159,0.942,160,0.753,161,0.942,162,0.788,163,0.718,164,0.942,165,0.718,166,0.753,167,1.203,168,0.718,169,0.862,170,0.788,171,1.104,172,0.862,173,1.214,174,0.753,175,0.942,176,0.788,177,0.529,178,0.825,179,0.788,180,1.007,181,0.942,182,0.788,183,0.788,184,0.788,185,0.718,186,0.788,187,0.788,188,0.901,189,0.942,190,0.012,191,0.012,221,1.102,259,3.234,430,2.279,1188,3.926,1533,4.644,1583,6.013,1623,5.707,1624,5.117,1625,4.054,1626,5.179,1627,5.991,1628,5.991,1629,4.69,1630,4.69]],["title/components/OverviewComponent.html",[0,0.178,160,0.612]],["body/components/OverviewComponent.html",[0,0.362,1,0.786,2,0.152,3,0.11,4,0.899,5,0.939,6,0.86,7,0.089,11,0.242,12,0.86,19,0.96,20,1.058,22,0.939,23,1.301,24,1.241,25,1.005,26,0.96,28,0.96,30,0.363,34,0.712,38,1.115,41,0.443,42,0.663,47,0.465,49,0.916,50,1.005,52,0.016,53,0.566,58,0.557,71,0.443,87,0.65,97,0.196,98,0.174,103,0.131,104,0.062,119,0.557,120,1.201,121,1.201,122,1.15,123,1.395,124,0.939,125,1.201,126,0.751,127,0.939,128,0.751,129,0.939,130,0.557,131,0.939,132,0.786,133,0.939,134,0.751,135,1.021,136,1.395,137,0.751,138,0.939,139,0.786,140,1.324,141,0.786,142,1.324,143,0.786,144,1.324,145,0.786,146,0.939,147,0.786,148,0.939,149,0.786,150,1.267,151,0.786,152,0.939,153,0.786,154,0.786,155,0.751,156,0.939,157,0.786,158,1.108,159,0.939,160,1.115,161,0.939,162,0.786,163,0.716,164,0.939,165,0.716,166,0.751,167,1.201,168,0.716,169,0.86,170,0.786,171,1.123,172,0.86,173,1.213,174,0.751,175,0.939,176,0.786,177,0.527,178,0.823,179,0.786,180,1.005,181,0.939,182,0.786,183,0.786,184,0.786,185,0.716,186,0.786,187,0.786,188,0.899,189,0.939,190,0.012,191,0.012,221,1.1,327,1.424,389,2.494,778,2.893,917,3.427,1047,5.17,1140,3.919,1141,3.546,1631,4.043,1632,5.17,1633,5.981,1634,5.981,1635,4.677,1636,4.677,1637,5.981,1638,5.981]],["title/modules/OverviewModule.html",[358,0.871,1269,2.501]],["body/modules/OverviewModule.html",[0,0.293,2,0.164,3,0.118,7,0.096,11,0.261,47,0.488,52,0.017,60,3.646,67,2.093,97,0.33,98,0.188,103,0.2,104,0.067,119,0.601,157,1.323,158,1.235,160,1.263,190,0.013,191,0.013,226,1.837,327,1.495,358,1.71,360,1.684,361,2.988,362,2.21,368,3.442,369,3.442,370,3.442,371,2.885,372,2.321,373,2.21,375,2.885,376,3.203,377,2.321,389,2.106,390,2.726,391,2.894,392,2.894,393,2.894,418,3.597,928,4.043,1040,4.867,1268,4.576,1269,5.279,1271,4.043,1278,4.366,1281,4.366,1282,4.366,1624,3.916,1639,4.366,1640,4.366,1641,5.051,1642,4.366,1643,5.051,1644,6.278,1645,5.427,1646,5.051,1647,5.051]],["title/injectables/RoutingService.html",[769,1.12,1138,1.947]],["body/injectables/RoutingService.html",[2,0.169,3,0.122,7,0.099,11,0.357,13,0.641,30,0.403,34,0.76,42,0.521,44,4.75,47,0.56,50,1.072,51,1.122,52,0.017,53,0.604,54,0.76,55,0.931,56,1.386,61,1.887,62,3.444,71,0.654,84,4.02,87,0.96,93,3.444,94,0.832,97,0.268,98,0.193,101,2.646,103,0.145,104,0.069,105,0.977,135,0.887,168,1.104,171,0.931,190,0.013,191,0.013,216,2.508,221,1.174,225,2.743,230,3.086,244,1.212,272,1.386,460,4.376,769,2.029,809,3.674,841,4.02,1138,3.256,1141,3.68,1186,5.342,1246,3.674,1648,4.483,1649,6.381,1650,6.381,1651,7.212,1652,7.212,1653,6.381,1654,5.186,1655,5.186,1656,5.186,1657,5.186,1658,6.381,1659,5.186,1660,5.591,1661,5.186,1662,5.186,1663,5.186,1664,5.186,1665,5.186]],["title/modules/SharedModule.html",[358,0.871,370,1.754]],["body/modules/SharedModule.html",[0,0.349,2,0.162,3,0.117,7,0.095,11,0.258,12,1.146,13,0.627,17,2.833,41,0.643,52,0.017,58,0.847,97,0.329,98,0.186,103,0.199,104,0.066,117,1.83,119,0.594,130,0.943,132,1.331,165,1.212,166,0.801,190,0.013,191,0.013,226,1.816,228,2.695,296,2.861,297,2.548,327,1.484,358,1.705,359,2.695,360,1.665,361,2.973,362,2.184,368,3.433,369,3.433,370,3.668,371,2.864,372,2.295,373,2.184,375,2.864,376,3.18,377,2.295,386,4.832,387,4.832,388,4.832,389,2.082,390,2.695,391,2.861,392,2.861,710,3.871,1277,3.538,1286,3.871,1616,4.832,1666,4.317,1667,4.317,1668,4.993,1669,4.317,1670,4.993,1671,6.233,1672,6.233,1673,5.388,1674,6.233,1675,4.993,1676,3.538,1677,4.993]],["title/components/ShelveButtonComponent.html",[0,0.178,162,0.641]],["body/components/ShelveButtonComponent.html",[0,0.356,1,0.598,2,0.116,3,0.083,4,0.684,5,1.315,6,0.655,7,0.068,10,2.522,11,0.297,12,1.425,13,0.682,14,3.01,15,2.969,16,2.854,17,2.287,18,4.306,19,0.799,20,0.922,21,4.454,22,0.715,23,1.281,24,1.222,25,0.837,26,0.799,27,3.861,28,0.799,29,3.861,30,0.277,31,0.799,32,1.204,33,3.457,34,0.741,36,5.38,37,4.824,38,0.999,39,3.043,40,1.482,41,0.684,42,0.501,43,3.077,44,4.519,45,6.245,46,6.245,47,0.569,48,4.306,51,0.876,52,0.017,53,0.589,54,0.741,55,0.727,56,1.259,57,3.101,58,0.926,59,3.292,60,3.175,61,2.264,62,2.688,63,4.824,64,5.38,65,2.409,66,1.545,67,1.661,71,0.712,72,1.812,73,1.237,75,1.983,76,4.824,77,1.402,79,1.09,80,1.482,81,3.861,82,4.306,83,3.043,84,3.861,85,4.306,86,4.306,87,0.798,89,3.861,90,5.38,92,3.566,95,2.854,97,0.275,98,0.132,99,3.077,100,2.175,101,1.816,102,0.746,103,0.1,104,0.047,105,1.003,106,1.426,107,1.002,108,3.077,109,3.077,110,3.077,111,1.921,112,1.187,114,2.332,116,2.332,117,1.045,118,2.175,119,0.424,120,1,121,1,122,0.957,123,1.249,124,0.715,125,1,126,0.571,127,0.715,128,0.571,129,0.715,130,0.424,131,0.715,132,0.598,133,0.715,134,0.571,135,0.865,136,1.249,137,0.571,138,0.715,139,0.598,140,1.153,141,0.598,142,1.153,143,0.598,144,1.153,145,0.598,146,0.715,147,0.598,148,0.715,149,0.598,150,0.684,151,0.598,152,0.715,153,0.598,154,0.598,155,0.571,156,0.715,157,0.598,158,0.598,159,0.715,160,0.571,161,0.715,162,1.046,163,0.545,164,0.715,165,0.545,166,0.571,167,1,168,0.545,169,0.655,170,0.598,171,1.038,172,0.655,173,1.057,174,0.571,175,0.715,176,0.598,177,0.401,178,0.626,179,0.598,180,0.837,181,0.715,182,0.598,183,0.598,184,0.598,185,0.545,186,0.598,187,0.598,188,0.684,189,0.715,190,0.01,191,0.01,221,0.916,241,3.802,242,1.482,243,3.765,244,0.966,250,2.409,381,5.6,634,2.175,1678,6.245,1679,6.223,1680,3.56,1681,3.861,1682,4.981,1683,3.56,1684,3.56,1685,3.56,1686,3.56,1687,3.56]],["title/components/ShelveComponent.html",[0,0.178,163,0.584]],["body/components/ShelveComponent.html",[0,0.335,1,0.367,2,0.071,3,0.051,4,0.42,5,0.439,6,0.402,7,0.042,11,0.252,12,0.979,13,0.652,14,1.674,16,3.049,17,1.944,19,0.555,20,0.689,22,0.439,23,1.23,24,1.173,25,0.582,26,0.555,28,0.555,30,0.17,31,0.555,32,0.9,33,3.177,34,0.581,38,0.784,40,0.824,41,0.738,42,0.348,44,4.04,47,0.582,51,0.385,52,0.017,53,0.406,54,0.753,55,0.713,56,1.216,57,2.636,58,0.924,59,3.626,60,1.116,61,1.935,62,3.054,65,1.674,66,1.405,69,1.514,71,0.736,72,1.562,73,1.066,75,1.944,77,1.209,79,0.757,80,0.824,83,2.983,87,0.981,93,2.636,94,0.351,97,0.248,98,0.081,100,1.336,101,1.116,102,0.458,103,0.097,104,0.029,105,0.866,106,1.642,107,0.974,111,2.636,112,1.628,114,2.268,116,1.433,117,1.941,118,3.251,119,0.26,120,0.695,121,0.695,122,0.665,123,0.98,124,0.439,125,0.695,126,0.351,127,0.439,128,0.351,129,0.439,130,0.26,131,0.439,132,0.367,133,0.439,134,0.351,135,0.679,136,0.98,137,0.351,138,0.439,139,0.367,140,0.862,141,0.367,142,0.862,143,0.367,144,0.862,145,0.367,146,0.439,147,0.367,148,0.439,149,0.367,150,0.42,151,0.367,152,0.439,153,0.367,154,0.367,155,0.351,156,0.439,157,0.367,158,0.367,159,0.439,160,0.351,161,0.439,162,0.367,163,0.748,164,0.439,165,0.335,166,0.689,167,0.695,168,0.335,169,0.402,170,0.367,171,0.897,172,0.402,173,0.79,174,0.351,175,0.439,176,0.367,177,0.246,178,0.385,179,0.367,180,0.582,181,0.439,182,0.367,183,0.367,184,0.367,185,0.335,186,0.367,187,0.367,188,0.42,189,0.439,190,0.013,191,0.007,193,2.244,194,3.043,198,2.636,200,4.53,201,4.473,203,5.025,206,4.386,207,3.785,208,3.46,209,3.785,210,4.009,211,3.785,213,1.89,214,4.765,215,1.785,216,2.574,217,3.46,218,4.124,219,3.785,221,0.636,222,2.472,223,3.2,224,3.091,225,1.776,226,1.776,227,2.683,228,3.199,229,1.983,230,1.674,231,1.983,233,3.416,237,1.868,241,4.313,242,1.695,243,4.737,244,1.197,246,2.683,247,4.765,248,2.683,249,3.714,250,2.362,252,2.452,257,2.683,259,2.636,260,1.674,261,2.624,262,2.114,263,2.683,268,1.377,271,1.267,272,1.38,277,1.374,280,3.785,282,1.59,283,2.268,284,5.214,288,2.118,289,1.674,290,2.683,291,3.329,292,2.678,293,2.683,294,3.785,296,1.253,297,1.116,298,0.698,299,2.683,300,0.824,301,2.683,302,1.695,303,1.695,304,1.695,305,1.695,306,1.695,307,1.695,308,1.695,309,1.695,311,1.695,312,1.695,313,4.595,314,1.695,315,2.683,316,1.695,319,1.695,321,4.386,322,3.708,323,2.683,324,1.695,325,1.695,341,2.683,342,1.549,343,1.695,344,1.695,345,1.549,346,1.695,347,1.695,348,1.695,349,3.043,350,2.992,351,2.992,352,1.766,353,2.268,355,2.683,357,2.992,411,1.674,477,2.362,484,2.268,491,2.268,542,1.695,569,2.683,634,3.621,663,2.452,687,2.268,944,2.636,1158,2.636,1208,4.765,1246,2.452,1365,2.268,1484,2.683,1681,3.785,1688,1.695,1689,2.992,1690,2.992,1691,4.221,1692,6.157,1693,4.221,1694,4.892,1695,4.892,1696,4.892,1697,4.221,1698,3.461,1699,2.187,1700,2.683,1701,2.187,1702,2.187,1703,2.187,1704,2.187,1705,2.992,1706,2.187,1707,2.187,1708,2.187,1709,2.187,1710,2.187,1711,2.187,1712,2.187,1713,2.187,1714,2.187,1715,2.187,1716,2.187,1717,2.992,1718,2.187,1719,2.187,1720,2.187,1721,2.187,1722,2.187,1723,3.46,1724,2.992,1725,5.901,1726,2.992,1727,4.221,1728,2.992,1729,2.992,1730,2.992,1731,5.313,1732,2.992,1733,2.992,1734,2.992,1735,2.187,1736,1.695,1737,1.336,1738,1.89,1739,1.549,1740,2.992,1741,1.89,1742,1.89,1743,1.89,1744,1.89,1745,1.89,1746,2.992,1747,1.89,1748,1.89,1749,2.992,1750,2.992,1751,1.89,1752,1.89,1753,1.89,1754,1.89,1755,3.461,1756,3.461,1757,2.992]],["title/injectables/SidenavService.html",[33,1.754,769,1.12]],["body/injectables/SidenavService.html",[2,0.162,3,0.117,7,0.095,11,0.321,13,0.625,16,4.276,17,2.475,30,0.386,31,0.998,32,1.664,33,2.858,34,0.74,42,0.682,47,0.6,49,0.952,50,1.045,51,0.875,52,0.017,53,0.471,54,0.74,55,0.726,56,1.366,58,0.74,59,4.605,61,2.262,65,3.609,71,0.706,73,1.544,75,2.475,87,0.943,97,0.261,98,0.185,103,0.139,104,0.066,105,0.762,106,1.684,117,1.825,190,0.013,191,0.013,242,1.48,249,4.385,271,1.184,272,0.956,436,1.75,769,1.991,898,4.276,929,3.856,930,3.26,1223,6.616,1239,3.26,1758,4.3,1759,6.218,1760,6.218,1761,7.107,1762,6.218,1763,4.974,1764,4.974,1765,4.974,1766,6.218,1767,4.974,1768,4.974,1769,6.218,1770,4.974,1771,4.974,1772,4.974,1773,4.974,1774,4.974,1775,4.974]],["title/components/StatusViewComponent.html",[0,0.178,165,0.584]],["body/components/StatusViewComponent.html",[0,0.354,1,0.573,2,0.111,3,0.08,4,0.656,5,0.685,6,0.627,7,0.065,11,0.176,12,0.627,17,1.924,19,0.776,20,0.901,22,0.685,23,1.277,24,1.218,25,0.812,26,0.776,28,0.776,30,0.265,31,0.776,32,1.5,34,0.575,38,0.98,40,1.674,41,0.742,42,0.564,47,0.597,52,0.017,53,0.457,54,0.768,58,0.727,66,1.2,67,1.612,71,0.457,73,1.516,75,1.924,87,0.672,94,0.776,97,0.256,98,0.127,102,0.715,103,0.095,104,0.045,106,1.394,117,1.419,119,0.406,120,0.97,121,0.97,122,0.929,123,1.226,124,0.685,125,0.97,126,0.547,127,0.685,128,0.547,129,0.685,130,0.575,131,0.685,132,0.573,133,0.685,134,0.547,135,0.849,136,1.226,137,0.547,138,0.685,139,0.573,140,1.127,141,0.573,142,1.127,143,0.573,144,1.127,145,0.573,146,0.685,147,0.573,148,0.685,149,0.573,150,0.656,151,0.573,152,0.685,153,0.573,154,0.573,155,0.547,156,0.685,157,0.573,158,0.573,159,0.685,160,0.547,161,0.685,162,0.573,163,0.522,164,0.685,165,0.935,166,1.105,167,0.97,168,0.522,169,0.627,170,0.573,171,1.027,172,0.627,173,1.033,174,0.547,175,0.685,176,0.573,177,0.385,178,0.6,179,0.573,180,0.812,181,0.685,182,0.573,183,0.573,184,0.573,185,0.522,186,0.573,187,0.573,188,0.656,189,0.685,190,0.01,191,0.01,221,0.889,222,2.016,235,2.609,242,1.151,244,0.812,259,2.609,267,1.839,271,1.535,272,1.352,300,1.337,385,1.298,423,1.65,430,2.547,435,2.74,436,2.162,438,5.688,446,5.788,487,2.688,492,2.688,495,2.456,496,2.235,497,2.456,498,2.456,499,2.456,500,2.456,668,3.267,678,3.978,682,3.115,685,3.425,686,3.425,687,3.167,688,3.425,707,3.747,922,1.358,948,2.953,964,4.484,1141,2.466,1161,3.167,1383,4.327,1415,4.179,1514,5.573,1516,5.951,1519,5.28,1522,2.949,1524,2.949,1526,2.949,1528,2.949,1533,3.747,1676,5.199,1776,6.343,1777,2.644,1778,4.834,1779,4.179,1780,6.107,1781,6.107,1782,6.107,1783,6.695,1784,6.107,1785,4.834,1786,3.411,1787,4.834,1788,3.411,1789,3.411,1790,3.747,1791,3.411,1792,4.834,1793,4.834,1794,3.411,1795,3.411,1796,3.411,1797,3.411,1798,3.411,1799,3.411,1800,3.411,1801,3.411]],["title/modules/TabularModule.html",[358,0.871,1270,2.501]],["body/modules/TabularModule.html",[0,0.304,2,0.174,3,0.125,7,0.102,11,0.276,52,0.017,97,0.329,98,0.199,103,0.204,104,0.071,119,0.636,151,1.276,165,0.818,168,1.214,169,0.983,190,0.013,191,0.013,226,1.944,327,1.547,358,1.663,359,4.099,360,1.782,361,3.064,362,2.338,369,3.49,370,3.49,371,2.987,372,2.456,373,2.338,375,2.987,376,3.316,377,2.456,389,2.229,390,2.885,391,3.062,393,3.062,441,2.987,706,2.472,1141,3.316,1270,5.241,1277,3.787,1285,3.787,1286,5.038,1676,3.787,1802,4.62,1803,4.62,1804,5.345,1805,4.62,1806,5.345,1807,5.345,1808,5.345]],["title/components/TabularViewComponent.html",[0,0.178,168,0.584]],["body/components/TabularViewComponent.html",[0,0.343,1,0.401,2,0.078,3,0.056,4,0.459,5,0.48,6,0.439,7,0.045,11,0.317,12,0.439,13,0.373,14,2.479,15,2.427,19,0.595,20,0.73,21,3.524,22,0.48,23,1.241,24,1.184,25,0.623,26,0.595,28,0.595,30,0.186,31,0.595,32,1.492,34,0.442,37,3.973,38,0.823,40,1.549,41,0.711,42,0.373,47,0.597,51,0.8,52,0.017,53,0.616,54,0.829,55,0.664,56,0.713,58,0.284,65,2.841,66,0.921,71,0.68,72,2.019,73,1.458,75,1.476,77,1.783,79,0.811,80,1.22,83,2.266,87,0.852,92,2.125,94,1.044,97,0.266,98,0.089,101,1.219,102,0.501,103,0.067,104,0.032,105,0.785,106,1.75,107,1.831,112,0.796,117,1.504,119,0.284,120,0.745,121,0.745,122,0.713,123,1.029,124,0.48,125,0.745,126,0.383,127,0.48,128,0.383,129,0.48,130,0.284,131,0.48,132,0.401,133,0.48,134,0.383,135,0.712,136,1.029,137,0.383,138,0.48,139,0.401,140,0.913,141,0.401,142,0.913,143,0.401,144,0.913,145,0.401,146,0.48,147,0.401,148,0.48,149,0.401,150,0.459,151,0.401,152,0.48,153,0.401,154,0.401,155,0.383,156,0.48,157,0.401,158,0.401,159,0.48,160,0.383,161,0.48,162,0.401,163,0.366,164,0.48,165,0.366,166,0.983,167,0.745,168,0.785,169,1.127,170,0.401,171,0.925,172,0.439,173,0.836,174,0.383,175,0.48,176,0.401,177,0.578,178,0.42,179,0.401,180,0.623,181,0.48,182,0.401,183,0.401,184,0.401,185,0.366,186,0.401,187,0.401,188,0.459,189,0.48,190,0.008,191,0.009,194,3.221,200,2.43,208,3.631,215,1.902,216,2.684,217,3.631,221,0.682,222,0.996,225,1.864,229,3.365,242,1.22,244,1.277,249,2.125,252,2.628,259,2.002,261,3.87,271,1.549,272,1.25,277,0.672,283,4.263,288,1.476,289,3.064,292,1.81,298,0.763,300,1.082,327,0.569,334,2.002,349,2.628,355,2.875,398,3.631,409,1.893,411,1.794,417,3.206,423,1.155,429,3.365,430,1.411,435,2.04,436,2.131,441,3.441,442,5.748,460,4.498,463,1.565,477,1.794,480,5.077,537,2.628,616,1.893,698,4.302,712,2.628,732,3.221,769,0.701,771,1.852,778,1.155,779,1.219,780,1.155,802,2.875,804,4.751,820,1.852,826,3.973,830,2.875,898,3.179,920,1.459,921,3.131,1141,1.893,1158,3.761,1186,2.628,1191,1.565,1216,2.875,1224,3.206,1225,3.93,1239,1.565,1285,5.281,1314,2.266,1332,3.206,1373,3.206,1391,3.206,1660,2.875,1777,1.852,1779,3.206,1809,6.444,1810,3.709,1811,3.709,1812,5.125,1813,5.125,1814,5.873,1815,5.125,1816,5.125,1817,6.128,1818,5.125,1819,6.335,1820,3.709,1821,5.873,1822,3.709,1823,5.125,1824,2.389,1825,3.709,1826,2.389,1827,3.709,1828,2.389,1829,3.709,1830,3.709,1831,2.389,1832,3.709,1833,2.389,1834,3.709,1835,2.389,1836,3.709,1837,2.389,1838,5.125,1839,4.797,1840,3.709,1841,4.547,1842,2.389,1843,3.709,1844,2.389,1845,5.125,1846,3.709,1847,3.709,1848,3.709,1849,2.389,1850,3.709,1851,5.549,1852,2.389,1853,2.389,1854,2.389,1855,3.709,1856,3.709,1857,3.709,1858,3.709,1859,3.709,1860,2.389,1861,5.549,1862,3.709,1863,2.389,1864,3.206,1865,3.709,1866,2.389,1867,6.128,1868,2.389,1869,5.873,1870,2.389,1871,2.389,1872,2.389,1873,2.389,1874,2.389,1875,2.389,1876,2.389,1877,2.389,1878,1.852,1879,2.389,1880,2.389,1881,2.389,1882,2.389,1883,2.389,1884,2.389,1885,2.389,1886,1.852,1887,2.389,1888,3.709,1889,2.389,1890,2.389,1891,2.389,1892,2.389,1893,5.549,1894,2.389,1895,2.389,1896,2.389,1897,2.389,1898,2.389,1899,2.389,1900,2.389,1901,2.389,1902,2.389,1903,5.125,1904,2.389,1905,3.709,1906,2.389,1907,3.709,1908,4.547,1909,4.547,1910,2.389,1911,2.389,1912,2.389,1913,2.389,1914,4.547,1915,2.389,1916,3.709,1917,3.709,1918,3.709,1919,3.709,1920,3.709]],["title/interfaces/TimeoutOption.html",[1723,2.704,1737,2.331]],["body/interfaces/TimeoutOption.html",[0,0.321,2,0.102,3,0.073,7,0.06,11,0.162,12,0.836,13,0.627,14,1.515,16,2.605,17,1.81,19,0.503,20,0.73,23,0.503,24,0.48,26,0.503,28,0.503,30,0.243,31,0.73,32,0.657,33,2.866,34,0.373,38,0.503,40,0.746,41,0.732,42,0.315,44,3.975,47,0.243,52,0.017,54,0.541,55,0.781,56,1.129,57,2.454,58,0.908,59,3.365,60,1.598,61,1.654,62,2.889,65,1.515,66,1.329,69,1.37,71,0.734,72,1.654,73,1.129,75,1.81,77,1.28,79,0.685,80,0.746,87,0.933,93,2.454,94,0.503,97,0.281,98,0.116,100,1.914,101,1.598,102,0.657,103,0.127,104,0.041,105,0.996,106,1.666,107,1.28,111,3.17,112,1.958,114,2.979,116,2.052,117,1.91,118,3.81,163,0.48,166,0.503,190,0.013,191,0.009,193,2.09,194,3.221,198,1.691,200,4.263,201,4.398,203,4.553,206,2.428,207,2.428,208,2.219,209,2.428,210,3.221,211,2.428,214,4.835,215,1.756,216,2.589,217,3.221,218,4.149,219,3.525,221,0.576,222,2.449,223,2.979,224,3.085,225,1.654,226,1.654,227,2.428,228,3.17,229,1.795,230,1.515,231,1.795,233,3.711,241,4.201,242,1.695,243,4.726,244,1.256,246,2.428,247,4.553,248,2.428,249,3.365,250,2.199,252,2.219,257,2.428,259,2.889,260,1.515,261,3.27,262,1.914,263,2.428,271,0.746,272,1.426,277,0.882,280,3.525,282,1.439,283,2.052,284,5.043,288,2.131,289,1.515,290,2.428,291,4.149,292,2.79,293,2.428,294,4.149,296,1.795,297,1.598,298,1.001,299,3.525,300,1.082,301,3.525,302,2.428,303,2.428,304,2.428,305,2.428,306,2.428,307,2.428,308,2.428,309,2.428,311,2.428,312,2.428,313,5.203,314,2.428,315,3.525,316,2.428,319,2.428,321,5.043,322,4.263,323,3.525,324,2.428,325,2.428,341,3.525,342,2.219,343,2.428,344,2.428,345,2.219,346,2.428,347,2.428,348,2.428,411,1.515,477,2.199,484,2.052,491,2.052,542,2.428,569,2.428,634,4.101,663,3.221,944,2.454,1158,2.454,1208,4.553,1246,3.221,1365,2.052,1484,3.525,1681,3.525,1688,2.428,1689,2.708,1690,2.708,1691,2.708,1692,6.059,1693,2.708,1694,2.708,1695,2.708,1696,2.708,1697,2.708,1700,2.428,1705,2.708,1717,2.708,1723,3.792,1724,2.708,1725,6.154,1726,2.708,1727,3.931,1728,2.708,1729,2.708,1730,2.708,1731,5.077,1732,2.708,1733,2.708,1734,2.708,1736,3.525,1737,2.778,1738,3.931,1739,3.221,1740,3.931,1741,2.708,1742,2.708,1743,2.708,1744,2.708,1745,2.708,1746,3.931,1747,2.708,1748,2.708,1749,3.931,1750,3.931,1751,2.708,1752,2.708,1753,2.708,1754,2.708]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.178,170,0.641]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.358,1,0.642,2,0.124,3,0.09,4,0.735,5,0.767,6,0.703,7,0.073,11,0.27,12,0.703,13,0.698,19,0.84,20,0.957,22,0.767,23,1.286,24,1.227,25,0.879,26,0.84,28,0.84,30,0.297,31,0.84,32,1.538,34,0.623,38,1.03,40,1.527,41,0.72,42,0.526,47,0.552,49,0.801,50,0.879,51,0.672,52,0.017,53,0.565,54,0.8,55,0.558,56,1.334,58,0.455,71,0.657,79,1.144,87,0.531,94,0.84,97,0.298,98,0.142,102,0.801,103,0.107,104,0.051,105,0.801,119,0.455,120,1.05,121,1.05,122,1.006,123,1.288,124,0.767,125,1.05,126,0.613,127,0.767,128,0.613,129,0.767,130,0.623,131,0.767,132,0.642,133,0.767,134,0.613,135,0.892,136,1.288,137,0.613,138,0.767,139,0.642,140,1.198,141,0.642,142,1.198,143,0.642,144,1.198,145,0.642,146,0.767,147,0.642,148,0.767,149,0.642,150,0.735,151,0.642,152,0.767,153,0.642,154,0.642,155,0.613,156,0.767,157,0.642,158,0.642,159,0.767,160,0.613,161,0.767,162,0.642,163,0.585,164,0.767,165,0.585,166,0.613,167,1.05,168,0.585,169,0.703,170,1.078,171,1.136,172,1.457,173,1.457,174,0.613,175,0.767,176,0.642,177,0.431,178,0.672,179,0.642,180,0.879,181,0.767,182,0.642,183,0.642,184,0.642,185,1.088,186,0.642,187,0.642,188,0.735,189,0.767,190,0.011,191,0.011,215,2.066,221,0.962,242,1.245,244,1.003,277,1.473,298,1.221,385,1.99,436,1.076,447,2.488,457,3.196,576,2.179,579,2.335,592,2.948,593,3.428,594,3.428,617,2.077,682,1.594,706,1.99,922,1.521,1018,3.103,1365,4.204,1921,3.905,1922,4.419,1923,4.74,1924,3.328,1925,3.909,1926,2.504,1927,4.523,1928,3.428,1929,2.886,1930,3.304,1931,3.304,1932,3.304,1933,3.304,1934,3.304,1935,2.063,1936,3.304]],["title/components/WeatherComponent.html",[0,0.178,174,0.612]],["body/components/WeatherComponent.html",[0,0.365,1,0.726,2,0.14,3,0.101,4,0.83,5,0.867,6,0.794,7,0.082,11,0.223,12,0.794,13,0.678,15,2.484,19,0.911,20,1.018,22,0.867,23,1.296,24,1.236,25,0.955,26,0.911,28,0.911,30,0.336,31,0.911,34,0.676,38,1.082,40,1.028,41,0.601,42,0.638,47,0.524,49,0.87,50,0.955,51,0.76,52,0.017,53,0.694,54,0.676,55,0.63,58,0.514,71,0.537,79,1.242,87,0.882,94,1.082,97,0.238,98,0.161,103,0.121,104,0.057,105,0.661,112,1.894,119,0.514,120,1.14,121,1.14,122,1.092,123,1.353,124,0.867,125,1.14,126,0.693,127,0.867,128,0.693,129,0.867,130,0.514,131,0.867,132,0.726,133,0.867,134,0.693,135,0.937,136,1.353,137,0.693,138,0.867,139,0.726,140,1.274,141,0.726,142,1.274,143,0.726,144,1.274,145,0.726,146,0.867,147,0.726,148,0.867,149,0.726,150,0.83,151,0.726,152,0.867,153,0.726,154,0.726,155,0.693,156,0.867,157,0.726,158,0.726,159,0.867,160,0.693,161,0.867,162,0.726,163,0.661,164,0.867,165,0.661,166,0.693,167,1.14,168,0.661,169,0.794,170,0.726,171,1.124,172,0.794,173,1.167,174,1.082,175,0.867,176,0.726,177,0.487,178,0.76,179,0.726,180,0.955,181,0.867,182,0.726,183,0.726,184,0.726,185,0.661,186,0.726,187,0.726,188,0.83,189,0.867,190,0.012,191,0.012,221,1.322,242,1.352,250,2.747,266,3.47,268,2.683,270,5.226,271,1.028,272,0.83,576,1.979,589,2.204,595,3.261,990,4.403,1001,4.024,1002,4.91,1929,3.597,1935,2.331,1937,3.733,1938,5.679,1939,5.679,1940,5.679,1941,5.679,1942,6.215,1943,5.679,1944,5.679,1945,5.679,1946,4.319,1947,4.319,1948,3.733]],["title/components/WeatherDataMarkerComponent.html",[0,0.178,176,0.641]],["body/components/WeatherDataMarkerComponent.html",[0,0.36,1,0.629,2,0.122,3,0.088,4,0.719,5,0.751,6,0.688,7,0.071,11,0.305,12,0.688,13,0.693,19,0.828,20,0.947,22,0.751,23,1.285,24,1.226,25,0.867,26,0.828,28,0.828,30,0.291,31,0.828,32,1.445,34,0.614,38,1.021,40,1.641,41,0.713,42,0.518,47,0.559,49,0.79,50,0.867,51,0.907,52,0.017,53,0.602,54,0.794,55,0.753,56,1.325,57,3.432,58,0.446,71,0.652,77,1.79,79,1.128,87,0.52,94,1.021,97,0.28,98,0.139,102,0.784,103,0.105,104,0.049,105,0.903,119,0.446,120,1.035,121,1.035,122,0.991,123,1.277,124,0.751,125,1.035,126,0.601,127,0.751,128,0.601,129,0.751,130,0.614,131,0.751,132,0.629,133,0.751,134,0.601,135,0.884,136,1.277,137,0.601,138,0.751,139,0.629,140,1.185,141,0.629,142,1.185,143,0.629,144,1.185,145,0.629,146,0.751,147,0.629,148,0.751,149,0.629,150,0.719,151,0.629,152,0.751,153,0.629,154,0.629,155,0.601,156,0.751,157,0.629,158,0.629,159,0.751,160,0.601,161,0.751,162,0.629,163,0.573,164,0.751,165,0.573,166,0.601,167,1.035,168,0.573,169,0.688,170,0.629,171,1.125,172,0.688,173,1.085,174,0.601,175,0.751,176,1.069,177,0.891,178,0.658,179,0.629,180,0.867,181,0.751,182,0.629,183,0.629,184,0.629,185,1.021,186,0.629,187,0.629,188,0.719,189,0.751,190,0.011,191,0.011,198,2.784,215,2.08,221,0.948,242,1.228,244,1.069,268,2.655,271,1.228,272,0.991,277,1.79,298,1.196,352,2.631,385,1.423,427,3.654,447,2.461,576,2.192,579,2.286,584,3.235,592,3.308,593,3.379,594,3.379,617,2.054,706,1.962,790,2.784,936,2.631,1018,2.495,1026,4.167,1034,3.379,1093,2.452,1582,3.998,1673,4.458,1921,3.943,1922,4.463,1923,4.787,1924,3.317,1925,3.867,1926,2.452,1928,3.379,1929,2.854,1935,2.02,1949,5.101,1950,5.157,1951,4.93,1952,3.742,1953,3.742,1954,3.742,1955,3.742,1956,3.742]],["title/modules/WeatherModule.html",[358,0.871,1271,2.06]],["body/modules/WeatherModule.html",[0,0.274,2,0.148,3,0.107,7,0.086,11,0.235,52,0.017,60,2.995,97,0.334,98,0.169,103,0.192,104,0.06,119,0.541,170,1.225,171,1.118,172,1.08,173,1.341,174,1.17,176,1.225,177,0.662,178,1.282,179,1.225,180,1.155,182,1.225,183,1.225,184,1.225,185,0.899,186,1.304,190,0.012,191,0.012,226,2.366,297,2.318,327,1.397,358,1.569,359,3.935,360,1.515,361,2.845,362,1.987,368,3.35,369,3.35,370,3.35,371,2.698,372,2.088,373,1.987,375,2.698,376,2.995,377,2.088,389,1.895,390,2.452,391,2.603,392,2.603,393,2.603,576,2.018,706,2.233,1106,4.177,1109,3.928,1111,5.075,1112,3.522,1113,5.622,1115,3.522,1271,4.372,1277,3.219,1922,4.2,1923,4.261,1924,3.189,1935,2.452,1957,3.928,1958,3.928,1959,4.543,1960,3.928,1961,3.928,1962,4.543,1963,5.87,1964,3.522,1965,3.522,1966,3.928,1967,4.543,1968,4.159,1969,3.522,1970,4.543]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.178,179,0.641]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.344,1,0.657,2,0.127,3,0.092,4,0.751,5,0.784,6,0.719,7,0.074,11,0.202,12,0.719,13,0.534,15,2.323,19,0.852,20,0.968,22,0.784,23,1.288,24,1.229,25,0.893,26,0.852,28,0.852,30,0.304,34,0.632,38,1.039,40,1.663,41,0.37,42,0.607,47,0.543,49,0.813,50,0.893,52,0.017,53,0.503,54,0.465,58,0.465,71,0.661,77,1.495,79,1.162,87,0.543,95,3.043,97,0.164,98,0.145,103,0.109,104,0.052,107,1.1,119,0.465,120,1.066,121,1.066,122,1.021,123,1.3,124,0.784,125,1.066,126,0.627,127,0.784,128,0.627,129,0.784,130,0.465,131,0.784,132,0.657,133,0.784,134,0.627,135,0.9,136,1.3,137,0.627,138,0.784,139,0.657,140,1.211,141,0.657,142,1.211,143,0.657,144,1.211,145,0.657,146,0.784,147,0.657,148,0.784,149,0.657,150,0.751,151,0.657,152,0.784,153,0.657,154,0.657,155,0.627,156,0.784,157,0.657,158,0.657,159,0.784,160,0.627,161,0.784,162,0.657,163,0.598,164,0.784,165,0.598,166,0.627,167,1.066,168,0.598,169,0.719,170,0.657,171,1.139,172,0.719,173,1.454,174,0.627,175,0.784,176,0.657,177,0.44,178,0.687,179,1.088,180,1.326,181,0.784,182,0.657,183,0.657,184,0.657,185,0.924,186,0.657,187,0.657,188,0.751,189,0.784,190,0.011,191,0.011,221,0.977,244,1.014,268,2.402,272,1.245,288,2.577,292,1.555,352,2.71,576,2.209,592,2.976,597,2.867,706,2.02,732,3.763,933,3.245,1059,4.949,1064,5.019,1188,3.48,1582,4.117,1921,3.857,1922,4.366,1949,5.216,1951,5.019,1969,5.539,1971,3.377,1972,6.038,1973,7.455,1974,5.311,1975,5.311,1976,5.311,1977,6.475,1978,6.475,1979,5.311,1980,3.907,1981,3.907,1982,3.907,1983,3.907,1984,6.475,1985,6.034,1986,3.907,1987,3.907,1988,5.311,1989,5.311,1990,3.907]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.178,182,0.641]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.357,1,0.642,2,0.124,3,0.09,4,0.734,5,0.767,6,0.702,7,0.073,11,0.27,12,0.702,13,0.697,19,0.839,20,0.957,22,0.767,23,1.286,24,1.227,25,0.879,26,0.839,28,0.839,30,0.297,31,0.839,32,1.538,34,0.623,38,1.029,40,1.527,41,0.72,42,0.526,47,0.552,49,0.801,50,0.879,51,0.672,52,0.017,53,0.564,54,0.8,55,0.557,56,1.333,58,0.455,71,0.657,79,1.144,87,0.531,94,0.957,97,0.298,98,0.142,102,0.8,103,0.107,104,0.05,105,0.801,119,0.455,120,1.05,121,1.05,122,1.005,123,1.288,124,0.767,125,1.05,126,0.613,127,0.767,128,0.613,129,0.767,130,0.623,131,0.767,132,0.642,133,0.767,134,0.613,135,0.891,136,1.288,137,0.613,138,0.767,139,0.642,140,1.197,141,0.642,142,1.197,143,0.642,144,1.197,145,0.642,146,0.767,147,0.642,148,0.767,149,0.642,150,0.734,151,0.642,152,0.767,153,0.642,154,0.642,155,0.613,156,0.767,157,0.642,158,0.642,159,0.767,160,0.613,161,0.767,162,0.642,163,0.585,164,0.767,165,0.585,166,0.613,167,1.05,168,0.585,169,0.702,170,0.642,171,1.128,172,0.702,173,1.457,174,0.613,175,0.767,176,0.642,177,0.431,178,0.672,179,0.642,180,1.333,181,0.767,182,1.078,183,0.642,184,0.642,185,1.029,186,0.642,187,0.642,188,0.734,189,0.767,190,0.011,191,0.011,215,2.086,221,0.962,242,1.245,244,1.002,277,1.805,298,1.22,385,1.989,436,1.075,447,2.487,576,2.179,579,2.333,592,2.947,593,3.426,594,3.426,617,2.076,682,1.592,706,1.989,790,2.823,922,1.52,1018,3.102,1365,4.203,1921,3.904,1922,4.419,1923,4.739,1924,3.327,1925,3.908,1926,2.502,1927,4.52,1928,3.426,1929,2.884,1930,3.301,1931,3.301,1932,3.301,1933,3.301,1934,3.301,1935,2.061,1936,3.301]],["title/injectables/WeatherService.html",[769,1.12,1924,1.669]],["body/injectables/WeatherService.html",[0,0.283,2,0.084,3,0.061,7,0.049,11,0.247,13,0.397,30,0.371,31,0.633,32,1.643,34,0.47,41,0.684,42,0.397,47,0.586,49,0.396,50,0.435,51,0.694,52,0.017,53,0.506,54,0.834,55,0.576,56,1.25,58,0.774,61,1.436,66,1.328,67,1.594,71,0.654,73,0.643,77,1.346,80,1.548,87,0.664,94,1.012,97,0.264,98,0.096,102,0.543,103,0.11,104,0.052,105,0.732,106,1.328,107,0.729,130,0.308,135,0.743,171,1.064,177,0.603,185,1.138,190,0.008,191,0.008,193,1.814,221,0.726,222,3.258,224,2.457,225,0.942,233,2.13,235,4.149,244,1.177,254,2.261,260,1.909,267,2.034,271,0.939,272,0.758,277,2.017,289,2.313,300,1.586,327,0.616,334,2.13,385,0.985,407,1.398,409,2.44,410,2.092,411,1.252,435,2.588,436,2.152,447,1.646,453,2.339,487,2.711,492,2.711,495,3.065,497,2.844,498,2.844,499,2.844,500,2.844,501,1.398,576,1.995,592,2.787,595,2.313,597,2.13,616,2.014,617,2.112,668,3.344,682,3.241,769,1.404,778,2.934,779,1.321,780,1.252,833,2.411,915,1.697,917,1.484,920,1.582,921,1.582,922,1.031,923,2.784,924,1.697,925,1.582,926,1.582,933,2.411,936,2.014,940,2.586,941,3.789,942,2.921,943,2.13,944,2.13,945,2.796,947,1.835,948,3.267,958,3.789,959,1.835,961,1.835,962,3.789,964,4.593,965,4.776,967,4.776,968,2.796,969,2.796,1116,2.238,1271,2.13,1383,4.964,1384,4.702,1385,4.702,1790,3.059,1924,1.726,1929,3.287,1991,2.007,1992,4.623,1993,4.623,1994,4.623,1995,4.623,1996,4.623,1997,4.623,1998,4.623,1999,4.623,2000,4.623,2001,4.623,2002,4.623,2003,3.411,2004,4.623,2005,3.946,2006,3.059,2007,2.589,2008,3.059,2009,2.589,2010,2.589,2011,2.589,2012,2.589,2013,2.589,2014,5.04,2015,2.589,2016,2.589,2017,2.589,2018,2.589,2019,5.04,2020,2.589,2021,3.411,2022,2.589,2023,2.589,2024,2.589,2025,2.589,2026,4.702,2027,4.702,2028,2.589,2029,2.007,2030,2.238,2031,3.411,2032,2.238,2033,2.238,2034,2.238,2035,2.238,2036,2.238,2037,2.238,2038,2.238,2039,2.238,2040,2.238,2041,2.238,2042,6.301,2043,2.238,2044,6.301,2045,2.238,2046,6.301,2047,2.238,2048,2.238,2049,2.238,2050,2.238,2051,6.301,2052,4.623,2053,2.238]],["title/components/WeatherSidebarComponent.html",[0,0.178,183,0.641]],["body/components/WeatherSidebarComponent.html",[0,0.342,1,0.485,2,0.094,3,0.068,4,0.554,5,0.579,6,0.53,7,0.055,11,0.347,12,0.938,13,0.729,14,2.07,15,2.232,19,0.687,20,0.819,22,0.579,23,1.261,24,1.203,25,0.719,26,0.687,28,0.687,30,0.224,31,0.687,32,1.438,34,0.509,38,0.906,39,2.615,40,1.344,41,0.702,42,0.43,47,0.563,49,0.655,50,0.719,51,1.15,52,0.017,53,0.67,54,0.854,55,0.954,56,1.362,58,0.343,66,1.062,67,1.882,71,0.714,72,2.194,73,1.402,77,1.589,79,0.936,80,1.344,87,0.709,92,3.235,94,0.968,97,0.282,98,0.107,102,0.605,103,0.081,104,0.038,105,1.085,106,0.716,107,1.436,112,2.011,117,2.05,119,0.343,120,0.859,121,0.859,122,0.823,123,1.133,124,0.579,125,0.859,126,0.463,127,0.579,128,0.463,129,0.579,130,0.509,131,0.579,132,0.485,133,0.579,134,0.463,135,1.049,136,1.133,137,0.463,138,0.579,139,0.485,140,1.024,141,0.485,142,1.024,143,0.485,144,1.024,145,0.485,146,0.579,147,0.485,148,0.579,149,0.485,150,0.554,151,0.485,152,0.579,153,0.485,154,0.485,155,0.463,156,0.579,157,0.485,158,0.485,159,0.579,160,0.463,161,0.579,162,0.485,163,0.442,164,0.579,165,0.442,166,0.906,167,0.859,168,0.442,169,0.53,170,0.485,171,1.153,172,0.53,173,0.938,174,0.463,175,0.579,176,0.485,177,0.575,178,0.507,179,0.485,180,0.719,181,0.579,182,0.485,183,0.949,184,0.485,185,1.192,186,0.485,187,0.485,188,0.554,189,0.579,190,0.01,191,0.009,193,1.967,198,2.31,201,4.496,215,2.003,221,0.787,241,2.615,242,1.019,244,1.289,250,2.731,259,3.41,260,2.07,261,3.117,267,2.403,268,2.779,271,0.687,272,0.554,277,1.891,297,1.472,298,0.921,300,0.687,322,1.89,352,2.184,385,1.097,436,0.812,447,2.128,452,4.947,589,2.881,617,2.277,618,2.31,721,3.7,767,3.344,790,2.31,833,3.449,922,1.148,1001,3.032,1018,2.07,1022,3.317,1025,3.317,1034,2.804,1093,1.89,1128,2.043,1129,3.317,1130,3.317,1139,2.493,1142,3.317,1144,4.675,1157,2.493,1159,2.615,1164,2.493,1168,2.493,1239,1.89,1700,2.236,1757,2.493,1921,3.947,1924,3.224,1925,3.951,1926,1.89,1928,2.804,1929,3.427,1935,1.557,1942,4.411,1948,4.88,1964,4.897,1968,5.181,2003,3.7,2006,3.317,2008,4.376,2054,7.312,2055,4.28,2056,4.28,2057,5.103,2058,6.862,2059,6.54,2060,4.28,2061,4.28,2062,2.884,2063,2.884,2064,2.884,2065,4.28,2066,2.493,2067,4.28,2068,4.28,2069,3.7,2070,4.28,2071,2.884,2072,2.493,2073,2.884,2074,2.493,2075,2.884,2076,2.884,2077,2.884,2078,2.884,2079,2.884,2080,4.28,2081,4.28,2082,2.884,2083,2.884,2084,2.884,2085,2.884,2086,2.884]],["title/classes/WeatherStationConfig.html",[104,0.05,1929,1.846]],["body/classes/WeatherStationConfig.html",[0,0.238,2,0.093,3,0.067,7,0.055,11,0.22,13,0.289,30,0.331,31,0.684,32,1.62,41,0.706,42,0.429,47,0.521,49,0.653,50,0.717,51,0.505,52,0.017,53,0.404,54,0.751,55,0.419,56,1.082,58,0.799,61,1.044,66,1.665,67,1.696,71,0.57,73,0.713,77,1.2,80,1.211,94,1.048,97,0.274,98,0.107,102,0.602,103,0.119,104,0.067,105,0.779,106,1.059,107,0.808,130,0.342,135,0.593,171,1.066,177,0.481,185,1.155,190,0.009,191,0.009,193,1.319,221,0.528,222,3.285,224,1.96,225,1.044,233,2.302,235,4.193,244,1.268,254,1.644,260,1.388,267,1.622,277,2.087,289,2.461,300,1.66,327,1.015,334,1.549,385,1.092,407,2.302,409,3.071,410,2.226,411,2.062,435,2.67,436,2.112,447,1.197,453,1.865,487,2.797,492,2.797,495,2.934,497,2.934,498,2.934,499,2.934,500,2.934,501,1.549,576,1.969,592,2.588,595,2.911,597,1.549,616,1.464,617,1.771,668,3.264,682,3.112,769,1.252,778,2.724,779,1.464,780,1.388,833,1.753,915,2.794,917,2.443,920,1.753,921,1.753,922,1.142,923,2.461,924,1.881,925,1.753,926,1.753,933,1.753,936,1.464,940,1.881,941,2.033,942,2.605,943,1.549,944,1.549,945,3.021,947,2.033,948,2.605,958,2.033,959,2.033,961,2.033,962,2.033,964,4.615,965,4.859,967,4.859,968,3.021,969,3.021,1271,1.549,1383,5.076,1384,4.888,1385,4.888,1790,2.225,1924,1.255,1929,3.244,1991,2.225,1992,2.481,1993,2.481,1994,2.481,1995,2.481,1996,2.481,1997,2.481,1998,2.481,1999,2.481,2000,2.481,2001,2.481,2002,2.481,2004,2.481,2006,2.225,2008,2.225,2014,5.406,2019,5.406,2021,2.481,2026,4.366,2027,4.366,2029,2.225,2030,3.686,2031,5.451,2032,2.481,2033,2.481,2034,2.481,2035,2.481,2036,2.481,2037,2.481,2038,2.481,2039,2.481,2040,2.481,2041,2.481,2042,6.411,2043,2.481,2044,6.411,2045,2.481,2046,6.411,2047,2.481,2048,2.481,2049,2.481,2050,2.481,2051,6.411,2052,4.868,2053,2.481,2087,4.264,2088,2.87,2089,2.87,2090,2.87,2091,2.87]],["title/components/WeatherStationSidebarComponent.html",[0,0.178,184,0.641]],["body/components/WeatherStationSidebarComponent.html",[0,0.36,1,0.622,2,0.12,3,0.087,4,0.711,5,0.743,6,0.681,7,0.07,11,0.303,12,0.681,13,0.691,19,0.821,20,0.941,22,0.743,23,1.284,24,1.225,25,0.86,26,0.821,28,0.821,30,0.287,31,0.821,32,1.44,34,0.609,38,1.016,40,1.581,41,0.711,42,0.514,47,0.558,49,0.783,50,0.86,51,0.9,52,0.017,53,0.599,54,0.818,55,0.747,56,1.321,58,0.441,66,1.571,71,0.711,79,1.119,87,0.514,94,1.016,97,0.288,98,0.138,102,0.776,103,0.103,104,0.088,105,0.898,112,2.11,119,0.441,120,1.027,121,1.027,122,0.983,123,1.271,124,0.743,125,1.027,126,0.594,127,0.743,128,0.594,129,0.743,130,0.609,131,0.743,132,0.622,133,0.743,134,0.594,135,0.879,136,1.271,137,0.594,138,0.743,139,0.622,140,1.178,141,0.622,142,1.178,143,0.622,144,1.178,145,0.622,146,0.743,147,0.622,148,0.743,149,0.622,150,0.711,151,0.622,152,0.743,153,0.622,154,0.622,155,0.594,156,0.743,157,0.622,158,0.622,159,0.743,160,0.594,161,0.743,162,0.622,163,0.567,164,0.743,165,0.567,166,0.594,167,1.027,168,0.567,169,0.681,170,0.622,171,1.139,172,0.681,173,1.079,174,0.594,175,0.743,176,0.622,177,0.417,178,0.651,179,0.622,180,0.86,181,0.743,182,0.622,183,0.622,184,1.064,185,1.221,186,0.622,187,0.622,188,0.711,189,0.743,190,0.01,191,0.01,198,2.762,215,2.077,221,0.941,242,1.218,244,1.116,250,3.061,268,2.735,271,0.881,272,0.711,277,1.781,298,1.182,327,1.218,385,1.407,436,1.042,447,2.446,457,3.126,617,2.042,672,4.906,760,3.625,785,4.547,790,2.762,922,1.473,936,2.611,1018,2.475,1025,3.967,1034,3.353,1093,2.425,1128,2.622,1129,3.967,1130,3.967,1142,3.967,1171,3.199,1172,3.199,1921,3.933,1924,3.311,1925,3.843,1926,2.425,1928,4.147,1929,3.213,1935,1.997,1951,5.326,1968,5.163,2066,3.199,2072,3.199,2092,5.117,2093,3.7,2094,3.7,2095,3.7,2096,3.7,2097,3.7]],["title/components/WeatherSummaryComponent.html",[0,0.178,186,0.641]],["body/components/WeatherSummaryComponent.html",[0,0.342,1,0.636,2,0.123,3,0.089,4,0.728,5,0.76,6,0.696,7,0.072,11,0.307,12,0.696,13,0.736,19,0.834,20,0.953,22,0.76,23,1.286,24,1.227,25,0.874,26,0.834,28,0.834,30,0.294,31,0.834,32,1.244,34,0.619,38,1.026,41,0.723,42,0.523,47,0.538,49,0.796,50,1.074,51,1.044,52,0.017,53,0.634,54,0.761,55,0.866,56,1.362,58,0.451,61,2.159,71,0.683,80,1.647,87,0.825,94,0.953,97,0.297,98,0.141,102,0.794,103,0.106,104,0.05,105,0.978,106,1.291,119,0.451,120,1.044,121,1.044,122,0.999,123,1.283,124,0.76,125,1.044,126,0.608,127,0.76,128,0.608,129,0.76,130,0.619,131,0.76,132,0.636,133,0.76,134,0.608,135,0.888,136,1.283,137,0.608,138,0.76,139,0.636,140,1.192,141,0.636,142,1.192,143,0.636,144,1.192,145,0.636,146,0.76,147,0.636,148,0.76,149,0.636,150,0.728,151,0.636,152,0.76,153,0.636,154,0.636,155,0.608,156,0.76,157,0.636,158,0.636,159,0.76,160,0.608,161,0.76,162,0.636,163,0.58,164,0.76,165,0.58,166,0.608,167,1.044,168,0.58,169,0.696,170,0.636,171,1.151,172,0.696,173,1.092,174,0.608,175,0.76,176,0.636,177,0.72,178,0.666,179,0.636,180,0.874,181,0.76,182,0.636,183,0.636,184,0.636,185,0.58,186,1.074,187,0.636,188,0.728,189,0.76,190,0.011,191,0.011,215,1.948,216,3.091,244,1.213,298,1.209,327,1.237,385,1.44,430,1.977,436,1.066,441,2.937,460,3.964,616,3.029,617,2.067,618,2.806,922,1.507,936,2.652,1018,2.514,1134,3.683,1138,3.417,1140,4.855,1141,3.683,1156,3.683,1158,2.806,1159,3.176,1160,3.683,1161,3.406,1162,3.683,1173,2.682,1181,2.682,1187,2.682,1188,3.406,1189,4.029,1190,4.029,1191,2.481,1192,3.273,1193,4.029,1194,3.273,1196,3.273,1197,3.273,1372,3.273,1626,4.494,1839,3.273,1921,3.825,1924,3.376,1935,2.043,1965,5.493,2014,4.029,2019,4.029,2026,4.029,2027,4.029,2074,3.273,2098,5.198,2099,3.786,2100,3.786,2101,3.786,2102,3.786]],["title/components/WikiButtonComponent.html",[0,0.178,187,0.641]],["body/components/WikiButtonComponent.html",[0,0.353,1,0.74,2,0.143,3,0.103,4,0.847,5,0.885,6,0.81,7,0.084,10,3.122,11,0.228,12,1.354,13,0.578,14,2.783,15,2.803,16,3.893,19,0.923,20,1.028,22,0.885,23,1.297,24,1.237,25,0.967,26,0.923,27,4.461,28,0.923,29,4.461,30,0.342,34,0.685,38,1.09,39,3.516,40,1.617,41,0.606,42,0.644,47,0.528,49,0.881,50,0.967,51,0.775,52,0.017,53,0.606,54,0.525,55,0.643,58,0.525,61,2.093,71,0.545,87,0.8,89,4.461,92,3.297,97,0.185,98,0.164,103,0.123,104,0.058,119,0.525,120,1.155,121,1.155,122,1.106,123,1.364,124,0.885,125,1.155,126,0.707,127,0.885,128,0.707,129,0.885,130,0.525,131,0.885,132,0.74,133,0.885,134,0.707,135,0.944,136,1.364,137,0.707,138,0.885,139,0.74,140,1.286,141,0.74,142,1.286,143,0.74,144,1.286,145,0.74,146,0.885,147,0.74,148,0.885,149,0.74,150,0.847,151,0.74,152,0.885,153,0.74,154,0.74,155,0.707,156,0.885,157,0.74,158,0.74,159,0.885,160,0.707,161,0.885,162,0.74,163,0.675,164,0.885,165,0.675,166,0.707,167,1.155,168,0.675,169,0.81,170,0.74,171,1.09,172,0.81,173,1.178,174,0.707,175,0.885,176,0.74,177,0.497,178,0.775,179,0.74,180,0.967,181,0.885,182,0.74,183,0.74,184,0.74,185,0.675,186,0.74,187,1.142,188,1.475,189,0.885,190,0.012,191,0.012,221,1.058,225,2.679,244,0.967,382,5.464,432,3.667,943,2.378,2103,6.093,2104,5.754,2105,5.754,2106,4.406,2107,4.406,2108,5.754,2109,5.754,2110,4.406,2111,5.754,2112,4.406,2113,4.406]],["title/coverage.html",[2114,4.518]],["body/coverage.html",[0,0.373,1,0.635,7,0.072,8,4.9,9,2.93,10,4.203,33,1.737,41,0.358,52,0.017,54,0.45,104,0.095,126,0.607,128,0.607,130,0.45,132,0.635,134,0.607,137,0.607,139,0.635,141,0.635,143,0.635,145,0.635,147,0.635,149,0.635,151,0.635,153,0.635,154,0.635,157,0.635,160,0.607,162,0.635,163,0.579,165,0.579,168,0.579,170,0.635,172,0.955,173,1.272,174,0.607,176,0.635,177,0.585,178,0.665,179,0.635,180,1.073,182,0.635,183,0.635,184,0.635,185,0.795,186,0.635,187,0.635,190,0.011,191,0.011,192,3.268,215,1.02,300,0.9,381,2.93,382,2.93,383,4.203,395,2.93,414,2.93,432,2.04,441,1.737,574,2.678,575,4.09,576,2.079,577,3.679,578,3.679,579,4.09,590,1.737,667,4.026,682,1.576,709,4.489,710,2.93,711,3.268,757,2.678,758,4.598,769,2.118,781,2.678,913,2.166,914,4.026,922,1.505,923,1.828,926,2.309,927,2.93,989,3.268,1005,2.93,1006,4.489,1013,2.309,1026,5.211,1081,6.328,1110,2.93,1114,2.93,1128,4.203,1138,1.929,1187,4.203,1201,3.268,1276,3.268,1285,2.678,1294,2.93,1306,3.268,1314,2.309,1315,3.268,1340,2.678,1363,2.93,1364,3.268,1387,3.268,1388,3.268,1417,4.598,1473,3.268,1500,3.268,1532,3.268,1544,3.268,1558,3.268,1559,3.268,1623,3.268,1624,2.93,1625,3.268,1631,3.268,1648,3.268,1676,2.678,1678,3.268,1688,4.026,1723,2.678,1737,2.309,1758,3.268,1776,3.268,1777,4.026,1809,6.124,1878,2.93,1921,3.895,1922,3.902,1923,3.887,1924,1.654,1929,1.828,1937,3.268,1965,2.93,1966,3.268,1968,3.679,1969,2.93,1971,3.268,1991,4.026,2029,2.93,2103,3.268,2114,3.268,2115,3.268,2116,6.386,2117,3.78,2118,6.386,2119,6.694,2120,5.193,2121,3.78,2122,7.953,2123,3.78,2124,5.193,2125,3.78,2126,7.084,2127,6.694,2128,3.78,2129,5.193,2130,3.78,2131,3.78,2132,3.78,2133,3.78,2134,3.78,2135,3.78,2136,3.78,2137,3.78,2138,3.78,2139,7.084,2140,3.78,2141,3.78,2142,5.193,2143,3.78,2144,6.386,2145,3.78,2146,5.932,2147,3.78,2148,3.78,2149,5.193,2150,6.916,2151,3.78,2152,3.78,2153,3.78,2154,3.78,2155,3.78,2156,6.694,2157,3.78,2158,3.78,2159,3.78,2160,3.78,2161,5.932,2162,3.78,2163,3.78,2164,3.78,2165,3.78,2166,3.78,2167,3.78]],["title/dependencies.html",[360,1.532,2168,3.178]],["body/dependencies.html",[52,0.017,98,0.212,101,2.908,190,0.014,191,0.014,228,3.076,296,3.265,297,3.447,360,1.9,362,2.955,377,2.619,415,4.418,780,3.267,1239,3.734,1242,5.101,1243,4.786,1293,4.926,1471,4.926,1472,4.418,1739,4.038,1964,4.418,2169,5.699,2170,7.931,2171,5.699,2172,6.755,2173,5.699,2174,6.755,2175,5.699,2176,5.699,2177,4.926,2178,5.699,2179,5.699,2180,5.699,2181,5.699,2182,5.699,2183,5.699,2184,5.699,2185,5.699,2186,5.699,2187,5.699,2188,5.699,2189,5.699,2190,5.699,2191,5.699,2192,5.699,2193,5.699,2194,5.699,2195,6.755,2196,4.926,2197,5.699,2198,5.699]],["title/miscellaneous/enumerations.html",[2199,2.747,2200,3.972]],["body/miscellaneous/enumerations.html",[30,0.454,41,0.553,52,0.014,80,1.39,190,0.014,191,0.014,222,3.033,249,3.345,267,2.766,272,1.559,288,2.895,292,2.895,395,4.526,398,4.137,423,3.314,425,4.855,435,2.324,483,4.137,484,4.49,485,5.047,486,4.855,487,2.435,488,4.855,489,4.526,490,5.047,491,3.826,492,2.435,493,4.526,494,6.287,495,2.554,496,3.826,497,2.554,498,2.554,499,2.554,500,2.554,2199,5.047,2200,5.047,2201,7.273]],["title/index.html",[30,0.247,254,1.821,1886,2.464]],["body/index.html",[0,0.326,3,0.124,7,0.101,13,0.702,24,0.812,49,1.141,52,0.013,53,0.502,62,2.861,79,1.415,81,5.014,190,0.013,191,0.013,210,3.756,230,3.515,242,1.73,266,3.239,282,2.436,289,2.564,300,1.262,340,3.756,342,3.756,353,3.474,373,2.319,389,3.03,418,4.164,429,3.037,432,3.922,457,3.239,493,4.11,695,3.474,703,3.239,706,2.016,789,5.41,930,3.474,940,3.474,1150,4.11,1186,3.756,1417,4.11,1632,4.583,1645,4.583,1739,4.582,1864,6.441,1878,4.11,2177,6.633,2202,5.301,2203,6.979,2204,7.267,2205,5.591,2206,5.301,2207,6.468,2208,5.301,2209,4.583,2210,5.301,2211,5.301,2212,5.301,2213,5.301,2214,5.301,2215,5.301,2216,5.301,2217,5.301,2218,6.552,2219,4.583,2220,5.301,2221,6.468,2222,7.451,2223,6.979,2224,6.468,2225,5.301,2226,5.301,2227,4.583,2228,5.301,2229,6.745,2230,5.301,2231,5.301,2232,5.301,2233,5.301,2234,5.301,2235,5.301,2236,5.301,2237,5.301,2238,5.301,2239,5.301,2240,5.301,2241,6.468,2242,6.468,2243,5.301,2244,7.267,2245,5.301,2246,5.301,2247,5.301,2248,5.301,2249,5.301]],["title/license.html",[254,1.821,1886,2.464,2250,2.747]],["body/license.html",[3,0.166,4,0.665,7,0.093,13,0.747,15,1.514,32,1.557,47,0.44,51,0.609,52,0.01,55,0.826,60,2.492,65,3.135,66,1.67,69,2.835,79,1.068,94,1.109,104,0.046,122,0.665,155,0.908,177,0.693,190,0.01,191,0.01,193,1.59,200,3.708,226,2.515,229,3.242,231,4.37,237,3.054,242,0.824,261,2.983,262,2.114,267,1.316,288,1.944,292,1.944,300,1.347,327,0.824,340,4.593,345,2.452,349,4.009,352,3.307,353,2.268,354,2.992,398,2.452,418,4.216,425,3.46,429,1.983,432,3.318,440,2.683,447,1.443,451,4.387,452,5.263,457,4.386,461,2.268,463,2.268,477,1.674,484,2.268,486,5.002,488,3.46,489,2.683,491,4.028,618,1.868,712,3.46,729,2.992,790,1.868,791,5.473,795,3.786,833,2.114,860,2.683,873,3.786,883,2.683,889,4.387,990,3.786,1040,4.765,1150,5.704,1158,2.636,1159,3.96,1472,2.683,1561,4.222,1607,2.992,1611,2.992,1616,2.683,1660,2.683,1736,2.683,1737,3.457,1972,2.992,2069,2.992,2115,2.992,2196,2.992,2205,6.868,2209,6.29,2218,5.314,2219,2.992,2227,6.9,2229,2.992,2250,6.789,2251,7.775,2252,7.178,2253,3.461,2254,3.461,2255,4.883,2256,5.659,2257,4.883,2258,6.147,2259,6.147,2260,6.147,2261,3.461,2262,3.461,2263,3.461,2264,4.883,2265,3.461,2266,3.461,2267,3.461,2268,6.147,2269,7.06,2270,4.883,2271,3.461,2272,5.659,2273,4.883,2274,4.883,2275,3.461,2276,7.276,2277,6.482,2278,7.853,2279,3.461,2280,7.797,2281,4.883,2282,4.883,2283,3.461,2284,3.461,2285,5.659,2286,3.461,2287,3.461,2288,5.659,2289,4.883,2290,4.883,2291,4.883,2292,3.461,2293,4.883,2294,3.461,2295,3.461,2296,3.461,2297,3.461,2298,6.727,2299,7.276,2300,3.461,2301,3.461,2302,5.659,2303,6.913,2304,4.883,2305,3.461,2306,3.461,2307,3.461,2308,3.461,2309,3.461,2310,3.461,2311,3.461,2312,3.461,2313,3.461,2314,3.461,2315,6.482,2316,3.461,2317,6.727,2318,5.659,2319,3.461,2320,3.461,2321,3.461,2322,3.461,2323,3.461,2324,3.461,2325,5.659,2326,5.659,2327,6.727,2328,6.482,2329,4.883,2330,3.461,2331,3.461,2332,3.461,2333,3.461,2334,3.461,2335,3.461,2336,4.883,2337,5.659,2338,4.883,2339,4.883,2340,4.883,2341,4.883,2342,4.883,2343,3.461,2344,3.461,2345,3.461,2346,3.461,2347,3.461,2348,3.461,2349,3.461,2350,3.461,2351,4.883,2352,3.461,2353,4.883,2354,3.461,2355,4.883,2356,6.147,2357,3.461,2358,3.461,2359,3.461,2360,3.461,2361,3.461,2362,3.461,2363,3.461,2364,3.461,2365,4.883,2366,3.461,2367,3.461,2368,3.461,2369,3.461,2370,3.461,2371,3.461,2372,3.461,2373,3.461]],["title/modules.html",[358,1.193]],["body/modules.html",[52,0.014,190,0.014,191,0.014,358,1.355,359,3.205,368,2.729,369,2.729,370,2.729,703,3.628,928,3.205,1064,6.182,1106,3.402,1243,5.651,1263,4.207,1268,3.628,1269,3.891,1270,3.891,1271,3.205,2374,7.975,2375,8.003,2376,5.938]],["title/overview.html",[158,0.878]],["body/overview.html",[0,0.176,1,1.19,33,2.723,52,0.017,103,0.105,104,0.05,119,0.449,126,1.136,128,0.951,130,0.843,132,1.19,134,0.951,137,0.951,139,0.996,141,0.996,143,1.19,145,1.19,147,1.19,149,1.19,151,0.996,153,1.19,154,0.996,157,1.19,158,0.634,160,1.136,162,1.19,163,1.084,165,1.084,168,1.084,170,0.996,174,0.951,176,0.996,178,1.042,179,0.996,182,0.996,183,0.996,184,0.996,186,1.19,187,1.19,190,0.011,191,0.011,215,1.599,226,1.372,292,1.501,358,1.183,359,4.319,360,1.258,361,1.65,362,1.65,363,3.261,364,3.261,365,3.261,366,3.261,367,3.261,368,3.56,369,3.363,370,3.614,371,2.383,372,1.733,373,1.65,568,4.482,590,2.723,769,1.107,923,2.866,928,4.271,1013,3.62,1101,3.261,1102,3.261,1103,3.261,1104,3.261,1105,3.261,1106,4.243,1138,3.023,1263,5.625,1264,3.261,1265,3.261,1266,3.261,1267,3.261,1268,4.568,1269,5.14,1270,5.005,1271,4.327,1314,3.62,1350,3.261,1351,3.261,1358,3.261,1359,3.261,1361,3.261,1537,3.261,1538,3.261,1539,3.261,1540,3.261,1639,3.261,1640,3.261,1642,3.261,1666,3.261,1667,3.261,1669,3.261,1737,2.305,1802,3.261,1803,3.261,1805,3.261,1924,2.592,1957,3.261,1958,3.261,1960,3.261,1961,3.261,2377,3.772,2378,3.772]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":288,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.8.26",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["0.svg",{"_index":1519,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["0:15:00",{"_index":1724,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["0:30:00",{"_index":1728,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["1",{"_index":292,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1.0",{"_index":1556,"title":{},"body":{"injectables/MapService.html":{}}}],["1.1.8",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2206,"title":{},"body":{"index.html":{}}}],["1.svg",{"_index":1522,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":601,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["10/10",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1081,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["11",{"_index":2377,"title":{},"body":{"overview.html":{}}}],["11.1.3",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":569,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["12/12",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["12:00:00",{"_index":1734,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["13/13",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1726,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["15/15",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":570,"title":{},"body":{"classes/Alarm.html":{}}}],["17",{"_index":571,"title":{},"body":{"classes/Alarm.html":{}}}],["18",{"_index":572,"title":{},"body":{"classes/Alarm.html":{}}}],["18/18",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":573,"title":{},"body":{"classes/Alarm.html":{}}}],["19/19",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["1:00:00",{"_index":1730,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["2",{"_index":484,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.0.8",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["2.svg",{"_index":1524,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":721,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["20/20",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1574,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["20000",{"_index":2084,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["2007",{"_index":2255,"title":{},"body":{"license.html":{}}}],["22/22",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["24/24",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1096,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["25/25",{"_index":2125,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["28/28",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":2253,"title":{},"body":{"license.html":{}}}],["2:00:00",{"_index":1732,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["3",{"_index":486,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0.0",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1526,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/3",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1729,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["300",{"_index":1573,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["32",{"_index":2378,"title":{},"body":{"overview.html":{}}}],["4",{"_index":488,"title":{},"body":{"classes/Alarm.html":{},"injectables/MapService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.1",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":1528,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1572,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["4d0",{"_index":2349,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":2350,"title":{},"body":{"license.html":{}}}],["5",{"_index":489,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/5",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1575,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["500",{"_index":1571,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["6",{"_index":491,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.0.0",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2170,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1570,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["6:00:00",{"_index":1733,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["7",{"_index":493,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["7/7",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1569,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["8",{"_index":568,"title":{},"body":{"classes/Alarm.html":{},"overview.html":{}}}],["8/10",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1568,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["9/9",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1567,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["_",{"_index":841,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":2113,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getalarmstatusord",{"_index":401,"title":{},"body":{"classes/Alarm.html":{}}}],["_getalarmstatusorder(valu",{"_index":437,"title":{},"body":{"classes/Alarm.html":{}}}],["_getalarmstatustagsstr",{"_index":402,"title":{},"body":{"classes/Alarm.html":{}}}],["_getsubtree(alarm",{"_index":851,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initi",{"_index":941,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["_nodedata",{"_index":842,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":843,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":846,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_setfilteractiv",{"_index":1812,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["a001",{"_index":2034,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a002",{"_index":2035,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a003",{"_index":2036,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a100",{"_index":1578,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a400",{"_index":1577,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a700",{"_index":1576,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accent",{"_index":1579,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accept",{"_index":2371,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":463,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["accompani",{"_index":2328,"title":{},"body":{"license.html":{}}}],["accord",{"_index":279,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{}}}],["ack",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'nam",{"_index":127,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack.component.html",{"_index":196,"title":{},"body":{"components/AckComponent.html":{}}}],["ack.component.scss",{"_index":195,"title":{},"body":{"components/AckComponent.html":{}}}],["ack/ack.compon",{"_index":378,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcompon",{"_index":126,"title":{"components/AckComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":787,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledg",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1301,"title":{},"body":{"modules/AppModule.html":{}}}],["acknowledge/unacknowledg",{"_index":275,"title":{},"body":{"components/AckComponent.html":{}}}],["acknowledgedalarm",{"_index":197,"title":{},"body":{"components/AckComponent.html":{}}}],["acktre",{"_index":326,"title":{},"body":{"components/AckComponent.html":{}}}],["acktreecompon",{"_index":128,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions/ack/ack.compon",{"_index":1288,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/actions.modul",{"_index":1277,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.compon",{"_index":1289,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/sidenav.servic",{"_index":1240,"title":{},"body":{"components/AppComponent.html":{}}}],["actionsmodul",{"_index":359,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1204,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservic",{"_index":1205,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":698,"title":{},"body":{"components/AlarmComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/TabularViewComponent.html":{}}}],["activatedrout",{"_index":217,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["actual",{"_index":1738,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["actual_compon",{"_index":189,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ad",{"_index":1414,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["add",{"_index":1749,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["addit",{"_index":2272,"title":{},"body":{"license.html":{}}}],["address",{"_index":2361,"title":{},"body":{"license.html":{}}}],["addsvgicon",{"_index":1249,"title":{},"body":{"components/AppComponent.html":{}}}],["administr",{"_index":348,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["again",{"_index":344,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["agil",{"_index":1608,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["alarm",{"_index":41,"title":{"classes/Alarm.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'nam",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.component.html",{"_index":670,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":669,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.depend",{"_index":854,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.length",{"_index":852,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.descript",{"_index":1920,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.mod",{"_index":529,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.nam",{"_index":1916,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.operationalmod",{"_index":1917,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.servic",{"_index":1355,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.state_change_timestamp",{"_index":481,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.timestamp",{"_index":1919,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.valu",{"_index":531,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm/alarm.compon",{"_index":1675,"title":{},"body":{"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":350,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["alarm?.descript",{"_index":351,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["alarm_id",{"_index":198,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["alarm_typ",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["alarmcolorsset",{"_index":574,"title":{"classes/AlarmColorsSet.html":{}},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"coverage.html":{}}}],["alarmcompon",{"_index":130,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmconfig",{"_index":1165,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmconfig.placemark",{"_index":1180,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmheadercompon",{"_index":132,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":1780,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":1781,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":1782,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":1365,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":682,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["alarmitemflatnod",{"_index":757,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":781,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":900,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmnam",{"_index":743,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.length",{"_index":745,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.substring(0",{"_index":747,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmnamemaxs",{"_index":716,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarms_d",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["alarmsconfig",{"_index":1009,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["alarmservic",{"_index":215,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservicesubscript",{"_index":1813,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarmstoack",{"_index":199,"title":{},"body":{"components/AckComponent.html":{}}}],["alarmstoackfromselect",{"_index":786,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":1783,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmvalid",{"_index":464,"title":{},"body":{"classes/Alarm.html":{}}}],["alarmvalu",{"_index":467,"title":{},"body":{"classes/Alarm.html":{}}}],["allow",{"_index":2267,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":618,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":2293,"title":{},"body":{"license.html":{}}}],["angular",{"_index":230,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["angular/anim",{"_index":2169,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collect",{"_index":771,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["angular/cdk/tre",{"_index":773,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":2226,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":377,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1354,"title":{},"body":{"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1471,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":296,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1293,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":1239,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1448,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1451,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1458,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expans",{"_index":1466,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":1460,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1241,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1436,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1455,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1438,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1440,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":1462,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1453,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1442,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":1468,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1444,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1446,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1464,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":776,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1242,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":101,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/AppModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["anoth",{"_index":2108,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna'",{"_index":1149,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antenna.svg",{"_index":1254,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclick",{"_index":1136,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig",{"_index":913,"title":{"classes/AntennaConfig.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["antennaconfig.antenna",{"_index":1176,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig.placemark",{"_index":1099,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":938,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":939,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennamarkercompon",{"_index":134,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas'},{'nam",{"_index":138,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":994,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":993,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.join",{"_index":2076,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["antennas.servic",{"_index":1003,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.compon",{"_index":1108,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.modul",{"_index":1282,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.servic",{"_index":591,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.compon",{"_index":1291,"title":{},"body":{"modules/AppModule.html":{}}}],["antennascompon",{"_index":137,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":932,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmap",{"_index":992,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennasmapcompon",{"_index":139,"title":{"components/AntennasMapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapnam",{"_index":934,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmodul",{"_index":928,"title":{"modules/AntennasModule.html":{}},"body":{"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservic",{"_index":590,"title":{"injectables/AntennasService.html":{}},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasset",{"_index":927,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":935,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennassidebar",{"_index":991,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennassidebarcompon",{"_index":141,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycompon",{"_index":143,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":937,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.compon",{"_index":1283,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1203,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1202,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1273,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1158,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":231,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["application/json",{"_index":1425,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["applyfilt",{"_index":1820,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["applyfilter(filt",{"_index":1825,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["appmodul",{"_index":1263,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":1296,"title":{},"body":{"modules/AppModule.html":{}}}],["argument",{"_index":2305,"title":{},"body":{"license.html":{}}}],["array",{"_index":732,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["arrayoffilt",{"_index":1905,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.indexof(this.filtervalueforsetalarm",{"_index":1907,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.splice(indexofset",{"_index":1915,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["artifact",{"_index":2236,"title":{},"body":{"index.html":{}}}],["asalarm",{"_index":404,"title":{},"body":{"classes/Alarm.html":{}}}],["asalarm(json",{"_index":449,"title":{},"body":{"classes/Alarm.html":{}}}],["asc",{"_index":1887,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["asiasio",{"_index":1479,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1487,"title":{},"body":{"classes/Iasio.html":{}}}],["asset",{"_index":922,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icon",{"_index":964,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["assets/img/ia",{"_index":1251,"title":{},"body":{"components/AppComponent.html":{}}}],["associ",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["asterisc",{"_index":1750,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["attribut",{"_index":409,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["author",{"_index":2373,"title":{},"body":{"license.html":{}}}],["automat",{"_index":2233,"title":{},"body":{"index.html":{}}}],["auxiliari",{"_index":850,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["avail",{"_index":703,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennasMapComponent.html":{},"components/MapComponent.html":{},"index.html":{},"modules.html":{}}}],["axi",{"_index":604,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":2315,"title":{},"body":{"license.html":{}}}],["backendurl",{"_index":926,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["backendurls.antennas_summari",{"_index":955,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":950,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.cdb_ia",{"_index":1334,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":959,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["background",{"_index":1581,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["backup",{"_index":172,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["badg",{"_index":685,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":1469,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["base",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":1593,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["be",{"_index":262,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["becom",{"_index":1845,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["befor",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":779,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(fals",{"_index":1054,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/CdbService.html":{}}}],["below",{"_index":2274,"title":{},"body":{"license.html":{}}}],["besid",{"_index":688,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["beta.17",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1974,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["bind",{"_index":1846,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["block",{"_index":263,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["boolean",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["bootstrap",{"_index":362,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":613,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolor",{"_index":614,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstous",{"_index":629,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.clear",{"_index":648,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.mainten",{"_index":644,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_crit",{"_index":660,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_high",{"_index":657,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_low",{"_index":651,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_medium",{"_index":654,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.shelv",{"_index":636,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.unknown",{"_index":640,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorsunreli",{"_index":615,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["both",{"_index":990,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["bound",{"_index":2301,"title":{},"body":{"license.html":{}}}],["box",{"_index":1840,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["branch",{"_index":2217,"title":{},"body":{"index.html":{}}}],["bred",{"_index":1614,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["breed",{"_index":1600,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["broadcastfactor",{"_index":1330,"title":{},"body":{"injectables/CdbService.html":{}}}],["brows",{"_index":2375,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1243,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1434,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":1433,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browsermodul",{"_index":1274,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":1672,"title":{},"body":{"modules/SharedModule.html":{}}}],["build",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":862,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["built",{"_index":1148,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["button",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":125,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":380,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":2104,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:20",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2106,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:28",{"_index":2107,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:30",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:31",{"_index":1687,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:39",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:40",{"_index":1685,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:46",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:47",{"_index":1684,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:55",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:56",{"_index":1680,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:67",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:71",{"_index":1683,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:75",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:79",{"_index":1686,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":381,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":382,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons'},{'nam",{"_index":148,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1310,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1311,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.compon",{"_index":394,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscompon",{"_index":147,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":2257,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":1553,"title":{},"body":{"injectables/MapService.html":{}}}],["call",{"_index":477,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["canacknowledg",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["cancel",{"_index":357,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["canclos",{"_index":1761,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":1693,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["card",{"_index":1583,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card'},{'nam",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":1647,"title":{},"body":{"modules/OverviewModule.html":{}}}],["card.component.html",{"_index":1628,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":1627,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":1625,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1629,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:18",{"_index":1630,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card/overview",{"_index":1624,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["case",{"_index":724,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["cdb.servic",{"_index":1356,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservic",{"_index":1314,"title":{"injectables/CdbService.html":{}},"body":{"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cento",{"_index":2210,"title":{},"body":{"index.html":{}}}],["central",{"_index":1649,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":2364,"title":{},"body":{"license.html":{}}}],["chang",{"_index":429,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"index.html":{},"license.html":{}}}],["changeselectedst",{"_index":1943,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedst",{"_index":1945,"title":{},"body":{"components/WeatherComponent.html":{}}}],["channel",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["charact",{"_index":722,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["check",{"_index":282,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"classes/Iasio.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["checkbox",{"_index":782,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":805,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":806,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chevron_left",{"_index":1182,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":269,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm",{"_index":855,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":853,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":239,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chip",{"_index":1587,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["choic",{"_index":2318,"title":{},"body":{"license.html":{}}}],["choos",{"_index":2365,"title":{},"body":{"license.html":{}}}],["class",{"_index":104,"title":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"classes/Iasio.html":{},"classes/WeatherStationConfig.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["class=\"sect",{"_index":356,"title":{},"body":{"components/AckComponent.html":{}}}],["clean",{"_index":257,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["clear",{"_index":435,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["clear.svg",{"_index":965,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["clear_invalid",{"_index":1503,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":1504,"title":{},"body":{"components/LegendComponent.html":{}}}],["clearfilt",{"_index":1821,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["cli",{"_index":2204,"title":{},"body":{"index.html":{}}}],["click",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["clickedantennamark",{"_index":1023,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["client",{"_index":1389,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":925,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["client.service.t",{"_index":1388,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:13",{"_index":1397,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:22",{"_index":1404,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:32",{"_index":1402,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:48",{"_index":1408,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:63",{"_index":1410,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:77",{"_index":1399,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:91",{"_index":1412,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":1964,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["clipboardmodul",{"_index":1963,"title":{},"body":{"modules/WeatherModule.html":{}}}],["clipboardservic",{"_index":2058,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["close",{"_index":249,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_actionsmodul",{"_index":363,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declar",{"_index":364,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_export",{"_index":366,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_import",{"_index":365,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_provid",{"_index":367,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodul",{"_index":1101,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declar",{"_index":1102,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_export",{"_index":1104,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_import",{"_index":1103,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_provid",{"_index":1105,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":1264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1267,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":1265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":1266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1350,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1351,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1358,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1359,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1361,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1360,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodul",{"_index":1537,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":1538,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":1539,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_provid",{"_index":1540,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_overviewmodul",{"_index":1639,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":1640,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":1642,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":1641,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":1666,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1667,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1669,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1668,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":1802,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":1803,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":1805,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":1804,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":1957,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":1958,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":1960,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":1959,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_provid",{"_index":1961,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":1150,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collectionview",{"_index":1877,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["color",{"_index":580,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["column",{"_index":443,"title":{},"body":{"classes/Alarm.html":{}}}],["combin",{"_index":2280,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":376,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["compar",{"_index":1862,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["compat",{"_index":2196,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["complement",{"_index":1214,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc",{"_index":2247,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["componet",{"_index":704,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["comput",{"_index":2344,"title":{},"body":{"license.html":{}}}],["concern",{"_index":2362,"title":{},"body":{"license.html":{}}}],["condit",{"_index":2270,"title":{},"body":{"license.html":{}}}],["config",{"_index":1928,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["configur",{"_index":617,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connector",{"_index":1973,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'nam",{"_index":181,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.compon",{"_index":1970,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":1976,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":1975,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.t",{"_index":1971,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":1980,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":1981,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":1979,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":1983,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":1982,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weath",{"_index":1969,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["consid",{"_index":2219,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1419,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.log('error",{"_index":323,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["console.log('http",{"_index":1423,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["const",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservic",{"_index":1191,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["constructor(antennasservic",{"_index":1137,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attribut",{"_index":407,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor(formbuild",{"_index":213,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["constructor(http",{"_index":1396,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["constructor(httpcli",{"_index":1116,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["constructor(httpclientservic",{"_index":1321,"title":{},"body":{"injectables/CdbService.html":{}}}],["constructor(priv",{"_index":809,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":1654,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(servic",{"_index":972,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{}}}],["constructor(sidenavservic",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservic",{"_index":1926,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["contact",{"_index":347,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["contain",{"_index":327,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["content",{"_index":844,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{}}}],["contract",{"_index":1222,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":797,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["convert",{"_index":454,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":2299,"title":{},"body":{"license.html":{}}}],["coord",{"_index":1978,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":1988,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":1989,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordin",{"_index":933,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["cope",{"_index":1609,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["copi",{"_index":452,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["copyantenna",{"_index":2055,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyantennas(st",{"_index":2061,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyright",{"_index":2256,"title":{},"body":{"license.html":{}}}],["core",{"_index":415,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":396,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{}}}],["core_id'",{"_index":420,"title":{},"body":{"classes/Alarm.html":{}}}],["core_timestamp",{"_index":397,"title":{},"body":{"classes/Alarm.html":{}}}],["correspond",{"_index":457,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["coulmn",{"_index":1855,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["count",{"_index":336,"title":{},"body":{"components/AckComponent.html":{}}}],["counter",{"_index":1985,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["cover",{"_index":2277,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":2114,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":411,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["critic",{"_index":563,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["critical.svg",{"_index":967,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["crud",{"_index":1390,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["css",{"_index":731,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["current",{"_index":695,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"index.html":{}}}],["custom",{"_index":1216,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["cx",{"_index":605,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":607,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["d",{"_index":2335,"title":{},"body":{"license.html":{}}}],["darkcyan",{"_index":666,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["dash",{"_index":1787,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":177,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data.push(nod",{"_index":870,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data.tostringforfiltering().tolowercas",{"_index":1857,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["data/alarm",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":298,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/data.modul",{"_index":392,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":924,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["data/iasio",{"_index":1341,"title":{},"body":{"injectables/CdbService.html":{}}}],["data/routing.servic",{"_index":1173,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["databas",{"_index":515,"title":{},"body":{"classes/Alarm.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodul",{"_index":368,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":804,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["datastr",{"_index":1856,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datastr.indexof(filt",{"_index":1859,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["date",{"_index":480,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["date(t",{"_index":540,"title":{},"body":{"classes/Alarm.html":{}}}],["dateformat",{"_index":1814,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datepip",{"_index":1276,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["deactiv",{"_index":1909,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["debug",{"_index":2334,"title":{},"body":{"license.html":{}}}],["decid",{"_index":2367,"title":{},"body":{"license.html":{}}}],["declar",{"_index":361,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1224,"title":{},"body":{"components/AppComponent.html":{},"components/TabularViewComponent.html":{}}}],["deem",{"_index":2284,"title":{},"body":{"license.html":{}}}],["default",{"_index":271,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":1691,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["defin",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["definealarmcolor",{"_index":619,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["definealarmsandicon",{"_index":1368,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":1784,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["definit",{"_index":1736,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["defit",{"_index":1065,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["degrad",{"_index":490,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["delet",{"_index":1391,"title":{},"body":{"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["delete(url",{"_index":1398,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1421,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deped",{"_index":1705,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["depend",{"_index":360,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":884,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":887,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":897,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":885,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":890,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describ",{"_index":596,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destroy",{"_index":252,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":2360,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2231,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2208,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1584,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dictionari",{"_index":410,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["differ",{"_index":2359,"title":{},"body":{"license.html":{}}}],["direct",{"_index":122,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":2235,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2238,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["disableacknowledg",{"_index":204,"title":{},"body":{"components/AckComponent.html":{}}}],["dispay",{"_index":1810,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["display",{"_index":242,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":2215,"title":{},"body":{"index.html":{}}}],["displayedcolumn",{"_index":1815,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["dist",{"_index":2237,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":1604,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["distinguish",{"_index":2363,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":2265,"title":{},"body":{"license.html":{}}}],["divid",{"_index":1589,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["django",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["doc_url",{"_index":1475,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":432,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":1599,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanit",{"_index":1212,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":1700,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["doubl",{"_index":1483,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":597,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["durat",{"_index":1757,"title":{},"body":{"components/ShelveComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["dure",{"_index":2069,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["dy",{"_index":1555,"title":{},"body":{"injectables/MapService.html":{}}}],["dynam",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2346,"title":{},"body":{"license.html":{}}}],["e2",{"_index":2245,"title":{},"body":{"index.html":{}}}],["each",{"_index":1040,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/OverviewModule.html":{},"license.html":{}}}],["effect",{"_index":2330,"title":{},"body":{"license.html":{}}}],["effort",{"_index":2309,"title":{},"body":{"license.html":{}}}],["element",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["emit",{"_index":1001,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["empti",{"_index":1829,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["end",{"_index":2244,"title":{},"body":{"index.html":{}}}],["engin",{"_index":2333,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2310,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":1674,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":482,"title":{},"body":{"classes/Alarm.html":{}}}],["enumer",{"_index":2200,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1417,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":1430,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environments/environ",{"_index":1418,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["error",{"_index":322,"title":{},"body":{"components/AckComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["escap",{"_index":1841,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["etc",{"_index":1484,"title":{},"body":{"classes/Iasio.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["event",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["event.key",{"_index":1900,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["eventemitt",{"_index":767,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["everyon",{"_index":2263,"title":{},"body":{"license.html":{}}}],["everytim",{"_index":825,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["exampl",{"_index":1673,"title":{},"body":{"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["except",{"_index":2297,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":2290,"title":{},"body":{"license.html":{}}}],["execut",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["existsplacemarkdata",{"_index":1017,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["existsplacemarkdata(placemark",{"_index":1030,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["expand",{"_index":762,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":798,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expectedfilteredtablerow",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["expectedtablerow",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["explain",{"_index":2354,"title":{},"body":{"license.html":{}}}],["export",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extent",{"_index":2347,"title":{},"body":{"license.html":{}}}],["extern",{"_index":1027,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["fab",{"_index":1595,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["facil",{"_index":2303,"title":{},"body":{"license.html":{}}}],["factor",{"_index":1328,"title":{},"body":{"injectables/CdbService.html":{}}}],["fail",{"_index":294,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["faith",{"_index":2308,"title":{},"body":{"license.html":{}}}],["fals",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["favorit",{"_index":1594,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["fewer",{"_index":2324,"title":{},"body":{"license.html":{}}}],["field",{"_index":283,"title":{},"body":{"components/AckComponent.html":{},"modules/IasMaterialModule.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":610,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolor",{"_index":611,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstous",{"_index":627,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.clear",{"_index":647,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.mainten",{"_index":643,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_crit",{"_index":659,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_high",{"_index":656,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_low",{"_index":650,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_medium",{"_index":653,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.shelv",{"_index":635,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.unknown",{"_index":639,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorsunreli",{"_index":612,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["filter",{"_index":460,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replac",{"_index":1661,"title":{},"body":{"injectables/RoutingService.html":{}}}],["filter.split",{"_index":1906,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.tolowercas",{"_index":1911,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.trim",{"_index":1910,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterpred",{"_index":1816,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstr",{"_index":1817,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstring.tolowercase().split",{"_index":1858,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalu",{"_index":1893,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalue.replace('_",{"_index":1895,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalueforsetalarm",{"_index":1818,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["find",{"_index":790,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["fix",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":940,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["flat",{"_index":759,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialSandboxComponent.html":{}}}],["flatnod",{"_index":874,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":880,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":878,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":879,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":792,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":793,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":772,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":819,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flexlayoutmodul",{"_index":1470,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["fo",{"_index":328,"title":{},"body":{"components/AckComponent.html":{}}}],["focu",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focus",{"_index":1586,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["focusmonitor",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":2220,"title":{},"body":{"index.html":{}}}],["follow",{"_index":340,"title":{},"body":{"components/AckComponent.html":{},"components/ButtonsComponent.html":{},"index.html":{},"license.html":{}}}],["foreground",{"_index":1588,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["forkjoin",{"_index":1336,"title":{},"body":{"injectables/CdbService.html":{}}}],["form",{"_index":200,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":537,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["formbuild",{"_index":214,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":284,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":1741,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":280,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formsmodul",{"_index":386,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":2260,"title":{},"body":{"license.html":{}}}],["free",{"_index":2258,"title":{},"body":{"license.html":{}}}],["full",{"_index":1299,"title":{},"body":{"modules/AppModule.html":{}}}],["fullheight",{"_index":1080,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["function",{"_index":229,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["further",{"_index":2248,"title":{},"body":{"index.html":{}}}],["futur",{"_index":2368,"title":{},"body":{"license.html":{}}}],["g",{"_index":2225,"title":{},"body":{"index.html":{}}}],["gencolorstyl",{"_index":971,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["gencolorstyle(fillcolor",{"_index":621,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["gener",{"_index":418,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":254,"title":{"index.html":{},"license.html":{}},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["get(url",{"_index":1401,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":1694,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1209,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1217,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":1018,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["getalarm(alarm_id",{"_index":1034,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getalarm(keyword",{"_index":2098,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["getalarmnam",{"_index":715,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["getalarmvalid",{"_index":465,"title":{},"body":{"classes/Alarm.html":{}}}],["getalarmvalu",{"_index":468,"title":{},"body":{"classes/Alarm.html":{}}}],["getantenna",{"_index":2003,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["getantennagroup",{"_index":1019,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getantennanam",{"_index":1131,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(antennaconfig",{"_index":1146,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(this.selectedantenna",{"_index":1183,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennas(st",{"_index":2006,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["getantennasbygroup",{"_index":1132,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennasbygroup(groupid",{"_index":1152,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennasgroup",{"_index":1133,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getbuttontooltiptext",{"_index":1679,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":838,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getclass",{"_index":672,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getcolor",{"_index":622,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["getconfigurationdata",{"_index":1319,"title":{},"body":{"injectables/CdbService.html":{}}}],["getfilt",{"_index":1872,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getimag",{"_index":673,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getlevel",{"_index":834,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":958,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getmissingacksinfo",{"_index":205,"title":{},"body":{"components/AckComponent.html":{}}}],["getnam",{"_index":470,"title":{},"body":{"classes/Alarm.html":{}}}],["getopacityclass",{"_index":1020,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getopacityclass(antennaconfig",{"_index":1037,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getoperationalmod",{"_index":472,"title":{},"body":{"classes/Alarm.html":{}}}],["getpath",{"_index":1977,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getplacemarkobject",{"_index":1021,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getplacemarkobject(placemark",{"_index":1041,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getrefreshrateparamet",{"_index":1320,"title":{},"body":{"injectables/CdbService.html":{}}}],["getresponsemessagetext",{"_index":206,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitl",{"_index":1695,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getstatu",{"_index":474,"title":{},"body":{"classes/Alarm.html":{}}}],["getsvgpath",{"_index":1545,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":1548,"title":{},"body":{"injectables/MapService.html":{}}}],["getter",{"_index":476,"title":{},"body":{"classes/Alarm.html":{}}}],["gettimestamp",{"_index":478,"title":{},"body":{"classes/Alarm.html":{}}}],["gettitletext",{"_index":1696,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["gettogglestatu",{"_index":1875,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["gettreedata",{"_index":847,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["give",{"_index":2325,"title":{},"body":{"license.html":{}}}],["given",{"_index":833,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["global",{"_index":1380,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["gnu",{"_index":2251,"title":{},"body":{"license.html":{}}}],["go",{"_index":1186,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"index.html":{}}}],["good",{"_index":2307,"title":{},"body":{"license.html":{}}}],["gotoantenna",{"_index":1651,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gototablefilteredbi",{"_index":1134,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1156,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweath",{"_index":1652,"title":{},"body":{"injectables/RoutingService.html":{}}}],["govern",{"_index":2279,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2276,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2376,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1033,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["gray",{"_index":665,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["green",{"_index":661,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["group",{"_index":931,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{}}}],["group.github.io/ia",{"_index":2214,"title":{},"body":{"index.html":{}}}],["groupid",{"_index":1154,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["hammerj",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1392,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1403,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["haschild",{"_index":840,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":845,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["header",{"_index":712,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["header'},{'nam",{"_index":133,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.compon",{"_index":1677,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":714,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":713,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.t",{"_index":711,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:105",{"_index":726,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":719,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":725,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":723,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":718,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":733,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:50",{"_index":730,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:86",{"_index":734,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:94",{"_index":735,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":710,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.t",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["health",{"_index":150,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":1278,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":1268,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":149,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":789,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":2275,"title":{},"body":{"license.html":{}}}],["hide",{"_index":246,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hidespinn",{"_index":207,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["high",{"_index":564,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["highlight",{"_index":1951,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":1590,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["hour",{"_index":1731,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":1582,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["html",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":943,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":2232,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":942,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["httpclientmodul",{"_index":1353,"title":{},"body":{"modules/DataModule.html":{}}}],["httpclientservic",{"_index":923,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1416,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httpmodul",{"_index":1292,"title":{},"body":{"modules/AppModule.html":{}}}],["httpoption",{"_index":1424,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1405,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":2262,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":2213,"title":{},"body":{"index.html":{}}}],["hum",{"_index":2042,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humid",{"_index":2014,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["humidityimageset",{"_index":1992,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humidityimageunreliableset",{"_index":1993,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["hunt",{"_index":1615,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["i.",{"_index":1830,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["ia",{"_index":389,"title":{},"body":{"modules/ActionsModule.html":{},"classes/Alarm.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["ias_antenna",{"_index":1232,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1382,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1229,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_tabl",{"_index":1233,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_typ",{"_index":1476,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weath",{"_index":1231,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfigur",{"_index":1316,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasconfigurationdata",{"_index":1343,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":1317,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":2202,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":1340,"title":{"classes/Iasio.html":{}},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodul",{"_index":369,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1318,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":668,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["iconset",{"_index":1366,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1367,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":277,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["identifi",{"_index":414,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"coverage.html":{}}}],["imag",{"_index":676,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":677,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["implement",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":2261,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1561,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["incorpor",{"_index":2268,"title":{},"body":{"license.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indexofset",{"_index":1914,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["indic",{"_index":260,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inform",{"_index":352,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["init",{"_index":1792,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initi",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":1332,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["inject",{"_index":769,"title":{"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":2322,"title":{},"body":{"license.html":{}}}],["inner",{"_index":270,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["input",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instal",{"_index":2218,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":2228,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":221,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instead",{"_index":812,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["instruct",{"_index":2207,"title":{},"body":{"index.html":{}}}],["integr",{"_index":1237,"title":{},"body":{"components/AppComponent.html":{}}}],["interact",{"_index":1025,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["interfac",{"_index":1737,"title":{"interfaces/TimeoutOption.html":{}},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["intern",{"_index":1002,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["inu",{"_index":1598,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["invalid",{"_index":235,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["invalid.svg",{"_index":1514,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["invok",{"_index":2306,"title":{},"body":{"license.html":{}}}],["involv",{"_index":1044,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["io_id",{"_index":1477,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicon",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["isdis",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isexpand",{"_index":836,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isnavigationcompact",{"_index":1206,"title":{},"body":{"components/AppComponent.html":{}}}],["isol",{"_index":2292,"title":{},"body":{"license.html":{}}}],["isselect",{"_index":1022,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":1163,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(antennaconfig",{"_index":1045,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["isselected(stationconfig",{"_index":2065,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["issu",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isubscript",{"_index":921,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["isvalidalarm",{"_index":405,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidalarm(json",{"_index":455,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidiasio",{"_index":1480,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1489,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":760,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["item.icon",{"_index":1261,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1259,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":1262,"title":{},"body":{"components/AppComponent.html":{}}}],["japan",{"_index":1606,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["join",{"_index":535,"title":{},"body":{"classes/Alarm.html":{}}}],["jqueri",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":453,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["json.hasownproperty('ack",{"_index":511,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_id",{"_index":503,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_timestamp",{"_index":506,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('depend",{"_index":513,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('descript",{"_index":509,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('doc_url",{"_index":1494,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1493,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1491,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('mod",{"_index":505,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('running_id",{"_index":504,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('shelv",{"_index":512,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('short_desc",{"_index":1492,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('state_change_timestamp",{"_index":507,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('url",{"_index":510,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valid",{"_index":508,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valu",{"_index":502,"title":{},"body":{"classes/Alarm.html":{}}}],["json['ack",{"_index":526,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_id",{"_index":518,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_timestamp",{"_index":521,"title":{},"body":{"classes/Alarm.html":{}}}],["json['depend",{"_index":528,"title":{},"body":{"classes/Alarm.html":{}}}],["json['descript",{"_index":524,"title":{},"body":{"classes/Alarm.html":{}}}],["json['doc_url",{"_index":1499,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1498,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1496,"title":{},"body":{"classes/Iasio.html":{}}}],["json['mod",{"_index":520,"title":{},"body":{"classes/Alarm.html":{}}}],["json['running_id",{"_index":519,"title":{},"body":{"classes/Alarm.html":{}}}],["json['shelv",{"_index":527,"title":{},"body":{"classes/Alarm.html":{}}}],["json['short_desc",{"_index":1497,"title":{},"body":{"classes/Iasio.html":{}}}],["json['state_change_timestamp",{"_index":522,"title":{},"body":{"classes/Alarm.html":{}}}],["json['url",{"_index":525,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valid",{"_index":523,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valu",{"_index":517,"title":{},"body":{"classes/Alarm.html":{}}}],["june",{"_index":2254,"title":{},"body":{"license.html":{}}}],["k",{"_index":863,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":2243,"title":{},"body":{"index.html":{}}}],["keep",{"_index":794,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["key",{"_index":334,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["keyword",{"_index":1839,"title":{},"body":{"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["l",{"_index":1987,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["last",{"_index":1918,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["later",{"_index":873,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1472,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{},"license.html":{}}}],["left",{"_index":1236,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":152,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1501,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1502,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":1807,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":151,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":729,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"license.html":{}}}],["lesser",{"_index":2252,"title":{},"body":{"license.html":{}}}],["level",{"_index":763,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":702,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["librari",{"_index":2227,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":2250,"title":{"license.html":{}},"body":{"license.html":{}}}],["lightblu",{"_index":664,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["limit",{"_index":2319,"title":{},"body":{"license.html":{}}}],["line",{"_index":1972,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"license.html":{}}}],["link",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linkflat",{"_index":1620,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkicon",{"_index":1621,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkmini",{"_index":1622,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkrais",{"_index":1619,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linux",{"_index":2211,"title":{},"body":{"index.html":{}}}],["list",{"_index":267,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":948,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["liter",{"_index":1124,"title":{},"body":{"injectables/AntennasService.html":{}}}],["load",{"_index":227,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["loadalarmsconfig",{"_index":949,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["loadimag",{"_index":962,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadweatherstationsconfig",{"_index":2004,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["local",{"_index":1878,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["locale.date_format",{"_index":1882,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locale.timezon",{"_index":1884,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locat",{"_index":915,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["look",{"_index":1560,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["low",{"_index":566,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["low.svg",{"_index":1383,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["m",{"_index":1990,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macro",{"_index":2321,"title":{},"body":{"license.html":{}}}],["made",{"_index":2287,"title":{},"body":{"license.html":{}}}],["main",{"_index":917,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["maint.svg",{"_index":1385,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mainten",{"_index":487,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":969,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["make",{"_index":2281,"title":{},"body":{"license.html":{}}}],["manag",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":2340,"title":{},"body":{"license.html":{}}}],["map",{"_index":576,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["map'},{'nam",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map.compon",{"_index":1109,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":1008,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1007,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["map.component.t",{"_index":1006,"title":{},"body":{"components/AntennasMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:103",{"_index":1031,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:118",{"_index":1035,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:126",{"_index":1036,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:135",{"_index":1038,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:152",{"_index":1042,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:163",{"_index":1046,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:176",{"_index":1050,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:20",{"_index":1028,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:23",{"_index":1029,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:26",{"_index":1055,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:30",{"_index":1060,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:33",{"_index":1061,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:36",{"_index":1058,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:39",{"_index":1063,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:42",{"_index":1053,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:45",{"_index":1051,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:48",{"_index":1024,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:58",{"_index":1062,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:59",{"_index":1052,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:60",{"_index":1057,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:67",{"_index":1048,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:75",{"_index":1043,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.servic",{"_index":1543,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antenna",{"_index":1005,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.compon",{"_index":1542,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.modul",{"_index":1112,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/map.servic",{"_index":1066,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map/weath",{"_index":1966,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapantennaconfig",{"_index":1175,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["mapcompon",{"_index":153,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":1010,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["mapdata['placemark",{"_index":1071,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapdata['placemarks']['pad",{"_index":1072,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapdataavail",{"_index":1011,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["mapdataprocess",{"_index":1546,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroup",{"_index":1550,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodul",{"_index":1106,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["mapplacemark",{"_index":1012,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapservic",{"_index":1013,"title":{"injectables/MapService.html":{}},"body":{"components/AntennasMapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":592,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["marker'},{'nam",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.compon",{"_index":1113,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":593,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":594,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.t",{"_index":579,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:109",{"_index":981,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:12",{"_index":582,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:120",{"_index":982,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:15",{"_index":586,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:178",{"_index":980,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:18",{"_index":587,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:19",{"_index":1952,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":1932,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:21",{"_index":585,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:23",{"_index":1927,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":584,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:27",{"_index":588,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:28",{"_index":1950,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:30",{"_index":583,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:31",{"_index":1934,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":1933,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:33",{"_index":581,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:36",{"_index":1956,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":1955,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:38",{"_index":1931,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:43",{"_index":1954,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:45",{"_index":1930,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:50",{"_index":1953,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:55",{"_index":974,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:58",{"_index":977,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:61",{"_index":979,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:64",{"_index":975,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:67",{"_index":976,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:70",{"_index":978,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:73",{"_index":986,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:76",{"_index":987,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:79",{"_index":985,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:82",{"_index":973,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:90",{"_index":988,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:91",{"_index":984,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:99",{"_index":983,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker/antenna",{"_index":578,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weath",{"_index":1923,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markerimageset",{"_index":1994,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markerimageunreliableset",{"_index":1995,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markers/antenna",{"_index":577,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weath",{"_index":1922,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":2216,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":1447,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1450,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":191,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matcheckboxmodul",{"_index":1457,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":155,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.modul",{"_index":391,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.t",{"_index":1432,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":390,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialsandboxcompon",{"_index":154,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":1465,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodul",{"_index":1459,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":1449,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistri",{"_index":1211,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":1435,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1454,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1437,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1439,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodul",{"_index":1461,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1223,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodul",{"_index":1452,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1441,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbar",{"_index":2059,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["matsnackbarmodul",{"_index":1467,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsort",{"_index":1867,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["matsortmodul",{"_index":1443,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattabl",{"_index":1869,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattabledatasourc",{"_index":1851,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattablemodul",{"_index":1445,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1463,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":775,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":821,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":774,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":814,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1456,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":720,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/MapService.html":{}}}],["maxci",{"_index":1557,"title":{},"body":{"injectables/MapService.html":{}}}],["maximum",{"_index":728,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["md",{"_index":690,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["mean",{"_index":2289,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":2314,"title":{},"body":{"license.html":{}}}],["meant",{"_index":1671,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":2341,"title":{},"body":{"license.html":{}}}],["medium",{"_index":565,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["medium.svg",{"_index":2052,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mention",{"_index":287,"title":{},"body":{"components/AckComponent.html":{}}}],["menu",{"_index":1235,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":201,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["min",{"_index":1554,"title":{},"body":{"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{}}}],["mini",{"_index":1596,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["minim",{"_index":2288,"title":{},"body":{"license.html":{}}}],["minut",{"_index":1727,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["miscellan",{"_index":2199,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":238,"title":{},"body":{"components/AckComponent.html":{}}}],["missedack",{"_index":202,"title":{},"body":{"components/AckComponent.html":{}}}],["mockalarm",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["mockalarmdata",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["mockiasio",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["mockimagesset",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":398,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["model",{"_index":705,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"modules/DataModule.html":{}}}],["modif",{"_index":2302,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":791,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["modul",{"_index":358,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["more",{"_index":1632,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountain",{"_index":1612,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["mouseev",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["multipl",{"_index":808,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["multipli",{"_index":1327,"title":{},"body":{"injectables/CdbService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["navig",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["navigationsidenavitem",{"_index":1207,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":2086,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["nearbi",{"_index":2008,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["necessari",{"_index":2348,"title":{},"body":{"license.html":{}}}],["need",{"_index":447,"title":{},"body":{"classes/Alarm.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nest",{"_index":788,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":796,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["network",{"_index":1638,"title":{},"body":{"components/OverviewComponent.html":{}}}],["new",{"_index":300,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["ng",{"_index":2177,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["ngmodul",{"_index":375,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":811,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ngondestroy",{"_index":208,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":297,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":388,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":219,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["noalarmstoack",{"_index":329,"title":{},"body":{"components/AckComponent.html":{}}}],["node",{"_index":761,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":868,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":837,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":866,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":835,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":2221,"title":{},"body":{"index.html":{}}}],["none",{"_index":2316,"title":{},"body":{"license.html":{}}}],["normal",{"_index":802,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["noselecteddescendants(nod",{"_index":896,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":1645,"title":{},"body":{"modules/OverviewModule.html":{},"index.html":{}}}],["noth",{"_index":1142,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["notic",{"_index":2327,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":1144,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["npm",{"_index":2222,"title":{},"body":{"index.html":{}}}],["null",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":237,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/ShelveComponent.html":{},"license.html":{}}}],["numer",{"_index":2320,"title":{},"body":{"license.html":{}}}],["object",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["object.assign(thi",{"_index":501,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["object.entries(respons",{"_index":335,"title":{},"body":{"components/AckComponent.html":{}}}],["object.keys(this.alarmsconfig",{"_index":1094,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["object.keys(this.antennasservice.antennasconfig",{"_index":1177,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["object.keys(this.placemarks).indexof(placemark_id",{"_index":1092,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["observ",{"_index":778,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/OverviewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["observableforkjoin",{"_index":1337,"title":{},"body":{"injectables/CdbService.html":{}}}],["obtain",{"_index":1056,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["occur",{"_index":1420,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["ofobserv",{"_index":777,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":839,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["on",{"_index":2336,"title":{},"body":{"license.html":{}}}],["on/off",{"_index":1843,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["onchang",{"_index":768,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["onclick",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":1167,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclick(antennaconfig",{"_index":1049,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["onclick(ev",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(stationconfig",{"_index":2067,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["onclos",{"_index":209,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":194,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["onhov",{"_index":1949,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onkeyup",{"_index":1822,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["onkeyup(ev",{"_index":1836,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["opac",{"_index":1039,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["open/clos",{"_index":1769,"title":{},"body":{"injectables/SidenavService.html":{}}}],["opensnackbar",{"_index":2056,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["opensnackbar(messag",{"_index":2068,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["oper",{"_index":425,"title":{},"body":{"classes/Alarm.html":{},"injectables/HttpClientService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":423,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.mainten",{"_index":641,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode.shuttedown",{"_index":642,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode.unknown",{"_index":638,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode[this.mod",{"_index":534,"title":{},"body":{"classes/Alarm.html":{}}}],["opt_ci",{"_index":599,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["opt_cx",{"_index":598,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["optionalalarmnam",{"_index":717,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["order",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{}}}],["origin",{"_index":1603,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["ot",{"_index":1827,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["otherwis",{"_index":2282,"title":{},"body":{"license.html":{}}}],["out",{"_index":373,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1219,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["output",{"_index":589,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MapComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["over",{"_index":1307,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["overview",{"_index":158,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":161,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":1634,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1633,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1252,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.compon",{"_index":1646,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":1279,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":1287,"title":{},"body":{"modules/AppModule.html":{}}}],["overviewcardcompon",{"_index":157,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":160,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":1269,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["packag",{"_index":2168,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1151,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["page",{"_index":2105,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["panel",{"_index":1760,"title":{},"body":{"injectables/SidenavService.html":{}}}],["panelclass",{"_index":2085,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panelclick",{"_index":2057,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["param",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["paramet",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["parammap",{"_index":305,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":307,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":427,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["part",{"_index":889,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":2286,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1660,"title":{},"body":{"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["path",{"_index":1059,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/AppModule.html":{},"injectables/MapService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1298,"title":{},"body":{"modules/AppModule.html":{}}}],["pathsgroup",{"_index":1014,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["pathstr",{"_index":1984,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pend",{"_index":686,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":193,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["perman",{"_index":2372,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":2273,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2264,"title":{},"body":{"license.html":{}}}],["persist",{"_index":346,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["pk",{"_index":514,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["place",{"_index":440,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"license.html":{}}}],["placemark",{"_index":595,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/MapService.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["placemark_id",{"_index":1091,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["placemarksgroup",{"_index":1015,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["pleas",{"_index":342,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":1474,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.j",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":2291,"title":{},"body":{"license.html":{}}}],["posit",{"_index":602,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["possibl",{"_index":494,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["post",{"_index":1393,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1407,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["power",{"_index":1637,"title":{},"body":{"components/OverviewComponent.html":{}}}],["present",{"_index":2342,"title":{},"body":{"license.html":{}}}],["press",{"_index":1838,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["primari",{"_index":180,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["prioriti",{"_index":438,"title":{},"body":{"classes/Alarm.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priorities.indexof(prior",{"_index":567,"title":{},"body":{"classes/Alarm.html":{}}}],["priority_0",{"_index":1505,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":1506,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":1507,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":1508,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":1509,"title":{},"body":{"components/LegendComponent.html":{}}}],["privat",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":345,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["process",{"_index":1415,"title":{},"body":{"injectables/HttpClientService.html":{},"components/StatusViewComponent.html":{}}}],["prod",{"_index":2239,"title":{},"body":{"index.html":{}}}],["produc",{"_index":2285,"title":{},"body":{"license.html":{}}}],["product",{"_index":2240,"title":{},"body":{"index.html":{}}}],["proess",{"_index":1413,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["program",{"_index":2295,"title":{},"body":{"license.html":{}}}],["project",{"_index":2203,"title":{},"body":{"index.html":{}}}],["promin",{"_index":2326,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1406,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1422,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properli",{"_index":2345,"title":{},"body":{"license.html":{}}}],["properti",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["protractor",{"_index":2246,"title":{},"body":{"index.html":{}}}],["provid",{"_index":226,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":929,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/SidenavService.html":{}}}],["proxi",{"_index":2366,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":2370,"title":{},"body":{"license.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":2356,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":461,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":1793,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1394,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1409,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":609,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["radiu",{"_index":608,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["rais",{"_index":1585,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["rate",{"_index":1326,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":387,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":826,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["read_url",{"_index":1395,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":1411,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readm",{"_index":2249,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1755,"title":{},"body":{"components/ShelveComponent.html":{}}}],["receiv",{"_index":451,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"license.html":{}}}],["recombin",{"_index":2338,"title":{},"body":{"license.html":{}}}],["record",{"_index":872,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":800,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":663,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":1140,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":1297,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["refresh",{"_index":1325,"title":{},"body":{"injectables/CdbService.html":{}}}],["refreshr",{"_index":1329,"title":{},"body":{"injectables/CdbService.html":{}}}],["registri",{"_index":1215,"title":{},"body":{"components/AppComponent.html":{}}}],["relat",{"_index":706,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"index.html":{}}}],["releas",{"_index":2212,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":496,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":2339,"title":{},"body":{"license.html":{}}}],["reload",{"_index":210,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["remain",{"_index":2313,"title":{},"body":{"license.html":{}}}],["repres",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["represent",{"_index":444,"title":{},"body":{"classes/Alarm.html":{}}}],["reproduc",{"_index":2296,"title":{},"body":{"license.html":{}}}],["request",{"_index":224,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["requeststatu",{"_index":203,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requeststatusli",{"_index":290,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requir",{"_index":353,"title":{},"body":{"components/AckComponent.html":{},"modules/IasMaterialModule.html":{},"components/ShelveComponent.html":{},"index.html":{},"license.html":{}}}],["res[0",{"_index":1344,"title":{},"body":{"injectables/CdbService.html":{}}}],["reset",{"_index":372,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["respect",{"_index":1790,"title":{},"body":{"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["respons",{"_index":233,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["response[key",{"_index":953,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["restrict",{"_index":2331,"title":{},"body":{"license.html":{}}}],["result",{"_index":190,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["result.push('blu",{"_index":736,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":739,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":738,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('r",{"_index":741,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('unreli",{"_index":737,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":740,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["retriev",{"_index":616,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["retun",{"_index":832,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":1533,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":2332,"title":{},"body":{"license.html":{}}}],["revis",{"_index":2355,"title":{},"body":{"license.html":{}}}],["right",{"_index":1244,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":930,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":216,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{}}}],["router",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["routermodul",{"_index":1275,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1304,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.servic",{"_index":1357,"title":{},"body":{"modules/DataModule.html":{}}}],["routingservic",{"_index":1138,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["row",{"_index":1861,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["run",{"_index":2229,"title":{},"body":{"index.html":{},"license.html":{}}}],["running_id",{"_index":399,"title":{},"body":{"classes/Alarm.html":{}}}],["rxj",{"_index":780,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":1338,"title":{},"body":{"injectables/CdbService.html":{}}}],["rxjs/rx",{"_index":1339,"title":{},"body":{"injectables/CdbService.html":{}}}],["s",{"_index":338,"title":{},"body":{"components/AckComponent.html":{}}}],["s_low.svg",{"_index":966,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["same",{"_index":795,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sandbox",{"_index":1303,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["sandbox'},{'nam",{"_index":156,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.compon",{"_index":1295,"title":{},"body":{"modules/AppModule.html":{}}}],["sandbox.component.html",{"_index":1564,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.scss",{"_index":1563,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.t",{"_index":1559,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sandbox.component.ts:12",{"_index":1565,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.ts:22",{"_index":1566,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox/materi",{"_index":1294,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sanit",{"_index":1247,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffold",{"_index":2234,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1552,"title":{},"body":{"injectables/MapService.html":{}}}],["second",{"_index":2070,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["secondari",{"_index":1591,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["section",{"_index":2298,"title":{},"body":{"license.html":{}}}],["select",{"_index":268,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["select/deselect",{"_index":899,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":908,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":785,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":995,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescend",{"_index":891,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedst",{"_index":1942,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["selectionmodel",{"_index":770,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":807,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["send",{"_index":223,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sent",{"_index":291,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["separ",{"_index":1161,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serv",{"_index":2230,"title":{},"body":{"index.html":{}}}],["server",{"_index":1739,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":436,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set_crit",{"_index":500,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":499,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":1510,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":497,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":498,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":1511,"title":{},"body":{"components/LegendComponent.html":{}}}],["setsidenav",{"_index":1762,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":1766,"title":{},"body":{"injectables/SidenavService.html":{}}}],["shall",{"_index":2369,"title":{},"body":{"license.html":{}}}],["share",{"_index":1616,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":385,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":393,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["shared/statu",{"_index":1808,"title":{},"body":{"modules/TabularModule.html":{}}}],["sharedmodul",{"_index":370,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":687,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{}}}],["shelv",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'nam",{"_index":164,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":1690,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":1689,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1302,"title":{},"body":{"modules/AppModule.html":{}}}],["shelve/shelve.compon",{"_index":379,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelv",{"_index":1681,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvebuttoncompon",{"_index":162,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecompon",{"_index":163,"title":{"components/ShelveComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":247,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shiba",{"_index":1597,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["short",{"_index":422,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["short_desc",{"_index":1478,"title":{},"body":{"classes/Iasio.html":{}}}],["shorten",{"_index":727,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["show",{"_index":259,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["showactionbadg",{"_index":678,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":674,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showasshelv",{"_index":675,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showspinn",{"_index":211,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shuttedown",{"_index":485,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":2351,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":250,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.compon",{"_index":1111,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":1130,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1129,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":1128,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:112",{"_index":1157,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:18",{"_index":1143,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":2093,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:21",{"_index":1139,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":2092,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":2060,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":1172,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1171,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:34",{"_index":2073,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":2071,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:37",{"_index":2072,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:39",{"_index":1166,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:44",{"_index":2066,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:48",{"_index":1145,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":2094,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:53",{"_index":2062,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:57",{"_index":1147,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:65",{"_index":1155,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:72",{"_index":2064,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:73",{"_index":1153,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:80",{"_index":1169,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:81",{"_index":2063,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:90",{"_index":1164,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:98",{"_index":1168,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar/antenna",{"_index":1110,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weath",{"_index":1968,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenav.servic",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavservic",{"_index":33,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["sidenv",{"_index":1759,"title":{},"body":{"injectables/SidenavService.html":{}}}],["similar",{"_index":2357,"title":{},"body":{"license.html":{}}}],["singl",{"_index":2352,"title":{},"body":{"license.html":{}}}],["six",{"_index":1602,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["size",{"_index":679,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/MapService.html":{}}}],["sizeopt",{"_index":671,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["slide",{"_index":1847,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["slider",{"_index":1592,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sm",{"_index":701,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["small",{"_index":1607,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["smallest",{"_index":1601,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["snackbar",{"_index":2054,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["softwar",{"_index":2259,"title":{},"body":{"license.html":{}}}],["sort",{"_index":442,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1160,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["special",{"_index":1193,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":1047,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/OverviewComponent.html":{}}}],["specifi",{"_index":1159,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["speed",{"_index":2027,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["spinner",{"_index":228,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":218,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":2358,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":1605,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["src/.../alarm.t",{"_index":2201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.t",{"_index":192,"title":{},"body":{"components/AckComponent.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.ts:106",{"_index":256,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:115",{"_index":255,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:123",{"_index":232,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:147",{"_index":258,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:156",{"_index":245,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:165",{"_index":265,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:173",{"_index":234,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:182",{"_index":236,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:206",{"_index":240,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:22",{"_index":276,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:27",{"_index":274,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:32",{"_index":281,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:37",{"_index":285,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:42",{"_index":278,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:47",{"_index":273,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:52",{"_index":286,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:60",{"_index":220,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:75",{"_index":295,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:83",{"_index":253,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:99",{"_index":251,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/actions.module.t",{"_index":374,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.t",{"_index":1306,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1312,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:28",{"_index":1313,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelv",{"_index":1678,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.t",{"_index":1688,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.ts:103",{"_index":1708,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:120",{"_index":1707,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:127",{"_index":1710,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:137",{"_index":1709,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:144",{"_index":1713,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:155",{"_index":1711,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:181",{"_index":1714,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:207",{"_index":1712,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:216",{"_index":1706,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:225",{"_index":1699,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:233",{"_index":1704,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:248",{"_index":1701,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:263",{"_index":1703,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:275",{"_index":1702,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:34",{"_index":1735,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:46",{"_index":1718,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:51",{"_index":1716,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:56",{"_index":1715,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:61",{"_index":1719,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:66",{"_index":1720,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:71",{"_index":1722,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:79",{"_index":1698,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:94",{"_index":1721,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/sidenav.service.t",{"_index":1758,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:10",{"_index":1763,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:18",{"_index":1771,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:21",{"_index":1770,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:27",{"_index":1767,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:34",{"_index":1765,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:41",{"_index":1764,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:48",{"_index":1768,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":2103,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antenna",{"_index":575,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.t",{"_index":1107,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.t",{"_index":914,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:107",{"_index":1121,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:15",{"_index":918,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":919,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":916,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:34",{"_index":1125,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:37",{"_index":1126,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:40",{"_index":1127,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:43",{"_index":1122,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:46",{"_index":1123,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:49",{"_index":1117,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:63",{"_index":1119,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:74",{"_index":1120,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:99",{"_index":1118,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.t",{"_index":989,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:16",{"_index":997,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":998,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:32",{"_index":1000,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/app.component.t",{"_index":1201,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":1226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":1238,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":1228,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":1234,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":1213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":1227,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":1220,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":1218,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:99",{"_index":1221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":1272,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/data/alarm.service.t",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["src/app/data/alarm.t",{"_index":395,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/alarm.ts:115",{"_index":450,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:139",{"_index":466,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:148",{"_index":469,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:154",{"_index":471,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:159",{"_index":473,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:168",{"_index":475,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:176",{"_index":479,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:187",{"_index":448,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:197",{"_index":458,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:206",{"_index":462,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:215",{"_index":459,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:226",{"_index":445,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:270",{"_index":439,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:43",{"_index":434,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:46",{"_index":413,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:49",{"_index":426,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:52",{"_index":424,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:55",{"_index":433,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:58",{"_index":416,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:61",{"_index":428,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:64",{"_index":419,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:67",{"_index":421,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:70",{"_index":431,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:73",{"_index":412,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:76",{"_index":408,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:92",{"_index":456,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/cdb.service.t",{"_index":1315,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:18",{"_index":1335,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:23",{"_index":1333,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:28",{"_index":1322,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:42",{"_index":1331,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:54",{"_index":1323,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:63",{"_index":1324,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":1352,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1387,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":1473,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":1486,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":1482,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":1481,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":1490,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":1488,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":1485,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/routing.service.t",{"_index":1648,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/data/routing.service.ts:20",{"_index":1659,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:28",{"_index":1656,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:35",{"_index":1657,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:8",{"_index":1655,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/health/health",{"_index":1364,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1362,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":1431,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.t",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.t",{"_index":1541,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.t",{"_index":1544,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":1549,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:44",{"_index":1551,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":1547,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.t",{"_index":1532,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":1535,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":1534,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":1536,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/materi",{"_index":1558,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":1623,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":1643,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":1631,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":1635,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":1636,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":709,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":667,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:102",{"_index":694,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:12",{"_index":754,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:135",{"_index":697,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:143",{"_index":699,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:15",{"_index":755,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:152",{"_index":692,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:18",{"_index":753,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:21",{"_index":752,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:24",{"_index":756,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:27",{"_index":751,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:30",{"_index":749,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:56",{"_index":681,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:61",{"_index":683,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:66",{"_index":684,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:72",{"_index":689,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:77",{"_index":691,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:82",{"_index":680,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:9",{"_index":750,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:92",{"_index":696,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1670,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/statu",{"_index":1776,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":1500,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:15",{"_index":1517,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":1515,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":1531,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":1518,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":1530,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":1529,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:33",{"_index":1520,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:36",{"_index":1523,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:39",{"_index":1525,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:42",{"_index":1527,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:45",{"_index":1512,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:51",{"_index":1513,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/tabular",{"_index":1809,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":1806,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/test_fixtures.t",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weath",{"_index":1921,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":1962,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.t",{"_index":1991,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["src/app/weather/weather.service.ts:105",{"_index":2009,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:115",{"_index":2007,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:122",{"_index":2012,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:134",{"_index":2011,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:16",{"_index":2088,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:19",{"_index":2089,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:22",{"_index":2090,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:25",{"_index":2091,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:28",{"_index":2087,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:47",{"_index":2013,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:50",{"_index":2018,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:53",{"_index":2025,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:56",{"_index":2016,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:59",{"_index":2015,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:62",{"_index":2020,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:65",{"_index":2028,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:68",{"_index":2017,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:71",{"_index":2024,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:74",{"_index":2023,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:77",{"_index":2022,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:80",{"_index":2005,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:93",{"_index":2010,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather/weather.component.t",{"_index":1937,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:16",{"_index":1944,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:27",{"_index":1947,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:33",{"_index":1946,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.t",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":1886,"title":{"index.html":{},"license.html":{}},"body":{"components/TabularViewComponent.html":{}}}],["startup",{"_index":483,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":430,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state_change_timestamp",{"_index":400,"title":{},"body":{"classes/Alarm.html":{}}}],["statement",{"_index":2115,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":403,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["station",{"_index":185,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":1925,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["stationconfig.placemark",{"_index":2081,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["statu",{"_index":166,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":707,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcompon",{"_index":165,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":2311,"title":{},"body":{"license.html":{}}}],["stop",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["storageitem",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":289,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["stream",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":244,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["structur",{"_index":860,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":693,"title":{},"body":{"components/AlarmComponent.html":{}}}],["styleurl",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":861,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subclass",{"_index":2283,"title":{},"body":{"license.html":{}}}],["subcompon",{"_index":1308,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["subscrib",{"_index":1373,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{}}}],["subscript",{"_index":1850,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["subscriptionlik",{"_index":920,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["subsubtre",{"_index":857,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":1626,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":799,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":859,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesfulli",{"_index":341,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["successfulli",{"_index":293,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["such",{"_index":2317,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":2223,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":2337,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1188,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":936,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":1115,"title":{},"body":{"modules/AntennasModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1190,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1189,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1187,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:17",{"_index":1192,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:19",{"_index":1374,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:22",{"_index":1375,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:25",{"_index":1369,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":1197,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:34",{"_index":2099,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":1195,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":1372,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:43",{"_index":1198,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:48",{"_index":1376,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:52",{"_index":1194,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:55",{"_index":1370,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:59",{"_index":1196,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:88",{"_index":1371,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antenna",{"_index":1114,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1363,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":1965,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":954,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["supplement",{"_index":2271,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":2304,"title":{},"body":{"license.html":{}}}],["support",{"_index":2374,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1064,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1230,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpath",{"_index":1016,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["switch",{"_index":1848,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["system",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.valu",{"_index":1753,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["tabl",{"_index":441,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table'",{"_index":1832,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["table.svg",{"_index":1255,"title":{},"body":{"components/AppComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":1653,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":1658,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":169,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":1300,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular",{"_index":1284,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular.modul",{"_index":1280,"title":{},"body":{"modules/AppModule.html":{}}}],["tabularmodul",{"_index":1270,"title":{"modules/TabularModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":168,"title":{"components/TabularViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":446,"title":{},"body":{"classes/Alarm.html":{},"components/StatusViewComponent.html":{}}}],["tags.join",{"_index":562,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push('ack",{"_index":560,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push('shelv",{"_index":561,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(ord",{"_index":554,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(prior",{"_index":558,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(this.operationalmod",{"_index":555,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(valid",{"_index":559,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(valu",{"_index":556,"title":{},"body":{"classes/Alarm.html":{}}}],["taken",{"_index":354,"title":{},"body":{"components/AckComponent.html":{},"license.html":{}}}],["target",{"_index":1400,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["temp",{"_index":2044,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["temperatur",{"_index":2019,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["tempimageset",{"_index":1996,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["tempimageunreliableset",{"_index":1997,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":2323,"title":{},"body":{"license.html":{}}}],["term",{"_index":2269,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":1613,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["test",{"_index":1864,"title":{},"body":{"components/TabularViewComponent.html":{},"index.html":{}}}],["text",{"_index":241,"title":{},"body":{"components/AckComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["textfield",{"_index":1865,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this._getalarmstatusorder(valu",{"_index":553,"title":{},"body":{"classes/Alarm.html":{}}}],["this._getalarmstatustagsstr",{"_index":536,"title":{},"body":{"classes/Alarm.html":{}}}],["this._getsubtree(childalarm",{"_index":858,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":849,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initi",{"_index":945,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this._setfilteractiv",{"_index":1908,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.ack",{"_index":541,"title":{},"body":{"classes/Alarm.html":{}}}],["this.acklist",{"_index":906,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":909,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acknowledgedalarm",{"_index":320,"title":{},"body":{"components/AckComponent.html":{}}}],["this.actionssidenavservice.canclos",{"_index":1258,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1257,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarm",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.core_id",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mod",{"_index":637,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelv",{"_index":634,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.valid",{"_index":631,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valu",{"_index":645,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm_id",{"_index":306,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmiconspriorityset",{"_index":1801,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":1799,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":1800,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmid",{"_index":1379,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmnamemaxs",{"_index":746,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.alarmsconfig",{"_index":1089,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.alarmservice.acknowledgealarm",{"_index":317,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.alarmchangestream.subscribe(notif",{"_index":1892,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservice.alarmsarray",{"_index":1888,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1093,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":856,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":312,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmid",{"_index":1378,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.antennasservice.antennassummaryconfig",{"_index":1199,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.st",{"_index":1936,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.get(this.weatherservice.weathersummaryconfig[keyword",{"_index":2101,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.getmissingacks(this.alarm.core_id).subscrib",{"_index":333,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.initi",{"_index":1256,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.shelvealarm(this.alarm.core_id",{"_index":1747,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":1751,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservicesubscript",{"_index":1891,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservicesubscription.unsubscrib",{"_index":1899,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmstoack",{"_index":318,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoack.length",{"_index":330,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":910,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmvalid",{"_index":552,"title":{},"body":{"classes/Alarm.html":{}}}],["this.alarmvalue.split('_",{"_index":549,"title":{},"body":{"classes/Alarm.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1179,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":963,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":970,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasconfig[key",{"_index":952,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasmapnam",{"_index":960,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig[groupid",{"_index":1178,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initi",{"_index":1174,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":957,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.applyfilter(event.target.valu",{"_index":1902,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.applyfilter(filtervalu",{"_index":1896,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.applyfilter(this.filterstr",{"_index":1904,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.bordercolor",{"_index":630,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.bordercolorsunreli",{"_index":633,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.bordercolorsunreliable.unknown",{"_index":625,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.buildfiletree(tree_data",{"_index":831,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":869,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":1746,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":904,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":895,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":888,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descend",{"_index":893,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":902,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe(data",{"_index":822,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":907,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":903,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":894,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":901,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.clearfilt",{"_index":1901,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.clickedantennamarker.emit(this.selectedantenna",{"_index":1100,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.clipboardservice.copyfromcontent(result",{"_index":2077,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.coord",{"_index":1986,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.core_id",{"_index":533,"title":{},"body":{"classes/Alarm.html":{}}}],["this.datasourc",{"_index":820,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.data",{"_index":830,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.filt",{"_index":1912,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.filterpred",{"_index":1889,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.sort",{"_index":1897,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.dateformat",{"_index":1881,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.definealarmcolor",{"_index":620,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.definealarmsandicon",{"_index":1377,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":1798,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.descript",{"_index":544,"title":{},"body":{"classes/Alarm.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1250,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.fillcolor",{"_index":628,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.fillcolorsunreli",{"_index":632,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.fillcolorsunreliable.unknown",{"_index":624,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.filterpred",{"_index":1890,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstr",{"_index":1903,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstring.split",{"_index":1913,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":881,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":302,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').value).subscrib",{"_index":319,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":316,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":303,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.gencolorstyle(fillcolor",{"_index":626,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.getalarmnam",{"_index":748,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.getantennas(st",{"_index":2075,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.getchildren",{"_index":817,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().subscribe((r",{"_index":1342,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getlevel",{"_index":815,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmissingacksinfo",{"_index":310,"title":{},"body":{"components/AckComponent.html":{}}}],["this.gettreedata",{"_index":829,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.hidespinn",{"_index":321,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":1429,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":1426,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(this.read_url(url",{"_index":1427,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.put(this.read_url(url",{"_index":1428,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(backendurls.weather_summary).subscribe((respons",{"_index":2039,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(backendurls.weather_view).subscribe((respons",{"_index":2037,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(summary_url).subscribe((respons",{"_index":956,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclient.get(url",{"_index":961,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(url).subscribe((respons",{"_index":951,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1347,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.humidityimageset",{"_index":2041,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.humidityimageunreliableset",{"_index":2047,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.iasconfigur",{"_index":1345,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['broadcast_factor",{"_index":1349,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['refresh_r",{"_index":1348,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(tru",{"_index":1346,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1381,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1386,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.initi",{"_index":1067,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.isexpand",{"_index":816,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isnavigationcompact",{"_index":1260,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isselected(antennaconfig",{"_index":1095,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.isvalidalarm(json",{"_index":516,"title":{},"body":{"classes/Alarm.html":{}}}],["this.isvalidiasio(json",{"_index":1495,"title":{},"body":{"classes/Iasio.html":{}}}],["this.loadalarmsconfig",{"_index":946,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.loadimag",{"_index":947,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadweatherstationsconfig",{"_index":2032,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.mapconfig",{"_index":1079,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapdataavailable.next(tru",{"_index":1088,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapplacemark",{"_index":1070,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapservice.getsvgpaths(mapdata['path",{"_index":1087,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapservice.mapdataprocessing(this.placemarksgroup",{"_index":1077,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.markerimageset",{"_index":2050,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.markerimageunreliableset",{"_index":2053,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.maticonregistri",{"_index":1248,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messag",{"_index":299,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":314,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.valu",{"_index":1744,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.missedack",{"_index":332,"title":{},"body":{"components/AckComponent.html":{}}}],["this.missedacks.push(text",{"_index":339,"title":{},"body":{"components/AckComponent.html":{}}}],["this.nam",{"_index":545,"title":{},"body":{"classes/Alarm.html":{}}}],["this.nestednodemap.get(nod",{"_index":876,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":877,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":875,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":882,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.ngonchang",{"_index":824,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.opensnackbar(messag",{"_index":2078,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.operationalmod",{"_index":546,"title":{},"body":{"classes/Alarm.html":{}}}],["this.optionalalarmnam",{"_index":744,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.panelclicked.emit(this.selectedst",{"_index":2082,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.pathsgroup",{"_index":1078,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.pathsgroups.push(mapdata['path",{"_index":1076,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarks[placemark.nam",{"_index":1073,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarks[placemark_id",{"_index":1097,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarksgroups.push(mapdata['placemarks']['pad",{"_index":1074,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarksgroups.push(mapdata['placemarks']['wst",{"_index":1075,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.reload",{"_index":308,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.requeststatu",{"_index":313,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.route.parammap.subscrib",{"_index":304,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.route.snapshot.parammap.get('filt",{"_index":1894,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.router.navigate(['/tabular",{"_index":1663,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antenna",{"_index":1664,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weath",{"_index":1665,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([{outlet",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.routing.gotoantenna",{"_index":1200,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweath",{"_index":2102,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1181,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.selectedalarm",{"_index":2095,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.st",{"_index":2096,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":1004,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm",{"_index":1184,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.antenna",{"_index":1185,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1098,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedst",{"_index":1948,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["this.selectedstation.placemark",{"_index":2080,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.service.antennasconfig",{"_index":1090,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.service.getmapdata().subscribe((mapdata",{"_index":1069,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.service.initi",{"_index":1068,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.shelv",{"_index":542,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.showactionbadg",{"_index":742,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.showspinn",{"_index":315,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenav",{"_index":1772,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.clos",{"_index":1774,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":1773,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggl",{"_index":1775,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavservice.canclos",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.clos",{"_index":311,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.open",{"_index":309,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.s",{"_index":708,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.snackbar.open(messag",{"_index":2083,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.sort",{"_index":1898,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.sort.sort",{"_index":1885,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.spinnerservice.hid",{"_index":325,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":324,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.state_change_timestamp",{"_index":539,"title":{},"body":{"classes/Alarm.html":{}}}],["this.stationconfig.st",{"_index":2097,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.statu",{"_index":543,"title":{},"body":{"classes/Alarm.html":{}}}],["this.svgpath",{"_index":1086,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.tempimageset",{"_index":2043,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.tempimageunreliableset",{"_index":2048,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.timeout",{"_index":1740,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":1742,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.valu",{"_index":1745,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalu",{"_index":1754,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":1752,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].valu",{"_index":1717,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timestamp",{"_index":547,"title":{},"body":{"classes/Alarm.html":{}}}],["this.timezon",{"_index":1883,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.treecontrol",{"_index":818,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":886,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":813,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.unshelv",{"_index":1743,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":823,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.url",{"_index":2111,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.startswith('http",{"_index":2110,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.weathermapnam",{"_index":2033,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weatherservice.getantennas(st",{"_index":2079,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.initi",{"_index":2074,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.weatherservice.weathersummaryconfig",{"_index":2100,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.weatherstationsconfig",{"_index":2038,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weathersummaryconfig",{"_index":2040,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageset",{"_index":2045,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageunreliableset",{"_index":2049,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["thorugh",{"_index":1650,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":1562,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["through",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["time",{"_index":349,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["timeout",{"_index":1692,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["timeout).subscrib",{"_index":1748,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["timeout.viewvalu",{"_index":1756,"title":{},"body":{"components/ShelveComponent.html":{}}}],["timeoutopt",{"_index":1723,"title":{"interfaces/TimeoutOption.html":{}},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timestamp",{"_index":417,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["timezon",{"_index":1819,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["titl",{"_index":1208,"title":{},"body":{"components/AppComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["todo",{"_index":1246,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["togeth",{"_index":2329,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":898,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{}}}],["toggledefault",{"_index":1617,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["togglefilteronlysetalarm",{"_index":1823,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["toggleshelveunshelv",{"_index":1697,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1210,"title":{},"body":{"components/AppComponent.html":{}}}],["togglestatu",{"_index":1874,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["tooltip",{"_index":1682,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["tostringforfilt",{"_index":406,"title":{},"body":{"classes/Alarm.html":{}}}],["transform",{"_index":871,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["transpar",{"_index":623,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":384,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":783,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":784,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":758,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":911,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":912,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":765,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":766,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":764,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":383,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.t",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":828,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":848,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":801,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":803,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":343,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["trigger",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["true",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["ts",{"_index":538,"title":{},"body":{"classes/Alarm.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["typeof",{"_index":867,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unblock",{"_index":248,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["uncombin",{"_index":2353,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":557,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["under",{"_index":2209,"title":{},"body":{"index.html":{},"license.html":{}}}],["unit",{"_index":2241,"title":{},"body":{"index.html":{}}}],["unkn.svg",{"_index":1384,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unknown",{"_index":492,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":968,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unreli",{"_index":495,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unselect",{"_index":1170,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["unselectantenna",{"_index":1135,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselecteddescend",{"_index":892,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unshelv",{"_index":243,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unsubscrib",{"_index":1834,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["unus",{"_index":810,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updat",{"_index":266,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["updateacklist",{"_index":905,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatealarmstoack",{"_index":212,"title":{},"body":{"components/AckComponent.html":{}}}],["updatealarmstoack(ev",{"_index":264,"title":{},"body":{"components/AckComponent.html":{}}}],["updateselectedantenna",{"_index":996,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":999,"title":{},"body":{"components/AntennasComponent.html":{}}}],["url",{"_index":225,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":261,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["user'",{"_index":2343,"title":{},"body":{"license.html":{}}}],["usevalu",{"_index":1305,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":2294,"title":{},"body":{"license.html":{}}}],["v",{"_index":864,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":222,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["valid.svg",{"_index":1516,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["validators.requir",{"_index":301,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validform",{"_index":331,"title":{},"body":{"components/AckComponent.html":{}}}],["validity[this.valid",{"_index":530,"title":{},"body":{"classes/Alarm.html":{}}}],["valu",{"_index":272,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.clear",{"_index":646,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.length",{"_index":337,"title":{},"body":{"components/AckComponent.html":{}}}],["value.set_crit",{"_index":658,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":655,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":649,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":652,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":865,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["value[this.valu",{"_index":532,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tag",{"_index":548,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tags[0",{"_index":550,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tags[1",{"_index":551,"title":{},"body":{"classes/Alarm.html":{}}}],["var",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":1026,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"coverage.html":{}}}],["verbatim",{"_index":2266,"title":{},"body":{"license.html":{}}}],["veri",{"_index":1610,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["verifi",{"_index":1032,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["version",{"_index":2205,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":2242,"title":{},"body":{"index.html":{}}}],["view",{"_index":1141,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":1286,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":1778,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":1779,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.scss",{"_index":1811,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.t",{"_index":1777,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:112",{"_index":1831,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:120",{"_index":1833,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:129",{"_index":1837,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:140",{"_index":1828,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:149",{"_index":1826,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:167",{"_index":1842,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:19",{"_index":1786,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:192",{"_index":1873,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:200",{"_index":1876,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:22",{"_index":1788,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:24",{"_index":1870,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:25",{"_index":1797,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:27",{"_index":1868,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:28",{"_index":1795,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":1796,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":1794,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:35",{"_index":1844,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:38",{"_index":1863,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:40",{"_index":1785,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:43",{"_index":1854,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:46",{"_index":1853,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:49",{"_index":1871,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:50",{"_index":1791,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:52",{"_index":1866,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:55",{"_index":1852,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:57",{"_index":1789,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:58",{"_index":1849,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:64",{"_index":1860,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:74",{"_index":1824,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:91",{"_index":1835,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view/fixtures.t",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["view/statu",{"_index":1676,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1285,"title":{},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["viewbox",{"_index":600,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["viewbox[0",{"_index":1082,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[1",{"_index":1083,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[2",{"_index":1084,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[3]].join",{"_index":1085,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewchild",{"_index":1225,"title":{},"body":{"components/AppComponent.html":{},"components/TabularViewComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1245,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matsort",{"_index":1880,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewchild(matt",{"_index":1879,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewvalu",{"_index":1725,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["visual",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":1580,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["warnbas",{"_index":1618,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["weather",{"_index":171,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'nam",{"_index":175,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":1941,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1940,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1935,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1253,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.compon",{"_index":1967,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.modul",{"_index":1281,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.compon",{"_index":1290,"title":{},"body":{"modules/AppModule.html":{}}}],["weather_",{"_index":2051,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherbackupwsmarkercompon",{"_index":170,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercompon",{"_index":174,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercompon",{"_index":176,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":1939,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcompon",{"_index":178,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermapnam",{"_index":1998,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathermodul",{"_index":1271,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcompon",{"_index":179,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercompon",{"_index":182,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservic",{"_index":1924,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherset",{"_index":2029,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["weathersettings.mapkey",{"_index":2021,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathersidebar",{"_index":1938,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcompon",{"_index":183,"title":{"components/WeatherSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherst",{"_index":2030,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationconfig",{"_index":1929,"title":{"classes/WeatherStationConfig.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["weatherstationsconfig",{"_index":1999,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationsidebarcompon",{"_index":184,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":186,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummaryconfig",{"_index":2000,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["webserv",{"_index":944,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["well",{"_index":1611,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["wether",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatev",{"_index":2312,"title":{},"body":{"license.html":{}}}],["whether",{"_index":883,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["whevenv",{"_index":827,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["wikbuttoncompon",{"_index":1309,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["wiki",{"_index":188,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncompon",{"_index":187,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wind",{"_index":2026,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["wind_",{"_index":2046,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["window",{"_index":2109,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":2112,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["windsimageset",{"_index":2001,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windsimageunreliableset",{"_index":2002,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windspe",{"_index":2031,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["without",{"_index":2300,"title":{},"body":{"license.html":{}}}],["word",{"_index":1162,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":2278,"title":{},"body":{"license.html":{}}}],["worth",{"_index":1644,"title":{},"body":{"modules/OverviewModule.html":{}}}],["write",{"_index":355,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{}}}],["wrong",{"_index":1662,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":173,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":603,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":700,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["y",{"_index":606,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["yellow",{"_index":662,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":2224,"title":{},"body":{"index.html":{}}}],["zero",{"_index":1521,"title":{},"body":{"components/LegendComponent.html":{}}}],["zone.j",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":371,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, router: Router, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system Router to handle navigation\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Router } from '@angular/router';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   * @param {SidenavService} sidenavService Service to manage the Acknowledge and Shelve sidenav\n   * @param {Router} router system Router to handle navigation\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private router: Router,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @return {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  canAcknowledge() {\n    if (this.alarm != null) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose || !this.canAcknowledge();\n  }\n\n  /**\n  * Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', this.alarm.core_id]}}]);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AckComponent.html":{"url":"components/AckComponent.html","title":"component - AckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack/ack.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to perform acknowledgement of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack\n            \n\n            \n                styleUrls\n                ack.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ack.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledgedAlarms\n                            \n                            \n                                alarm\n                            \n                            \n                                alarm_id\n                            \n                            \n                                alarmsToAck\n                            \n                            \n                                form\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                missedAcks\n                            \n                            \n                                requestStatus\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                disableAcknowledgment\n                            \n                            \n                                getMissingAcksInfo\n                            \n                            \n                                getResponseMessageText\n                            \n                            \n                                    Private\n                                hideSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                reload\n                            \n                            \n                                    Private\n                                showSpinner\n                            \n                            \n                                updateAlarmsToAck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, alarmService: AlarmService, route: ActivatedRoute, sidenavService: SidenavService, spinnerService: NgxSpinnerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack/ack.component.ts:60\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to handle the sidenav where the component is opened\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular Router used to navigate through the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Send the acknowledge request through the method provided by the\nAlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableAcknowledgment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableAcknowledgment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:173\n                            \n                        \n\n\n                \n                    \n                            Method to invalidate ack action\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if ack action can be performed and false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcksInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcksInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:182\n                            \n                        \n\n\n                \n                    \n                            Get the number of missed acknowledgements of the alarm and its children\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:206\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:156\n                            \n                        \n\n\n                \n                    \n                            Hides the spinner after the Alarm has been shelved/unshelved\nIt also unblocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, by getting the alarm_id from the url.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reload\n                            \n                            \n                        \n                    \n                \n                \n                    \nreload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Cleans the component and reloads the Alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\nIt also blocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAlarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAlarmsToAck(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:165\n                            \n                        \n\n\n                \n                    \n                            Update the list of alarms to ack from the selection on the child component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                event triggered by the inner {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledgedAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        acknowledgedAlarms:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:47\n                            \n                        \n\n                \n                    \n                        List of alarms that were acknowledged by the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:27\n                            \n                        \n\n                \n                    \n                        Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:22\n                            \n                        \n\n                \n                    \n                        Id of the Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsToAck:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:42\n                            \n                        \n\n                \n                    \n                        List of alarms to ack according to selection from child component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:32\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:37\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            missedAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        missedAcks:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:52\n                            \n                        \n\n                \n                    \n                        List of messages to mention the alarms with missed acknowledgments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestStatus:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:60\n                            \n                        \n\n                \n                    \n                        Stores wether or not the action has been executed requestStatusly\nIf requestStatus = 0, the request has not been sent yet\nIf requestStatus = 1, the request was successfully\nIf requestStatus = -1, the request has failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:75\n                            \n                        \n\n                \n                    \n                        Service to handle the sidenav where the component is opened\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Component used to perform acknowledgement of an Alarm\n*/\n@Component({\n  selector: 'app-ack',\n  templateUrl: './ack.component.html',\n  styleUrls: ['./ack.component.scss']\n})\nexport class AckComponent implements OnInit, OnDestroy {\n\n  /**\n   * Id of the Alarm object to be acknowledge/unacknowledge\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be acknowledge/unacknowledge\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * List of alarms to ack according to selection from child component\n  */\n  alarmsToAck: string[] = [];\n\n  /**\n  * List of alarms that were acknowledged by the request\n  */\n  acknowledgedAlarms: string[] = [];\n\n  /**\n  * List of messages to mention the alarms with missed acknowledgments\n  */\n  public missedAcks: string[] = [];\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Router} router Angular Router used to navigate through the application\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) { }\n\n  /**\n  * Initiates the component, by getting the alarm_id from the url.\n  */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n    this.getMissingAcksInfo();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the acknowledge request through the method provided by the\n   * {@link AlarmService} and handle the response.\n   */\n  acknowledge(): void {\n    this.showSpinner();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        this.alarmsToAck, this.form.get('message').value).subscribe(\n          (response) => {\n            this.acknowledgedAlarms =  response;\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Update the list of alarms to ack from the selection on the child component\n   * @param {Event} event event triggered by the inner {@link AckTree}, containing the IDs fo the alarms to acknowledge\n   */\n  updateAlarmsToAck(event): void {\n    this.alarmsToAck = event;\n  }\n\n  /**\n  * Method to invalidate ack action\n  * @returns {boolean} True if ack action can be performed and false if not\n  */\n  disableAcknowledgment() {\n    const noAlarmsToAck = (this.alarmsToAck.length === 0);\n    const validForm = this.form.valid;\n    return (noAlarmsToAck || !validForm);\n  }\n\n  /**\n  * Get the number of missed acknowledgements of the alarm and its children\n  */\n  getMissingAcksInfo(): void {\n    if (this.alarm) {\n      this.missedAcks = [];\n      this.alarmService.getMissingAcks(this.alarm.core_id).subscribe(\n        (response) => {\n          for (const [key, value] of Object.entries(response)) {\n            const count = value.length;\n            if (count > 0) {\n              let text = key + ' has ' + count + ' missed acknowledgement';\n              if (count > 1) {\n                text += 's';\n              }\n              this.missedAcks.push(text);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      response = 'The following alarms have been acknowledged succesfully:';\n\n    } else if (this.requestStatus === -1) {\n      response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been acknowledged.';\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    }\n    return response;\n  }\n}\n\n    \n\n    \n        \n  \n     ALARM ACKNOWLEDGEMENT \n    \n      &times;\n    \n  \n\n  \n    \n\n      \n        \n          \n            Alarm ID\n            {{alarm?.core_id}}\n          \n          \n            Description\n            {{ alarm?.description }}\n          \n        \n      \n\n       \n      \n        \n           Acknowledgement results \n           {{ getResponseMessageText() }} \n          \n            \n              {{ alarm }}\n            \n          \n        \n      \n\n      \n        \n          Information required to acknowledge the Alarm\n          \n             Action to be taken \n            \n             You must write a message in order to Acknowledge \n          \n        \n\n        \n           Select alarms for acknowledgment \n          \n        \n\n         0\" class=\"section missed-acks\">\n           Missed acknowledgements \n          \n            \n              {{text}}\n            \n          \n        \n      \n    \n  \n\n  \n     \n    \n      Close\n    \n\n    \n      Cancel\n      Acknowledge\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       ALARM ACKNOWLEDGEMENT           ×                                                Alarm ID            {{alarm?.core_id}}                                Description            {{ alarm?.description }}                                                        Acknowledgement results            {{ getResponseMessageText() }}                                     {{ alarm }}                                                            Information required to acknowledge the Alarm                       Action to be taken                          You must write a message in order to Acknowledge                                      Select alarms for acknowledgment                            0\" class=\"section missed-acks\">           Missed acknowledgements                                     {{text}}                                                           Close              Cancel      Acknowledge      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AckButtonComponent\n                            \n                            \n                                AckComponent\n                            \n                            \n                                AckTreeComponent\n                            \n                            \n                                ButtonsComponent\n                            \n                            \n                                ShelveButtonComponent\n                            \n                            \n                                ShelveComponent\n                            \n                            \n                                WikiButtonComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SidenavService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AckButtonComponent\n                            \n                            \n                                    AckComponent\n                            \n                            \n                                    ButtonsComponent\n                            \n                            \n                                    ShelveButtonComponent\n                            \n                            \n                                    ShelveComponent\n                            \n                            \n                                    WikiButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { AlarmComponent } from '../shared/alarm/alarm.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarm.html":{"url":"classes/Alarm.html","title":"class - Alarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Alarm objects\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ack\n                            \n                            \n                                core_id\n                            \n                            \n                                core_timestamp\n                            \n                            \n                                dependencies\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                running_id\n                            \n                            \n                                shelved\n                            \n                            \n                                state_change_timestamp\n                            \n                            \n                                url\n                            \n                            \n                                validity\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getAlarmStatusOrder\n                            \n                            \n                                    Private\n                                _getAlarmStatusTagsString\n                            \n                            \n                                acknowledge\n                            \n                            \n                                    Static\n                                asAlarm\n                            \n                            \n                                    Static\n                                isValidAlarm\n                            \n                            \n                                shelve\n                            \n                            \n                                toStringForFiltering\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/alarm.ts:76\n                            \n                        \n\n                \n                    \n                            Builds a new Alarm instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ack:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:73\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:46\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:58\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm was generated by the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dependencies:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:64\n                            \n                        \n\n                \n                    \n                        List of core_id's of dependent alarms *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:67\n                            \n                        \n\n                \n                    \n                        Short description of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     OperationalMode\n\n                    \n                \n                    \n                        \n                            Type :     OperationalMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:52\n                            \n                        \n\n                \n                    \n                        Operational mode of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        running_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:49\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm and its parents in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:76\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state_change_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state_change_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:61\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm changed the state or the mode \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:70\n                            \n                        \n\n                \n                    \n                        Documentation url of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validity:     Validity\n\n                    \n                \n                    \n                        \n                            Type :     Validity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:55\n                            \n                        \n\n                \n                    \n                        Validity of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     Value\n\n                    \n                \n                    \n                        \n                            Type :     Value\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:43\n                            \n                        \n\n                \n                    \n                        Value that represents the state of the Alarm.\nCan be either 0 (CLEARED) or 1 (SET)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getAlarmStatusOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getAlarmStatusOrder(value: string, priority: string, validity: string, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:270\n                            \n                        \n\n\n                \n                    \n                            Returns a string with a number that defines the place where the Alarm should be displayed on the Table according to the\nsorting by \"Status\" column\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the value of the {\n\n                                                        \n                                                \n                                                \n                                                        priority\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the priority of the {\n\n                                                        \n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the validity of the {\n\n                                                        \n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ack status of the {\n\n                                                        \n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    order for the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getAlarmStatusTagsString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getAlarmStatusTagsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:226\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    tags of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:187\n                            \n                        \n\n\n                \n                    \n                            Acknowledges the Alarm and returns the acknowledge status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the acknowledgement status\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:115\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:92\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Alarm object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:197\n                            \n                        \n\n\n                \n                    \n                            Shelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving message\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toStringForFiltering\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoStringForFiltering()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:215\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the Alarm for filtering purposes\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    info of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:206\n                            \n                        \n\n\n                \n                    \n                            Unshelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving status\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarmValidity\n                    \n                \n\n                \n                    \n                        getalarmValidity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:139\n                                \n                            \n                    \n                        \n                                Returns a string representation of the validity of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        alarmValue\n                    \n                \n\n                \n                    \n                        getalarmValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:148\n                                \n                            \n                    \n                        \n                                Returns a string representation of the value of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:154\n                                \n                            \n                    \n                        \n                                Returns the core_id of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        operationalMode\n                    \n                \n\n                \n                    \n                        getoperationalMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:159\n                                \n                            \n                    \n                        \n                                Returns the operational mode of the Alarm as a string\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n\n                \n                    \n                        getstatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:168\n                                \n                            \n                    \n                        \n                                Getter that returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent. Calls {@link _getAlarmStatusTagsString()}\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timestamp\n                    \n                \n\n                \n                    \n                        gettimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:176\n                                \n                            \n                    \n                        \n                                Returns a Date representation of the {@link Alarm.state_change_timestamp} attribute\n\n\n                                \n                                \n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export enum OperationalMode {\n  startup = 0,\n  initialization = 1,\n  closing = 2,\n  shuttedown = 3,\n  maintenance = 4,\n  operational = 5,\n  degraded = 6,\n  unknown = 7,\n}\n\n/**\n* List of the possible Validity values\n*/\nexport enum Validity {\n  unreliable = 0,\n  reliable = 1\n}\n\n/**\n* List of the possible Values of an Alarm\n*/\nexport enum Value {\n  cleared = 0,\n  set_low = 1,\n  set_medium = 2,\n  set_high = 3,\n  set_critical = 4,\n}\n\n/**\n* Class to define Alarm objects\n*/\nexport class Alarm {\n\n  /**\n  * Value that represents the state of the {@link Alarm}.\n  * Can be either 0 (CLEARED) or 1 (SET)\n  */\n  value: Value;\n\n  /** Id used to identify the {@link Alarm} in the IAS Core */\n  core_id: string;\n\n  /** Id used to identify the {@link Alarm} and its parents in the IAS Core */\n  running_id: string;\n\n  /** Operational mode of the {@link Alarm} */\n  mode: OperationalMode;\n\n  /** Validity of the {@link Alarm} */\n  validity: Validity;\n\n  /** Timestamp at which the {@link Alarm} was generated by the IAS Core */\n  core_timestamp: number;\n\n  /** Timestamp at which the {@link Alarm} changed the state or the mode */\n  state_change_timestamp: number;\n\n  /** List of core_id's of dependent alarms **/\n  dependencies: string[];\n\n  /** Short description of the {@link Alarm} */\n  description: string;\n\n  /** Documentation url of the {@link Alarm} */\n  url: string;\n\n  /** Acknowledgement status */\n  ack: boolean;\n\n  /** Acknowledgement status */\n  shelved: boolean;\n\n  /**\n  * Builds a new Alarm instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Alarm object\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Alarm}, false if not\n  */\n  static isValidAlarm(json: any): boolean {\n    return (\n      json.hasOwnProperty('value') &&\n      json.hasOwnProperty('core_id') &&\n      json.hasOwnProperty('running_id') &&\n      json.hasOwnProperty('mode') &&\n      json.hasOwnProperty('core_timestamp') &&\n      json.hasOwnProperty('state_change_timestamp') &&\n      json.hasOwnProperty('validity') &&\n      json.hasOwnProperty('description') &&\n      json.hasOwnProperty('url') &&\n      json.hasOwnProperty('ack') &&\n      json.hasOwnProperty('shelved') &&\n      json.hasOwnProperty('dependencies')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Alarm}\n  * @param {any} json the object to convert to an Alarm\n  * @param {number} pk the primary key of the Alarm in the database\n  * @returns {Alarm} the object as an {@link Alarm} instance\n  */\n  static asAlarm(json: any): Alarm {\n    if (!this.isValidAlarm(json)) {\n      return null;\n    }\n    const value = json['value'];\n    const core_id = json['core_id'];\n    const running_id = json['running_id'];\n    const mode = json['mode'];\n    const core_timestamp = json['core_timestamp'];\n    const state_change_timestamp = json['state_change_timestamp'];\n    const validity = json['validity'];\n    const description = json['description'];\n    const url = json['url'];\n    const ack = json['ack'];\n    const shelved = json['shelved'];\n    const dependencies = json['dependencies'];\n    return new Alarm({ value, core_id, running_id, mode, core_timestamp,\n      state_change_timestamp, validity, description, url, ack, shelved, dependencies });\n  }\n\n  /**\n  * Returns a string representation of the validity of the Alarm\n  * @returns {string} a string representation of the {@link Alarm.mode} attribute\n  */\n  get alarmValidity(): string {\n    return Validity[this.validity];\n  }\n\n  /**\n  * Returns a string representation of the value of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.value} attribute\n  */\n  get alarmValue(): string {\n    return Value[this.value];\n  }\n\n  /**\n  * Returns the core_id of the {@link Alarm}*/\n  get name(): string {\n    return this.core_id;\n  }\n\n  /** Returns the operational mode of the {@link Alarm} as a string*/\n  get operationalMode(): string {\n    return OperationalMode[this.mode];\n  }\n\n  /**\n  * Getter that returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}. Calls {@link _getAlarmStatusTagsString()}\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  get status(): string {\n    return this._getAlarmStatusTagsString();\n  }\n\n  /**\n  * Returns a Date representation of the {@link Alarm.state_change_timestamp} attribute\n  * @returns {Date} a date format representation of the Alarm state_change_timestamp\n  */\n  get timestamp(): Date {\n    const ts = this.state_change_timestamp;\n    const date: Date = new Date(ts);\n    return date;\n  }\n\n  /**\n  * Acknowledges the {@link Alarm} and returns the acknowledge status\n  * @param {message} string string message of the acknowledgement\n  * @returns {boolean} a the acknowledgement status\n  */\n  acknowledge(): boolean {\n    this.ack = true;\n    return this.ack;\n  }\n\n  /**\n  * Shelves the {@link Alarm} and returns the shelve status\n  * @param {message} string string message of the shelving\n  * @returns {boolean} a the shelving message\n  */\n  shelve(): boolean {\n    this.shelved = true;\n    return this.shelved;\n  }\n\n  /**\n  * Unshelves the {@link Alarm} and returns the shelve status\n  * @returns {boolean} a the shelving status\n  */\n  unshelve(): boolean {\n    this.shelved = false;\n    return this.shelved;\n  }\n\n  /**\n  * Returns a string representation of the {@link Alarm} for filtering purposes\n  * @returns {string} info of the {@link Alarm} for filtering purposes, joined by \" \"\n  */\n  toStringForFiltering(): string {\n    return [\n      this.status, this.description, this.name, this.operationalMode, this.timestamp\n    ].join(' ');\n  }\n\n  /**\n  * Returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  private _getAlarmStatusTagsString(): string {\n    const shelved = this.shelved;\n    const value_tags = this.alarmValue.split('_');\n    let value = value_tags[0];\n    let priority = value_tags[1];\n    let validity = this.alarmValidity;\n    let ack = this.ack;\n\n    if (shelved) {\n      value = 'cleared';\n      priority = '';\n      validity = 'reliable';\n      ack = true;\n    }\n\n    const order = this._getAlarmStatusOrder(value, priority, validity, ack, shelved);\n\n    const tags = [];\n    tags.push(order);\n    tags.push(this.operationalMode);\n    tags.push(value);\n    if (priority !== undefined) {\n      tags.push(priority);\n    }\n    tags.push(validity);\n    if (this.ack) {\n      tags.push('ack');\n    }\n    if (this.shelved) {\n      tags.push('shelved');\n    }\n    return tags.join('-');\n  }\n\n  /**\n  * Returns a string with a number that defines the place where the {@link Alarm} should be displayed on the Table according to the\n  * sorting by \"Status\" column\n  *\n  * @param {string} value string representation of the value of the {@link Alarm}\n  * @param {string} priority string representation of the priority of the {@link Alarm}\n  * @param {string} validity string representation of the validity of the {@link Alarm}\n  * @param {boolean} ack the ack status of the {@link Alarm}\n  * @returns {string} order for the {@link Alarm} in the Table\n  */\n  private _getAlarmStatusOrder(\n    value: string, priority: string, validity: string, ack: boolean, shelved: boolean): string {\n    let order = 0;\n    const priorities = ['critical', 'high', 'medium', 'low'];\n\n    // SET:\n    if (value === 'set') {\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = priorities.indexOf(priority);\n        } else {\n          order = 4 + priorities.indexOf(priority);\n        }\n      } else {\n        if (ack === false) {\n          order = 8 + priorities.indexOf(priority);\n        } else {\n          order = 12 + priorities.indexOf(priority);\n        }\n      }\n    } else {\n    // CLEARED:\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = 16;\n        } else {\n          order = 17;\n        }\n      } else {\n        if (ack === false) {\n          order = 18;\n        } else {\n          order = 19;\n        }\n      }\n    }\n    if (order \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmColorsSet.html":{"url":"classes/AlarmColorsSet.html","title":"class - AlarmColorsSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmColorsSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n        \n\n            \n                Description\n            \n            \n                Set of colors to display the antenna based on its alarm status\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                            Builds an instance of the color set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                JSON containing the colors as a dictionary\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:12\n                            \n                        \n\n                \n                    \n                        Color to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:30\n                            \n                        \n\n                \n                    \n                        Color to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:15\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:18\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Color to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:27\n                            \n                        \n\n                \n                    \n                        Color to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Set of colors to display the antenna based on its alarm status\n */\nexport class AlarmColorsSet {\n\n  /** Color to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** Color to use for the \"set-low\" Alarm value  */\n  public set_low: string;\n\n  /** Color to use for the \"set-medium\" Alarm value  */\n  public set_medium: string;\n\n  /** Color to use for the \"set-high\" Alarm value  */\n  public set_high: string;\n\n  /** Color to use for the \"set-critical\" Alarm value  */\n  public set_critical: string;\n\n  /** Color to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** Color to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** Color to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n   * Builds an instance of the color set\n   * @param {Object} attributes JSON containing the colors as a dictionary\n   */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /** Set of colors to display antennas fill in reliable state */\n  fillColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas fill in unreliable state */\n  fillColorsUnreliable: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in reliable state */\n  borderColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in unreliable state */\n  borderColorsUnreliable: AlarmColorsSet;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   * Defines alarms colors by calling the {@link defineAlarmColors}\n   */\n  ngOnInit() {\n    this.defineAlarmColors();\n  }\n\n  /**\n   * Generates a JSON with the colors to be used\n   * @param {string} fillColor the color to be used for fill\n   * @param {string} borderColor the color to be used for border\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  genColorStyle(fillColor, borderColor) {\n    return {\n      'fillColor': fillColor,\n      'borderColor': borderColor\n    };\n  }\n\n  /**\n   * Returns the colors to be used\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  getColors() {\n\n    let fillColor = 'transparent';\n    let borderColor = 'transparent';\n\n    if (!this.alarm) {\n      fillColor = this.fillColorsUnreliable.unknown;\n      borderColor = this.borderColorsUnreliable.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n    let fillColorsToUse = this.fillColors;\n    let borderColorsToUse = this.borderColors;\n    if (this.alarm.validity === 0) {\n      fillColorsToUse = this.fillColorsUnreliable;\n      borderColorsToUse = this.borderColorsUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      fillColor = fillColorsToUse.shelved;\n      borderColor = borderColorsToUse.shelved;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      fillColor = fillColorsToUse.maintenance;\n      borderColor = borderColorsToUse.maintenance;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.cleared) {\n      fillColor = fillColorsToUse.clear;\n      borderColor = borderColorsToUse.clear;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_low) {\n      fillColor = fillColorsToUse.set_low;\n      borderColor = borderColorsToUse.set_low;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_medium) {\n      fillColor = fillColorsToUse.set_medium;\n      borderColor = borderColorsToUse.set_medium;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_high) {\n      fillColor = fillColorsToUse.set_high;\n      borderColor = borderColorsToUse.set_high;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_critical) {\n      fillColor = fillColorsToUse.set_critical;\n      borderColor = borderColorsToUse.set_critical;\n      return this.genColorStyle(fillColor, borderColor);\n    } else {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n  }\n\n  /**\n   * Defines colors to be used to display the antennas\n   */\n  defineAlarmColors() {\n\n    this.fillColors = new AlarmColorsSet({\n      clear: 'green',\n      set_low: 'yellow',\n      set_medium: 'yellow',\n      set_high: 'red',\n      set_critical: 'red',\n      unknown: 'lightblue',\n      maintenance: 'gray',\n      shelved: 'DarkCyan'\n    });\n\n    this.fillColorsUnreliable = new AlarmColorsSet({\n      clear: 'transparent',\n      set_low: 'transparent',\n      set_medium: 'transparent',\n      set_high: 'transparent',\n      set_critical: 'transparent',\n      unknown: 'transparent',\n      maintenance: 'transparent',\n      shelved: 'transparent',\n    });\n\n    this.borderColors = this.fillColors;\n    this.borderColorsUnreliable = this.fillColors;\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:82\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n\n                        \n                            Default value: 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:77\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Returns the style class name based on the optional input size. By default\nthe class is medium size.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    style class name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    url of the image\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the pending ack badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the pending ack must be activated, false if it must not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the shelve badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the alarm is shelved, false if it is not\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:82\n                            \n                        \n\n                \n                    \n                        Available sizes for the alarm componet\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n    \n        \n  \n    \n  \n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as headers in a table or list\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value: 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input {@link optionalAlarmName} is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as headers in a table or list\n */\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName;\n    if (this.alarm) {\n      if (this.optionalAlarmName) {\n        alarmName = this.optionalAlarmName;\n      } else {\n        alarmName = this.alarm.core_id;\n      }\n      if (alarmName.length > this.alarmNameMaxSize) {\n        return alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n      } else {\n        return alarmName;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    {{this.getAlarmName()}}\n\n\n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{this.getAlarmName()}}                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AntennaConfig.html":{"url":"classes/AntennaConfig.html","title":"class - AntennaConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AntennaConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the antennas and location related to an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                            \n                                    Public\n                                antenna\n                            \n                            \n                                    Public\n                                placemark\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antenna:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:15\n                            \n                        \n\n                \n                    \n                        ID of the Antenna associated with the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** Dictionary of Alarm configuration indexed by antennas group ID **/\n  public antennasConfig: {[group: string]: AntennaConfig [] } = {};\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasConfig[key] = response[key] as AntennaConfig[];\n        }\n      }\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                borderColors\n                            \n                            \n                                borderColorsUnreliable\n                            \n                            \n                                fillColors\n                            \n                            \n                                fillColorsUnreliable\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmColors\n                            \n                            \n                                genColorStyle\n                            \n                            \n                                getColors\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:82\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        The Alarm to associate to the antenna \n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                    \n                        The position of the antenna in the X axis \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                    \n                        The position of the antenna in the Y axis \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value: {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                    \n                        Radius of the antenna \n\n                        \n                            Default value: 1\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value: '0 0 10 10'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmColors\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmColors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            Defines colors to be used to display the antennas\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genColorStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenColorStyle(fillColor: , borderColor: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Generates a JSON with the colors to be used\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fillColor\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the color to be used for fill\n\n                                                        \n                                                \n                                                \n                                                        borderColor\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the color to be used for border\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'fillColor': any; 'borderColor': any; }\n\n                            \n                                \n                                    a JSON containing the fillColor and the borderColor\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColors\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Returns the colors to be used\n\n\n                            \n                            \n                            \n                                Returns :     { 'fillColor': any; 'borderColor': any; }\n\n                            \n                                \n                                    a JSON containing the fillColor and the borderColor\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\nDefines alarms colors by calling the {@link defineAlarmColors}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:91\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borderColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        borderColors:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:79\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas border in reliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borderColorsUnreliable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        borderColorsUnreliable:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:82\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas border in unreliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillColors:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:73\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas fill in reliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillColorsUnreliable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillColorsUnreliable:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:76\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas fill in unreliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:90\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Set of colors to display the antenna based on its alarm status\n */\nexport class AlarmColorsSet {\n\n  /** Color to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** Color to use for the \"set-low\" Alarm value  */\n  public set_low: string;\n\n  /** Color to use for the \"set-medium\" Alarm value  */\n  public set_medium: string;\n\n  /** Color to use for the \"set-high\" Alarm value  */\n  public set_high: string;\n\n  /** Color to use for the \"set-critical\" Alarm value  */\n  public set_critical: string;\n\n  /** Color to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** Color to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** Color to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n   * Builds an instance of the color set\n   * @param {Object} attributes JSON containing the colors as a dictionary\n   */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /** Set of colors to display antennas fill in reliable state */\n  fillColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas fill in unreliable state */\n  fillColorsUnreliable: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in reliable state */\n  borderColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in unreliable state */\n  borderColorsUnreliable: AlarmColorsSet;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   * Defines alarms colors by calling the {@link defineAlarmColors}\n   */\n  ngOnInit() {\n    this.defineAlarmColors();\n  }\n\n  /**\n   * Generates a JSON with the colors to be used\n   * @param {string} fillColor the color to be used for fill\n   * @param {string} borderColor the color to be used for border\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  genColorStyle(fillColor, borderColor) {\n    return {\n      'fillColor': fillColor,\n      'borderColor': borderColor\n    };\n  }\n\n  /**\n   * Returns the colors to be used\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  getColors() {\n\n    let fillColor = 'transparent';\n    let borderColor = 'transparent';\n\n    if (!this.alarm) {\n      fillColor = this.fillColorsUnreliable.unknown;\n      borderColor = this.borderColorsUnreliable.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n    let fillColorsToUse = this.fillColors;\n    let borderColorsToUse = this.borderColors;\n    if (this.alarm.validity === 0) {\n      fillColorsToUse = this.fillColorsUnreliable;\n      borderColorsToUse = this.borderColorsUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      fillColor = fillColorsToUse.shelved;\n      borderColor = borderColorsToUse.shelved;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      fillColor = fillColorsToUse.maintenance;\n      borderColor = borderColorsToUse.maintenance;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.cleared) {\n      fillColor = fillColorsToUse.clear;\n      borderColor = borderColorsToUse.clear;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_low) {\n      fillColor = fillColorsToUse.set_low;\n      borderColor = borderColorsToUse.set_low;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_medium) {\n      fillColor = fillColorsToUse.set_medium;\n      borderColor = borderColorsToUse.set_medium;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_high) {\n      fillColor = fillColorsToUse.set_high;\n      borderColor = borderColorsToUse.set_high;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_critical) {\n      fillColor = fillColorsToUse.set_critical;\n      borderColor = borderColorsToUse.set_critical;\n      return this.genColorStyle(fillColor, borderColor);\n    } else {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n  }\n\n  /**\n   * Defines colors to be used to display the antennas\n   */\n  defineAlarmColors() {\n\n    this.fillColors = new AlarmColorsSet({\n      clear: 'green',\n      set_low: 'yellow',\n      set_medium: 'yellow',\n      set_high: 'red',\n      set_critical: 'red',\n      unknown: 'lightblue',\n      maintenance: 'gray',\n      shelved: 'DarkCyan'\n    });\n\n    this.fillColorsUnreliable = new AlarmColorsSet({\n      clear: 'transparent',\n      set_low: 'transparent',\n      set_medium: 'transparent',\n      set_high: 'transparent',\n      set_critical: 'transparent',\n      unknown: 'transparent',\n      maintenance: 'transparent',\n      shelved: 'transparent',\n    });\n\n    this.borderColors = this.fillColors;\n    this.borderColorsUnreliable = this.fillColors;\n\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\nand a map (instantiated by a {@link AntennasMap})\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAntenna:     AntennaConfig\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AntennaConfig } from '../antennas.service';\n\n/**\n* Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\n* and a map (instantiated by a {@link AntennasMap})\n*/\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna: AntennaConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AntennaConfig}\n   */\n  updateSelectedAntenna(selectedAntenna: AntennaConfig): void {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasMapComponent.html":{"url":"components/AntennasMapComponent.html","title":"component - AntennasMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map/antennas-map.component.ts\n\n\n    \n        Description\n    \n    \n        Main component for the antennas map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-map\n            \n\n            \n                styleUrls\n                antennas-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmsConfig\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                mapdataAvailable\n                            \n                            \n                                    Public\n                                mapPlacemarks\n                            \n                            \n                                    Public\n                                mapService\n                            \n                            \n                                    Public\n                                pathsGroups\n                            \n                            \n                                    Public\n                                placemarks\n                            \n                            \n                                    Public\n                                placemarksGroups\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                svgPaths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                existsPlacemarkData\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaGroups\n                            \n                            \n                                getOpacityClass\n                            \n                            \n                                getPlacemarkObject\n                            \n                            \n                                initialize\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickedAntennaMarker\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService, mapService: MapService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map/antennas-map.component.ts:48\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to build the interactive map\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Variable to manage a placemark selection\nfrom the map, or from an external component \n\n                            \n                            Type:    AntennaConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickedAntennaMarker\n                    \n                    \n                        Variable to manage a placemark selection from the map \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            existsPlacemarkData\n                            \n                            \n                        \n                    \n                \n                \n                    \nexistsPlacemarkData(placemark: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Method to verify if there is data available for the placemark id\nfrom the alarm configuration\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemark\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Id of a graphical element in the map source\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if there is configuration available, false if there is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Get alarm from the alarms service using id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                id of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    Alarm object retrieved from the service\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Get antenna groups from the alarms configuration\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    List with the names of the antennas groups\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOpacityClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOpacityClass(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Opacity class name for each antenna marker\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    class name that defines the opacity of the graphical element\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlacemarkObject\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlacemarkObject(placemark: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Get a placemark graphical object from an id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemark\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Id of a graphical element in the map source\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    placemark graphical element\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Component initialization that involves the initialization of the AntennasService\nif not already initialized and the initialization of the related map data source\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Check if an specific antenna marker was selected through its related\nalarm configuration\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the antenna alarm is selected, false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated and initializes it\ncalling the {@link initialize} method\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:176\n                            \n                        \n\n\n                \n                    \n                            On click action for the antenna markers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:45\n                            \n                        \n\n                \n                    \n                        Alarms Configuration  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:59\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:42\n                            \n                        \n\n                \n                    \n                        Map Configuration  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapdataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapdataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:48\n                            \n                        \n\n                \n                    \n                        Variable to check if the data from the webserver is available  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapPlacemarks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapPlacemarks:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:26\n                            \n                        \n\n                \n                    \n                        Placemarks list obtained from the webserver \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapService:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:60\n                            \n                        \n\n                \n                    \n                        Service used to build the interactive map\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pathsGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathsGroups:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:36\n                            \n                        \n\n                \n                    \n                        Coordinates related with paths, listed by group \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemarks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemarks:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:30\n                            \n                        \n\n                \n                    \n                        Placemarks objects indexed by name to provide the name and coordinates\nof each identified place \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemarksGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemarksGroups:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:33\n                            \n                        \n\n                \n                    \n                        Placemarks listed by group \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:58\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            svgPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        svgPaths:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:39\n                            \n                        \n\n                \n                    \n                        SVG defitions for the related paths, listed by group \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { MapService } from '../../map/map.service';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\n\n/**\n* Main component for the antennas map\n*/\n@Component({\n  selector: 'app-antennas-map',\n  templateUrl: './antennas-map.component.html',\n  styleUrls: ['./antennas-map.component.scss']\n})\nexport class AntennasMapComponent implements OnInit {\n\n  /** Variable to manage a placemark selection\n   * from the map, or from an external component */\n  @Input() selectedAntenna: AntennaConfig = null;\n\n  /** Variable to manage a placemark selection from the map */\n  @Output() clickedAntennaMarker = new EventEmitter();\n\n  /** Placemarks list obtained from the webserver */\n  public mapPlacemarks = {};\n\n  /** Placemarks objects indexed by name to provide the name and coordinates\n  * of each identified place */\n  public placemarks = {};\n\n  /** Placemarks listed by group */\n  public placemarksGroups = [];\n\n  /** Coordinates related with paths, listed by group */\n  public pathsGroups = [];\n\n  /** SVG defitions for the related paths, listed by group */\n  public svgPaths = [];\n\n  /** Map Configuration  */\n  public mapConfig = {};\n\n  /** Alarms Configuration  */\n  public alarmsConfig = {};\n\n   /** Variable to check if the data from the webserver is available  */\n  public mapdataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to get the configuration needed by the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {MapService} mapService Service used to build the interactive map\n   *\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n    public mapService: MapService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated and initializes it\n   * calling the {@link initialize} method\n   */\n  ngOnInit() {\n    this.initialize();\n  }\n\n  /**\n   * Component initialization that involves the initialization of the {@link AntennasService}\n   * if not already initialized and the initialization of the related map data source\n   */\n  initialize() {\n    this.service.initialize();\n    this.service.getMapData().subscribe((mapdata) => {\n      this.mapPlacemarks = mapdata['placemarks'];\n      for (const placemark of mapdata['placemarks']['pads']) {\n        this.placemarks[placemark.name] = placemark;\n      }\n      this.placemarksGroups.push(mapdata['placemarks']['pads']);\n      this.placemarksGroups.push(mapdata['placemarks']['wstations']);\n      this.pathsGroups.push(mapdata['paths']);\n      const viewbox = this.mapService.mapdataProcessing(this.placemarksGroups, this.pathsGroups);\n      this.mapConfig = {\n        'fullHeight': true,\n        'viewbox':\n          [-100 + viewbox[0], viewbox[1], viewbox[2], viewbox[3]].join(' ')\n      };\n      this.svgPaths = this.mapService.getSVGPaths(mapdata['paths']);\n      this.mapdataAvailable.next(true);\n    });\n    this.alarmsConfig = this.service.antennasConfig;\n  }\n\n  /**\n   * Method to verify if there is data available for the placemark id\n   * from the alarm configuration\n   * @param {string} placemark Id of a graphical element in the map source\n   * @return {boolean} True if there is configuration available, false if there is not\n   */\n  existsPlacemarkData(placemark: string): boolean {\n    const placemark_id = placemark;\n    const index = Object.keys(this.placemarks).indexOf(placemark_id);\n    if (index > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Get alarm from the alarms service using id\n   * @param {string} alarm_id id of the alarm\n   * @return {Alarm} Alarm object retrieved from the service\n   */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Get antenna groups from the alarms configuration\n   * @return {string[]} List with the names of the antennas groups\n   */\n  getAntennaGroups(): string[] {\n    return Object.keys(this.alarmsConfig);\n  }\n\n  /**\n   * Opacity class name for each antenna marker\n   * @param {AntennaConfig} antennaConfig configuration of the alarm\n   * @return class name that defines the opacity of the graphical element\n   */\n  getOpacityClass(antennaConfig: AntennaConfig): string {\n    if (this.selectedAntenna === null) {\n      return 'opacity-100';\n    } else {\n      if ( this.isSelected(antennaConfig) === true ) {\n        return 'opacity-100';\n      } else {\n        return 'opacity-25';\n      }\n    }\n  }\n\n /**\n  * Get a placemark graphical object from an id\n  * @param {string} placemark Id of a graphical element in the map source\n  * @return {any} placemark graphical element\n  */\n  getPlacemarkObject(placemark: string): any {\n    const placemark_id = placemark;\n    return this.placemarks[placemark_id];\n  }\n\n  /**\n   * Check if an specific antenna marker was selected through its related\n   * alarm configuration\n   * @param {AntennaConfig} antennaConfig configuration of the alarm\n   * @return {boolean} True if the antenna alarm is selected, false if it is not\n   */\n  isSelected(antennaConfig: AntennaConfig): boolean {\n    if (this.selectedAntenna === null) {\n      return false;\n    } else {\n      return this.selectedAntenna.placemark === antennaConfig.placemark;\n    }\n\n  }\n\n  /**\n   * On click action for the antenna markers\n   * @param {AntennaConfig} antennaConfig configuration of the alarm\n   */\n  onClick(antennaConfig: AntennaConfig) {\n    if (this.isSelected(antennaConfig)) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = antennaConfig;\n    }\n    this.clickedAntennaMarker.emit(this.selectedAntenna);\n  }\n\n}\n\n    \n\n    \n        \n\n   \n\n     \n\n     \n\n     \n       \n         \n\n           \n\n             \n               \n                \n                \n              \n            \n\n          \n\n         \n\n       \n     \n\n\n\n   \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n  Modules\n  AntennasModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AntennaMarkerComponent\n                            \n                            \n                                AntennasComponent\n                            \n                            \n                                AntennasMapComponent\n                            \n                            \n                                AntennasSidebarComponent\n                            \n                            \n                                AntennasSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AntennasService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AntennasSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the AntennasModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:49\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the {@link initialize} method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:49\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:43\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:46\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasConfig:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:34\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm configuration indexed by antennas group ID *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:37\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasSummaryConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:40\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** Dictionary of Alarm configuration indexed by antennas group ID **/\n  public antennasConfig: {[group: string]: AntennaConfig [] } = {};\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasConfig[key] = response[key] as AntennaConfig[];\n        }\n      }\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Display used to show the list of antennas' alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaName\n                            \n                            \n                                getAntennasByGroup\n                            \n                            \n                                getAntennasGroups\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to other views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Selected antenna object, null if it is nothing selected \n\n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                    \n                        Event emitted to notify when an antenna is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaName(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the Antenna configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the antenna name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennasByGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennasByGroup(groupID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration by group\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AntennaConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennasGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennasGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas groups Ids defined in the configuration\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    List of groups IDS\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked antenna\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { RoutingService } from '../../data/routing.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Display used to show the list of antennas' alarms\n */\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit {\n\n  /** Selected antenna object, null if it is nothing selected */\n  @Input() selectedAntenna = null;\n\n  /** Event emitted to notify when an antenna is selected */\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {RoutingService} routing Service used to redirect to other views\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n   * @param {MapAntennaConfig} antennaConfig the Antenna configuration\n   * @returns {string} the antenna name to display\n   */\n  getAntennaName(antennaConfig: AntennaConfig ): string {\n    return  antennaConfig.antenna + ' (' + antennaConfig.placemark + ')';\n  }\n\n  /**\n  * Return the list of antennas groups Ids defined in the configuration\n  * @returns {list} List of groups IDS\n  */\n  getAntennasGroups(): string [] {\n    return Object.keys(this.antennasService.antennasConfig);\n  }\n\n  /**\n  * Return the list of Alarm configuration by group\n  * @returns {list} list of {@link AntennaConfig}\n  */\n  getAntennasByGroup(groupID: string): AntennaConfig [] {\n    return this.antennasService.antennasConfig[groupID];\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AntennaConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AntennaConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  * @param {AntennaConfig} alarmConfig configuration of the clicked antenna\n  */\n  onClick(alarmConfig: AntennaConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n     chevron_left  {{getAntennaName(this.selectedAntenna)}}  \n\n\n\n\n  \n     {{group}} \n    \n      \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Alarm ID\n        {{this.selectedAntenna.alarm}}\n      \n      \n        Antenna\n        {{this.selectedAntenna.antenna}}\n      \n      \n        Location (PAD)\n        {{this.selectedAntenna.placemark}}\n      \n    \n  \n  \n    Go to Table\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS      chevron_left  {{getAntennaName(this.selectedAntenna)}}         {{group}}                                                   Alarm ID        {{this.selectedAntenna.alarm}}                    Antenna        {{this.selectedAntenna.antenna}}                    Location (PAD)        {{this.selectedAntenna.placemark}}                  Go to Table  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get Antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to get Antennas configuration\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:43\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {AntennasService} antennasService Service used to get Antennas configuration\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.antennasService.antennasSummaryConfig);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              STATUS\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    STATUS                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                            Instantiates the related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { outlets: { primary: any; actions: any; }; } | { outlets: { primary: any; actions?: undefined; }...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Instantiates the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNavigationCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navigationSidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Overview', link: 'overview', icon: 'ias_overview', svgIcon: true},\n    { title: 'Weather', link: 'weather', icon: 'ias_weather', svgIcon: true},\n    { title: 'Antennas', link: 'antennas', icon: 'ias_antenna', svgIcon: true},\n    { title: 'Table', link: 'tabular', icon: 'ias_table', svgIcon: true}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /*\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  // TODO: Use only custom svgIcons\n  navigationSidenavItems = [\n    { title: 'Overview', link: 'overview', icon: 'ias_overview', svgIcon: true},\n    { title: 'Weather', link: 'weather', icon: 'ias_weather', svgIcon: true},\n    { title: 'Antennas', link: 'antennas', icon: 'ias_antenna', svgIcon: true},\n    { title: 'Table', link: 'tabular', icon: 'ias_table', svgIcon: true}\n  ];\n\n  /**\n   * Instantiates the related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Instantiates the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n  }\n\n  getActionsLink(item: any) {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n  \n\n  \n    \n      \n        \n          \n            \n              {{ item.icon }}\n            \n            \n              {{ item.icon }}\n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                                                               {{ item.icon }}                                      {{ item.icon }}                        {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppModule -->\n\nMaterialSandboxComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                MaterialSandboxComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    OverviewModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TabularModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_BASE_HREF } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { HealthModule } from './health/health.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { MapModule } from './map/map.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppComponent } from './app.component';\nimport { TabularViewComponent } from './tabular/tabular-view/tabular-view.component';\nimport { OverviewComponent } from './overview/overview/overview.component';\nimport { AckComponent } from './actions/ack/ack.component';\nimport { ShelveComponent } from './actions/shelve/shelve.component';\nimport { WeatherComponent } from './weather/weather/weather.component';\nimport { AlarmComponent } from './shared/alarm/alarm.component';\nimport { AntennasComponent } from './antennas/antennas/antennas.component';\n\nimport { HttpModule } from '@angular/http';\nimport { MaterialSandboxComponent } from './material-sandbox/material-sandbox.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'overview', component: OverviewComponent },\n  { path: 'tabular', component: TabularViewComponent },\n  { path: 'tabular/:filter', component: TabularViewComponent },\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions'},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions'},\n  { path: 'weather', component: WeatherComponent},\n  { path: 'sandbox', component: MaterialSandboxComponent},\n  { path: 'antennas', component: AntennasComponent},\n];\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent,\n    MaterialSandboxComponent,\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    HttpModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Set of buttons used to trigger actions over AlarmService\nContains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the buttons\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Set of buttons used to trigger actions over AlarmService\n * Contains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n */\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfigurationData\n                            \n                            \n                                getRefreshRateParameters\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRefreshRateParameters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRefreshRateParameters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Get refresh rate parameters from IAS configuration data\nThese are refresh rate value and related multiplier factor\n\n\n                            \n                            \n                            \n                                Returns :     { 'refreshRate': any; 'broadcastFactor': any; }\n\n                            \n                                \n                                    contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:23\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:18\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {forkJoin as observableForkJoin,  BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Rx';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { Iasio } from '../data/iasio';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      const iasConfigurationData = res[0];\n      this.iasConfiguration = iasConfigurationData;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh rate parameters from IAS configuration data\n  * These are refresh rate value and related multiplier factor\n  * @returns {json} contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n  */\n  getRefreshRateParameters() {\n    return {\n      'refreshRate': this.iasConfiguration['refresh_rate'],\n      'broadcastFactor': this.iasConfiguration['broadcast_factor']\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the services and data models\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AlarmService\n                            \n                            \n                                     CdbService\n                            \n                            \n                                     HttpClientService\n                            \n                            \n                                     RoutingService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { RoutingService } from './routing.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    RoutingService,\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n  Modules\n  HealthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the components associated to the health of the IAS\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HealthSummaryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HealthSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:19\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:48\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.alarmId);\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n    this.alarmId = 'IAS-Health-Global';\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-valid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-valid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-valid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-invalid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-invalid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              IAS HEALTH\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    IAS HEALTH                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:13\n                            \n                        \n\n                \n                    \n                            The \"constructor\" \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /** The \"constructor\" */\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    console.log('HTTP GET FROM URL: ', url);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  IasMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for the required Angular Material components\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in maintenance state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_0:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority zero (clear) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_1:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority low \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_2:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority medium \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_3:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority high \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_4:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority critical \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in unknown state \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Reference to the icon used to display Alarms in clear and valid states */\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n\n  /** Reference to the icon used to display Alarms in clear and invalid states */\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n\n  /** Reference to the icon used to display Alarms in unknown state */\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n\n  /** Reference to the icon used to display Alarms in maintenance state */\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and valid states */\n  set_valid = Assets.ICONS + 'set-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and invalid states */\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n\n  /** Reference to the icon used to display Alarms with priority zero (clear) */\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n\n  /** Reference to the icon used to display Alarms with priority low */\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n\n  /** Reference to the icon used to display Alarms with priority medium */\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n\n  /** Reference to the icon used to display Alarms with priority high */\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n\n  /** Reference to the icon used to display Alarms with priority critical */\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                    \n                        contains the configuration to draw the map\n\n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                    \n                        Defines wether or no there is data available to draw the map\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n  Modules\n  MapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MapComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: , pathsGroups: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Scaling and calculation of max and min values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of groups of placemarks\n\n                                                        \n                                                \n                                                \n                                                        pathsGroups\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    The viewbox: list of 4 numbers used to define the size of the map\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup) {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                material-sandbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/material-sandbox/material-sandbox.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Executed when initiating the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that displays some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.component.html',\n  styleUrls: ['./material-sandbox.component.scss']\n})\nexport class MaterialSandboxComponent implements OnInit {\n\n  /**\n  * Constructor of the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when initiating the component\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Primary\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nAccent\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nWarn\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nBackground\n\n   status-bar \n   app-bar \n   background \n   hover \n   card \n   dialog \n   disabled-button \n\n\n   raised-button \n   focused-button \n   selected-button \n   selected-disabled-button \n   disabled-button-toggle \n   unselected-chip \n   disabled-list-option \n\n\nForeground\n\n   base \n   divider \n   dividers \n   disabled \n   disabled-button \n   disabled-text \n\n\n   hint-text \n   secondary-text \n   icon \n   icons \n   text \n   slider-min \n   slider-off \n   slider-off-active \n\n\n\n\n\n\nMaterial Toggle\nDefault \nPrimary \nAccent \nWarn\n\nBasic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\n\n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Primary   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Accent   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Warn   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Background   status-bar    app-bar    background    hover    card    dialog    disabled-button    raised-button    focused-button    selected-button    selected-disabled-button    disabled-button-toggle    unselected-chip    disabled-list-option Foreground   base    divider    dividers    disabled    disabled-button    disabled-text    hint-text    secondary-text    icon    icons    text    slider-min    slider-off    slider-off-active Material ToggleDefault Primary Accent WarnBasic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    Link          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n      \n         POWER \n          \n          \n      \n      \n         OBSERVATIONS \n          \n          \n      \n    \n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n      \n         NETWORK \n          \n        \n\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     ANTENNAS                                                          POWER                                          OBSERVATIONS                                                  WEATHER                                                                  IAS HEALTH                                                          NETWORK                                       '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n  Modules\n  OverviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OverviewCardComponent\n                            \n                            \n                                OverviewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    OverviewCardComponent\n                            \n                            \n                                    OverviewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToAntennas\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TabularViewComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TabularViewComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TabularViewComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TabularViewComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AlarmComponent\n                            \n                            \n                                    AlarmHeaderComponent\n                            \n                            \n                                    StatusViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, router: Router, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system Router to handle navigation\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Router } from '@angular/router';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n\n  /**\n   * Instantiates the component\n   * @param {SidenavService} sidenavService Service to manage the Acknowledge and Shelve sidenav\n   * @param {Router} router system Router to handle navigation\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private router: Router,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.router.navigate([{outlets: {actions: ['shelve', this.alarm.core_id]}}]);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveComponent.html":{"url":"components/ShelveComponent.html","title":"component - ShelveComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve/shelve.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to acknowledge alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve\n            \n\n            \n                styleUrls\n                shelve.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shelve.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarm_id\n                            \n                            \n                                defaultTimeout\n                            \n                            \n                                form\n                            \n                            \n                                message\n                            \n                            \n                                requestStatus\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                            \n                                timeout\n                            \n                            \n                                timeouts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSend\n                            \n                            \n                                getActionButtonText\n                            \n                            \n                                getResponseMessageText\n                            \n                            \n                                getResponseMessageTitle\n                            \n                            \n                                getTitleText\n                            \n                            \n                                    Private\n                                hideSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                reload\n                            \n                            \n                                shelve\n                            \n                            \n                                    Private\n                                showSpinner\n                            \n                            \n                                toggleShelveUnshelve\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, alarmService: AlarmService, route: ActivatedRoute, sidenavService: SidenavService, spinnerService: NgxSpinnerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve/shelve.component.ts:79\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to handle the sidenav where the component is opened\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular Router used to navigate through the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canSend\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanSend()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:225\n                            \n                        \n\n\n                \n                    \n                            Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if shelve action can be performed and false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionButtonText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionButtonText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:248\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the action button\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button, either \"Shelve\" or \"Unshelve\"\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:275\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageTitle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:263\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the title\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitleText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitleText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:233\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the title\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:216\n                            \n                        \n\n\n                \n                    \n                            Hides the spinner after the Alarm has been shelved/unshelved\nIt also unblocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Get the alarmID from the url, create the form and open the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reload\n                            \n                            \n                        \n                    \n                \n                \n                    \nreload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Cleans the component and reloads the Alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the shelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:207\n                            \n                        \n\n\n                \n                    \n                            Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\nIt also blocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleShelveUnshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleShelveUnshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            Send the shelve/unshelve request through the method provided by the AlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the unshelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:56\n                            \n                        \n\n                \n                    \n                        Alarm object to be shelved/unshelved\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:51\n                            \n                        \n\n                \n                    \n                        Id of the Alarm object to be shelved/unshelved\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTimeout:     \n\n                    \n                \n                    \n                        \n                            Default value : this.timeouts[0].value\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:46\n                            \n                        \n\n                \n                    \n                        Default timeout for shelving\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:61\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:66\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestStatus:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:79\n                            \n                        \n\n                \n                    \n                        Stores wether or not the action has been executed requestStatusly\nIf requestStatus = 0, the request has not been sent yet\nIf requestStatus = 1, the request was successfully\nIf requestStatus = -1, the request has failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:94\n                            \n                        \n\n                \n                    \n                        Service to handle the sidenav where the component is opened\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:71\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve timeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeouts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeouts:     TimeoutOption[]\n\n                    \n                \n                    \n                        \n                            Type :     TimeoutOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:34\n                            \n                        \n\n                \n                    \n                        Timeout options for shelving alarms\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {Router} router Angular Router used to navigate through the application\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(this.alarm.core_id, message, timeout).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    if (!this.alarm.shelved) {\n      return 'Shelving results';\n    } else {\n      return 'Unshelving results';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        return 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        return 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      let response = '';\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n      return response;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n     {{ getTitleText() }} \n    \n      &times;\n    \n  \n\n  \n    \n      \n        \n          \n            Alarm ID\n            {{alarm?.core_id}}\n          \n          \n            Description\n            {{ alarm?.description }}\n          \n        \n      \n\n       \n\n      \n        \n           {{ getResponseMessageTitle() }} \n           {{ getResponseMessageText() }} \n        \n      \n\n      \n        \n          \n\n          \n             Information required to shelve the Alarm \n\n            \n               Reason for shelving \n              \n               You must write a message in order to Shelve \n            \n\n            \n               Time in shelf \n              \n                \n                  {{timeout.viewValue}}\n                \n              \n               You must select a duration in order to Shelve \n            \n          \n\n        \n      \n    \n  \n\n  \n     \n    \n      Close\n    \n\n    \n      Cancel\n      {{ getActionButtonText() }}\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ getTitleText() }}           ×                                                Alarm ID            {{alarm?.core_id}}                                Description            {{ alarm?.description }}                                                        {{ getResponseMessageTitle() }}            {{ getResponseMessageText() }}                                                              Information required to shelve the Alarm                            Reason for shelving                              You must write a message in order to Shelve                                        Time in shelf                                                 {{timeout.viewValue}}                                             You must select a duration in order to Shelve                                                            Close              Cancel      {{ getActionButtonText() }}      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:10\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Opens the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Sets the reference to the sidenav\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Reference to the sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Toggles the sidenav (open/close)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:21\n                            \n                        \n\n                \n                    \n                        Defines wether or not the sidenav can be closed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the sidenav \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\n\n/**\n* Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  /**\n   * Builds an instance of the service\n   */\n  constructor() { }\n\n  /** Reference to the sidenav */\n  private sidenav: MatSidenav;\n\n  /** Defines wether or not the sidenav can be closed */\n  public canClose = true;\n\n  /**\n  * Sets the reference to the sidenav\n  * @param {MatSidenav} sidenav Reference to the sidenav\n  */\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  /**\n  * Opens the sidenav\n  */\n  public open() {\n    return this.sidenav.open();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  public close() {\n    return this.sidenav.close();\n  }\n\n  /**\n  * Toggles the sidenav (open/close)\n  */\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the {@link alarmTags}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsPrioritySet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid.svg',\n      set_critical: Assets.ICONS + 'set-valid.svg',\n      unknown: Assets.ICONS + 'unknown-valid.svg',\n      maintenance: Assets.ICONS + 'maintenance-valid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid.svg',\n      set_critical: Assets.ICONS + 'set-invalid.svg',\n      unknown: Assets.ICONS + 'unknown-invalid.svg',\n      maintenance: Assets.ICONS + 'maintenance-invalid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n  Modules\n  TabularModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Table view\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LegendComponent\n                            \n                            \n                                TabularViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TabularViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { StatusViewComponent } from '../shared/status-view/status-view.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TabularViewComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabularViewComponent.html":{"url":"components/TabularViewComponent.html","title":"component - TabularViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabularViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/tabular-view/tabular-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component that dispays all the Alarms in a table\nThe user can change the default sorting by clicking on the headers and filter\nby typing in an input field\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabular-view\n            \n\n            \n                styleUrls\n                tabular-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabular-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _setFilterActivated\n                            \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Private\n                                dateFormat\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                filterPredicate\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Private\n                                filterValueForSetAlarms\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                            \n                                    Private\n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clearFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                toggleFilterOnlySetAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/tabular-view/tabular-view.component.ts:74\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Applies the filter ot the Table\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Clears the filter and applies this empty filtering (i.e. no filtering)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Applies the table's default sorting after its initialization \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from CdbService and AlarmService\nwhen the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Create the table when the component is initializated\nSubscribes to new alarms from the AlarmService\nRetrieves filter values passed by the URL and applies them to the table\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onKeyUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nonKeyUp(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            This function is executed after a key is pressed in the keywords input box\nIf the user pressed \"Escape\", then the filters are cleared by calling {@link clearFilter}, if not, the filters are applied normally\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the event that triggered the function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFilterOnlySetAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFilterOnlySetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Toggle the filtering for only set Alarm objects ON/OFF\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _setFilterActivated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _setFilterActivated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:35\n                            \n                        \n\n                \n                    \n                        Defines wether the filter for only SET Alarm is activated or not.\nWhen the user writes either \"set\", \" set\" or \"set \" this field becomes true\nIf the user deletes \"set\" from the input field then this field becomes false\nThis attribute is binded to the state of the toggle slide switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:58\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     MatTableDataSource\n\n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:55\n                            \n                        \n\n                \n                    \n                        DataSource of the Table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:46\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['status', 'name',  'mode', 'timestamp', 'description', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:43\n                            \n                        \n\n                \n                    \n                        Array that defines which coulmns are going to be displayed and in which order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterPredicate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPredicate:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: Alarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:64\n                            \n                        \n\n                \n                    \n                        Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterString:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:38\n                            \n                        \n\n                \n                    \n                        String that stores the test input in the filter textfield \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterValueForSetAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterValueForSetAlarms:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'set'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:52\n                            \n                        \n\n                \n                    \n                        String to define the keyword to filter SET Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the MatSort, the component that defines the sorting of the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        table:     MatTable\n\n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the MatTable, the component that defines the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:192\n                                \n                            \n                    \n                        \n                                Returns the filters applied to the Table\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toggleStatus\n                    \n                \n\n                \n                    \n                        gettoggleStatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:200\n                                \n                            \n                    \n                        \n                                Returns the status of the Toggle for the filtering of set Alarms\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Injectable, OnInit, ViewChild, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Observable ,  BehaviorSubject ,  SubscriptionLike as ISubscription } from 'rxjs';\nimport { MatTableDataSource, MatSort, MatSortable, MatTable } from '@angular/material';\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { ActivatedRoute } from '@angular/router';\nimport { Alarm, OperationalMode, Validity } from '../../data/alarm';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Locale } from '../../settings';\n\n/**\n* Component that dispays all the Alarms in a table\n*\n* The user can change the default sorting by clicking on the headers and filter\n* by typing in an input field\n*/\n@Component({\n  selector: 'app-tabular-view',\n  templateUrl: './tabular-view.component.html',\n  styleUrls: ['./tabular-view.component.scss']\n})\nexport class TabularViewComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  /** Reference to the MatTable, the component that defines the table */\n  @ViewChild(MatTable) table: MatTable;\n\n  /** Reference to the MatSort, the component that defines the sorting of the table */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n  * Defines wether the filter for only SET {@link Alarm} is activated or not.\n  * When the user writes either \"set\", \" set\" or \"set \" this field becomes true\n  * If the user deletes \"set\" from the input field then this field becomes false\n  * This attribute is binded to the state of the toggle slide switch\n  */\n  public _setFilterActivated = false;\n\n  /** String that stores the test input in the filter textfield */\n  public filterString = '';\n\n  /**\n  * Array that defines which coulmns are going to be displayed and in which order\n  */\n  public displayedColumns = ['status', 'name',  'mode', 'timestamp', 'description', 'actions'];\n\n  /** String to store the formatting of dates, read form the settings */\n  private dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  private timezone: string;\n\n  /** String to define the keyword to filter SET {@link Alarm} */\n  private filterValueForSetAlarms = 'set';\n\n  /** DataSource of the Table */\n  public dataSource: MatTableDataSource;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /**\n  * Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n  * @returns {boolean} true if the row matches the filter, false if not\n  */\n  public filterPredicate: (\n    (data: Alarm, filterString: string) => boolean) = (data: Alarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private route: ActivatedRoute\n  ) {}\n\n  /**\n   * Create the table when the component is initializated\n   * Subscribes to new alarms from the {@link AlarmService}\n   * Retrieves filter values passed by the URL and applies them to the table\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n    this.sort.sort( {\n      id: 'status',\n      start: 'asc'\n    });\n    this.dataSource = new MatTableDataSource();\n    this.dataSource.data = this.alarmService.alarmsArray;\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      this.dataSource.data = this.alarmService.alarmsArray;\n    });\n    let filterValue = this.route.snapshot.paramMap.get('filter');\n    if (filterValue && filterValue !== '') {\n      filterValue = filterValue.replace('_', ' ');\n      this.applyFilter(filterValue);\n    }\n  }\n\n  /** Applies the table's default sorting after its initialization */\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n  * Unsubscribes from {@link CdbService} and {@link AlarmService}\n  * when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n  /**\n  * This function is executed after a key is pressed in the keywords input box\n  * If the user pressed \"Escape\", then the filters are cleared by calling {@link clearFilter}, if not, the filters are applied normally\n  * @param {event} event the event that triggered the function\n  */\n  onKeyUp(event) {\n    if (event.key === 'Escape') {\n      this.clearFilter();\n    } else {\n      this.applyFilter(event.target.value);\n    }\n  }\n\n  /**\n  * Clears the filter and applies this empty filtering (i.e. no filtering)\n  */\n  clearFilter() {\n    this.filterString = '';\n    this.applyFilter(this.filterString);\n  }\n\n  /**\n  * Applies the filter ot the Table\n  * @param {string} filterValue the string containing keywords for filtering\n  */\n  applyFilter(filter: string) {\n    this.filterString = filter;\n    const arrayOfFilters = filter.split(' ');\n    // If \"set\" IS in the array, then it is activated\n    if (arrayOfFilters.indexOf(this.filterValueForSetAlarms) >= 0 ) {\n      this._setFilterActivated = true;\n\n    } else { // If \"set\" NOT in the field, then it is deactivated\n      this._setFilterActivated = false;\n    }\n    filter = filter.trim();\n    filter = filter.toLowerCase();\n    this.dataSource.filter = filter;\n  }\n\n  /**\n  * Toggle the filtering for only set {@link Alarm} objects ON/OFF\n  */\n  toggleFilterOnlySetAlarm() {\n    if (this.filterString == null) {\n      this.filterString = '';\n    }\n    const arrayOfFilters = this.filterString.split(' ');\n    const indexOfSet = arrayOfFilters.indexOf(this.filterValueForSetAlarms);\n\n    // If activated then should deactivate:\n    if (this._setFilterActivated) {\n      if ( indexOfSet >= 0 ) {\n        arrayOfFilters.splice(indexOfSet, 1);\n      }\n    } else { // If deactivated then should activate:\n      if ( indexOfSet \n    \n\n    \n        \n\n  \n    \n  \n\n\n  \n\n    \n      \n        \n        \n          close\n        \n      \n      \n        Show only set alarms\n      \n    \n\n    \n\n      \n      \n        \n           STATUS \n        \n        \n          \n            \n          \n        \n      \n\n      \n      \n        \n           ALARM NAME \n        \n         {{alarm.name}} \n      \n\n      \n      \n        \n           MODE \n        \n         {{alarm.operationalMode}} \n      \n\n      \n      \n        \n           LAST CHANGE TIME \n        \n         {{ alarm.timestamp | date: dateFormat: timezone }} \n      \n\n      \n      \n        \n           DESCRIPTION \n        \n         {{alarm.description}} \n      \n\n      \n      \n        \n           ACTIONS \n        \n        \n          \n        \n      \n\n      \n      \n    \n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              close                            Show only set alarms                                             STATUS                                                                                              ALARM NAME                  {{alarm.name}}                                      MODE                  {{alarm.operationalMode}}                                      LAST CHANGE TIME                  {{ alarm.timestamp | date: dateFormat: timezone }}                                      DESCRIPTION                  {{alarm.description}}                                      ACTIONS                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabularViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {Router} router Angular Router used to navigate through the application\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(this.alarm.core_id, message, timeout).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    if (!this.alarm.shelved) {\n      return 'Shelving results';\n    } else {\n      return 'Unshelving results';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        return 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        return 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      let response = '';\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n      return response;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display backups weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display backups weather station in a map\n */\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\nand a map (instantiated by a {@link WeatherMap})\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStation:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { WeatherStationConfig } from '../weather.service';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedStation: WeatherStationConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {WeatherStationConfig}\n   */\n  changeSelectedStation(selectedStation: WeatherStationConfig): void {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display the weather station summary information in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:36\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\n\n\n/**\n * Marker to display the weather station summary information in a map\n */\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Weather system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherBackupWsMarkerComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WeatherDataMarkerComponent\n                            \n                            \n                                WeatherMapComponent\n                            \n                            \n                                WeatherPrimaryWsConnectorComponent\n                            \n                            \n                                WeatherPrimaryWsMarkerComponent\n                            \n                            \n                                WeatherSidebarComponent\n                            \n                            \n                                WeatherStationSidebarComponent\n                            \n                            \n                                WeatherSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WeatherSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n    \n        Description\n    \n    \n        Line connector between the weather station marker and the summarized weather\ninformation marker in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                    \n                        Array of coordinates for the connector path \n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Value to highlight the connector \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns the svg path used to draw the line in the map\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    svg path that represent the line\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\n/**\n * Line connector between the weather station marker and the summarized weather\n * information marker in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  /**\n  * Builds an instance of the component */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the svg path used to draw the line in the map\n   * @returns {string} svg path that represent the line\n   */\n  getPath(): string {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display primary weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display primary weather station in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the WeatherModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                markerImageSet\n                            \n                            \n                                    Public\n                                markerImageUnreliableSet\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                weatherMapName\n                            \n                            \n                                    Public\n                                weatherStationsConfig\n                            \n                            \n                                    Public\n                                weatherSummaryConfig\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAntennas\n                            \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadImages\n                            \n                            \n                                loadWeatherStationsConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:93\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWeatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWeatherStationsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:47\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:59\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:56\n                            \n                        \n\n                \n                    \n                        Set of Marker icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:68\n                            \n                        \n\n                \n                    \n                        Set of Marker Unreliable icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:50\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:62\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:77\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherStationsConfig:     WeatherStationConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:74\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm Ids of the Weather Stations, indexed by placemark *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherSummaryConfig:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:71\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the weather summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:53\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:65\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return ['A001', 'A002', 'A003'];\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSidebarComponent.html":{"url":"components/WeatherSidebarComponent.html","title":"component - WeatherSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms in an interactive sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-sidebar\n            \n\n            \n                styleUrls\n                weather-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyAntennas\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                panelClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, clipboardService: ClipboardService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        clipboardService\n                                                  \n                                                        \n                                                                    ClipboardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to copy text to clipboard\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to notify user actions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        panelClicked\n                    \n                    \n                        Event emitted to notify when an weather station is selected \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Copy list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the data was copied to the clipboard, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Indicates if the weather station is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Action performed when the weather station is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string, action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Triggers the snackBar during 20 seconds and show the information specified\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the snackbar\n\n                                                        \n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the button of the snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to notify user actions\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:34\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n* Component used to display Weather Alarms in an interactive sidebar\n*/\n@Component({\n  selector: 'app-weather-sidebar',\n  templateUrl: './weather-sidebar.component.html',\n  styleUrls: ['./weather-sidebar.component.scss']\n})\nexport class WeatherSidebarComponent implements OnInit {\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedStation: WeatherStationConfig = null;\n\n  /** Event emitted to notify when an weather station is selected */\n  @Output() panelClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {ClipboardService} clipboardService Service used to copy text to clipboard\n  * @param {MatSnackBar} snackBar Service used to notify user actions\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private clipboardService: ClipboardService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  * Initializes the {@link WeatherService} if not already initialized\n  */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n  * Copy list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {boolean} true if the data was copied to the clipboard, false if not\n  */\n  copyAntennas(station: string): boolean {\n    const antennas = this.getAntennas(station);\n    const result = antennas.join(',');\n    const status = this.clipboardService.copyFromContent(result);\n    let message = '';\n    if (status) {\n      message = 'Antennas copied to clipboard';\n    } else {\n      message = 'ERROR: Antennas were not copied!';\n    }\n    this.openSnackBar(message, 'Done');\n    return status;\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return this.weatherService.getAntennas(station);\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Indicates if the weather station is selected or not\n  * @param {WeatherStationConfig} stationConfig configuration of the weather station\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(stationConfig: WeatherStationConfig) {\n    return this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark);\n  }\n\n  /**\n  * Action performed when the weather station is clicked\n  * @param {WeatherStationConfig} stationConfig configuration of the clicked weather station\n  */\n  onClick(stationConfig: WeatherStationConfig) {\n    if ( this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark) ) {\n      this.selectedStation = null;\n    } else {\n      this.selectedStation = stationConfig;\n    }\n    this.panelClicked.emit(this.selectedStation);\n  }\n\n  /**\n   * Triggers the snackBar during 20 seconds and show the information specified\n   * @param {string} message Message to show in the snackbar\n   * @param {string} action Message to show in the button of the snackbar\n   */\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 20000,\n      panelClass: ['snackbar']\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    WEATHER STATIONS\n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n              Station\n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n          \n             Nearby Antennas \n            \n               &nbsp;  Copy antennas \n            \n          \n          \n            \n               {{antenna}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      WEATHER STATIONS                                                                                          Stationearby Antennas                               Copy antennas                                                            {{antenna}}                                           '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherStationConfig.html":{"url":"classes/WeatherStationConfig.html","title":"class - WeatherStationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherStationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the Alarm objects associated to a WeatherStation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                humidity\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                            Builds a new WeatherStationConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                        ID of the humidity Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:16\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:19\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temperature:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:22\n                            \n                        \n\n                \n                    \n                        ID of the temperature Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windspeed:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the windspeed Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return ['A001', 'A002', 'A003'];\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display an item containing a weather station summary in the interactive Sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Weather station config object \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     \"highlighted\" | \"\"\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Component to display an item containing a weather station summary in the interactive Sidebar\n */\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /** Weather station config object */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedAlarm: WeatherStationConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass() {\n    if (this.selectedAlarm && (this.selectedAlarm.station === this.stationConfig.station)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, weatherService: WeatherService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(keyword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the instance of the Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../data/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public weatherService: WeatherService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(keyword: string): Alarm {\n    if (this.weatherService.weatherSummaryConfig) {\n      return this.alarmService.get(this.weatherService.weatherSummaryConfig[keyword]);\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              WIND SPEED\n              \n                \n              \n          \n      \n      \n          \n              HUMIDITY\n              \n                \n              \n          \n      \n      \n          \n              TEMPERATURE\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    WIND SPEED                                                                                          HUMIDITY                                                                                          TEMPERATURE                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick(event) {\n    if (!this.url.startsWith('http://')) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/actions/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedTreeData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarmData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/actions/ack/ack.component.ts\n            \n            \n                component\n            \n            \n                AckComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/actions/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve/shelve.component.ts\n            \n            \n                component\n            \n            \n                ShelveComponent\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve/shelve.component.ts\n            \n            \n                interface\n            \n            \n                TimeoutOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/actions/sidenav.service.ts\n            \n            \n                injectable\n            \n            \n                SidenavService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/actions/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                component\n            \n            \n                AntennaMarkerComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                class\n            \n            \n                AlarmColorsSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            \n                component\n            \n            \n                AntennasMapComponent\n            \n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            \n                component\n            \n            \n                AntennasSidebarComponent\n            \n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            \n                component\n            \n            \n                AntennasSummaryComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas.service.ts\n            \n            \n                class\n            \n            \n                AntennaConfig\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas.service.ts\n            \n            \n                injectable\n            \n            \n                AntennasService\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas/antennas.component.ts\n            \n            \n                component\n            \n            \n                AntennasComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/map/fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/map/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/material-sandbox/material-sandbox.component.ts\n            \n            \n                component\n            \n            \n                MaterialSandboxComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                AntennasSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                WeatherSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm-header/alarm-header.component.ts\n            \n            \n                component\n            \n            \n                AlarmHeaderComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm-header/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                alarms_date\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                datepipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                alarm_types\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherStationsConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherBackupWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherDataMarkerComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsConnectorComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map/weather-map.component.ts\n            \n            \n                component\n            \n            \n                WeatherMapComponent\n            \n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherSidebarComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherStationSidebarComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather.service.ts\n            \n            \n                class\n            \n            \n                WeatherStationConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                    src/app/weather/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/environments/environment.docker.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.2\n        \n            @angular/cdk : ^6.4.3\n        \n            @angular/common : 6.1.2\n        \n            @angular/compiler : 6.1.2\n        \n            @angular/core : 6.1.2\n        \n            @angular/flex-layout : ^6.0.0-beta.17\n        \n            @angular/forms : 6.1.2\n        \n            @angular/http : 6.1.2\n        \n            @angular/material : ^6.4.3\n        \n            @angular/platform-browser : 6.1.2\n        \n            @angular/platform-browser-dynamic : 6.1.2\n        \n            @angular/platform-server : 6.1.2\n        \n            @angular/router : 6.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.0\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.7\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            ngx-clipboard : ^11.1.3\n        \n            ngx-spinner : ^6.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value: 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value: 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: 7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppModule -->\n\nMaterialSandboxComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        32 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
