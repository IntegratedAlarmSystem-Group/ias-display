var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.178,1,0.641]],["body/components/AckButtonComponent.html",[0,0.351,1,1.045,2,0.116,3,0.083,4,0.683,5,1.153,6,0.654,7,0.068,8,5.117,9,5.599,10,2.519,11,0.442,12,1.401,13,0.943,14,3.8,15,2.639,16,2.851,17,3.084,18,5.377,19,0.799,20,0.921,21,4.451,22,0.714,23,1.28,24,1.222,25,1.254,26,0.799,27,3.858,28,0.799,29,3.858,30,0.276,31,0.799,32,1.203,33,3.456,34,0.701,35,6.22,36,5.377,37,4.822,38,0.998,39,3.04,40,1.481,41,0.706,42,0.5,43,3.073,44,4.518,45,6.243,46,6.243,47,0.58,48,4.302,49,0.875,50,0.017,51,0.589,52,0.684,53,0.726,54,1.314,55,3.099,56,0.781,57,3.29,58,3.174,59,2.594,60,2.686,61,4.822,62,5.377,63,3.04,64,1.401,65,1.659,66,3.555,67,2.177,68,4.976,69,0.692,70,2.263,71,1.544,72,3.555,73,2.075,74,4.822,75,1.904,76,3.555,77,1.81,78,1.987,79,3.858,80,4.302,81,3.04,82,3.858,83,4.302,84,4.302,85,0.838,86,3.555,87,3.858,88,3.555,89,3.04,90,3.555,91,0.274,92,0.132,93,3.073,94,2.172,95,1.814,96,0.745,97,0.099,98,0.047,99,1.249,100,1.425,101,1.001,102,3.073,103,3.073,104,3.073,105,0.625,106,1.919,107,1.185,108,3.073,109,2.329,110,3.555,111,2.329,112,1.136,113,2.172,114,0.423,115,0.999,116,0.999,117,0.956,118,1.249,119,0.714,120,0.999,121,0.571,122,0.714,123,0.571,124,0.714,125,0.423,126,0.714,127,0.597,128,0.714,129,0.571,130,0.864,131,1.249,132,0.571,133,0.714,134,0.597,135,1.153,136,0.597,137,1.153,138,0.597,139,1.153,140,0.597,141,0.714,142,0.597,143,0.714,144,0.597,145,0.683,146,0.597,147,0.714,148,0.597,149,0.597,150,0.571,151,0.714,152,0.597,153,0.597,154,0.714,155,0.571,156,0.714,157,0.597,158,0.544,159,0.714,160,0.544,161,0.571,162,0.999,163,0.544,164,0.654,165,0.597,166,1.037,167,0.654,168,1.056,169,0.571,170,0.714,171,0.597,172,0.401,173,0.625,174,0.597,175,0.836,176,0.714,177,0.597,178,0.597,179,0.597,180,0.544,181,0.597,182,0.597,183,0.683,184,0.714,185,0.01,186,0.01]],["title/components/AckComponent.html",[0,0.178,121,0.612]],["body/components/AckComponent.html",[0,0.349,1,0.405,2,0.078,3,0.056,4,0.463,5,0.483,6,0.443,7,0.046,11,0.495,12,0.443,13,0.926,14,3.144,15,2.707,16,2.618,17,3.226,19,0.599,20,0.733,22,0.483,23,1.241,24,1.184,25,1.158,26,0.599,28,0.599,30,0.187,31,0.599,32,1.235,33,3.244,34,0.664,38,0.826,40,0.888,41,0.745,42,0.375,44,4.145,47,0.577,49,0.656,50,0.017,51,0.487,52,0.793,53,0.545,54,1.309,55,2.778,56,0.699,57,3.191,58,1.228,59,2.322,60,3.18,63,2.28,64,1.658,69,0.691,70,0.876,71,0.598,73,1.556,75,0.737,77,1.357,78,1.46,81,2.28,85,1.005,91,0.258,92,0.09,94,1.471,95,1.228,96,0.505,97,0.067,98,0.032,99,1.234,100,1.684,101,1.449,105,0.656,106,2.466,107,1.244,109,2.445,111,1.577,112,2.083,113,1.471,114,0.287,115,0.749,116,0.749,117,0.717,118,1.033,119,0.483,120,0.749,121,0.826,122,0.483,123,0.386,124,0.483,125,0.287,126,0.483,127,0.405,128,0.483,129,0.386,130,0.715,131,1.033,132,0.386,133,0.483,134,0.405,135,0.917,136,0.405,137,0.917,138,0.405,139,0.917,140,0.405,141,0.483,142,0.405,143,0.483,144,0.405,145,0.463,146,0.405,147,0.483,148,0.405,149,0.405,150,0.386,151,0.483,152,0.405,153,0.405,154,0.483,155,0.386,156,0.483,157,0.405,158,0.369,159,0.483,160,0.369,161,0.386,162,0.749,163,0.369,164,0.443,165,0.405,166,0.927,167,0.443,168,0.84,169,0.386,170,0.483,171,0.405,172,0.271,173,0.423,174,0.405,175,0.627,176,0.483,177,0.405,178,0.405,179,0.405,180,0.369,181,0.405,182,0.405,183,0.463,184,0.483,185,0.011,186,0.008,187,2.081,188,3.144,189,3.237,190,3.731,191,3.731,192,5.147,193,3.006,194,5.147,195,4.366,196,4.445,197,5.147,198,5.165,199,5.147,200,5.147,201,4.567,202,3.99,203,3.646,204,3.99,205,4.174,206,3.99,207,3.731,208,2.081,209,4.923,210,1.91,211,2.694,212,3.646,213,4.317,214,3.99,215,3.731,216,1.192,217,2.322,218,3.372,219,3.207,220,1.591,221,1.872,222,2.892,223,3.317,224,2.138,225,2.014,226,2.949,227,2.445,228,2.407,229,3.596,230,2.407,231,2.014,232,2.407,233,2.949,234,6.521,235,2.892,236,2.407,237,4.162,238,1.576,239,2.445,240,1.254,241,2.407,242,2.892,243,3.99,244,2.892,245,3.639,246,2.626,247,2.407,248,2.407,249,2.407,250,2.407,251,2.892,252,2.407,253,2.28,254,2.644,255,2.445,256,2.28,257,2.892,258,3.731,259,2.407,260,2.445,261,2.648,262,2.577,263,3.99,264,3.226,265,1.225,266,1.118,267,2.407,268,2.407,269,5.147,270,2.407,271,1.635,272,2.407,273,3.226,274,3.99,275,2.407,276,1.805,277,2.445,278,4.764,279,2.407,280,2.407,281,3.731,282,2.48,283,1.805,284,2.892,285,2.892,286,2.596,287,2.892,288,3.542,289,2.407,290,1.379,291,1.228,292,0.769,293,1.379,294,2.892,295,0.549,296,1.866,297,1.866,298,1.866,299,1.866,300,1.866,301,1.866,302,1.866,303,1.866,304,1.866,305,2.407,306,1.706,307,1.866,308,1.866,309,4.317,310,1.866,311,1.866,312,2.892,313,2.407,314,3.731,315,1.866,316,2.407,317,2.892,318,2.994,319,1.866,320,1.866,321,1.866,322,2.407,323,0.623,324,2.407,325,3.731,326,2.407,327,3.731,328,2.407,329,2.407,330,2.014,331,2.407,332,5.147,333,2.407,334,2.407,335,2.407,336,1.866,337,1.866,338,1.706,339,1.866,340,1.866,341,1.706,342,1.866,343,1.866,344,1.866,345,1.706,346,3.226,347,3.226,348,2.28,349,2.445,350,3.226,351,2.892,352,3.731,353,3.226]],["title/modules/ActionsModule.html",[354,0.871,355,2.06]],["body/modules/ActionsModule.html",[1,1.309,2,0.152,3,0.11,7,0.089,9,3.627,25,1.005,33,3.376,50,0.017,56,0.587,91,0.333,92,0.174,94,2.858,97,0.194,98,0.062,114,0.557,121,1.25,123,1.179,125,0.557,142,1.309,157,1.309,158,1.193,182,1.309,183,0.899,185,0.012,186,0.012,221,2.399,223,2.525,290,2.681,291,2.387,354,1.365,355,4.37,356,1.56,357,2.884,358,2.047,359,4.044,360,4.044,361,4.044,362,4.044,363,4.044,364,3.376,365,3.376,366,3.376,367,2.749,368,2.15,369,2.047,370,4.678,371,2.749,372,3.052,373,2.15,374,4.678,375,4.678,376,6.594,377,3.627,378,3.627,379,3.315,380,4.678,381,1.78,382,4.637,383,4.637,384,4.637,385,1.951,386,2.525,387,2.681,388,2.681,389,2.681,390,4.678]],["title/classes/Alarm.html",[41,0.361,98,0.05]],["body/classes/Alarm.html",[2,0.145,3,0.054,7,0.044,11,0.614,13,0.698,17,2.947,25,1.226,30,0.179,31,0.579,34,0.652,41,0.757,42,0.232,47,0.594,49,0.884,50,0.017,51,0.548,52,0.849,53,0.734,56,0.949,64,2.066,69,0.755,70,2.732,71,1.355,75,1.772,78,0.736,81,4.222,97,0.141,98,0.083,99,1.321,100,1.436,101,2.053,105,1.363,107,0.768,160,0.77,161,1.218,175,0.387,185,0.007,186,0.007,196,3.791,217,3.144,220,2.179,226,2.88,233,3.686,238,1.772,239,3.791,240,1.407,245,1.32,261,2.096,266,1.502,271,1.475,273,3.117,276,2.431,282,2.201,286,2.172,295,1.147,323,0.934,330,1.244,356,2.087,385,2.413,391,1.786,392,5.41,393,5.786,394,4.829,395,5.786,396,6.047,397,4.443,398,5.786,399,5.002,400,3.606,401,3.606,402,5.026,403,1.947,404,3.606,405,0.693,406,1.267,407,3.283,408,1.577,409,1.657,410,2.304,411,2.304,412,3.896,413,4.485,414,2.304,415,5.002,416,2.066,417,2.304,418,3.606,419,2.304,420,3.117,421,2.799,422,2.304,423,3.866,424,2.304,425,2.555,426,2.304,427,2.066,428,2.001,429,2.304,430,1.947,431,2.304,432,2.304,433,2.555,434,2.172,435,1.539,436,2.304,437,5.199,438,2.304,439,2.796,440,2.149,441,3.117,442,3.606,443,7.192,444,2.304,445,5.41,446,2.431,447,2.304,448,3.606,449,2.304,450,2.796,451,2.555,452,2.199,453,2.555,454,3.606,455,2.304,456,2.203,457,2.304,458,2.304,459,2.546,460,2.911,461,2.304,462,1.51,463,3.606,464,2.304,465,2.304,466,3.606,467,2.304,468,2.304,469,2.304,470,2.304,471,2.304,472,2.304,473,2.304,474,2.304,475,3.606,476,1.577,477,2.304,478,2.304,479,5.562,480,3.606,481,4.443,482,1.633,483,2.363,484,1.992,485,2.555,486,0.961,487,3.444,488,1.786,489,1.992,490,1.51,491,0.961,492,1.786,493,3.117,494,1.008,495,3.294,496,1.008,497,1.008,498,1.008,499,1.008,500,1.244,501,2.304,502,2.304,503,2.304,504,2.304,505,2.304,506,2.304,507,2.304,508,2.304,509,2.304,510,2.304,511,2.304,512,2.304,513,1.992,514,1.786,515,2.304,516,2.304,517,2.304,518,2.304,519,2.304,520,2.304,521,2.304,522,2.304,523,2.304,524,2.304,525,2.304,526,2.304,527,2.304,528,2.304,529,2.304,530,2.304,531,2.304,532,2.304,533,2.304,534,5.026,535,2.304,536,1.633,537,2.304,538,2.304,539,2.304,540,5.026,541,4.485,542,2.304,543,2.304,544,2.304,545,2.304,546,2.304,547,2.304,548,2.304,549,2.304,550,2.304,551,2.304,552,2.304,553,2.304,554,2.304,555,2.304,556,1.633,557,2.304,558,2.304,559,2.304,560,2.304,561,2.304,562,1.633,563,1.633,564,1.633,565,1.633,566,5.026,567,1.992,568,1.786,569,2.304,570,2.304,571,2.304,572,2.304]],["title/classes/AlarmColorsSet.html",[98,0.05,573,2.704]],["body/classes/AlarmColorsSet.html",[0,0.273,2,0.101,3,0.073,7,0.059,11,0.401,13,1.074,19,0.498,20,0.724,23,0.498,24,0.475,26,0.498,28,0.498,30,0.241,31,0.724,32,1.633,38,0.498,40,1.593,41,0.734,42,0.454,47,0.559,49,0.545,50,0.017,51,0.427,52,0.832,53,0.453,54,1.174,56,0.861,59,1.293,64,1.825,65,1.034,67,1.975,69,0.701,71,0.77,78,1.7,91,0.245,92,0.115,96,0.65,97,0.126,98,0.07,99,1.247,105,0.936,106,1.674,129,0.498,130,1.054,161,0.724,185,0.009,186,0.009,210,1.749,238,2.099,240,1.37,266,1.515,282,2.545,286,1.234,292,0.991,295,1.03,323,1.513,403,2.436,405,1.023,406,1.116,407,2.716,408,1.975,416,1.777,421,1.5,428,2.327,434,2.729,435,2.298,452,2.717,476,1.357,486,2.859,491,2.859,494,1.975,495,2.958,496,2.836,497,2.836,498,2.836,499,2.836,500,1.674,562,3.198,563,3.198,564,3.198,565,3.198,573,4.858,574,4.339,575,2.112,576,5.032,577,5.032,578,1.895,579,6.812,580,3.902,581,3.101,582,3.101,583,2.404,584,2.681,585,3.101,586,3.101,587,3.101,588,1.582,589,2.686,590,2.681,591,2.183,592,2.032,593,2.032,594,2.873,595,3.902,596,2.586,597,2.681,598,2.681,599,2.404,600,3.902,601,3.499,602,2.681,603,3.902,604,2.681,605,2.681,606,2.681,607,2.681,608,2.681,609,4.601,610,6.525,611,2.681,612,4.601,613,6.764,614,2.681,615,1.674,616,1.128,617,2.197,618,3.902,619,2.681,620,2.681,621,2.681,622,6.14,623,2.681,624,2.681,625,6.14,626,3.902,627,5.053,628,3.902,629,3.902,630,2.404,631,3.902,632,3.902,633,1.895,634,2.681,635,2.681,636,4.126,637,2.404,638,3.902,639,3.902,640,2.404,641,2.404,642,2.681,643,2.681,644,4.816,645,2.404,646,2.681,647,2.681,648,2.404,649,2.681,650,2.681,651,2.404,652,2.681,653,2.681,654,2.404,655,2.681,656,2.681,657,2.404,658,2.681,659,2.681,660,2.681,661,3.902,662,3.198,663,2.681,664,2.681,665,2.681]],["title/components/AlarmComponent.html",[0,0.178,125,0.454]],["body/components/AlarmComponent.html",[0,0.359,1,0.593,2,0.115,3,0.083,4,0.678,5,0.709,6,0.649,7,0.067,11,0.314,12,0.649,13,1.044,17,2.065,19,0.795,20,0.918,22,0.709,23,1.28,24,1.221,25,0.832,26,0.795,28,0.795,30,0.274,31,0.795,32,1.487,34,0.558,38,0.995,40,1.689,41,0.745,42,0.575,47,0.599,50,0.017,51,0.641,52,0.738,53,0.723,56,0.718,64,1.838,65,1.651,67,2.166,69,0.641,70,1.801,71,1.539,73,2.065,77,1.801,78,1.582,85,0.515,91,0.208,92,0.131,96,0.74,97,0.138,98,0.076,99,0.709,100,1.42,105,0.871,112,1.582,114,0.42,115,0.994,116,0.994,117,0.952,118,1.245,119,0.709,120,0.994,121,0.566,122,0.709,123,0.566,124,0.709,125,0.738,126,0.709,127,0.593,128,0.709,129,0.566,130,0.862,131,1.245,132,0.566,133,0.709,134,0.593,135,1.148,136,0.593,137,1.148,138,0.593,139,1.148,140,0.593,141,0.709,142,0.593,143,0.709,144,0.593,145,0.678,146,0.593,147,0.709,148,0.593,149,0.593,150,0.566,151,0.709,152,0.593,153,0.593,154,0.709,155,0.566,156,0.709,157,0.593,158,0.54,159,0.709,160,0.54,161,0.995,162,0.994,163,0.54,164,0.649,165,0.593,166,1.035,167,0.649,168,1.052,169,0.566,170,0.709,171,0.593,172,0.398,173,0.621,174,0.593,175,0.832,176,0.709,177,0.593,178,0.593,179,0.593,180,0.54,181,0.593,182,0.593,183,0.678,184,0.709,185,0.01,186,0.01,216,1.582,220,2.544,238,1.999,240,1.285,265,1.555,266,1.518,295,0.806,323,0.914,356,1.177,403,1.905,405,0.678,406,0.74,407,2.918,408,1.544,409,1.622,421,1.707,428,1.971,433,3.508,434,1.971,435,1.898,460,3.748,486,2.065,491,2.065,494,2.166,496,2.166,497,2.166,498,2.166,499,2.166,500,1.905,591,2.395,666,2.736,667,2.85,668,4.281,669,4.281,670,5.852,671,4.434,672,5.72,673,4.944,674,4.944,675,5.955,676,4.944,677,4.052,678,5.062,679,4.952,680,3.53,681,2.823,682,3.53,683,3.53,684,3.508,685,3.508,686,3.245,687,3.508,688,3.53,689,5.36,690,3.53,691,3.53,692,3.53,693,2.157,694,3.53,695,3.53,696,3.53,697,4.281,698,4.281,699,4.281,700,2.736,701,1.343,702,2.736,703,3.051]],["title/components/AlarmHeaderComponent.html",[0,0.178,127,0.641]],["body/components/AlarmHeaderComponent.html",[0,0.346,1,0.599,2,0.116,3,0.084,4,0.685,5,0.715,6,0.655,7,0.068,12,0.655,13,0.865,17,2.078,19,0.8,20,0.922,22,0.715,23,1.281,24,1.222,25,0.838,26,0.8,28,0.8,30,0.277,34,0.562,38,0.999,40,1.659,41,0.745,42,0.578,47,0.595,50,0.017,51,0.643,52,0.424,53,0.727,56,0.447,64,1.403,65,1.662,69,0.712,70,2.265,71,1.686,73,2.078,85,0.52,91,0.209,92,0.132,96,0.747,97,0.1,98,0.047,101,1.003,106,3.36,107,2.264,108,3.08,112,1.592,113,2.176,114,0.424,115,1.001,116,1.001,117,0.958,118,1.25,119,0.715,120,1.001,121,0.572,122,0.715,123,0.572,124,0.715,125,0.424,126,0.715,127,1.046,128,0.715,129,0.572,130,0.865,131,1.25,132,0.572,133,0.715,134,0.599,135,1.154,136,0.599,137,1.154,138,0.599,139,1.154,140,0.599,141,0.715,142,0.599,143,0.715,144,0.599,145,0.685,146,0.599,147,0.715,148,0.599,149,0.599,150,0.572,151,0.715,152,0.599,153,0.599,154,0.715,155,0.572,156,0.715,157,0.599,158,0.545,159,0.715,160,0.545,161,0.922,162,1.001,163,0.545,164,0.655,165,0.599,166,1.038,167,0.655,168,1.057,169,0.572,170,0.715,171,0.599,172,0.402,173,0.627,174,0.599,175,0.838,176,0.715,177,0.599,178,0.599,179,0.599,180,0.545,181,0.599,182,0.599,183,0.685,184,0.715,185,0.013,186,0.01,220,1.735,238,2.079,240,1.095,265,1.72,266,1.428,282,1.355,356,1.662,392,4.308,421,1.723,485,2.524,630,2.762,633,3.512,636,4.456,637,2.762,640,2.762,641,2.762,644,5.079,645,2.762,648,2.762,651,2.762,654,2.762,657,2.762,667,2.29,671,4.826,673,5.382,674,5.382,675,3.863,677,4.073,678,3.863,684,3.531,685,3.531,686,3.266,687,3.531,693,3.045,704,6.396,705,5.735,706,3.08,707,3.531,708,4.984,709,4.984,710,6.226,711,5.748,712,5.748,713,4.984,714,3.563,715,4.984,716,6.226,717,4.984,718,3.563,719,4.984,720,3.563,721,3.563,722,3.563,723,3.563,724,3.563,725,3.563,726,5.748,727,4.984,728,4.984,729,3.563,730,4.984,731,4.984,732,4.984,733,6.226,734,4.984,735,3.563,736,4.984,737,3.563,738,4.984]],["title/classes/AlarmImageSet.html",[98,0.05,681,1.591]],["body/classes/AlarmImageSet.html",[0,0.343,2,0.132,3,0.095,7,0.077,11,0.484,13,1.089,17,1.693,19,0.652,20,0.875,23,0.652,24,0.622,26,0.652,28,0.652,30,0.315,31,0.875,32,1.666,38,0.652,40,1.682,41,0.753,42,0.548,47,0.593,49,0.714,50,0.017,51,0.582,52,0.885,53,0.795,56,0.887,64,2.031,65,1.354,67,1.776,71,1.353,73,1.693,77,1.477,78,1.297,91,0.229,92,0.151,96,0.851,97,0.152,98,0.091,99,0.815,100,1.008,105,0.714,112,1.297,125,0.483,161,0.652,185,0.011,186,0.011,216,1.297,220,2.729,238,2.014,240,1.398,265,0.966,266,1.574,295,1.244,323,1.411,403,2.942,405,1.048,406,1.143,407,3.501,408,2.384,409,2.505,421,1.964,428,1.616,433,2.876,434,2.812,435,1.669,460,4.032,486,2.946,491,2.946,494,1.776,496,3.09,497,3.09,498,3.09,499,3.09,500,2.191,591,1.964,666,3.147,667,2.505,668,3.509,669,3.509,670,4.712,675,6.124,676,3.509,677,2.876,678,4.225,681,2.946,684,2.876,685,2.876,686,2.66,687,2.876,689,4.712,697,3.509,698,3.509,699,3.509,700,4.225,701,2.073,702,4.225,703,3.509,739,5.451,740,4.06,741,4.06,742,4.06,743,4.06,744,4.06,745,4.06,746,4.06]],["title/classes/AlarmItemFlatNode.html",[98,0.05,747,2.704]],["body/classes/AlarmItemFlatNode.html",[0,0.303,2,0.091,3,0.098,6,1.358,7,0.08,8,3.941,11,0.249,13,0.827,17,1.167,19,0.449,20,0.672,23,0.449,24,0.429,25,1.001,26,0.449,28,0.449,30,0.217,31,0.672,38,0.449,40,0.996,41,0.699,47,0.432,50,0.017,51,0.474,52,0.662,54,0.562,64,1.759,67,1.224,69,0.718,70,2.592,71,1.653,73,2.32,75,2.084,77,1.523,85,0.611,91,0.279,92,0.156,96,0.587,97,0.14,98,0.074,99,1.472,100,0.695,101,2.092,105,0.736,107,1.671,112,0.894,123,0.449,150,0.893,172,0.751,185,0.011,186,0.009,210,1.676,216,0.894,218,2.743,219,1.286,224,2.872,225,3.003,233,3.972,235,4.844,240,1.047,256,1.71,260,1.834,261,2.606,262,3.117,263,2.17,265,0.666,266,1.117,271,1.229,276,3.022,282,2.463,286,1.114,292,0.894,295,1.554,348,3.063,356,0.933,379,3.941,405,0.804,408,1.831,425,2.965,427,2.398,428,1.114,430,1.511,452,2.733,453,3.552,482,2.965,536,2.965,556,1.983,575,1.901,588,2.136,693,2.557,747,5.35,748,2.17,749,4.844,750,5.277,751,6.961,752,5.373,753,6.497,754,2.799,755,2.799,756,2.799,757,3.285,758,3.618,759,0.822,760,2.42,761,2.17,762,3.618,763,2.42,764,3.618,765,3.618,766,2.17,767,2.42,768,2.691,769,1.428,770,1.354,771,4.588,772,2.42,773,2.42,774,2.42,775,2.17,776,2.42,777,2.42,778,4.809,779,3.244,780,1.511,781,2.17,782,2.42,783,4.333,784,2.42,785,2.17,786,2.42,787,2.42,788,2.42,789,4.333,790,2.42,791,2.42,792,2.17,793,2.42,794,2.17,795,2.42,796,2.42,797,2.42,798,2.42,799,1.983,800,2.42,801,3.618,802,2.42,803,3.618,804,2.42,805,2.42,806,3.618,807,2.42,808,2.42,809,2.42,810,3.244,811,2.42,812,2.42,813,2.42,814,2.42,815,2.42,816,2.17,817,2.42,818,4.333,819,2.42,820,2.17,821,2.42,822,3.618,823,2.557,824,2.42,825,2.42,826,2.42,827,2.42,828,2.42,829,2.42,830,2.42,831,3.244,832,3.618,833,2.42,834,3.244,835,2.42,836,2.42,837,2.42,838,2.42,839,2.42,840,2.42,841,2.42,842,2.42,843,2.42,844,2.42,845,2.42,846,2.42,847,3.618,848,2.42,849,2.42,850,2.17,851,3.618,852,2.42,853,3.886,854,5.148,855,2.42,856,4.809,857,2.42,858,3.618,859,2.42,860,2.42,861,3.244,862,2.42,863,2.17,864,5.756,865,2.42,866,3.618,867,2.42,868,2.42,869,2.42,870,3.618,871,2.42,872,2.42,873,3.244,874,6.16,875,2.42,876,4.809,877,2.42,878,3.618,879,2.17,880,2.42,881,4.333,882,4.809,883,2.42,884,2.42,885,2.42,886,2.42,887,2.42,888,1.604,889,2.42,890,2.42,891,2.42,892,2.42,893,2.42,894,2.42,895,2.42,896,2.42,897,2.42,898,2.42,899,2.42,900,2.42]],["title/classes/AlarmItemNode.html",[98,0.05,771,2.704]],["body/classes/AlarmItemNode.html",[0,0.304,2,0.092,3,0.099,6,1.36,7,0.08,8,3.572,11,0.251,13,0.831,17,1.179,19,0.454,20,0.677,23,0.454,24,0.433,25,1.005,26,0.454,28,0.454,30,0.22,31,0.677,38,0.454,40,1.004,41,0.705,47,0.392,50,0.017,51,0.477,52,0.6,54,0.567,64,1.765,67,1.236,69,0.719,70,2.527,71,1.613,73,2.331,75,2.044,77,1.533,85,0.615,91,0.28,92,0.157,96,0.592,97,0.141,98,0.074,99,1.475,100,0.702,101,2.096,105,0.741,107,1.681,112,0.903,123,0.454,150,0.897,172,0.753,185,0.011,186,0.009,210,1.683,216,0.903,218,2.762,219,1.299,224,2.889,225,3.017,233,3.826,235,5.386,240,1.052,256,1.727,260,1.852,261,2.709,262,3.124,263,2.191,265,0.673,266,1.122,271,1.237,276,3.033,282,2.471,286,1.125,292,0.903,295,1.558,348,2.575,356,0.942,379,3.572,405,0.81,408,1.844,425,2.987,427,2.415,428,1.125,430,1.525,452,2.743,453,3.572,482,2.987,536,2.987,556,2.002,575,1.907,588,2.151,693,2.575,747,5.332,748,2.191,749,4.635,750,5.291,751,6.961,752,4.635,753,6.298,757,3.304,758,3.644,759,0.83,760,2.443,761,2.191,762,3.644,763,2.443,764,3.644,765,3.644,766,2.191,767,2.443,768,2.704,769,1.442,770,1.367,771,4.923,772,2.443,773,2.443,774,2.443,775,2.191,776,2.443,777,2.443,778,4.832,779,3.268,780,1.525,781,2.191,782,2.443,783,4.358,784,2.443,785,2.191,786,2.443,787,2.443,788,2.443,789,4.358,790,2.443,791,2.443,792,2.191,793,2.443,794,2.191,795,2.443,796,2.443,797,2.443,798,2.443,799,2.002,800,2.443,801,3.644,802,2.443,803,3.644,804,2.443,805,2.443,806,3.644,807,2.443,808,2.443,809,2.443,810,3.268,811,2.443,812,2.443,813,2.443,814,2.443,815,2.443,816,2.191,817,2.443,818,4.358,819,2.443,820,2.191,821,2.443,822,3.644,823,2.575,824,2.443,825,2.443,826,2.443,827,2.443,828,2.443,829,2.443,830,2.443,831,3.268,832,3.644,833,2.443,834,3.268,835,2.443,836,2.443,837,2.443,838,2.443,839,2.443,840,2.443,841,2.443,842,2.443,843,2.443,844,2.443,845,2.443,846,2.443,847,3.644,848,2.443,849,2.443,850,2.191,851,3.644,852,2.443,853,3.908,854,5.169,855,2.443,856,4.832,857,2.443,858,3.644,859,2.443,860,2.443,861,3.268,862,2.443,863,2.191,864,5.772,865,2.443,866,3.644,867,2.443,868,2.443,869,2.443,870,3.644,871,2.443,872,2.443,873,3.268,874,6.173,875,2.443,876,4.832,877,2.443,878,3.644,879,2.191,880,2.443,881,4.358,882,4.832,883,2.443,884,2.443,885,2.443,886,2.443,887,2.443,888,1.619,889,2.443,890,2.443,891,2.443,892,2.443,893,2.443,894,2.443,895,2.443,896,2.443,897,2.443,898,2.443,899,2.443,900,2.443,901,2.826,902,2.826]],["title/classes/AntennaConfig.html",[98,0.05,903,2.187]],["body/classes/AntennaConfig.html",[0,0.252,2,0.13,3,0.094,7,0.076,11,0.354,13,0.554,30,0.418,31,0.864,32,1.614,34,0.45,41,0.735,42,0.401,47,0.53,50,0.017,52,0.726,54,1.081,56,0.676,65,1.796,69,0.51,71,0.99,75,1.649,78,2.086,91,0.301,92,0.148,96,0.836,97,0.151,98,0.081,100,1.337,101,1.92,105,1.199,125,0.475,130,1.109,166,0.953,172,0.607,180,0.934,185,0.011,186,0.011,217,3.088,219,1.833,220,1.875,229,3.292,231,3.878,240,1.338,271,2.217,283,2.605,293,2.285,295,1.229,330,3.681,354,0.91,381,1.517,405,0.767,406,0.836,408,1.745,434,2.144,435,2.152,452,2.356,476,1.745,486,2.246,491,2.246,494,2.356,496,2.356,497,2.356,498,2.356,499,2.356,575,2.063,589,1.833,594,3.525,596,2.285,615,2.153,616,1.959,667,3.134,681,2.844,701,2.049,759,1.581,768,3.159,769,2.035,770,1.929,903,3.742,904,3.092,905,4.279,906,3.989,907,3.291,908,3.989,909,3.989,910,2.437,911,2.437,912,1.588,913,2.605,914,2.614,915,2.437,916,2.437,917,3.092,918,3.092,919,2.614,920,3.529,921,3.448,922,2.437,923,3.448,924,3.448,925,2.285,926,3.448,927,3.448,928,3.448,929,2.826,930,2.437,931,2.153,932,3.816,933,3.448,934,2.826,935,2.437,936,3.448,937,3.448,938,3.448,939,3.448,940,3.448,941,3.448,942,3.448,943,3.448,944,3.448,945,2.826,946,2.826,947,3.448,948,2.826,949,2.826,950,3.448,951,4.451,952,4.279,953,5.645,954,4.279,955,3.816,956,3.816,957,3.448]],["title/components/AntennaMarkerComponent.html",[0,0.178,129,0.612]],["body/components/AntennaMarkerComponent.html",[0,0.309,1,0.426,2,0.083,3,0.06,4,0.488,5,0.509,6,0.467,7,0.048,11,0.42,12,0.467,13,1.053,19,0.623,20,0.758,22,0.509,23,1.247,24,1.19,25,0.653,26,0.623,28,0.623,30,0.197,31,0.623,32,1.496,34,0.438,38,0.849,40,1.577,41,0.714,42,0.391,47,0.581,49,0.683,50,0.017,51,0.569,52,0.769,53,0.567,54,1.4,56,0.716,59,1.969,64,1.489,65,1.295,67,1.11,69,0.701,71,0.63,78,1.922,85,0.567,91,0.222,92,0.094,96,0.532,97,0.109,98,0.051,99,1.145,105,0.93,106,1.369,114,0.302,115,0.78,116,0.78,117,0.747,118,1.062,119,0.509,120,0.78,121,0.407,122,0.509,123,0.407,124,0.509,125,0.302,126,0.509,127,0.426,128,0.509,129,0.849,130,1.087,131,1.062,132,0.407,133,0.509,134,0.426,135,0.948,136,0.426,137,0.948,138,0.426,139,0.948,140,0.426,141,0.509,142,0.426,143,0.509,144,0.426,145,0.488,146,0.426,147,0.509,148,0.426,149,0.426,150,0.407,151,0.509,152,0.426,153,0.426,154,0.509,155,0.407,156,0.509,157,0.426,158,0.388,159,0.509,160,0.388,161,0.623,162,0.78,163,0.388,164,0.467,165,0.426,166,0.943,167,0.467,168,0.868,169,0.407,170,0.509,171,0.426,172,0.286,173,0.446,174,0.426,175,0.653,176,0.509,177,0.426,178,0.426,179,0.426,180,0.388,181,0.426,182,0.426,183,0.488,184,0.509,185,0.008,186,0.008,210,2.008,238,2.161,240,1.189,265,1.358,266,1.433,282,2.685,286,1.546,292,0.81,295,0.887,323,1.477,403,1.369,405,0.907,406,0.99,407,1.982,408,1.11,416,2.226,421,1.227,428,2.571,434,2.106,435,2.185,452,2.739,476,1.699,486,2.206,491,2.206,494,2.314,495,3.467,496,2.065,497,2.065,498,2.065,499,2.065,500,1.369,562,1.797,563,1.797,564,1.797,565,1.797,573,5.103,574,4.499,575,2.186,576,5.217,577,5.217,578,1.55,579,6.679,588,1.294,589,3.043,590,2.193,591,2.559,592,2.546,593,2.546,594,3.38,595,4.574,596,3.031,597,3.358,598,3.358,599,3.66,600,4.574,601,4.101,602,3.358,603,4.574,604,4.081,605,3.358,606,4.081,607,3.358,608,4.081,609,5.201,610,6.571,611,4.574,612,5.201,613,6.754,614,4.574,615,2.548,616,1.717,617,2.752,618,5.201,619,2.193,620,3.358,621,4.574,622,5.842,623,2.193,624,2.193,625,5.842,626,3.358,627,4.574,628,3.358,629,3.358,630,1.966,631,3.358,632,3.358,633,1.55,634,2.193,635,2.193,636,3.66,637,1.966,638,3.358,639,3.358,640,1.966,641,1.966,642,2.193,643,2.193,644,4.421,645,1.966,646,2.193,647,2.193,648,1.966,649,2.193,650,2.193,651,1.966,652,2.193,653,2.193,654,1.966,655,2.193,656,2.193,657,1.966,658,2.193,659,2.193,660,2.193,661,3.358,662,2.752,663,2.193,664,2.193,665,2.193,958,3.885,959,2.193,960,3.885,961,2.537,962,2.537,963,2.537,964,2.537,965,2.537,966,2.537,967,2.537,968,2.537,969,2.537,970,2.537,971,2.537,972,2.537,973,2.537,974,2.537,975,2.537]],["title/components/AntennasComponent.html",[0,0.178,132,0.612]],["body/components/AntennasComponent.html",[0,0.363,1,0.741,2,0.143,3,0.103,4,0.847,5,0.885,6,0.81,7,0.084,12,0.81,13,0.8,15,2.645,19,0.924,20,1.028,22,0.885,23,1.297,24,1.237,25,0.967,26,0.924,28,0.924,30,0.342,31,0.924,34,0.649,38,1.09,41,0.417,42,0.644,47,0.528,49,0.775,50,0.017,51,0.697,52,0.685,53,0.643,56,0.553,69,0.545,77,2.093,85,0.84,91,0.241,92,0.164,97,0.123,98,0.058,107,2.265,114,0.525,115,1.155,116,1.155,117,1.106,118,1.364,119,0.885,120,1.155,121,0.707,122,0.885,123,0.707,124,0.885,125,0.525,126,0.885,127,0.741,128,0.885,129,0.707,130,1.005,131,1.364,132,1.09,133,0.885,134,0.741,135,1.287,136,0.741,137,1.287,138,0.741,139,1.287,140,0.741,141,0.885,142,0.741,143,0.885,144,0.741,145,0.847,146,0.741,147,0.885,148,0.741,149,0.741,150,0.707,151,0.885,152,0.741,153,0.741,154,0.885,155,0.707,156,0.885,157,0.741,158,0.675,159,0.885,160,0.675,161,0.707,162,1.155,163,0.675,164,0.81,165,0.741,166,1.09,167,0.81,168,1.179,169,0.707,170,0.885,171,0.741,172,0.497,173,0.775,174,0.741,175,0.967,176,0.885,177,0.741,178,0.741,179,0.741,180,0.675,181,0.741,182,0.741,183,0.847,184,0.885,185,0.012,186,0.012,216,1.838,260,3.771,262,2.972,264,5.873,265,1.049,266,0.885,405,1.106,406,1.206,575,1.689,594,3.667,903,3.893,976,3.809,977,5.755,978,5.755,979,5.604,980,5.755,981,5.755,982,4.407,983,5.755,984,4.407,985,5.755,986,5.755,987,2.887,988,3.416]],["title/components/AntennasMapComponent.html",[0,0.178,134,0.641]],["body/components/AntennasMapComponent.html",[0,0.325,1,0.447,2,0.087,3,0.114,4,0.512,5,0.534,6,0.49,7,0.051,12,0.49,13,0.754,15,1.223,19,0.647,20,0.781,22,0.534,23,1.253,24,1.195,25,0.677,26,0.647,28,0.647,30,0.453,31,0.647,32,1.633,34,0.691,38,0.87,39,2.462,40,1.291,41,0.693,42,0.405,47,0.59,49,1.12,50,0.017,51,0.688,52,0.849,53,0.929,54,1.278,55,2.928,56,0.334,64,1.984,69,0.706,70,1.466,71,1.207,75,1.234,78,2.186,85,0.71,89,2.462,91,0.257,92,0.099,96,0.558,97,0.074,98,0.064,101,1.64,105,0.709,107,1.943,112,1.287,114,0.317,115,0.809,116,0.809,117,0.775,118,1.089,119,0.534,120,0.809,121,0.427,122,0.534,123,0.427,124,0.534,125,0.317,126,0.534,127,0.447,128,0.534,129,0.427,130,1.031,131,1.089,132,0.427,133,0.534,134,0.912,135,0.976,136,0.447,137,0.976,138,0.447,139,0.976,140,0.447,141,0.534,142,0.447,143,0.534,144,0.447,145,0.512,146,0.447,147,0.534,148,0.447,149,0.447,150,0.427,151,0.534,152,0.447,153,0.447,154,0.534,155,0.427,156,0.534,157,0.447,158,0.408,159,0.534,160,0.408,161,0.427,162,0.809,163,0.408,164,0.49,165,0.447,166,0.957,167,0.49,168,0.894,169,0.427,170,0.534,171,0.447,172,0.757,173,0.468,174,0.447,175,0.677,176,0.534,177,0.447,178,0.447,179,0.447,180,0.408,181,0.447,182,0.447,183,0.512,184,0.534,185,0.008,186,0.008,193,1.437,210,1.984,221,1.466,226,2.309,261,2.735,262,2.682,265,1.598,266,1.374,271,1.8,276,2.624,286,1.06,292,0.85,295,1.11,405,0.775,406,0.845,412,3.124,421,1.288,439,3.124,476,1.763,574,4.655,575,2.009,588,2.768,589,2.818,591,2.965,594,4.113,599,3.124,601,3.124,616,2.49,701,2.494,757,3.187,768,1.288,769,1.358,770,1.288,903,3.649,910,1.626,911,1.626,920,4.297,922,3.314,931,2.928,959,2.301,979,3.77,987,1.744,988,4.205,989,5.907,990,2.301,991,3.484,992,3.484,993,5.424,994,4.689,995,4.689,996,5.424,997,4.307,998,4.689,999,4.689,1000,4.689,1001,4.03,1002,1.949,1003,5.424,1004,4.03,1005,4.03,1006,3.124,1007,4.864,1008,4.03,1009,4.017,1010,4.03,1011,2.662,1012,2.662,1013,4.03,1014,2.662,1015,4.03,1016,3.843,1017,2.641,1018,2.662,1019,2.662,1020,4.03,1021,2.662,1022,6.368,1023,4.205,1024,4.205,1025,3.484,1026,4.03,1027,2.662,1028,2.662,1029,4.03,1030,2.662,1031,3.484,1032,2.662,1033,4.03,1034,2.662,1035,2.662,1036,2.662,1037,2.662,1038,3.484,1039,2.662,1040,4.03,1041,2.662,1042,2.662,1043,3.843,1044,2.662,1045,2.662,1046,2.662,1047,2.662,1048,3.484,1049,4.03,1050,2.662,1051,2.662,1052,2.662,1053,2.662,1054,2.662,1055,2.662,1056,2.662,1057,2.662,1058,2.662,1059,2.662,1060,2.662,1061,2.662,1062,2.662,1063,2.662,1064,2.662,1065,2.662,1066,2.662,1067,2.662,1068,2.662,1069,2.662,1070,2.662,1071,2.662,1072,2.662,1073,2.662,1074,4.03,1075,2.662,1076,1.744,1077,2.662,1078,4.03,1079,2.662,1080,2.301,1081,2.301,1082,2.662]],["title/modules/AntennasModule.html",[354,0.871,1083,2.331]],["body/modules/AntennasModule.html",[2,0.163,3,0.118,7,0.095,50,0.017,91,0.332,92,0.186,97,0.199,98,0.066,114,0.597,129,1.2,130,0.99,132,1.2,134,1.256,136,1.256,138,1.321,185,0.013,186,0.013,221,2.476,354,1.426,356,1.671,357,2.977,358,2.192,364,3.436,365,3.436,366,3.436,367,2.871,368,2.303,369,2.192,371,2.871,372,3.187,373,2.303,385,2.09,386,2.705,387,2.871,388,2.871,389,2.871,575,1.471,576,3.55,577,3.55,589,3.436,987,3.284,989,3.885,1083,4.936,1084,4.332,1085,4.332,1086,4.332,1087,4.332,1088,4.332,1089,4.284,1090,5.011,1091,5.011,1092,4.332,1093,3.885,1094,4.332,1095,3.885,1096,4.332,1097,3.885,1098,3.885]],["title/injectables/AntennasService.html",[589,1.754,759,1.12]],["body/injectables/AntennasService.html",[0,0.293,2,0.118,3,0.085,7,0.069,13,0.702,30,0.451,31,0.811,32,1.623,34,0.708,41,0.709,42,0.508,47,0.594,49,0.639,50,0.017,51,0.344,52,0.834,53,0.531,54,1.261,56,0.634,65,1.212,69,0.647,71,0.902,75,1.779,78,2.348,85,0.848,91,0.294,92,0.135,96,0.762,97,0.141,98,0.067,100,1.559,101,1.858,105,1.202,125,0.433,130,1.1,166,0.963,172,0.708,180,0.89,185,0.01,186,0.01,217,3.027,219,2.323,220,1.76,229,3.136,231,3.783,240,1.257,265,1.383,266,1.167,271,2.158,283,1.758,293,2.896,295,1.154,330,3.688,354,1.154,381,1.383,405,0.971,406,1.059,408,2.211,434,2.012,435,2.188,452,2.747,476,2.211,486,2.108,491,2.108,494,2.542,496,2.211,497,2.211,498,2.211,499,2.211,575,2.006,589,2.323,594,1.962,596,2.896,615,2.728,616,2.285,667,3.285,681,3.027,701,1.383,759,1.706,768,3.305,769,1.855,770,1.758,903,3.329,904,2.818,905,3.312,907,2.221,910,2.221,911,2.221,912,1.447,913,3.038,914,2.382,915,2.221,916,2.221,917,2.818,918,2.818,919,2.382,920,3.807,921,5.429,922,3.088,923,5.429,924,4.369,925,2.896,926,5.429,927,5.429,928,5.429,929,4.45,930,3.088,931,2.728,932,3.581,933,3.142,934,2.575,935,3.088,936,5.429,937,3.142,938,3.142,939,3.142,940,3.142,941,3.142,942,3.142,943,3.142,944,3.142,945,4.45,946,2.575,947,3.142,948,2.575,949,4.45,950,3.142,951,4.399,952,4.115,953,5.429,954,4.115,955,3.581,956,3.581,957,3.142,1099,3.142,1100,5.054,1101,3.635,1102,3.635,1103,3.635,1104,3.635,1105,3.635,1106,3.635,1107,5.054,1108,3.635,1109,3.635,1110,3.635]],["title/components/AntennasSidebarComponent.html",[0,0.178,136,0.641]],["body/components/AntennasSidebarComponent.html",[0,0.33,1,0.511,2,0.099,3,0.071,4,0.584,5,0.61,6,0.559,7,0.058,11,0.548,12,0.559,13,0.948,15,1.397,19,0.714,20,0.845,22,0.61,23,1.266,24,1.208,25,0.748,26,0.714,28,0.714,30,0.236,31,0.714,32,1.35,34,0.502,38,0.929,39,2.718,40,1.379,41,0.728,42,0.447,47,0.581,49,1.17,50,0.017,51,0.693,52,0.842,53,0.971,54,1.293,56,0.382,65,1.484,69,0.734,70,1.914,71,1.105,75,1.362,85,0.845,89,2.718,91,0.258,92,0.113,96,0.637,97,0.085,98,0.04,99,1.293,100,0.755,105,1.084,107,1.931,112,1.421,114,0.362,115,0.893,116,0.893,117,0.855,118,1.163,119,0.61,120,0.893,121,0.488,122,0.61,123,0.488,124,0.61,125,0.362,126,0.61,127,0.511,128,0.61,129,0.488,130,1.085,131,1.163,132,0.488,133,0.61,134,0.511,135,1.057,136,0.973,137,1.057,138,0.511,139,1.057,140,0.511,141,0.61,142,0.511,143,0.61,144,0.511,145,0.584,146,0.511,147,0.61,148,0.511,149,0.511,150,0.488,151,0.61,152,0.511,153,0.511,154,0.61,155,0.488,156,0.61,157,0.511,158,0.466,159,0.61,160,0.466,161,0.488,162,0.893,163,0.466,164,0.559,165,0.511,166,0.995,167,0.559,168,0.968,169,0.488,170,0.61,171,0.511,172,0.343,173,0.535,174,0.511,175,0.748,176,0.61,177,0.511,178,0.511,179,0.511,180,0.466,181,0.511,182,0.511,183,0.584,184,0.61,185,0.009,186,0.009,188,2.718,193,2.402,210,2.107,211,2.545,238,1.773,240,1.324,246,2.27,254,3.153,261,2.949,262,2.816,265,0.724,266,0.61,271,2.076,292,0.971,295,0.694,323,1.152,405,1.113,406,0.933,440,3.114,446,2.545,459,3.689,574,4.543,588,2.955,589,3.364,616,2.607,693,2.718,757,3.448,780,2.402,903,4.288,905,2.916,920,4.469,979,4.079,987,1.993,988,4.778,1002,2.152,1006,3.449,1017,2.916,1076,1.993,1080,5.006,1081,2.629,1093,5.764,1111,2.154,1112,3.449,1113,3.449,1114,4.45,1115,4.45,1116,5.791,1117,3.153,1118,5.791,1119,5.262,1120,3.041,1121,2.955,1122,3.847,1123,3.041,1124,2.629,1125,4.45,1126,3.041,1127,4.45,1128,4.45,1129,3.449,1130,5.791,1131,4.45,1132,3.041,1133,3.041,1134,3.041,1135,3.153,1136,3.041,1137,2.916,1138,2.955,1139,2.402,1140,2.916,1141,3.153,1142,2.916,1143,3.153,1144,4.45,1145,2.629,1146,5.791,1147,3.041,1148,4.45,1149,3.041,1150,3.041,1151,3.847,1152,3.041,1153,3.041,1154,2.154,1155,2.629,1156,3.041,1157,3.041,1158,3.041,1159,3.041,1160,4.45,1161,4.45,1162,2.154,1163,4.45,1164,4.45,1165,4.45,1166,4.45,1167,3.153]],["title/components/AntennasSummaryComponent.html",[0,0.178,138,0.641]],["body/components/AntennasSummaryComponent.html",[0,0.343,1,0.645,2,0.125,3,0.09,4,0.738,5,0.771,6,0.706,7,0.073,11,0.531,12,0.706,13,0.966,19,0.842,20,0.96,22,0.771,23,1.287,24,1.228,25,0.882,26,0.842,28,0.842,30,0.298,31,0.842,32,1.253,34,0.592,38,1.032,41,0.732,42,0.528,47,0.54,49,0.923,50,0.017,51,0.608,52,0.712,53,0.766,54,1.29,56,0.482,69,0.685,85,0.873,91,0.298,92,0.143,96,0.805,97,0.107,98,0.051,99,1.2,100,1.303,105,1.052,114,0.457,115,1.054,116,1.054,117,1.009,118,1.29,119,0.771,120,1.054,121,0.616,122,0.771,123,0.616,124,0.771,125,0.625,126,0.771,127,0.645,128,0.771,129,0.616,130,1.064,131,1.29,132,0.616,133,0.771,134,0.645,135,1.2,136,0.645,137,1.2,138,1.08,139,1.2,140,0.645,141,0.771,142,0.645,143,0.771,144,0.645,145,0.738,146,0.645,147,0.771,148,0.645,149,0.645,150,0.616,151,0.771,152,0.645,153,0.645,154,0.771,155,0.616,156,0.771,157,0.645,158,0.588,159,0.771,160,0.588,161,0.96,162,1.054,163,0.588,164,0.706,165,0.645,166,1.084,167,0.706,168,1.1,169,0.616,170,0.771,171,0.645,172,0.433,173,0.675,174,0.645,175,0.882,176,0.771,177,0.645,178,0.645,179,0.645,180,0.588,181,0.645,182,0.645,183,0.738,184,0.771,185,0.011,186,0.011,210,2.091,211,3.109,240,1.184,292,1.226,295,1.198,323,1.359,381,1.46,405,1.009,406,1.347,409,2.412,428,2.089,435,1.175,440,3.109,459,3.981,462,2.515,574,4.346,589,3.475,681,1.601,912,1.528,925,3.007,987,2.515,1002,1.857,1097,5.514,1117,3.718,1121,3.434,1135,3.718,1137,4.868,1138,3.695,1139,2.833,1140,3.439,1141,3.718,1142,3.439,1143,3.718,1154,2.72,1155,3.318,1162,2.72,1168,2.72,1169,3.718,1170,4.068,1171,4.068,1172,4.068,1173,2.515,1174,3.318,1175,4.068,1176,3.839,1177,3.318,1178,4.068,1179,3.839,1180,3.839,1181,2.976,1182,3.839,1183,3.839]],["title/components/AppComponent.html",[0,0.178,140,0.641]],["body/components/AppComponent.html",[0,0.332,1,0.555,2,0.107,3,0.077,4,0.635,5,0.948,6,0.607,7,0.063,11,0.42,12,0.607,13,0.766,19,0.758,20,0.885,22,0.663,23,1.274,24,1.216,25,0.794,26,0.758,28,0.758,30,0.257,31,0.758,32,1.388,33,3.134,34,0.532,38,0.966,41,0.645,42,0.475,47,0.552,49,0.831,50,0.017,51,0.57,52,0.789,53,0.689,54,1.369,56,0.414,57,4.127,58,3.071,60,3.437,63,2.017,69,0.645,70,2.006,71,1.788,85,0.482,91,0.278,92,0.123,97,0.092,98,0.044,99,1.208,100,1.369,105,1.249,107,1.101,112,1.922,114,0.393,115,0.948,116,0.948,117,0.908,118,1.208,119,0.663,120,0.948,121,0.53,122,0.663,123,0.53,124,0.663,125,0.393,126,0.663,127,0.555,128,0.663,129,0.53,130,0.969,131,1.208,132,0.53,133,0.663,134,0.555,135,1.107,136,0.555,137,1.107,138,0.555,139,1.107,140,1.011,141,0.663,142,0.555,143,0.663,144,0.555,145,0.635,146,0.555,147,0.663,148,0.555,149,0.555,150,0.966,151,0.663,152,0.555,153,1.07,154,0.663,155,0.53,156,0.663,157,0.555,158,0.506,159,0.663,160,0.506,161,0.53,162,0.948,163,0.506,164,1.014,165,0.555,166,1.075,167,0.607,168,1.014,169,0.53,170,0.663,171,0.555,172,0.372,173,0.581,174,0.555,175,1.113,176,0.663,177,0.555,178,0.555,179,0.555,180,0.506,181,0.555,182,0.555,183,0.635,184,0.663,185,0.01,186,0.01,210,2.027,216,1.922,225,2.976,227,4.34,240,0.831,246,2.41,265,1.313,266,1.278,292,1.055,428,1.88,440,2.284,556,2.339,667,3.462,701,1.796,750,2.559,752,3.661,888,2.706,907,4.046,919,3.095,1009,3.095,1173,2.163,1184,2.854,1185,4.723,1186,4.723,1187,6.018,1188,6.819,1189,6.623,1190,6.018,1191,5.801,1192,4.723,1193,6.018,1194,7.203,1195,6.974,1196,3.302,1197,4.723,1198,4.723,1199,4.665,1200,4.723,1201,3.302,1202,5.202,1203,3.302,1204,3.302,1205,4.723,1206,5.202,1207,2.854,1208,4.083,1209,3.302,1210,3.302,1211,3.302,1212,5.514,1213,7.099,1214,5.514,1215,5.514,1216,5.514,1217,3.302,1218,6.018,1219,4.723,1220,6.018,1221,3.302,1222,2.163,1223,3.302,1224,2.854,1225,2.339,1226,2.339,1227,3.302,1228,3.302,1229,2.339,1230,3.302,1231,3.302,1232,6.018,1233,6.018,1234,6.018,1235,3.302,1236,3.302,1237,3.302,1238,3.302,1239,3.302,1240,3.302,1241,3.302,1242,4.723,1243,5.514,1244,6.018,1245,4.723]],["title/modules/AppModule.html",[354,0.871,1246,2.704]],["body/modules/AppModule.html",[0,0.347,2,0.139,3,0.101,7,0.082,50,0.017,91,0.337,92,0.159,95,2.187,97,0.177,98,0.057,101,1.206,112,1.805,114,0.51,121,0.907,125,0.51,130,0.596,132,0.907,140,1.293,149,1.229,150,0.688,153,0.95,155,0.907,158,0.865,163,0.968,164,0.788,166,0.625,169,0.907,185,0.012,186,0.012,211,3.058,221,2.3,223,2.313,227,3.703,290,2.456,291,2.187,354,1.443,355,3.872,356,1.429,357,2.765,358,2.765,364,3.297,365,3.297,366,3.297,367,2.597,368,1.97,369,1.875,371,2.597,373,2.597,381,1.63,382,4.38,383,4.38,384,4.38,385,1.787,386,2.313,387,2.456,388,2.456,389,2.456,1043,5.322,1083,4.383,1089,4.111,1095,3.322,1202,4.885,1225,3.036,1226,3.036,1246,5.691,1247,3.705,1248,3.705,1249,3.705,1250,3.705,1251,4.383,1252,4.701,1253,4.701,1254,3.872,1255,4.286,1256,5.651,1257,5.651,1258,4.286,1259,4.885,1260,3.036,1261,3.705,1262,4.286,1263,4.286,1264,3.705,1265,3.705,1266,4.286,1267,4.286,1268,3.036,1269,3.322,1270,4.286,1271,4.286,1272,4.286,1273,4.286,1274,4.286,1275,5.651,1276,3.705,1277,3.322,1278,4.286,1279,4.286,1280,4.286,1281,4.286,1282,4.286,1283,4.286,1284,4.286,1285,4.286,1286,3.705,1287,4.286,1288,4.286]],["title/components/ButtonsComponent.html",[0,0.178,142,0.641]],["body/components/ButtonsComponent.html",[0,0.336,1,0.791,2,0.153,3,0.11,4,0.904,5,0.945,6,0.865,7,0.09,12,1.323,19,0.963,20,1.061,22,0.945,23,1.301,24,1.242,25,1.009,26,0.963,28,0.963,30,0.366,34,0.677,38,1.118,40,1.658,41,0.723,42,0.665,47,0.514,50,0.016,51,0.568,52,0.56,56,0.591,64,1.69,65,2.002,69,0.445,85,0.687,91,0.252,92,0.175,96,0.986,97,0.132,98,0.062,114,0.56,115,1.205,116,1.205,117,1.154,118,1.398,119,0.945,120,1.205,121,0.755,122,0.945,123,0.755,124,0.945,125,0.56,126,0.945,127,0.791,128,0.945,129,0.755,130,0.968,131,1.398,132,0.755,133,0.945,134,0.791,135,1.327,136,0.791,137,1.327,138,0.791,139,1.327,140,0.791,141,0.945,142,1.17,143,0.945,144,0.791,145,0.904,146,0.791,147,0.945,148,0.791,149,0.791,150,0.755,151,0.945,152,0.791,153,0.791,154,0.945,155,0.755,156,0.945,157,0.791,158,0.72,159,0.945,160,0.72,161,0.755,162,1.205,163,0.72,164,0.865,165,0.791,166,1.105,167,0.865,168,1.216,169,0.755,170,0.945,171,0.791,172,0.53,173,0.827,174,0.791,175,1.009,176,0.945,177,0.791,178,0.791,179,0.791,180,0.72,181,0.791,182,0.791,183,0.904,184,0.945,185,0.012,186,0.012,1289,4.067,1290,6.003,1291,6.003,1292,6.003,1293,4.705]],["title/injectables/CdbService.html",[759,1.12,1294,2.331]],["body/injectables/CdbService.html",[0,0.271,2,0.145,3,0.105,7,0.085,11,0.516,13,0.807,14,3.548,30,0.347,31,0.932,32,1.352,34,0.655,42,0.584,47,0.574,49,1.135,50,0.017,51,0.423,52,0.532,53,0.652,54,1.504,69,0.709,78,2.182,91,0.31,92,0.166,97,0.125,98,0.059,99,0.897,100,1.11,101,1.258,172,0.861,185,0.012,186,0.012,188,3.548,216,1.855,219,3.51,220,2.022,226,3.328,265,1.383,266,1.371,283,2.809,295,1.326,323,1.504,348,3.548,385,3.301,416,3.328,427,3.328,435,1.368,452,2.541,514,4.502,575,1.312,616,2.816,701,2.209,759,1.894,768,2.162,769,2.281,770,2.162,913,3.623,914,2.929,915,2.731,916,2.731,931,4.043,1009,3.806,1038,5.021,1294,3.548,1295,3.864,1296,4.84,1297,6.831,1298,6.831,1299,6.831,1300,6.831,1301,6.831,1302,4.47,1303,5.808,1304,4.47,1305,4.47,1306,7.257,1307,7.257,1308,5.808,1309,5.808,1310,6.831,1311,6.831,1312,4.47,1313,5.021,1314,4.47,1315,5.808,1316,5.808,1317,4.47,1318,4.47,1319,4.47,1320,4.47,1321,4.47,1322,3.167,1323,4.47,1324,4.47,1325,5.808,1326,4.47,1327,4.47,1328,4.47,1329,4.47,1330,4.47,1331,4.47]],["title/modules/DataModule.html",[354,0.871,364,1.754]],["body/modules/DataModule.html",[2,0.177,3,0.128,7,0.104,11,0.485,50,0.017,54,1.321,91,0.326,92,0.203,97,0.198,98,0.072,114,0.649,172,0.742,185,0.013,186,0.013,210,2.148,221,2.57,323,1.703,354,1.675,356,1.818,357,2.878,358,2.386,364,3.652,367,3.024,368,2.506,369,2.386,371,3.024,372,3.357,373,2.506,700,5.1,913,3.691,915,3.332,930,4.02,1121,3.893,1294,4.661,1296,3.864,1332,4.714,1333,4.714,1334,5.454,1335,7.066,1336,4.714,1337,5.454,1338,5.454,1339,5.454]],["title/modules/HealthModule.html",[354,0.871,1251,2.331]],["body/modules/HealthModule.html",[0,0.309,2,0.179,3,0.129,7,0.105,11,0.489,50,0.017,65,2.207,91,0.324,92,0.205,97,0.206,98,0.073,114,0.656,144,1.337,145,1.364,185,0.014,186,0.014,221,2.004,323,1.713,354,1.68,356,1.836,357,3.104,358,2.409,364,3.514,366,3.514,367,3.042,368,2.531,369,2.409,371,3.042,372,3.377,373,2.531,385,2.76,388,3.156,389,3.156,1098,4.269,1251,4.843,1340,4.761,1341,4.761,1342,5.508,1343,4.761,1344,5.508,1345,4.269]],["title/components/HealthSummaryComponent.html",[0,0.178,144,0.641]],["body/components/HealthSummaryComponent.html",[0,0.343,1,0.571,2,0.111,3,0.08,4,0.654,5,0.683,6,0.625,7,0.065,11,0.498,12,0.625,13,0.929,19,0.774,20,0.899,22,0.683,23,1.277,24,1.218,25,0.811,26,0.774,28,0.774,30,0.264,31,0.774,32,1.498,34,0.544,38,0.979,41,0.732,42,0.485,47,0.563,49,0.848,50,0.017,51,0.577,52,0.767,53,0.704,54,1.224,56,0.703,69,0.665,85,0.818,91,0.28,92,0.126,96,0.713,97,0.095,98,0.045,99,1.125,100,1.197,105,0.986,114,0.405,115,0.968,116,0.968,117,0.927,118,1.224,119,0.683,120,0.968,121,0.546,122,0.683,123,0.546,124,0.683,125,0.574,126,0.683,127,0.571,128,0.683,129,0.546,130,0.847,131,1.224,132,0.546,133,0.683,134,0.571,135,1.125,136,0.571,137,1.125,138,0.571,139,1.125,140,0.571,141,0.683,142,0.571,143,0.683,144,1.025,145,1.423,146,0.571,147,0.683,148,0.571,149,0.571,150,0.546,151,0.683,152,0.571,153,0.571,154,0.683,155,0.546,156,0.683,157,0.571,158,0.521,159,0.683,160,0.521,161,0.546,162,0.968,163,0.521,164,0.625,165,0.571,166,1.058,167,0.625,168,1.031,169,0.546,170,0.683,171,0.571,172,0.383,173,0.598,174,0.571,175,0.811,176,0.683,177,0.571,178,0.571,179,0.571,180,0.521,181,0.571,182,0.571,183,0.654,184,0.683,185,0.01,186,0.01,210,2.04,211,2.95,217,2.931,231,3.793,240,1.236,271,1.416,292,1.086,295,1.392,323,1.249,381,1.293,385,2.685,405,0.927,406,1.278,409,2.216,428,1.92,434,1.92,435,2.106,440,2.95,459,3.832,462,2.228,486,2.011,491,2.011,494,2.452,496,2.11,497,2.11,498,2.11,499,2.11,667,3.23,681,2.981,912,1.354,925,2.763,935,2.946,951,4.359,952,3.996,954,3.996,1002,1.645,1117,3.417,1121,3.286,1135,3.417,1137,3.996,1138,3.413,1139,2.603,1140,3.16,1141,3.417,1142,3.16,1143,3.417,1154,2.409,1162,2.409,1168,2.409,1169,3.417,1171,3.739,1172,3.739,1173,2.228,1175,3.739,1178,3.739,1181,2.636,1345,5.542,1346,6.18,1347,3.996,1348,6.098,1349,6.098,1350,6.098,1351,4.823,1352,3.4,1353,3.4,1354,3.4,1355,3.4,1356,3.4,1357,3.4,1358,3.4,1359,3.4,1360,3.4,1361,3.4,1362,7.608,1363,4.321,1364,3.739,1365,3.739,1366,3.4]],["title/injectables/HttpClientService.html",[759,1.12,913,1.846]],["body/injectables/HttpClientService.html",[2,0.132,3,0.095,7,0.077,11,0.627,30,0.315,34,0.86,42,0.618,47,0.56,49,1.268,50,0.017,51,0.683,52,0.859,53,1.053,54,1.093,55,2.937,64,1.532,67,2.38,69,0.739,91,0.275,92,0.151,97,0.113,98,0.054,99,1.448,100,1.526,101,1.85,112,1.738,172,0.87,185,0.011,186,0.011,219,3.505,220,2.786,229,4.116,240,1.331,262,2.38,271,1.597,295,1.5,318,4.626,423,3.856,452,2.874,460,2.654,701,2.07,707,4.656,759,1.804,799,2.869,834,5.094,913,2.632,930,4.015,1199,5.818,1296,5.002,1336,4.704,1367,6.338,1368,3.501,1369,5.442,1370,5.442,1371,5.68,1372,5.442,1373,6.571,1374,6.571,1375,5.442,1376,4.05,1377,4.05,1378,5.442,1379,4.05,1380,7.626,1381,5.442,1382,4.05,1383,5.442,1384,4.05,1385,6.146,1386,5.442,1387,5.442,1388,4.05,1389,5.442,1390,4.05,1391,5.442,1392,4.05,1393,5.442,1394,5.442,1395,4.704,1396,6.856,1397,3.139,1398,4.05,1399,4.05,1400,4.05,1401,4.05,1402,4.05,1403,4.05,1404,7.332,1405,6.571,1406,4.05,1407,4.05,1408,4.05,1409,4.05,1410,4.05]],["title/modules/IasMaterialModule.html",[354,0.871,365,1.754]],["body/modules/IasMaterialModule.html",[0,0.296,2,0.166,3,0.12,7,0.097,11,0.454,50,0.017,91,0.338,92,0.19,97,0.177,98,0.068,150,1.015,185,0.013,186,0.013,223,2.76,225,3.414,277,3.351,349,4.145,354,1.568,357,2.237,365,2.907,371,2.907,386,2.76,766,3.964,888,2.93,1224,4.421,1225,3.623,1411,5.114,1412,5.114,1413,6.869,1414,5.114,1415,6.869,1416,5.114,1417,6.869,1418,5.114,1419,6.869,1420,5.114,1421,6.869,1422,5.114,1423,6.869,1424,5.114,1425,6.869,1426,5.114,1427,6.869,1428,5.114,1429,6.869,1430,6.869,1431,5.114,1432,6.869,1433,5.114,1434,6.869,1435,5.114,1436,6.869,1437,6.869,1438,5.114,1439,6.869,1440,5.114,1441,6.869,1442,5.114,1443,6.869,1444,5.114,1445,6.869,1446,5.114,1447,6.869,1448,5.114,1449,4.421,1450,6.869,1451,4.421,1452,3.964]],["title/classes/Iasio.html",[98,0.05,1322,2.704]],["body/classes/Iasio.html",[2,0.146,3,0.106,7,0.086,11,0.646,30,0.349,31,0.936,34,0.82,41,0.648,42,0.452,47,0.583,49,1.138,50,0.017,51,0.612,52,0.903,53,0.945,61,5.017,64,2.235,65,1.944,69,0.717,70,2.581,71,1.448,75,1.377,97,0.126,98,0.098,99,1.375,101,1.927,105,1.138,107,1.5,175,0.756,185,0.012,186,0.012,220,2.03,233,2.577,240,1.362,271,1.712,276,3.312,295,1.477,323,1.51,330,2.428,399,6.284,403,3.148,405,1.121,406,1.357,407,3.62,408,2.551,409,2.68,413,4.521,420,5.041,430,3.148,433,3.187,450,4.521,451,4.132,452,2.995,453,4.132,456,3.563,500,2.428,513,3.888,514,3.487,1322,5.675,1453,3.888,1454,6.472,1455,7.27,1456,7.27,1457,7.27,1458,7.27,1459,5.832,1460,5.832,1461,5.832,1462,4.498,1463,5.832,1464,4.521,1465,4.498,1466,4.498,1467,5.832,1468,4.498,1469,5.832,1470,4.498,1471,4.498,1472,4.498,1473,4.498,1474,4.498,1475,4.498,1476,4.498,1477,4.498,1478,4.498,1479,4.498]],["title/components/LegendComponent.html",[0,0.178,146,0.641]],["body/components/LegendComponent.html",[0,0.351,1,0.648,2,0.125,3,0.09,4,0.741,5,0.774,6,0.709,7,0.073,11,0.342,12,0.709,19,0.844,20,0.962,22,0.774,23,1.287,24,1.228,25,0.884,26,0.844,28,0.844,30,0.299,31,0.844,34,0.593,38,1.033,41,0.567,42,0.602,47,0.592,50,0.017,51,0.498,56,0.484,69,0.365,85,0.562,91,0.221,92,0.143,97,0.108,98,0.051,114,0.848,115,1.056,116,1.056,117,1.011,118,1.292,119,0.774,120,1.056,121,0.618,122,0.774,123,0.618,124,0.774,125,0.459,126,0.774,127,0.648,128,0.774,129,0.618,130,0.895,131,1.292,132,0.618,133,0.774,134,0.648,135,1.203,136,0.648,137,1.203,138,0.648,139,1.203,140,0.648,141,0.774,142,0.648,143,0.774,144,0.648,145,0.741,146,1.082,147,0.774,148,0.648,149,0.648,150,0.618,151,0.774,152,0.648,153,0.648,154,0.774,155,0.618,156,0.774,157,0.648,158,0.59,159,0.774,160,0.59,161,0.618,162,1.056,163,0.59,164,0.709,165,0.648,166,1.058,167,0.709,168,1.102,169,0.618,170,0.774,171,0.648,172,0.434,173,0.678,174,0.648,175,0.884,176,0.774,177,0.648,178,0.648,179,0.648,180,0.59,181,0.648,182,0.648,183,0.741,184,0.774,185,0.011,186,0.011,216,1.681,217,2.685,231,3.475,238,1.611,265,1.787,266,1.507,405,1.011,406,1.103,434,2.885,435,2.251,437,5.764,440,2.545,486,3.023,491,3.023,562,3.728,563,3.728,564,3.728,565,3.728,912,1.534,951,4.515,1480,3.331,1481,5.262,1482,5.262,1483,6.438,1484,6.438,1485,6.438,1486,6.438,1487,6.438,1488,6.438,1489,6.438,1490,6.438,1491,6.438,1492,3.853,1493,3.853,1494,5.565,1495,3.853,1496,6.266,1497,3.853,1498,3.853,1499,4.548,1500,3.853,1501,4.548,1502,3.853,1503,4.548,1504,3.853,1505,4.548,1506,3.853,1507,4.548,1508,3.853,1509,3.853,1510,3.853,1511,3.853]],["title/components/MapComponent.html",[0,0.178,148,0.641]],["body/components/MapComponent.html",[0,0.359,1,0.751,2,0.145,3,0.105,4,0.859,5,0.897,6,0.822,7,0.085,11,0.397,12,0.822,13,0.807,19,0.932,20,1.036,22,0.897,23,1.298,24,1.238,25,0.976,26,0.932,28,0.932,30,0.347,34,0.655,38,1.096,40,1.686,41,0.423,42,0.649,47,0.564,50,0.017,51,0.55,56,0.561,69,0.423,73,2.422,75,1.778,78,1.855,85,0.652,91,0.187,92,0.166,97,0.125,98,0.059,114,0.532,115,1.166,116,1.166,117,1.116,118,1.371,119,0.897,120,1.166,121,0.717,122,0.897,123,0.717,124,0.897,125,0.532,126,0.897,127,0.751,128,0.897,129,0.717,130,0.949,131,1.371,132,0.717,133,0.897,134,0.751,135,1.295,136,0.751,137,1.295,138,0.751,139,1.295,140,0.751,141,0.897,142,0.751,143,0.897,144,0.751,145,0.859,146,0.751,147,0.897,148,1.148,149,0.751,150,0.717,151,0.897,152,0.751,153,0.751,154,0.897,155,0.717,156,0.897,157,0.751,158,0.684,159,0.897,160,0.684,161,0.717,162,1.166,163,0.684,164,0.822,165,0.751,166,1.093,167,0.822,168,1.187,169,0.717,170,0.897,171,0.751,172,0.727,173,0.786,174,0.751,175,0.976,176,0.897,177,0.751,178,0.751,179,0.751,180,0.684,181,0.751,182,0.751,183,0.859,184,0.897,185,0.012,186,0.012,238,2.092,265,1.383,266,1.166,323,1.504,405,1.116,406,1.217,575,2.199,588,2.281,596,3.914,616,2.113,991,5.021,992,5.021,994,5.578,995,5.578,1016,4.115,1512,3.864,1513,4.502,1514,5.808,1515,4.47,1516,4.47]],["title/modules/MapModule.html",[354,0.871,1089,2.187]],["body/modules/MapModule.html",[2,0.185,3,0.133,7,0.108,50,0.017,91,0.318,92,0.211,97,0.208,98,0.075,114,0.677,148,1.342,185,0.014,186,0.014,221,2.616,354,1.539,356,1.895,357,3.146,358,2.486,367,3.099,368,2.612,369,2.486,371,3.099,372,3.441,373,2.612,997,4.706,1089,4.52,1517,4.913,1518,4.913,1519,4.913,1520,4.913,1521,5.683,1522,5.683,1523,5.683]],["title/injectables/MapService.html",[759,1.12,997,2.331]],["body/injectables/MapService.html",[2,0.179,3,0.129,7,0.104,11,0.587,13,0.918,30,0.427,34,0.745,42,0.712,47,0.551,49,1.162,50,0.017,51,0.625,53,0.964,54,1.476,59,2.755,69,0.671,91,0.23,92,0.204,97,0.153,98,0.073,99,1.102,101,1.545,185,0.014,186,0.014,282,2.695,405,1.27,406,1.385,575,1.939,759,2.08,853,5.121,861,5.121,920,4.818,997,4.036,998,6.357,999,4.745,1000,6.504,1043,5.21,1524,4.745,1525,6.606,1526,6.606,1527,5.489,1528,6.606,1529,5.489,1530,5.489,1531,5.489,1532,5.489,1533,5.489,1534,5.489]],["title/components/MaterialSandboxComponent.html",[0,0.178,149,0.641]],["body/components/MaterialSandboxComponent.html",[0,0.344,1,0.586,2,0.113,3,0.082,4,0.67,5,0.7,6,0.641,7,0.066,11,0.31,12,1.451,13,0.682,19,0.788,20,0.912,22,0.7,23,1.279,24,1.223,25,0.825,26,0.788,28,0.788,30,0.271,34,0.553,38,0.99,41,0.33,42,0.653,47,0.381,50,0.016,51,0.464,53,0.716,56,0.438,67,2.147,69,0.33,74,6.078,77,1.785,78,1.568,85,0.509,91,0.146,92,0.13,97,0.097,98,0.046,105,1.186,114,0.415,115,0.985,116,1.354,117,0.943,118,1.238,119,0.7,120,0.985,121,0.559,122,0.7,123,0.559,124,0.7,125,0.415,126,0.7,127,0.586,128,0.7,129,0.559,130,0.857,131,1.238,132,0.559,133,0.7,134,0.586,135,1.14,136,0.586,137,1.14,138,0.586,139,1.14,140,0.586,141,0.7,142,0.586,143,0.7,144,0.586,145,0.67,146,0.586,147,0.7,148,0.586,149,1.036,150,1.182,151,0.7,152,0.586,153,0.586,154,0.7,155,0.559,156,0.7,157,0.586,158,0.534,159,0.7,160,0.534,161,0.912,162,0.985,163,0.534,164,0.641,165,0.586,166,1.032,167,0.641,168,1.045,169,0.559,170,0.7,171,0.586,172,0.393,173,0.613,174,0.586,175,1.283,176,0.7,177,0.586,178,0.586,179,0.586,180,0.534,181,0.586,182,0.586,183,0.67,184,0.7,185,0.01,186,0.01,225,2.649,227,3.216,237,4.634,238,1.503,261,2.047,262,2.697,265,0.83,276,2.374,667,2.987,749,2.702,888,3.255,1024,5.227,1151,4.243,1277,4.404,1286,4.243,1449,5.33,1535,4.911,1536,3.013,1537,4.908,1538,4.243,1539,4.908,1540,4.908,1541,4.908,1542,3.486,1543,3.486,1544,6.742,1545,6.742,1546,6.742,1547,6.742,1548,6.742,1549,6.742,1550,6.742,1551,6.742,1552,6.742,1553,6.742,1554,6.742,1555,6.742,1556,7.548,1557,7.497,1558,6.166,1559,3.805,1560,4.243,1561,4.908,1562,5.681,1563,4.908,1564,4.908,1565,4.908,1566,6.166,1567,4.908,1568,4.908,1569,6.742,1570,4.908,1571,4.243,1572,7.368,1573,7.548,1574,6.166,1575,3.486,1576,6.742,1577,6.742,1578,6.742,1579,6.166,1580,4.908,1581,4.908,1582,6.166,1583,4.908,1584,4.908,1585,4.908,1586,4.243,1587,4.908,1588,4.908,1589,4.908,1590,4.243,1591,4.908,1592,4.908,1593,4.908,1594,4.908,1595,3.805,1596,3.486,1597,3.486,1598,3.486,1599,3.486,1600,3.486,1601,3.486]],["title/components/OverviewCardComponent.html",[0,0.178,152,0.641]],["body/components/OverviewCardComponent.html",[0,0.356,1,0.778,2,0.151,3,0.109,4,0.89,5,0.93,6,0.852,7,0.088,11,0.412,12,0.852,19,0.954,20,1.053,22,0.93,23,1.3,24,1.241,25,0.999,26,0.954,28,0.954,30,0.36,34,0.67,38,1.111,41,0.438,42,0.66,47,0.462,50,0.017,51,0.562,56,0.581,69,0.438,85,0.676,91,0.194,92,0.172,97,0.129,98,0.061,114,0.551,115,1.193,116,1.193,117,1.142,118,1.39,119,0.93,120,1.193,121,0.743,122,0.93,123,0.743,124,0.93,125,0.551,126,0.93,127,0.778,128,0.93,129,0.743,130,0.962,131,1.39,132,0.743,133,0.93,134,0.778,135,1.317,136,0.778,137,1.317,138,0.778,139,1.317,140,0.778,141,0.93,142,0.778,143,0.93,144,0.778,145,0.89,146,0.778,147,0.93,148,0.778,149,0.778,150,0.743,151,0.93,152,1.164,153,1.281,154,0.93,155,0.743,156,0.93,157,0.778,158,0.709,159,0.93,160,0.709,161,0.743,162,1.193,163,0.709,164,0.852,165,0.778,166,1.101,167,0.852,168,1.207,169,0.743,170,0.93,171,0.778,172,0.522,173,0.814,174,0.778,175,0.999,176,0.93,177,0.778,178,0.778,179,0.778,180,0.709,181,0.778,182,0.778,183,0.89,184,0.93,185,0.012,186,0.012,216,1.898,253,3.631,405,1.142,406,1.246,428,2.366,1169,4.21,1513,4.607,1560,5.985,1602,5.673,1603,5.087,1604,4.003,1605,5.137,1606,5.943,1607,5.943,1608,4.631,1609,4.631]],["title/components/OverviewComponent.html",[0,0.178,155,0.612]],["body/components/OverviewComponent.html",[0,0.361,1,0.776,2,0.15,3,0.108,4,0.888,5,0.927,6,0.849,7,0.088,11,0.41,12,0.849,19,0.952,20,1.052,22,0.927,23,1.3,24,1.241,25,0.997,26,0.952,28,0.952,30,0.359,34,0.669,38,1.11,41,0.437,42,0.659,47,0.461,50,0.016,51,0.561,56,0.58,69,0.437,85,0.674,91,0.194,92,0.172,97,0.129,98,0.061,114,0.55,115,1.191,116,1.191,117,1.14,118,1.389,119,0.927,120,1.191,121,0.741,122,0.927,123,0.741,124,0.927,125,0.55,126,0.927,127,0.776,128,0.927,129,0.741,130,1.017,131,1.389,132,0.741,133,0.927,134,0.776,135,1.316,136,0.776,137,1.316,138,0.776,139,1.316,140,0.776,141,0.927,142,0.776,143,0.927,144,0.776,145,1.26,146,0.776,147,0.927,148,0.776,149,0.776,150,0.741,151,0.927,152,0.776,153,1.101,154,0.927,155,1.11,156,0.927,157,0.776,158,0.707,159,0.927,160,0.707,161,0.741,162,1.191,163,0.707,164,0.849,165,0.776,166,1.121,167,0.849,168,1.205,169,0.741,170,0.927,171,0.776,172,0.521,173,0.812,174,0.776,175,0.997,176,0.927,177,0.776,178,0.776,179,0.776,180,0.707,181,0.776,182,0.776,183,0.888,184,0.927,185,0.012,186,0.012,216,1.895,323,1.536,385,2.474,405,1.14,406,1.243,768,2.869,907,3.624,1031,5.128,1137,3.887,1138,3.529,1610,3.992,1611,5.128,1612,5.932,1613,5.932,1614,4.618,1615,4.618,1616,5.932,1617,5.932]],["title/modules/OverviewModule.html",[354,0.871,1252,2.501]],["body/modules/OverviewModule.html",[0,0.292,2,0.163,3,0.117,7,0.095,11,0.444,47,0.485,50,0.017,58,3.633,65,2.08,91,0.33,92,0.186,97,0.199,98,0.066,114,0.595,152,1.321,153,1.231,155,1.262,185,0.013,186,0.013,221,1.819,323,1.615,354,1.705,356,1.667,357,2.975,358,2.188,364,3.434,365,3.434,366,3.434,367,2.867,368,2.298,369,2.188,371,2.867,372,3.184,373,2.298,385,2.086,386,2.699,387,2.866,388,2.866,389,2.866,416,3.575,1023,4.836,1083,4.565,1251,4.565,1252,5.275,1254,4.033,1261,4.323,1264,4.323,1265,4.323,1603,3.877,1618,4.323,1619,4.323,1620,5.001,1621,4.323,1622,5.001,1623,6.239,1624,5.393,1625,5.001,1626,5.001]],["title/injectables/RoutingService.html",[759,1.12,1121,1.947]],["body/injectables/RoutingService.html",[2,0.167,3,0.121,7,0.098,11,0.612,13,0.882,30,0.399,34,0.715,42,0.517,44,4.743,47,0.559,49,1.116,50,0.017,51,0.601,52,0.755,53,0.926,54,1.443,59,2.143,60,3.425,69,0.652,82,3.984,85,1.005,91,0.266,92,0.191,95,2.623,97,0.144,98,0.068,99,1.274,105,0.904,130,0.882,163,1.101,166,0.926,185,0.013,186,0.013,211,2.486,216,2.027,220,2.619,225,3.425,226,3.636,240,1.264,266,1.443,406,1.33,459,4.368,759,2.021,799,3.642,831,3.984,1121,3.238,1138,3.668,1167,5.33,1229,3.642,1627,4.443,1628,6.346,1629,6.346,1630,7.189,1631,7.189,1632,6.346,1633,5.14,1634,5.14,1635,5.14,1636,5.14,1637,6.346,1638,5.14,1639,5.573,1640,5.14,1641,5.14,1642,5.14,1643,5.14,1644,5.14]],["title/modules/SharedModule.html",[354,0.871,366,1.754]],["body/modules/SharedModule.html",[0,0.348,2,0.161,3,0.116,7,0.094,11,0.439,12,1.139,13,0.861,17,2.957,41,0.64,50,0.017,56,0.89,91,0.329,92,0.184,97,0.198,98,0.065,112,1.978,114,0.588,125,0.942,127,1.329,160,1.211,161,0.793,185,0.013,186,0.013,221,1.798,223,2.667,290,2.832,291,2.522,323,1.603,354,1.7,355,2.667,356,1.648,357,2.959,358,2.162,364,3.424,365,3.424,366,3.664,367,2.846,368,2.271,369,2.162,371,2.846,372,3.16,373,2.271,382,4.801,383,4.801,384,4.801,385,2.061,386,2.667,387,2.832,388,2.832,705,3.831,1260,3.501,1269,3.831,1595,4.801,1645,4.272,1646,4.272,1647,4.942,1648,4.272,1649,4.942,1650,6.193,1651,6.193,1652,5.353,1653,6.193,1654,4.942,1655,3.501,1656,4.942]],["title/components/ShelveButtonComponent.html",[0,0.178,157,0.641]],["body/components/ShelveButtonComponent.html",[0,0.351,1,0.595,2,0.115,3,0.083,4,0.681,5,1.15,6,0.651,7,0.067,10,2.51,11,0.441,12,1.424,13,0.942,14,3.794,15,2.634,16,2.844,17,2.39,18,4.291,19,0.797,20,0.92,21,4.442,22,0.711,23,1.28,24,1.221,25,0.834,26,0.797,27,3.848,28,0.797,29,3.848,30,0.275,31,0.797,32,1.201,33,3.454,34,0.7,36,5.368,37,4.814,38,0.997,39,3.033,40,1.478,41,0.683,42,0.499,43,3.062,44,4.515,45,6.238,46,6.238,47,0.568,48,4.291,49,0.873,50,0.017,51,0.588,52,0.682,53,0.724,54,1.313,55,3.093,56,0.975,57,3.283,58,3.169,59,2.59,60,2.679,61,4.814,62,5.368,63,3.033,64,1.397,65,1.655,69,0.711,70,1.806,71,1.232,73,2.07,74,4.814,75,1.52,77,1.806,78,1.984,79,3.848,80,4.291,81,3.033,82,3.848,83,4.291,84,4.291,85,0.836,87,3.848,89,3.033,91,0.274,92,0.132,93,3.062,94,2.164,95,1.807,96,0.743,97,0.099,98,0.047,99,1.247,100,1.423,101,0.997,102,3.062,103,3.062,104,3.062,106,1.912,107,1.181,109,2.321,111,2.321,112,1.132,113,2.164,114,0.422,115,0.997,116,0.997,117,0.954,118,1.247,119,0.711,120,0.997,121,0.568,122,0.711,123,0.568,124,0.711,125,0.422,126,0.711,127,0.595,128,0.711,129,0.568,130,0.863,131,1.247,132,0.568,133,0.711,134,0.595,135,1.15,136,0.595,137,1.15,138,0.595,139,1.15,140,0.595,141,0.711,142,0.595,143,0.711,144,0.595,145,0.681,146,0.595,147,0.711,148,0.595,149,0.595,150,0.568,151,0.711,152,0.595,153,0.595,154,0.711,155,0.568,156,0.711,157,1.044,158,0.542,159,0.711,160,0.542,161,0.568,162,0.997,163,0.542,164,0.651,165,0.595,166,1.036,167,0.651,168,1.054,169,0.568,170,0.711,171,0.595,172,0.399,173,0.623,174,0.595,175,0.834,176,0.711,177,0.595,178,0.595,179,0.595,180,0.542,181,0.595,182,0.595,183,0.681,184,0.711,185,0.01,186,0.01,237,4.069,238,1.901,239,3.755,240,1.008,246,2.533,377,5.594,633,2.164,1657,6.238,1658,6.21,1659,3.542,1660,3.848,1661,4.964,1662,3.542,1663,3.542,1664,3.542,1665,3.542,1666,3.542]],["title/components/ShelveComponent.html",[0,0.178,158,0.584]],["body/components/ShelveComponent.html",[0,0.315,1,0.371,2,0.072,3,0.052,4,0.424,5,0.443,6,0.405,7,0.042,11,0.436,12,0.982,13,0.857,16,1.996,17,2.046,19,0.559,20,0.693,22,0.443,23,1.231,24,1.174,25,0.585,26,0.559,28,0.559,30,0.171,31,0.559,32,0.905,33,3.098,34,0.553,38,0.787,40,0.829,41,0.738,42,0.35,44,3.633,47,0.582,49,0.388,50,0.017,51,0.409,52,0.755,53,0.716,54,1.14,55,2.648,56,0.969,57,2.811,58,1.125,59,1.453,60,2.648,64,1.598,67,1.524,69,0.733,70,1.571,71,1.072,73,2.046,75,1.322,77,1.267,81,2.997,85,0.948,91,0.249,92,0.082,94,1.347,95,1.125,96,0.462,97,0.097,98,0.029,99,0.867,100,1.646,101,0.98,105,0.388,106,2.648,107,1.636,109,2.282,111,1.445,112,2.117,113,3.264,114,0.262,115,0.699,116,0.699,117,0.669,118,0.985,119,0.443,120,0.699,121,0.354,122,0.443,123,0.354,124,0.443,125,0.262,126,0.443,127,0.371,128,0.443,129,0.354,130,0.682,131,0.985,132,0.354,133,0.443,134,0.371,135,0.867,136,0.371,137,0.867,138,0.371,139,0.867,140,0.371,141,0.443,142,0.371,143,0.443,144,0.371,145,0.424,146,0.371,147,0.443,148,0.371,149,0.371,150,0.354,151,0.443,152,0.371,153,0.371,154,0.443,155,0.354,156,0.443,157,0.371,158,0.751,159,0.443,160,0.338,161,0.693,162,0.699,163,0.338,164,0.405,165,0.371,166,0.9,167,0.405,168,0.794,169,0.354,170,0.443,171,0.371,172,0.249,173,0.388,174,0.371,175,0.585,176,0.443,177,0.371,178,0.371,179,0.371,180,0.338,181,0.371,182,0.371,183,0.424,184,0.443,185,0.01,186,0.007,188,2.128,189,3.059,193,2.648,195,4.538,196,4.481,198,5.037,201,4.402,202,3.803,203,3.476,204,3.803,205,4.023,206,3.803,208,1.906,209,4.778,210,1.866,211,2.089,212,3.476,213,4.141,214,3.803,216,1.113,217,2.48,218,3.214,219,3.098,220,1.213,221,1.785,222,2.7,223,3.21,224,1.996,226,1.996,229,3.425,233,1.996,237,4.417,238,2.094,239,4.674,240,1.244,242,2.7,243,4.778,244,2.7,245,3.532,246,2.503,251,2.7,253,2.997,254,2.468,255,2.829,256,2.128,257,2.7,262,1.524,265,1.272,266,1.443,271,1.44,274,3.803,276,1.685,277,2.282,278,5.225,282,2.032,283,1.685,284,2.7,285,4.141,286,2.683,287,2.7,288,3.803,290,1.263,291,1.125,292,0.704,294,2.7,295,0.795,296,2.7,297,1.709,298,1.709,299,1.709,300,1.709,301,1.709,302,1.709,303,1.709,304,1.709,306,1.562,307,1.709,308,1.709,309,4.61,310,1.709,311,2.7,312,1.709,315,1.709,317,4.402,318,3.721,319,2.7,320,1.709,321,1.709,337,2.7,338,1.562,339,1.709,340,1.709,341,1.562,342,1.709,343,1.709,344,1.709,345,3.059,346,3.011,347,3.011,348,2.128,349,2.282,351,2.7,353,3.011,409,1.601,476,2.146,483,2.282,490,2.282,541,1.709,568,2.7,633,3.633,662,2.468,686,2.282,931,2.648,1139,2.648,1191,3.803,1229,2.468,1347,2.282,1464,2.7,1660,3.803,1667,1.709,1668,3.011,1669,3.011,1670,4.241,1671,6.166,1672,4.241,1673,4.909,1674,4.909,1675,4.909,1676,4.241,1677,3.483,1678,2.205,1679,2.7,1680,2.205,1681,2.205,1682,2.205,1683,2.205,1684,3.011,1685,2.205,1686,2.205,1687,2.205,1688,2.205,1689,2.205,1690,2.205,1691,2.205,1692,2.205,1693,2.205,1694,2.205,1695,2.205,1696,3.011,1697,2.205,1698,2.205,1699,2.205,1700,2.205,1701,2.205,1702,3.476,1703,3.011,1704,5.912,1705,3.011,1706,4.241,1707,3.011,1708,3.011,1709,3.011,1710,5.329,1711,3.011,1712,3.011,1713,3.011,1714,2.205,1715,1.709,1716,1.347,1717,1.906,1718,1.562,1719,3.011,1720,1.906,1721,1.906,1722,1.906,1723,1.906,1724,1.906,1725,3.011,1726,1.906,1727,1.906,1728,3.011,1729,3.011,1730,1.906,1731,1.906,1732,1.906,1733,1.906,1734,3.483,1735,3.483,1736,3.011]],["title/injectables/SidenavService.html",[33,1.754,759,1.12]],["body/injectables/SidenavService.html",[2,0.175,3,0.126,7,0.103,16,4.187,30,0.419,31,1.048,32,1.678,33,3.002,34,0.736,42,0.707,47,0.598,49,0.948,50,0.017,51,0.51,52,0.778,53,0.786,57,4.36,69,0.72,71,1.622,85,1.026,91,0.274,92,0.2,97,0.151,98,0.071,100,1.745,185,0.013,186,0.013,245,4.187,265,1.283,266,1.082,759,2.063,888,4.187,918,4.177,919,3.531,1206,6.656,1222,3.531,1737,4.659,1738,7.308,1739,6.532,1740,5.389,1741,5.389,1742,5.389,1743,6.532,1744,5.389,1745,5.389,1746,5.389,1747,5.389,1748,5.389,1749,5.389,1750,5.389,1751,5.389]],["title/components/StatusViewComponent.html",[0,0.178,160,0.584]],["body/components/StatusViewComponent.html",[0,0.353,1,0.561,2,0.109,3,0.078,4,0.641,5,0.67,6,0.614,7,0.064,11,0.297,12,0.614,17,1.984,19,0.764,20,0.89,22,0.67,23,1.275,24,1.216,25,0.8,26,0.764,28,0.764,30,0.259,31,0.764,32,1.492,34,0.536,38,0.97,40,1.665,41,0.741,42,0.558,47,0.595,50,0.017,51,0.45,52,0.761,56,0.759,64,1.339,65,1.587,69,0.45,71,1.501,73,1.984,85,0.694,91,0.254,92,0.124,96,0.699,97,0.093,98,0.044,100,1.377,105,0.837,112,1.52,114,0.397,115,0.955,116,0.955,117,0.915,118,1.214,119,0.67,120,0.955,121,0.536,122,0.67,123,0.536,124,0.67,125,0.567,126,0.67,127,0.561,128,0.67,129,0.536,130,0.84,131,1.214,132,0.536,133,0.67,134,0.561,135,1.114,136,0.561,137,1.114,138,0.561,139,1.114,140,0.561,141,0.67,142,0.561,143,0.67,144,0.561,145,0.641,146,0.561,147,0.67,148,0.561,149,0.561,150,0.536,151,0.67,152,0.561,153,0.561,154,0.67,155,0.536,156,0.67,157,0.561,158,0.511,159,0.67,160,0.926,161,1.098,162,0.955,163,0.511,164,0.614,165,0.561,166,1.021,167,0.614,168,1.02,169,0.536,170,0.67,171,0.561,172,0.376,173,0.587,174,0.561,175,0.8,176,0.67,177,0.561,178,0.561,179,0.561,180,0.511,181,0.561,182,0.561,183,0.641,184,0.67,185,0.01,186,0.01,216,1.52,217,1.984,231,2.569,238,1.457,240,0.837,253,2.907,261,1.984,265,1.522,266,1.404,295,1.266,381,1.269,421,1.614,428,2.646,434,2.723,435,2.345,437,5.663,445,5.746,486,2.666,491,2.666,494,2.426,495,2.187,496,2.426,497,2.426,498,2.426,499,2.426,667,3.42,677,3.93,681,3.103,684,3.372,685,3.372,686,3.118,687,3.372,702,3.689,912,1.328,935,2.907,951,4.474,1138,2.428,1142,3.118,1363,4.284,1395,4.114,1494,5.527,1496,5.913,1499,5.227,1501,2.885,1503,2.885,1505,2.885,1507,2.885,1513,3.689,1655,5.176,1752,6.315,1753,2.587,1754,4.759,1755,4.114,1756,6.047,1757,6.047,1758,6.047,1759,6.647,1760,6.047,1761,4.759,1762,3.337,1763,4.759,1764,3.337,1765,3.337,1766,3.689,1767,3.337,1768,4.759,1769,4.759,1770,3.337,1771,3.337,1772,3.337,1773,3.337,1774,3.337,1775,3.337,1776,3.337,1777,3.337]],["title/modules/TabularModule.html",[354,0.871,1253,2.501]],["body/modules/TabularModule.html",[0,0.302,2,0.173,3,0.124,7,0.101,11,0.471,50,0.017,91,0.329,92,0.197,97,0.203,98,0.07,114,0.631,146,1.274,160,0.812,163,1.213,164,0.975,185,0.013,186,0.013,221,1.929,323,1.675,354,1.659,355,4.091,356,1.768,357,3.054,358,2.32,365,3.483,366,3.483,367,2.973,368,2.437,369,2.32,371,2.973,372,3.301,373,2.437,385,2.212,386,2.863,387,3.039,389,3.039,440,3.129,701,2.461,1138,3.301,1253,5.236,1260,3.757,1268,3.757,1269,5.015,1655,3.757,1778,4.584,1779,4.584,1780,5.303,1781,4.584,1782,5.303,1783,5.303,1784,5.303]],["title/components/TabularViewComponent.html",[0,0.178,163,0.584]],["body/components/TabularViewComponent.html",[0,0.341,1,0.39,2,0.075,3,0.054,4,0.446,5,0.466,6,0.427,7,0.044,11,0.539,12,0.427,13,0.504,14,3.082,15,2.515,19,0.582,20,0.716,21,3.459,22,0.466,23,1.237,24,1.18,25,0.609,26,0.582,28,0.582,30,0.18,31,0.582,32,1.483,34,0.409,37,3.91,38,0.81,40,1.535,41,0.709,42,0.364,47,0.595,49,0.785,50,0.017,51,0.61,52,0.824,53,0.651,54,0.728,56,0.291,63,3.544,64,1.02,69,0.676,70,1.991,71,1.44,73,1.511,75,1.92,77,1.318,78,1.611,81,2.214,85,0.885,89,2.214,91,0.263,92,0.086,95,1.183,96,0.486,97,0.065,98,0.031,99,1.013,100,1.739,101,1.815,105,1.134,107,0.773,112,1.611,114,0.276,115,0.728,116,0.728,117,0.697,118,1.013,119,0.466,120,0.728,121,0.372,122,0.466,123,0.372,124,0.466,125,0.276,126,0.466,127,0.39,128,0.466,129,0.372,130,0.701,131,1.013,132,0.372,133,0.466,134,0.39,135,0.896,136,0.39,137,0.896,138,0.39,139,0.896,140,0.39,141,0.466,142,0.39,143,0.466,144,0.39,145,0.446,146,0.39,147,0.466,148,0.39,149,0.39,150,0.372,151,0.466,152,0.39,153,0.39,154,0.466,155,0.372,156,0.466,157,0.39,158,0.355,159,0.466,160,0.355,161,0.973,162,0.728,163,0.772,164,1.115,165,0.39,166,0.915,167,0.427,168,0.821,169,0.372,170,0.466,171,0.39,172,0.569,173,0.408,174,0.39,175,0.609,176,0.466,177,0.39,178,0.39,179,0.39,180,0.355,181,0.39,182,0.39,183,0.446,184,0.466,185,0.007,186,0.009,189,3.161,195,2.375,203,3.574,210,1.971,211,2.647,212,3.574,216,1.158,217,0.967,220,1.756,224,3.324,238,1.544,240,1.331,245,2.077,253,2.214,255,4.11,265,1.535,266,1.294,271,0.681,277,4.224,282,1.379,283,3.034,286,1.776,292,0.741,295,1.018,306,2.568,323,0.6,330,1.956,345,2.568,351,2.81,394,3.574,407,1.849,409,1.666,415,3.133,421,1.122,427,3.324,428,1.443,434,2.008,435,2.31,440,3.607,441,5.7,459,4.488,462,1.52,476,1.585,479,5.015,536,2.568,615,1.956,707,2.568,759,0.681,761,1.798,768,1.122,769,1.183,770,1.122,792,2.81,794,4.699,810,1.798,816,3.91,820,2.81,888,3.136,910,1.417,911,3.082,1138,1.849,1139,3.736,1167,2.568,1170,3.459,1173,1.52,1178,2.81,1199,2.81,1207,3.133,1208,3.857,1222,1.52,1268,5.259,1294,2.214,1313,3.133,1371,3.133,1571,4.731,1639,2.81,1753,1.798,1755,3.133,1785,6.417,1786,3.625,1787,3.625,1788,5.044,1789,5.044,1790,5.802,1791,5.044,1792,5.044,1793,6.062,1794,5.044,1795,6.272,1796,3.625,1797,5.802,1798,3.625,1799,5.044,1800,2.319,1801,3.625,1802,2.319,1803,3.625,1804,2.319,1805,3.625,1806,3.625,1807,2.319,1808,3.625,1809,2.319,1810,3.625,1811,2.319,1812,3.625,1813,2.319,1814,5.044,1815,4.731,1816,3.625,1817,4.462,1818,2.319,1819,3.625,1820,2.319,1821,5.044,1822,3.625,1823,3.625,1824,3.625,1825,2.319,1826,3.625,1827,5.473,1828,2.319,1829,2.319,1830,2.319,1831,3.625,1832,3.625,1833,3.625,1834,3.625,1835,3.625,1836,2.319,1837,5.473,1838,3.625,1839,2.319,1840,3.133,1841,3.625,1842,2.319,1843,6.062,1844,2.319,1845,5.802,1846,2.319,1847,2.319,1848,2.319,1849,2.319,1850,2.319,1851,2.319,1852,2.319,1853,2.319,1854,1.798,1855,2.319,1856,2.319,1857,2.319,1858,2.319,1859,2.319,1860,2.319,1861,2.319,1862,1.798,1863,2.319,1864,3.625,1865,2.319,1866,2.319,1867,2.319,1868,2.319,1869,5.473,1870,2.319,1871,2.319,1872,2.319,1873,2.319,1874,2.319,1875,2.319,1876,2.319,1877,2.319,1878,2.319,1879,5.044,1880,2.319,1881,3.625,1882,2.319,1883,3.625,1884,4.462,1885,4.462,1886,2.319,1887,2.319,1888,2.319,1889,2.319,1890,4.462,1891,2.319,1892,3.625,1893,3.625,1894,3.625,1895,3.625,1896,3.625]],["title/interfaces/TimeoutOption.html",[1702,2.704,1716,2.331]],["body/interfaces/TimeoutOption.html",[0,0.305,2,0.103,3,0.074,7,0.06,11,0.281,12,0.841,13,0.819,16,1.809,17,1.907,19,0.507,20,0.734,23,0.507,24,0.484,26,0.507,28,0.507,30,0.245,31,0.734,32,0.662,33,2.471,34,0.356,38,0.507,40,0.752,41,0.733,42,0.317,44,3.285,47,0.245,50,0.017,52,0.545,53,0.785,54,1.08,55,2.469,56,0.95,57,3.081,58,1.611,59,1.317,60,2.469,64,1.514,67,1.381,69,0.731,70,1.664,71,1.136,73,1.907,75,1.4,77,1.149,85,0.461,91,0.282,92,0.117,94,1.929,95,1.611,96,0.662,97,0.128,98,0.042,99,1.08,100,1.671,101,1.287,105,0.555,106,3.182,107,1.966,109,2.997,111,2.069,112,2.084,113,3.823,158,0.484,161,0.507,185,0.012,186,0.009,188,1.929,189,3.241,193,1.704,195,4.275,196,4.409,198,4.57,201,2.448,202,2.448,203,2.237,204,2.448,205,3.241,206,2.448,209,4.85,210,1.836,211,1.527,212,3.241,213,4.169,214,3.546,216,1.009,217,2.459,218,2.997,219,3.092,220,1.099,221,1.664,222,2.448,223,3.182,224,1.809,226,1.809,229,3.72,237,4.275,238,2.11,239,4.673,240,1.307,242,2.448,243,4.57,244,2.448,245,3.378,246,2.334,251,2.448,253,3.285,254,2.237,255,3.524,256,1.929,257,2.448,265,0.752,266,1.491,271,0.927,274,3.546,276,1.527,277,2.069,278,5.057,282,2.045,283,1.527,284,2.448,285,4.57,286,2.796,287,2.448,288,4.169,290,1.809,291,1.611,292,1.009,294,3.546,295,1.044,296,3.546,297,2.448,298,2.448,299,2.448,300,2.448,301,2.448,302,2.448,303,2.448,304,2.448,306,2.237,307,2.448,308,2.448,309,5.216,310,2.448,311,3.546,312,2.448,315,2.448,317,5.057,318,4.275,319,3.546,320,2.448,321,2.448,337,3.546,338,2.237,339,2.448,340,2.448,341,2.237,342,2.448,343,2.448,344,2.448,409,1.451,476,2.001,483,2.069,490,2.069,541,2.448,568,2.448,633,4.111,662,3.241,931,2.469,1139,2.469,1191,3.546,1229,3.241,1347,2.069,1464,3.546,1660,3.546,1667,2.448,1668,2.73,1669,2.73,1670,2.73,1671,6.071,1672,2.73,1673,2.73,1674,2.73,1675,2.73,1676,2.73,1679,2.448,1684,2.73,1696,2.73,1702,3.81,1703,2.73,1704,6.165,1705,2.73,1706,3.954,1707,2.73,1708,2.73,1709,2.73,1710,5.096,1711,2.73,1712,2.73,1713,2.73,1715,3.546,1716,2.794,1717,3.954,1718,3.241,1719,3.954,1720,2.73,1721,2.73,1722,2.73,1723,2.73,1724,2.73,1725,3.954,1726,2.73,1727,2.73,1728,3.954,1729,3.954,1730,2.73,1731,2.73,1732,2.73,1733,2.73]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.178,165,0.641]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.353,1,0.642,2,0.124,3,0.09,4,0.734,5,0.767,6,0.703,7,0.073,11,0.34,12,0.703,13,0.964,19,0.84,20,0.957,22,0.767,23,1.286,24,1.227,25,0.879,26,0.84,28,0.84,30,0.297,31,0.84,32,1.538,34,0.59,38,1.03,40,1.527,41,0.72,42,0.526,47,0.552,49,0.672,50,0.017,51,0.565,52,0.8,53,0.558,54,1.393,56,0.48,69,0.657,85,0.558,91,0.298,92,0.142,96,0.801,97,0.107,98,0.051,99,1.05,105,0.92,114,0.455,115,1.05,116,1.05,117,1.005,118,1.288,119,0.767,120,1.05,121,0.613,122,0.767,123,0.613,124,0.767,125,0.623,126,0.767,127,0.642,128,0.767,129,0.613,130,0.891,131,1.288,132,0.613,133,0.767,134,0.642,135,1.198,136,0.642,137,1.198,138,0.642,139,1.198,140,0.642,141,0.767,142,0.642,143,0.767,144,0.642,145,0.734,146,0.642,147,0.767,148,0.642,149,0.642,150,0.613,151,0.767,152,0.642,153,0.642,154,0.767,155,0.613,156,0.767,157,0.642,158,0.585,159,0.767,160,0.585,161,0.613,162,1.05,163,0.585,164,0.703,165,1.078,166,1.128,167,1.451,168,1.457,169,0.613,170,0.767,171,0.642,172,0.431,173,0.672,174,0.642,175,0.879,176,0.767,177,0.642,178,0.642,179,0.642,180,1.029,181,0.642,182,0.642,183,0.734,184,0.767,185,0.011,186,0.011,210,2.154,240,1.049,271,1.536,292,1.221,381,1.99,405,1.005,406,1.097,435,1.17,446,2.885,456,3.196,575,2.123,578,2.334,580,3.303,583,4.055,584,3.303,591,2.53,592,3.428,593,3.428,616,2.17,681,1.593,701,1.99,912,1.521,1002,3.103,1347,4.204,1897,3.904,1898,4.419,1899,4.74,1900,3.328,1901,3.909,1902,2.504,1903,4.055,1904,2.885,1905,3.821,1906,3.303,1907,3.303,1908,2.062,1909,3.303]],["title/components/WeatherComponent.html",[0,0.178,169,0.612]],["body/components/WeatherComponent.html",[0,0.359,1,0.74,2,0.143,3,0.103,4,0.846,5,0.884,6,0.81,7,0.084,11,0.391,12,0.81,13,0.799,19,0.923,20,1.028,22,0.884,23,1.297,24,1.237,25,0.967,26,0.923,28,0.923,30,0.342,31,0.923,34,0.648,38,1.09,40,1.048,41,0.606,42,0.644,47,0.528,49,0.774,50,0.017,51,0.606,52,0.685,53,0.643,56,0.553,69,0.544,77,2.092,85,0.839,91,0.241,92,0.164,97,0.123,98,0.058,105,1.194,107,1.918,114,0.524,115,1.155,116,1.155,117,1.105,118,1.364,119,0.884,120,1.155,121,0.707,122,0.884,123,0.707,124,0.884,125,0.524,126,0.884,127,0.74,128,0.884,129,0.707,130,0.944,131,1.364,132,0.707,133,0.884,134,0.74,135,1.286,136,0.74,137,1.286,138,0.74,139,1.286,140,0.74,141,0.884,142,0.74,143,0.884,144,0.74,145,0.846,146,0.74,147,0.884,148,0.74,149,0.74,150,0.707,151,0.884,152,0.74,153,0.74,154,0.884,155,0.707,156,0.884,157,0.74,158,0.674,159,0.884,160,0.674,161,0.707,162,1.155,163,0.674,164,0.81,165,0.74,166,1.127,167,0.81,168,1.178,169,1.09,170,0.884,171,0.74,172,0.496,173,0.774,174,0.74,175,0.967,176,0.884,177,0.74,178,0.74,179,0.74,180,0.674,181,0.74,182,0.74,183,0.846,184,0.884,185,0.012,186,0.012,216,2.309,238,1.761,246,2.935,265,1.048,266,0.884,405,1.105,406,1.206,575,1.688,588,2.246,1904,3.561,1908,2.376,1910,3.806,1911,4.972,1912,5.751,1913,5.751,1914,5.751,1915,5.751,1916,6.248,1917,5.751,1918,5.751,1919,5.751,1920,4.403,1921,4.403,1922,3.806]],["title/components/WeatherDataMarkerComponent.html",[0,0.178,171,0.641]],["body/components/WeatherDataMarkerComponent.html",[0,0.356,1,0.629,2,0.122,3,0.088,4,0.72,5,0.752,6,0.689,7,0.071,11,0.458,12,0.689,13,0.958,19,0.828,20,0.947,22,0.752,23,1.285,24,1.226,25,0.867,26,0.828,28,0.828,30,0.291,31,0.828,32,1.445,34,0.582,38,1.021,40,1.642,41,0.713,42,0.519,47,0.559,49,0.907,50,0.017,51,0.602,52,0.794,53,0.753,54,1.384,55,3.433,56,0.47,69,0.653,75,1.947,85,0.546,91,0.28,92,0.139,96,0.785,97,0.105,98,0.05,99,1.185,105,1.119,114,0.446,115,1.036,116,1.036,117,0.991,118,1.277,119,0.752,120,1.036,121,0.601,122,0.752,123,0.601,124,0.752,125,0.614,126,0.752,127,0.629,128,0.752,129,0.601,130,0.884,131,1.277,132,0.601,133,0.752,134,0.629,135,1.185,136,0.629,137,1.185,138,0.629,139,1.185,140,0.629,141,0.752,142,0.629,143,0.752,144,0.629,145,0.72,146,0.629,147,0.752,148,0.629,149,0.629,150,0.601,151,0.752,152,0.629,153,0.629,154,0.752,155,0.601,156,0.752,157,0.629,158,0.573,159,0.752,160,0.573,161,0.601,162,1.036,163,0.573,164,0.689,165,0.629,166,1.113,167,0.689,168,1.085,169,0.601,170,0.752,171,1.069,172,0.891,173,0.658,174,0.629,175,0.867,176,0.752,177,0.629,178,0.629,179,0.629,180,0.904,181,0.629,182,0.629,183,0.72,184,0.752,185,0.011,186,0.011,193,2.784,210,2.169,240,1.119,262,2.918,265,1.228,266,1.036,271,1.867,292,1.196,381,1.424,405,0.991,406,1.081,425,3.655,446,2.855,575,2.144,578,2.287,583,2.902,591,3.335,592,3.38,593,3.38,616,2.147,701,1.962,780,2.784,1002,2.495,1009,4.168,1017,3.38,1076,2.453,1559,3.999,1652,4.459,1897,3.943,1898,4.463,1899,4.787,1900,3.317,1901,3.867,1902,2.453,1903,3.999,1904,2.855,1906,3.236,1908,2.021,1923,5.102,1924,5.158,1925,4.93,1926,3.744,1927,3.744,1928,3.744,1929,3.236]],["title/modules/WeatherModule.html",[354,0.871,1254,2.06]],["body/modules/WeatherModule.html",[0,0.272,2,0.146,3,0.105,7,0.085,11,0.398,50,0.017,58,2.969,91,0.333,92,0.167,97,0.191,98,0.059,114,0.534,165,1.221,166,1.115,167,1.07,168,1.336,169,1.166,171,1.221,172,0.656,173,1.277,174,1.221,175,1.149,177,1.221,178,1.221,179,1.221,180,0.891,181,1.301,185,0.012,186,0.012,221,2.35,291,2.287,323,1.506,354,1.561,355,3.92,356,1.494,357,2.826,358,1.96,364,3.338,365,3.338,366,3.338,367,2.674,368,2.06,369,1.96,371,2.674,372,2.969,373,2.06,385,1.869,386,2.419,387,2.568,388,2.568,389,2.568,575,2.007,701,2.213,1089,4.161,1092,3.874,1094,5.03,1095,3.474,1096,5.585,1098,3.474,1254,4.369,1260,3.175,1898,4.178,1899,4.233,1900,3.177,1908,2.419,1930,3.874,1931,3.874,1932,4.482,1933,3.874,1934,3.874,1935,4.482,1936,5.818,1937,3.474,1938,3.474,1939,3.874,1940,4.482,1941,4.122,1942,3.474,1943,4.482]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.178,174,0.641]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.321,1,0.683,2,0.132,3,0.095,4,0.782,5,0.816,6,0.748,7,0.077,12,0.748,15,2.508,19,0.876,20,0.988,22,0.816,23,1.291,24,1.232,25,0.917,26,0.876,28,0.876,30,0.316,34,0.615,38,1.056,40,1.683,41,0.385,42,0.619,47,0.549,50,0.017,51,0.516,52,0.484,56,0.51,69,0.583,75,1.671,85,0.593,91,0.17,92,0.151,97,0.114,98,0.054,101,1.145,114,0.484,115,1.095,116,1.095,117,1.049,118,1.321,119,0.816,120,1.095,121,0.653,122,0.816,123,0.653,124,0.816,125,0.484,126,0.816,127,0.683,128,0.816,129,0.653,130,0.915,131,1.321,132,0.653,133,0.816,134,0.683,135,1.236,136,0.683,137,1.236,138,0.683,139,1.236,140,0.683,141,0.816,142,0.683,143,0.816,144,0.683,145,0.782,146,0.683,147,0.816,148,0.683,149,0.683,150,0.653,151,0.816,152,0.683,153,0.683,154,0.816,155,0.653,156,0.816,157,0.683,158,0.623,159,0.816,160,0.623,161,0.653,162,1.095,163,0.623,164,0.748,165,0.683,166,1.126,167,0.748,168,1.459,169,0.653,170,0.816,171,0.683,172,0.458,173,0.715,174,1.106,175,1.331,176,0.816,177,0.683,178,0.683,179,0.683,180,0.623,181,0.683,182,0.683,183,0.782,184,0.816,185,0.011,186,0.011,240,0.715,262,2.694,266,1.321,282,2.503,286,1.619,575,2.119,701,2.075,922,3.334,1043,3.866,1170,4.23,1559,4.23,1897,3.897,1898,4.411,1923,5.324,1925,5.102,1942,5.597,1944,3.515,1945,7.338,1946,5.457,1947,5.457,1948,6.582,1949,6.582,1950,5.457,1951,4.066,1952,4.066,1953,4.066,1954,4.066,1955,6.582,1956,6.159,1957,4.066,1958,4.066,1959,5.457,1960,5.457,1961,4.066]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.178,177,0.641]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.353,1,0.642,2,0.124,3,0.09,4,0.734,5,0.767,6,0.702,7,0.073,11,0.339,12,0.702,13,0.964,19,0.839,20,0.957,22,0.767,23,1.286,24,1.227,25,0.879,26,0.839,28,0.839,30,0.297,31,0.839,32,1.538,34,0.589,38,1.029,40,1.527,41,0.72,42,0.526,47,0.552,49,0.671,50,0.017,51,0.564,52,0.8,53,0.557,54,1.393,56,0.479,69,0.656,85,0.557,91,0.298,92,0.142,96,0.8,97,0.107,98,0.05,99,1.05,105,1.049,114,0.455,115,1.05,116,1.05,117,1.005,118,1.288,119,0.767,120,1.05,121,0.613,122,0.767,123,0.613,124,0.767,125,0.622,126,0.767,127,0.642,128,0.767,129,0.613,130,0.891,131,1.288,132,0.613,133,0.767,134,0.642,135,1.197,136,0.642,137,1.197,138,0.642,139,1.197,140,0.642,141,0.767,142,0.642,143,0.767,144,0.642,145,0.734,146,0.642,147,0.767,148,0.642,149,0.642,150,0.613,151,0.767,152,0.642,153,0.642,154,0.767,155,0.613,156,0.767,157,0.642,158,0.585,159,0.767,160,0.585,161,0.613,162,1.05,163,0.585,164,0.702,165,0.642,166,1.117,167,0.702,168,1.457,169,0.613,170,0.767,171,0.642,172,0.43,173,0.671,174,0.642,175,1.329,176,0.767,177,1.078,178,0.642,179,0.642,180,0.913,181,0.642,182,0.642,183,0.734,184,0.767,185,0.011,186,0.011,210,2.175,240,1.049,271,1.883,292,1.22,381,1.989,405,1.005,406,1.096,435,1.169,446,2.884,575,2.123,578,2.333,591,2.529,592,3.426,593,3.426,616,2.169,681,1.592,701,1.989,780,2.822,912,1.52,1002,3.102,1347,4.202,1897,3.904,1898,4.419,1899,4.739,1900,3.327,1901,3.907,1902,2.502,1903,4.053,1904,2.884,1907,3.301,1908,2.061,1909,3.301,1929,3.301,1962,5.229,1963,3.818,1964,3.818,1965,3.818]],["title/injectables/WeatherService.html",[759,1.12,1900,1.669]],["body/injectables/WeatherService.html",[0,0.28,2,0.082,3,0.059,7,0.048,11,0.344,30,0.365,31,0.621,32,1.642,34,0.595,41,0.681,42,0.389,47,0.584,49,0.68,50,0.017,51,0.499,52,0.829,53,0.564,54,1.205,56,0.809,59,1.613,64,1.485,65,1.568,69,0.65,71,0.626,75,1.44,78,2.155,85,0.686,91,0.262,92,0.094,96,0.528,97,0.108,98,0.051,99,0.776,100,1.309,101,0.71,105,1.163,125,0.3,130,0.733,166,1.059,172,0.595,180,1.133,185,0.008,186,0.008,217,3.251,219,1.777,220,0.878,229,2.087,231,4.137,240,1.24,261,2.199,265,0.921,266,0.776,271,2.092,283,2.275,293,2.216,295,1.509,323,0.653,330,2.087,381,0.959,403,1.361,405,0.904,406,0.986,407,2.4,408,2.057,409,1.159,434,2.566,435,2.333,446,1.87,452,2.307,476,1.691,486,2.689,491,2.689,494,3.046,496,2.82,497,2.82,498,2.82,499,2.82,500,1.361,575,1.981,591,2.903,594,2.847,596,2.216,615,2.087,616,1.919,667,3.502,681,3.233,759,1.381,768,2.903,769,1.287,770,1.22,823,2.362,905,1.652,907,1.54,910,1.54,911,1.54,912,1.004,913,2.551,914,1.652,915,1.54,916,1.54,922,2.362,925,2.216,929,3.737,930,2.362,931,2.087,932,2.74,934,1.786,935,3.222,945,3.737,946,1.786,948,1.786,949,3.737,951,4.587,952,4.753,954,4.753,955,2.74,956,2.74,1099,2.18,1254,2.087,1363,4.934,1364,4.653,1365,4.653,1766,2.998,1900,1.691,1904,3.32,1966,1.954,1967,4.559,1968,4.559,1969,4.559,1970,4.559,1971,4.559,1972,4.559,1973,4.559,1974,4.917,1975,4.559,1976,4.559,1977,4.559,1978,3.343,1979,4.559,1980,3.867,1981,2.998,1982,2.521,1983,2.998,1984,2.521,1985,2.521,1986,2.521,1987,2.521,1988,2.521,1989,4.998,1990,2.521,1991,2.521,1992,2.521,1993,2.521,1994,4.998,1995,2.521,1996,3.343,1997,2.521,1998,2.521,1999,2.521,2000,2.521,2001,4.653,2002,4.653,2003,2.521,2004,1.954,2005,2.18,2006,3.343,2007,2.18,2008,2.18,2009,2.18,2010,2.18,2011,2.18,2012,2.18,2013,2.18,2014,2.18,2015,2.18,2016,2.18,2017,6.271,2018,2.18,2019,6.271,2020,2.18,2021,6.271,2022,2.18,2023,2.18,2024,2.18,2025,2.18,2026,6.271,2027,4.559,2028,2.18]],["title/components/WeatherSidebarComponent.html",[0,0.178,178,0.641]],["body/components/WeatherSidebarComponent.html",[0,0.346,1,0.524,2,0.101,3,0.073,4,0.599,5,0.626,6,0.574,7,0.059,11,0.553,12,0.574,13,0.954,15,1.433,19,0.727,20,0.857,22,0.626,23,1.269,24,1.211,25,0.762,26,0.727,28,0.727,30,0.242,31,0.727,32,1.468,34,0.511,38,0.941,39,2.769,40,1.395,41,0.702,42,0.456,47,0.571,49,1.179,50,0.017,51,0.682,52,0.867,53,0.978,54,1.304,56,0.391,65,1.954,69,0.718,70,2.132,71,1.125,75,1.388,77,1.649,85,0.779,91,0.288,92,0.116,96,0.654,97,0.087,98,0.041,99,1.25,100,0.774,101,1.503,105,1.031,107,1.78,112,1.872,114,0.371,115,0.91,116,0.91,117,0.871,118,1.177,119,0.626,120,0.91,121,0.5,122,0.626,123,0.5,124,0.626,125,0.54,126,0.626,127,0.524,128,0.626,129,0.5,130,1.06,131,1.177,132,0.5,133,0.626,134,0.524,135,1.072,136,0.524,137,1.072,138,0.524,139,1.072,140,0.524,141,0.626,142,0.524,143,0.626,144,0.524,145,0.599,146,0.524,147,0.626,148,0.524,149,0.524,150,0.5,151,0.626,152,0.524,153,0.524,154,0.626,155,0.5,156,0.626,157,0.524,158,0.477,159,0.626,160,0.477,161,0.941,162,0.91,163,0.477,164,0.574,165,0.524,166,1.138,167,0.574,168,0.982,169,0.5,170,0.626,171,0.524,172,0.602,173,0.548,174,0.524,175,0.762,176,0.626,177,0.524,178,0.985,179,0.524,180,1.157,181,0.524,182,0.524,183,0.599,184,0.626,185,0.011,186,0.009,193,2.446,196,3.84,210,2.115,216,1.448,238,1.388,240,1.351,246,2.991,261,2.709,265,0.742,266,0.626,271,2.016,291,1.591,292,0.996,295,0.712,318,2.043,381,1.186,405,0.871,406,0.95,435,0.955,446,2.583,451,4.866,588,2.991,616,1.942,757,3.499,780,2.446,823,3.581,912,1.241,1002,2.192,1006,3.513,1017,2.97,1076,2.043,1111,2.209,1112,3.513,1113,3.513,1145,2.696,1222,2.043,1679,2.417,1736,2.696,1897,4.001,1900,3.217,1901,3.499,1902,2.043,1904,3.386,1908,1.683,1916,4.616,1922,5.067,1937,4.543,1941,5.252,1978,3.918,1981,3.513,1983,4.543,2029,4.532,2030,6.703,2031,4.532,2032,4.532,2033,5.339,2034,6.703,2035,6.496,2036,4.532,2037,3.118,2038,4.532,2039,3.118,2040,3.118,2041,3.118,2042,4.532,2043,3.118,2044,4.532,2045,3.118,2046,4.532,2047,3.118,2048,3.118,2049,3.118,2050,2.696,2051,2.696,2052,3.118,2053,3.118,2054,3.118,2055,3.118,2056,3.118,2057,4.532,2058,4.532,2059,3.118,2060,3.118,2061,3.118,2062,3.118,2063,3.118]],["title/classes/WeatherStationConfig.html",[98,0.05,1904,1.846]],["body/classes/WeatherStationConfig.html",[0,0.234,2,0.091,3,0.066,7,0.053,11,0.371,30,0.325,31,0.671,32,1.62,34,0.315,41,0.703,42,0.42,47,0.517,49,0.491,50,0.017,51,0.396,52,0.743,53,0.408,54,1.005,56,0.835,59,1.165,64,1.873,65,1.67,69,0.563,71,0.694,75,1.28,78,1.776,91,0.271,92,0.104,96,0.586,97,0.117,98,0.066,99,0.839,100,1.038,101,0.787,105,1.17,125,0.333,130,0.581,166,1.061,172,0.471,180,1.15,185,0.009,186,0.009,217,3.279,219,1.284,220,0.973,229,2.256,231,4.182,240,1.328,261,1.743,271,2.167,283,2.422,293,1.601,295,1.581,323,1.082,330,1.508,381,1.063,403,2.256,405,0.963,406,1.05,407,3.036,408,2.191,409,1.921,434,2.649,435,2.289,446,1.352,452,1.829,476,1.222,486,2.775,491,2.775,494,2.911,496,2.911,497,2.911,498,2.911,499,2.911,500,1.508,575,1.954,591,2.688,594,3.37,596,1.601,615,1.508,616,1.521,667,3.415,681,3.099,759,1.227,768,2.688,769,1.426,770,1.352,823,1.707,905,2.739,907,2.554,910,1.707,911,1.707,912,1.112,913,2.022,914,1.831,915,1.707,916,1.707,922,1.707,925,1.601,929,1.98,930,1.707,931,1.508,932,2.962,934,1.98,935,2.554,945,1.98,946,1.98,948,1.98,949,1.98,951,4.609,952,4.838,954,4.838,955,2.962,956,2.962,1254,1.508,1363,5.047,1364,4.841,1365,4.841,1766,2.166,1900,1.222,1904,3.291,1966,2.166,1967,2.416,1968,2.416,1969,2.416,1970,2.416,1971,2.416,1972,2.416,1973,2.416,1974,3.614,1975,2.416,1976,2.416,1977,2.416,1979,2.416,1981,2.166,1983,2.166,1989,5.371,1994,5.371,1996,2.416,2001,4.309,2002,4.309,2004,2.166,2005,3.614,2006,5.398,2007,2.416,2008,2.416,2009,2.416,2010,2.416,2011,2.416,2012,2.416,2013,2.416,2014,2.416,2015,2.416,2016,2.416,2017,6.383,2018,2.416,2019,6.383,2020,2.416,2021,6.383,2022,2.416,2023,2.416,2024,2.416,2025,2.416,2026,6.383,2027,4.805,2028,2.416,2064,4.18,2065,2.795,2066,2.795,2067,2.795,2068,2.795]],["title/components/WeatherStationSidebarComponent.html",[0,0.178,179,0.641]],["body/components/WeatherStationSidebarComponent.html",[0,0.352,1,0.634,2,0.123,3,0.088,4,0.725,5,0.757,6,0.694,7,0.072,11,0.461,12,0.694,13,0.96,19,0.832,20,0.951,22,0.757,23,1.285,24,1.226,25,0.871,26,0.832,28,0.832,30,0.293,31,0.832,32,1.449,34,0.585,38,1.024,40,1.592,41,0.718,42,0.521,47,0.56,49,0.912,50,0.017,51,0.604,52,0.823,53,0.757,54,1.388,56,0.473,69,0.713,85,0.55,91,0.29,92,0.14,96,0.791,97,0.105,98,0.088,99,1.19,105,1.122,107,1.729,114,0.449,115,1.041,116,1.041,117,0.997,118,1.281,119,0.757,120,1.041,121,0.605,122,0.757,123,0.605,124,0.757,125,0.617,126,0.757,127,0.634,128,0.757,129,0.605,130,0.887,131,1.281,132,0.605,133,0.757,134,0.634,135,1.19,136,0.634,137,1.19,138,0.634,139,1.19,140,0.634,141,0.757,142,0.634,143,0.757,144,0.634,145,0.725,146,0.634,147,0.757,148,0.634,149,0.634,150,0.605,151,0.757,152,0.634,153,0.634,154,0.757,155,0.605,156,0.757,157,0.634,158,0.578,159,0.757,160,0.578,161,0.605,162,1.041,163,0.578,164,0.694,165,0.634,166,1.121,167,0.694,168,1.09,169,0.605,170,0.757,171,0.634,172,0.425,173,0.663,174,0.634,175,0.871,176,0.757,177,0.634,178,0.634,179,1.072,180,1.214,181,0.634,182,0.634,183,0.725,184,0.757,185,0.011,186,0.011,193,2.799,210,2.171,240,1.176,246,2.646,262,2.268,265,0.898,266,0.757,271,1.963,292,1.205,381,1.435,405,0.997,406,1.087,435,1.155,446,2.866,456,3.168,616,2.155,671,4.946,775,4.593,780,2.799,912,1.501,1002,2.508,1017,3.398,1076,2.472,1111,2.673,1112,4.02,1113,4.02,1122,3.261,1124,3.261,1897,3.95,1900,3.321,1901,3.883,1902,2.472,1904,3.235,1908,2.036,1925,5.358,1941,5.184,2050,3.261,2069,5.185,2070,3.772,2071,3.772,2072,3.772,2073,3.772,2074,3.772,2075,3.772]],["title/components/WeatherSummaryComponent.html",[0,0.178,181,0.641]],["body/components/WeatherSummaryComponent.html",[0,0.341,1,0.624,2,0.121,3,0.087,4,0.714,5,0.745,6,0.683,7,0.071,11,0.522,12,0.683,13,1.013,19,0.823,20,0.943,22,0.745,23,1.284,24,1.225,25,0.862,26,0.823,28,0.823,30,0.288,31,0.823,32,1.232,34,0.578,38,1.017,41,0.721,42,0.516,47,0.534,49,1.033,50,0.017,51,0.629,52,0.755,53,0.858,54,1.415,56,0.466,59,2.451,69,0.68,78,2.197,85,0.858,91,0.296,92,0.138,96,0.778,97,0.104,98,0.049,99,1.272,100,1.273,105,1.033,114,0.442,115,1.03,116,1.03,117,0.986,118,1.272,119,0.745,120,1.03,121,0.596,122,0.745,123,0.596,124,0.745,125,0.611,126,0.745,127,0.624,128,0.745,129,0.596,130,0.881,131,1.272,132,0.596,133,0.745,134,0.624,135,1.18,136,0.624,137,1.18,138,0.624,139,1.18,140,0.624,141,0.745,142,0.624,143,0.745,144,0.624,145,0.714,146,0.624,147,0.745,148,0.624,149,0.624,150,0.596,151,0.745,152,0.624,153,0.624,154,0.745,155,0.596,156,0.745,157,0.624,158,0.569,159,0.745,160,0.569,161,0.596,162,1.03,163,0.569,164,0.683,165,0.624,166,1.149,167,0.683,168,1.081,169,0.596,170,0.745,171,0.624,172,0.715,173,0.653,174,0.624,175,0.862,176,0.745,177,0.624,178,0.624,179,0.624,180,0.569,181,1.065,182,0.624,183,0.714,184,0.745,185,0.011,186,0.011,210,2.022,211,3.066,240,1.264,292,1.186,323,1.328,381,1.412,405,0.986,406,1.328,428,2.042,435,1.137,440,3.066,459,3.941,615,3.172,616,2.138,617,3.634,912,1.478,925,2.939,1002,2.481,1117,3.634,1121,3.394,1135,3.634,1137,4.837,1138,3.666,1139,2.769,1140,3.361,1141,3.634,1142,3.361,1143,3.634,1154,2.631,1162,2.631,1168,2.631,1169,3.634,1171,3.976,1172,3.976,1173,2.433,1174,3.21,1175,3.976,1177,3.21,1181,2.878,1605,4.434,1815,3.21,1897,3.805,1900,3.368,1908,2.004,1938,5.465,1989,3.976,1994,3.976,2001,3.976,2002,3.976,2051,3.21,2076,5.129,2077,3.713,2078,3.713,2079,3.713,2080,3.713,2081,3.713,2082,3.713]],["title/components/WikiButtonComponent.html",[0,0.178,182,0.641]],["body/components/WikiButtonComponent.html",[0,0.352,1,0.73,2,0.141,3,0.102,4,0.834,5,0.872,6,0.798,7,0.083,10,3.076,11,0.386,12,1.35,13,0.792,14,3.482,15,2.924,16,3.87,19,0.915,20,1.021,22,0.872,23,1.296,24,1.236,25,0.958,26,0.915,27,4.418,28,0.915,29,4.418,30,0.337,34,0.642,38,1.084,39,3.482,40,1.608,41,0.602,42,0.64,47,0.525,49,0.764,50,0.017,51,0.602,52,0.517,53,0.634,56,0.545,59,2.377,69,0.539,85,0.832,87,4.418,89,3.482,91,0.182,92,0.161,97,0.121,98,0.057,114,0.517,115,1.144,116,1.144,117,1.095,118,1.356,119,0.872,120,1.144,121,0.697,122,0.872,123,0.697,124,0.872,125,0.517,126,0.872,127,0.73,128,0.872,129,0.697,130,0.939,131,1.356,132,0.697,133,0.872,134,0.73,135,1.277,136,0.73,137,1.277,138,0.73,139,1.277,140,0.73,141,0.872,142,0.73,143,0.872,144,0.73,145,0.834,146,0.73,147,0.872,148,0.73,149,0.73,150,0.697,151,0.872,152,0.73,153,0.73,154,0.872,155,0.697,156,0.872,157,0.73,158,0.665,159,0.872,160,0.665,161,0.697,162,1.144,163,0.665,164,0.798,165,0.73,166,1.087,167,0.798,168,1.17,169,0.697,170,0.872,171,0.73,172,0.489,173,0.764,174,0.73,175,0.958,176,0.872,177,0.73,178,0.73,179,0.73,180,0.665,181,0.73,182,1.135,183,1.472,184,0.872,185,0.012,186,0.012,216,1.821,220,2.555,240,1.002,378,5.438,405,1.095,406,1.195,430,3.646,1296,3.076,2083,6.064,2084,5.699,2085,5.699,2086,4.342,2087,4.342,2088,5.699,2089,5.699,2090,4.342,2091,5.699,2092,4.342,2093,4.342]],["title/coverage.html",[2094,4.518]],["body/coverage.html",[0,0.373,1,0.623,7,0.071,8,4.871,9,2.874,10,4.16,33,1.704,41,0.351,50,0.017,52,0.441,98,0.095,121,0.595,123,0.595,125,0.441,127,0.623,129,0.595,132,0.595,134,0.623,136,0.623,138,0.623,140,0.623,142,0.623,144,0.623,146,0.623,148,0.623,149,0.623,152,0.623,155,0.595,157,0.623,158,0.568,160,0.568,163,0.568,165,0.623,167,0.942,168,1.264,169,0.595,171,0.623,172,0.578,173,0.652,174,0.623,175,1.065,177,0.623,178,0.623,179,0.623,180,0.785,181,0.623,182,0.623,185,0.01,186,0.01,187,3.205,210,1.044,282,2.233,295,0.846,377,2.874,378,2.874,379,4.16,391,2.874,412,2.874,430,2.001,440,1.793,573,2.627,574,4.061,575,2.069,576,3.63,577,3.63,578,4.061,589,1.704,666,3.972,681,1.546,704,4.43,705,2.874,706,3.205,747,2.627,748,4.552,759,2.108,771,2.627,903,2.124,904,3.972,912,1.476,913,1.793,916,2.265,917,2.874,976,3.205,989,2.874,990,4.43,997,2.265,1009,5.203,1024,6.272,1025,3.205,1093,2.874,1097,2.874,1111,4.16,1121,1.892,1168,4.16,1184,3.205,1259,3.205,1268,2.627,1277,2.874,1289,3.205,1294,2.265,1295,3.205,1322,2.627,1345,2.874,1346,3.205,1367,3.205,1368,3.205,1397,4.552,1453,3.205,1480,3.205,1512,3.205,1524,3.205,1535,3.205,1536,3.205,1602,3.205,1603,2.874,1604,3.205,1610,3.205,1627,3.205,1655,2.627,1657,3.205,1667,3.972,1702,2.627,1716,2.265,1737,3.205,1752,3.205,1753,3.972,1785,6.092,1854,2.874,1897,3.876,1898,3.87,1899,3.848,1900,1.622,1904,1.793,1910,3.205,1938,2.874,1939,3.205,1941,3.63,1942,2.874,1944,3.205,1966,3.972,2004,2.874,2083,3.205,2094,3.205,2095,3.205,2096,5.124,2097,5.124,2098,3.708,2099,5.124,2100,6.648,2101,5.124,2102,3.708,2103,5.124,2104,3.708,2105,3.708,2106,3.708,2107,3.708,2108,3.708,2109,3.708,2110,3.708,2111,5.872,2112,3.708,2113,5.124,2114,3.708,2115,3.708,2116,3.708,2117,3.708,2118,5.124,2119,3.708,2120,3.708,2121,5.124,2122,3.708,2123,3.708,2124,3.708,2125,3.708,2126,3.708,2127,6.334,2128,3.708,2129,7.915,2130,5.872,2131,3.708,2132,7.047,2133,3.708,2134,3.708,2135,3.708,2136,3.708,2137,3.708,2138,6.334,2139,3.708,2140,3.708,2141,5.872,2142,3.708,2143,3.708,2144,3.708,2145,3.708,2146,3.708,2147,6.875,2148,3.708,2149,3.708,2150,3.708,2151,3.708,2152,3.708,2153,6.648,2154,3.708,2155,3.708,2156,3.708,2157,3.708,2158,5.124,2159,3.708,2160,3.708,2161,3.708,2162,3.708,2163,3.708,2164,3.708,2165,3.708,2166,3.708,2167,3.708,2168,3.708,2169,5.124,2170,3.708,2171,3.708,2172,3.708,2173,3.708,2174,3.708,2175,3.708,2176,3.708,2177,3.708]],["title/dependencies.html",[356,1.532,2178,3.178]],["body/dependencies.html",[50,0.017,92,0.211,95,2.893,185,0.014,186,0.014,223,3.06,290,3.249,291,3.436,356,1.89,358,2.946,373,2.606,413,4.395,770,3.257,1222,3.715,1225,5.09,1226,4.772,1276,4.901,1451,4.901,1452,4.395,1718,4.017,1937,4.395,2179,5.67,2180,7.925,2181,5.67,2182,6.735,2183,5.67,2184,6.735,2185,5.67,2186,5.67,2187,4.901,2188,5.67,2189,5.67,2190,5.67,2191,5.67,2192,5.67,2193,5.67,2194,5.67,2195,5.67,2196,5.67,2197,5.67,2198,5.67,2199,5.67,2200,5.67,2201,5.67,2202,5.67,2203,5.67,2204,5.67,2205,6.735,2206,4.901,2207,5.67,2208,5.67]],["title/miscellaneous/enumerations.html",[2209,2.747,2210,3.972]],["body/miscellaneous/enumerations.html",[30,0.452,41,0.55,50,0.014,78,1.858,185,0.014,186,0.014,217,3.028,245,3.332,261,3.028,266,1.628,282,2.762,286,2.89,391,4.508,394,4.12,421,3.306,423,4.843,434,2.315,482,4.12,483,4.479,484,5.027,485,4.843,486,2.425,487,5.299,488,4.508,489,5.027,490,3.81,491,2.425,492,4.508,493,6.277,494,2.544,495,3.81,496,2.544,497,2.544,498,2.544,499,2.544,2209,5.027,2210,5.027,2211,7.261]],["title/index.html",[30,0.247,293,1.821,1862,2.464]],["body/index.html",[0,0.325,3,0.123,7,0.1,13,0.966,24,0.805,50,0.013,51,0.498,60,2.838,77,2.341,79,4.989,185,0.013,186,0.013,205,3.726,225,3.912,238,2.219,260,3.446,276,2.544,283,2.544,295,1.2,336,4.076,338,3.726,349,3.446,369,2.3,385,3.022,405,1.429,416,4.152,427,3.013,430,3.912,456,3.213,492,4.076,693,3.213,701,2,779,5.391,919,3.446,1016,3.726,1129,4.076,1167,3.726,1397,4.076,1611,4.546,1624,4.546,1718,4.56,1840,6.427,1854,4.076,2187,6.622,2212,5.259,2213,6.955,2214,7.247,2215,5.563,2216,5.259,2217,6.436,2218,5.259,2219,4.546,2220,5.259,2221,5.259,2222,5.259,2223,5.259,2224,5.259,2225,5.259,2226,5.259,2227,5.259,2228,6.539,2229,4.546,2230,5.259,2231,6.436,2232,7.434,2233,6.955,2234,6.436,2235,5.259,2236,5.259,2237,4.546,2238,5.259,2239,6.736,2240,5.259,2241,5.259,2242,5.259,2243,5.259,2244,5.259,2245,5.259,2246,5.259,2247,5.259,2248,5.259,2249,5.259,2250,5.259,2251,5.259,2252,6.436,2253,6.436,2254,5.259,2255,7.247,2256,5.259,2257,5.259,2258,5.259,2259,5.259,2260,5.259]],["title/license.html",[293,1.821,1862,2.464,2261,2.747]],["body/license.html",[3,0.165,4,0.651,7,0.092,13,1.028,15,1.556,32,1.551,47,0.434,49,0.596,50,0.01,53,0.816,58,2.454,63,3.928,64,1.88,67,2.812,77,1.749,98,0.045,105,1.208,117,0.651,150,0.897,172,0.686,185,0.01,186,0.01,188,2.069,195,3.664,221,2.499,224,3.204,227,4.982,233,3.204,238,1.037,255,3.151,256,2.069,261,1.412,282,1.829,286,1.914,295,1.276,323,0.877,336,4.984,341,2.399,345,3.962,348,3.928,349,2.219,350,2.928,394,2.399,416,4.198,423,3.407,427,1.94,430,3.286,439,2.625,446,1.638,450,4.335,451,5.242,456,4.363,460,2.219,462,2.219,476,1.481,483,2.219,485,4.974,487,3.728,488,2.625,490,3.989,617,2.399,707,3.407,780,1.828,781,5.442,785,3.728,823,2.069,850,2.625,863,3.728,873,2.625,879,4.335,1023,4.719,1129,5.68,1139,2.596,1140,4.213,1452,2.625,1538,4.157,1586,2.928,1590,2.928,1595,2.625,1639,2.625,1715,2.625,1716,3.416,1911,4.157,2095,2.928,2206,2.928,2215,6.857,2219,6.261,2228,5.262,2229,2.928,2237,6.891,2239,2.928,2261,6.775,2262,7.757,2263,7.142,2264,3.387,2265,3.387,2266,4.809,2267,5.592,2268,4.809,2269,6.087,2270,6.087,2271,6.087,2272,3.387,2273,3.387,2274,3.387,2275,4.809,2276,3.387,2277,3.387,2278,3.387,2279,6.087,2280,7.021,2281,4.809,2282,3.387,2283,5.592,2284,4.809,2285,4.809,2286,3.387,2287,7.243,2288,6.429,2289,7.838,2290,3.387,2291,7.779,2292,4.809,2293,4.809,2294,3.387,2295,3.387,2296,5.592,2297,3.387,2298,3.387,2299,5.592,2300,4.809,2301,4.809,2302,4.809,2303,3.387,2304,4.809,2305,3.387,2306,3.387,2307,3.387,2308,3.387,2309,6.679,2310,7.243,2311,3.387,2312,3.387,2313,5.592,2314,6.87,2315,4.809,2316,3.387,2317,3.387,2318,3.387,2319,3.387,2320,3.387,2321,3.387,2322,3.387,2323,3.387,2324,3.387,2325,3.387,2326,6.429,2327,3.387,2328,6.679,2329,5.592,2330,3.387,2331,3.387,2332,3.387,2333,3.387,2334,3.387,2335,3.387,2336,3.387,2337,3.387,2338,5.592,2339,5.592,2340,6.679,2341,6.429,2342,4.809,2343,3.387,2344,3.387,2345,3.387,2346,3.387,2347,3.387,2348,3.387,2349,3.387,2350,4.809,2351,5.592,2352,4.809,2353,4.809,2354,4.809,2355,4.809,2356,4.809,2357,3.387,2358,3.387,2359,3.387,2360,3.387,2361,3.387,2362,3.387,2363,3.387,2364,3.387,2365,4.809,2366,3.387,2367,4.809,2368,3.387,2369,4.809,2370,6.087,2371,3.387,2372,3.387,2373,3.387,2374,3.387,2375,3.387,2376,3.387,2377,3.387,2378,3.387,2379,4.809,2380,3.387,2381,3.387,2382,3.387,2383,3.387,2384,3.387,2385,3.387,2386,3.387,2387,3.387]],["title/modules.html",[354,1.193]],["body/modules.html",[50,0.014,185,0.014,186,0.014,354,1.351,355,3.194,364,2.72,365,2.72,366,2.72,1016,4.193,1048,6.891,1083,3.616,1089,3.391,1226,5.648,1246,4.193,1251,3.616,1252,3.878,1253,3.878,1254,3.194,2388,7.972,2389,8,2390,5.918]],["title/overview.html",[153,0.878]],["body/overview.html",[0,0.173,1,1.184,33,2.695,50,0.017,97,0.103,98,0.049,114,0.44,121,1.13,123,0.941,125,0.838,127,1.184,129,0.941,132,0.941,134,0.986,136,0.986,138,1.184,140,1.184,142,1.184,144,1.184,146,0.986,148,1.184,149,0.986,152,1.184,153,0.622,155,1.13,157,1.184,158,1.078,160,1.078,163,1.078,165,0.986,169,0.941,171,0.986,173,1.031,174,0.986,177,0.986,178,0.986,179,0.986,181,1.184,182,1.184,185,0.01,186,0.01,210,1.651,221,1.346,286,1.473,354,1.168,355,4.313,356,1.233,357,1.618,358,1.618,359,3.198,360,3.198,361,3.198,362,3.198,363,3.198,364,3.551,365,3.349,366,3.607,367,2.351,368,1.7,369,1.618,567,4.423,589,2.695,759,1.086,913,2.837,997,3.583,1083,4.826,1084,3.198,1085,3.198,1086,3.198,1087,3.198,1088,3.198,1089,4.226,1121,2.993,1246,5.616,1247,3.198,1248,3.198,1249,3.198,1250,3.198,1251,4.552,1252,5.13,1253,4.991,1254,4.322,1294,3.583,1332,3.198,1333,3.198,1340,3.198,1341,3.198,1343,3.198,1517,3.198,1518,3.198,1519,3.198,1520,3.198,1618,3.198,1619,3.198,1621,3.198,1645,3.198,1646,3.198,1648,3.198,1716,2.26,1778,3.198,1779,3.198,1781,3.198,1900,2.566,1930,3.198,1931,3.198,1933,3.198,1934,3.198,2391,3.7,2392,3.7]]],"invertedIndex":[["",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":282,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.8.26",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["0.svg",{"_index":1499,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["0/1",{"_index":2103,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2110,"title":{},"body":{"coverage.html":{}}}],["0:15:00",{"_index":1703,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["0:30:00",{"_index":1707,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["1",{"_index":286,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1.0",{"_index":1533,"title":{},"body":{"injectables/MapService.html":{}}}],["1.1.8",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2216,"title":{},"body":{"index.html":{}}}],["1.svg",{"_index":1501,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2107,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":600,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["10/10",{"_index":2113,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1024,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["11",{"_index":2391,"title":{},"body":{"overview.html":{}}}],["11.1.3",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":568,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["12:00:00",{"_index":1713,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["15",{"_index":1705,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["16",{"_index":569,"title":{},"body":{"classes/Alarm.html":{}}}],["17",{"_index":570,"title":{},"body":{"classes/Alarm.html":{}}}],["18",{"_index":571,"title":{},"body":{"classes/Alarm.html":{}}}],["18/18",{"_index":2112,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":2171,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":572,"title":{},"body":{"classes/Alarm.html":{}}}],["19/22",{"_index":2106,"title":{},"body":{"coverage.html":{}}}],["19/24",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["1:00:00",{"_index":1709,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["2",{"_index":483,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.0.8",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["2.svg",{"_index":1503,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":716,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["20/20",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["20/28",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1551,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["20000",{"_index":2061,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["2007",{"_index":2266,"title":{},"body":{"license.html":{}}}],["21",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["21/25",{"_index":2109,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":2125,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1025,"title":{},"body":{"components/AntennasMapComponent.html":{},"coverage.html":{}}}],["27/27",{"_index":2098,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":2264,"title":{},"body":{"license.html":{}}}],["2:00:00",{"_index":1711,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["3",{"_index":485,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0.0",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1505,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/14",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":2100,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1708,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["300",{"_index":1550,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["32",{"_index":2392,"title":{},"body":{"overview.html":{}}}],["4",{"_index":487,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.1",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":1507,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":2099,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1549,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["42",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["4d0",{"_index":2363,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":2364,"title":{},"body":{"license.html":{}}}],["5",{"_index":488,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/11",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":2111,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1552,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["500",{"_index":1548,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["55",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":490,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.0.0",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1547,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["69",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["6:00:00",{"_index":1712,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["7",{"_index":492,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["7/7",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1546,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["71",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["79",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":567,"title":{},"body":{"classes/Alarm.html":{},"overview.html":{}}}],["8/10",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2097,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1545,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["83",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":2108,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":2105,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["9/13",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1544,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["94",{"_index":2170,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":831,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":2093,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getalarmstatusord",{"_index":397,"title":{},"body":{"classes/Alarm.html":{}}}],["_getalarmstatusorder(valu",{"_index":436,"title":{},"body":{"classes/Alarm.html":{}}}],["_getalarmstatustagsstr",{"_index":398,"title":{},"body":{"classes/Alarm.html":{}}}],["_getsubtree(alarm",{"_index":841,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initi",{"_index":929,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["_nodedata",{"_index":832,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":833,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":836,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_setfilteractiv",{"_index":1788,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["a001",{"_index":2009,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a002",{"_index":2010,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a003",{"_index":2011,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["a100",{"_index":1555,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a400",{"_index":1554,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a700",{"_index":1553,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accent",{"_index":1556,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accept",{"_index":2385,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":462,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["accompani",{"_index":2341,"title":{},"body":{"license.html":{}}}],["accord",{"_index":273,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{}}}],["ack",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'nam",{"_index":122,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack.component.html",{"_index":191,"title":{},"body":{"components/AckComponent.html":{}}}],["ack.component.scss",{"_index":190,"title":{},"body":{"components/AckComponent.html":{}}}],["ack/ack.compon",{"_index":374,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcompon",{"_index":121,"title":{"components/AckComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":777,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledg",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1284,"title":{},"body":{"modules/AppModule.html":{}}}],["acknowledge/unacknowledg",{"_index":269,"title":{},"body":{"components/AckComponent.html":{}}}],["acknowledgedalarm",{"_index":192,"title":{},"body":{"components/AckComponent.html":{}}}],["acktre",{"_index":322,"title":{},"body":{"components/AckComponent.html":{}}}],["acktreecompon",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/HttpClientService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions/ack/ack.compon",{"_index":1271,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/actions.modul",{"_index":1260,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.compon",{"_index":1272,"title":{},"body":{"modules/AppModule.html":{}}}],["actions/sidenav.servic",{"_index":1223,"title":{},"body":{"components/AppComponent.html":{}}}],["actionsmodul",{"_index":355,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1187,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservic",{"_index":1188,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":1571,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/TabularViewComponent.html":{}}}],["activatedrout",{"_index":212,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["actual",{"_index":1717,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["actual_compon",{"_index":184,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ad",{"_index":1394,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["add",{"_index":1728,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["addit",{"_index":2283,"title":{},"body":{"license.html":{}}}],["address",{"_index":2375,"title":{},"body":{"license.html":{}}}],["addsvgicon",{"_index":1232,"title":{},"body":{"components/AppComponent.html":{}}}],["administr",{"_index":344,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["again",{"_index":340,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["agil",{"_index":1587,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["alarm",{"_index":41,"title":{"classes/Alarm.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'nam",{"_index":126,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.component.html",{"_index":669,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":668,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.depend",{"_index":844,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.length",{"_index":842,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.descript",{"_index":1896,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.mod",{"_index":528,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.nam",{"_index":1892,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.operationalmod",{"_index":1893,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.servic",{"_index":1337,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.state_change_timestamp",{"_index":480,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.timestamp",{"_index":1895,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.valu",{"_index":530,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm/alarm.compon",{"_index":1654,"title":{},"body":{"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":346,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["alarm?.descript",{"_index":347,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["alarm_id",{"_index":193,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["alarm_typ",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["alarmcolorsset",{"_index":573,"title":{"classes/AlarmColorsSet.html":{}},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"coverage.html":{}}}],["alarmcompon",{"_index":125,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmconfig",{"_index":1146,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmconfig.placemark",{"_index":1161,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmheadercompon",{"_index":127,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":1756,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":1757,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":1758,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":1347,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":681,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["alarmitemflatnod",{"_index":747,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":771,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":890,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmnam",{"_index":733,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.length",{"_index":735,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.substring(0",{"_index":737,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmnamemaxs",{"_index":711,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarms_d",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["alarmsconfig",{"_index":993,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["alarmservic",{"_index":210,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservicesubscript",{"_index":1789,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarmstoack",{"_index":194,"title":{},"body":{"components/AckComponent.html":{}}}],["alarmstoackfromselect",{"_index":776,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":1759,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmvalid",{"_index":463,"title":{},"body":{"classes/Alarm.html":{}}}],["alarmvalu",{"_index":466,"title":{},"body":{"classes/Alarm.html":{}}}],["allow",{"_index":2278,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":617,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":2304,"title":{},"body":{"license.html":{}}}],["angular",{"_index":225,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"index.html":{}}}],["angular/anim",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collect",{"_index":761,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["angular/cdk/tre",{"_index":763,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":2236,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":373,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1336,"title":{},"body":{"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1451,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":290,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1276,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":1222,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1428,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1431,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1438,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expans",{"_index":1446,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":1440,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1224,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1416,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1435,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1418,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1420,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":1442,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1433,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1422,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":1448,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1424,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1426,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1444,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":766,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/AppModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["anoth",{"_index":2088,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":130,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna'",{"_index":1128,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antenna.svg",{"_index":1237,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclick",{"_index":1119,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig",{"_index":903,"title":{"classes/AntennaConfig.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["antennaconfig.antenna",{"_index":1157,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig.placemark",{"_index":1081,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":927,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":928,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennamarkercompon",{"_index":129,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas'},{'nam",{"_index":133,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":978,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":977,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.join",{"_index":2053,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["antennas.servic",{"_index":987,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.compon",{"_index":1091,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.modul",{"_index":1265,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.servic",{"_index":590,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.compon",{"_index":1274,"title":{},"body":{"modules/AppModule.html":{}}}],["antennascompon",{"_index":132,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":921,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmapcompon",{"_index":134,"title":{"components/AntennasMapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapnam",{"_index":923,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmodul",{"_index":1083,"title":{"modules/AntennasModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservic",{"_index":589,"title":{"injectables/AntennasService.html":{}},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasset",{"_index":917,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":924,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennassidebarcompon",{"_index":136,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycompon",{"_index":138,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":926,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.compon",{"_index":1266,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1186,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1185,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1256,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":140,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1139,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":227,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["application/json",{"_index":1405,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["applyfilt",{"_index":1796,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["applyfilter(filt",{"_index":1801,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["appmodul",{"_index":1246,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":1279,"title":{},"body":{"modules/AppModule.html":{}}}],["argument",{"_index":2316,"title":{},"body":{"license.html":{}}}],["array",{"_index":1170,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["arrayoffilt",{"_index":1881,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.indexof(this.filtervalueforsetalarm",{"_index":1883,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.splice(indexofset",{"_index":1891,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["artifact",{"_index":2246,"title":{},"body":{"index.html":{}}}],["asalarm",{"_index":400,"title":{},"body":{"classes/Alarm.html":{}}}],["asalarm(json",{"_index":448,"title":{},"body":{"classes/Alarm.html":{}}}],["asc",{"_index":1863,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["asiasio",{"_index":1459,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1467,"title":{},"body":{"classes/Iasio.html":{}}}],["asset",{"_index":912,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icon",{"_index":951,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["assets/img/ia",{"_index":1234,"title":{},"body":{"components/AppComponent.html":{}}}],["associ",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["asterisc",{"_index":1729,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["attribut",{"_index":407,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["author",{"_index":2387,"title":{},"body":{"license.html":{}}}],["automat",{"_index":2243,"title":{},"body":{"index.html":{}}}],["auxiliari",{"_index":840,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["avail",{"_index":1016,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{},"index.html":{},"modules.html":{}}}],["axi",{"_index":603,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":2326,"title":{},"body":{"license.html":{}}}],["backendurl",{"_index":916,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["backendurls.antennas_summari",{"_index":942,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":937,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.cdb_ia",{"_index":1316,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":946,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["background",{"_index":1558,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["backup",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["badg",{"_index":684,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":1449,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["base",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":1572,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["be",{"_index":256,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["becom",{"_index":1821,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["befor",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":769,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(fals",{"_index":1038,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/CdbService.html":{}}}],["below",{"_index":2285,"title":{},"body":{"license.html":{}}}],["besid",{"_index":687,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["beta.17",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["bind",{"_index":1822,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["block",{"_index":257,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["boolean",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["bootstrap",{"_index":358,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":612,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolor",{"_index":613,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstous",{"_index":628,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.clear",{"_index":647,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.mainten",{"_index":643,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_crit",{"_index":659,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_high",{"_index":656,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_low",{"_index":650,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.set_medium",{"_index":653,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.shelv",{"_index":635,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorstouse.unknown",{"_index":639,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["bordercolorsunreli",{"_index":614,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["both",{"_index":1911,"title":{},"body":{"components/WeatherComponent.html":{},"license.html":{}}}],["bound",{"_index":2312,"title":{},"body":{"license.html":{}}}],["box",{"_index":1816,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["branch",{"_index":2227,"title":{},"body":{"index.html":{}}}],["bred",{"_index":1593,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["breed",{"_index":1579,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["broadcastfactor",{"_index":1311,"title":{},"body":{"injectables/CdbService.html":{}}}],["brows",{"_index":2389,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1414,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":1413,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browsermodul",{"_index":1257,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":1651,"title":{},"body":{"modules/SharedModule.html":{}}}],["build",{"_index":405,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":852,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["built",{"_index":1127,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["button",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":376,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":2084,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:20",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2086,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:28",{"_index":2087,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:29",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:30",{"_index":1666,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:38",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:39",{"_index":1664,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:45",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:46",{"_index":1663,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:54",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:55",{"_index":1659,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:66",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:70",{"_index":1662,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:73",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:77",{"_index":1665,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":377,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":378,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons'},{'nam",{"_index":143,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1290,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1291,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.compon",{"_index":390,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscompon",{"_index":142,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":2268,"title":{},"body":{"license.html":{}}}],["call",{"_index":476,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["canacknowledg",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["cancel",{"_index":353,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["canclos",{"_index":1738,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":1672,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["card",{"_index":1560,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card'},{'nam",{"_index":154,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":1626,"title":{},"body":{"modules/OverviewModule.html":{}}}],["card.component.html",{"_index":1607,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":1606,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":1604,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1608,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:18",{"_index":1609,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card/overview",{"_index":1603,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["case",{"_index":719,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["cdb.servic",{"_index":1338,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservic",{"_index":1294,"title":{"injectables/CdbService.html":{}},"body":{"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cento",{"_index":2220,"title":{},"body":{"index.html":{}}}],["central",{"_index":1628,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":2378,"title":{},"body":{"license.html":{}}}],["chang",{"_index":427,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"index.html":{},"license.html":{}}}],["changeselectedst",{"_index":1917,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedst",{"_index":1919,"title":{},"body":{"components/WeatherComponent.html":{}}}],["channel",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["charact",{"_index":717,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["check",{"_index":276,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"classes/Iasio.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["checkbox",{"_index":772,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":795,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":796,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chevron_left",{"_index":1163,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":263,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm",{"_index":845,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":843,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":235,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chip",{"_index":1564,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["choic",{"_index":2329,"title":{},"body":{"license.html":{}}}],["choos",{"_index":2379,"title":{},"body":{"license.html":{}}}],["class",{"_index":98,"title":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"classes/Iasio.html":{},"classes/WeatherStationConfig.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["class=\"sect",{"_index":352,"title":{},"body":{"components/AckComponent.html":{}}}],["clean",{"_index":251,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["clear",{"_index":434,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["clear.svg",{"_index":952,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["clear_invalid",{"_index":1483,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":1484,"title":{},"body":{"components/LegendComponent.html":{}}}],["clearfilt",{"_index":1797,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["cli",{"_index":2214,"title":{},"body":{"index.html":{}}}],["click",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["clickedantennamark",{"_index":1007,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["client",{"_index":1369,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":915,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["client.service.t",{"_index":1368,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:13",{"_index":1377,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:22",{"_index":1384,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:32",{"_index":1382,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:48",{"_index":1388,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:63",{"_index":1390,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:77",{"_index":1379,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:91",{"_index":1392,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":1937,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["clipboardmodul",{"_index":1936,"title":{},"body":{"modules/WeatherModule.html":{}}}],["clipboardservic",{"_index":2034,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["close",{"_index":245,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_actionsmodul",{"_index":359,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declar",{"_index":360,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_export",{"_index":362,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_import",{"_index":361,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_provid",{"_index":363,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodul",{"_index":1084,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declar",{"_index":1085,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_export",{"_index":1087,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_import",{"_index":1086,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_provid",{"_index":1088,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":1247,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1250,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":1248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":1249,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1332,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1333,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1340,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1341,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1343,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1342,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodul",{"_index":1517,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":1518,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":1519,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_provid",{"_index":1520,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_overviewmodul",{"_index":1618,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":1619,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":1621,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":1620,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":1645,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1646,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1648,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1647,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":1778,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":1779,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":1781,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":1780,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":1930,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":1931,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":1933,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":1932,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_provid",{"_index":1934,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":1129,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collectionview",{"_index":1853,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["color",{"_index":579,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["column",{"_index":442,"title":{},"body":{"classes/Alarm.html":{}}}],["combin",{"_index":2291,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":372,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["compar",{"_index":1838,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["compat",{"_index":2206,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["complement",{"_index":1197,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc",{"_index":2258,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["comput",{"_index":2358,"title":{},"body":{"license.html":{}}}],["concern",{"_index":2376,"title":{},"body":{"license.html":{}}}],["condit",{"_index":2281,"title":{},"body":{"license.html":{}}}],["config",{"_index":1903,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["configur",{"_index":616,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connector",{"_index":1945,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'nam",{"_index":176,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.compon",{"_index":1943,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":1947,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":1946,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.t",{"_index":1944,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:11",{"_index":1951,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:14",{"_index":1952,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:17",{"_index":1950,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:21",{"_index":1954,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:24",{"_index":1953,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weath",{"_index":1942,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["consid",{"_index":2229,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1399,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.log('error",{"_index":319,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["console.log('http",{"_index":1403,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["const",{"_index":101,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservic",{"_index":1173,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["constructor(antennasservic",{"_index":1120,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attribut",{"_index":403,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor(formbuild",{"_index":208,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{}}}],["constructor(http",{"_index":1376,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["constructor(httpcli",{"_index":1099,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["constructor(httpclientservic",{"_index":1302,"title":{},"body":{"injectables/CdbService.html":{}}}],["constructor(priv",{"_index":799,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":1633,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(servic",{"_index":959,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{}}}],["constructor(sidenavservic",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservic",{"_index":1902,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["contact",{"_index":343,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["contain",{"_index":323,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["content",{"_index":834,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{}}}],["contract",{"_index":1205,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":787,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["convert",{"_index":453,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":2310,"title":{},"body":{"license.html":{}}}],["coord",{"_index":1949,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":1959,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":1960,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordin",{"_index":922,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["cope",{"_index":1588,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["copi",{"_index":451,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["copyantenna",{"_index":2031,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyantennas(st",{"_index":2038,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyright",{"_index":2267,"title":{},"body":{"license.html":{}}}],["core",{"_index":413,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":392,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{}}}],["core_id'",{"_index":418,"title":{},"body":{"classes/Alarm.html":{}}}],["core_timestamp",{"_index":393,"title":{},"body":{"classes/Alarm.html":{}}}],["correspond",{"_index":456,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["coulmn",{"_index":1831,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["count",{"_index":332,"title":{},"body":{"components/AckComponent.html":{}}}],["counter",{"_index":1956,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["cover",{"_index":2288,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":2094,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":409,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["critic",{"_index":562,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["critical.svg",{"_index":954,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["crud",{"_index":1370,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["current",{"_index":693,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"index.html":{}}}],["custom",{"_index":1199,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["cx",{"_index":604,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":606,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["d",{"_index":2349,"title":{},"body":{"license.html":{}}}],["darkcyan",{"_index":665,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["dash",{"_index":1763,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":172,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data.push(nod",{"_index":860,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data.tostringforfiltering().tolowercas",{"_index":1833,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["data/alarm",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":292,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/data.modul",{"_index":388,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":914,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["data/iasio",{"_index":1323,"title":{},"body":{"injectables/CdbService.html":{}}}],["data/routing.servic",{"_index":1154,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["databas",{"_index":514,"title":{},"body":{"classes/Alarm.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodul",{"_index":364,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":794,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["datastr",{"_index":1832,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datastr.indexof(filt",{"_index":1835,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["date",{"_index":479,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["date(t",{"_index":539,"title":{},"body":{"classes/Alarm.html":{}}}],["dateformat",{"_index":1790,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datepip",{"_index":1259,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["deactiv",{"_index":1885,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["debug",{"_index":2347,"title":{},"body":{"license.html":{}}}],["decid",{"_index":2381,"title":{},"body":{"license.html":{}}}],["declar",{"_index":357,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1207,"title":{},"body":{"components/AppComponent.html":{},"components/TabularViewComponent.html":{}}}],["deem",{"_index":2295,"title":{},"body":{"license.html":{}}}],["default",{"_index":265,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":1670,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["defin",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["definealarmcolor",{"_index":618,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["definealarmsandicon",{"_index":1350,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":1760,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["definit",{"_index":1715,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["defit",{"_index":1049,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["degrad",{"_index":489,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["delet",{"_index":1371,"title":{},"body":{"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["delete(url",{"_index":1378,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1401,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deped",{"_index":1684,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["depend",{"_index":356,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":874,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":877,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":887,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":875,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":880,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describ",{"_index":595,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destroy",{"_index":306,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":2374,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2241,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2218,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1561,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dictionari",{"_index":408,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["differ",{"_index":2373,"title":{},"body":{"license.html":{}}}],["direct",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":2245,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2248,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["disableacknowledg",{"_index":199,"title":{},"body":{"components/AckComponent.html":{}}}],["dispay",{"_index":1786,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["display",{"_index":238,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":2225,"title":{},"body":{"index.html":{}}}],["displayedcolumn",{"_index":1791,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["dist",{"_index":2247,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":1583,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["distinguish",{"_index":2377,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":2276,"title":{},"body":{"license.html":{}}}],["divid",{"_index":1566,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["django",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["doc_url",{"_index":1455,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":430,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":1578,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanit",{"_index":1195,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":1679,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["doubl",{"_index":1463,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":596,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["durat",{"_index":1736,"title":{},"body":{"components/ShelveComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["dure",{"_index":2348,"title":{},"body":{"license.html":{}}}],["dy",{"_index":1532,"title":{},"body":{"injectables/MapService.html":{}}}],["dynam",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2360,"title":{},"body":{"license.html":{}}}],["e2",{"_index":2256,"title":{},"body":{"index.html":{}}}],["each",{"_index":1023,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/OverviewModule.html":{},"license.html":{}}}],["effect",{"_index":2343,"title":{},"body":{"license.html":{}}}],["effort",{"_index":2320,"title":{},"body":{"license.html":{}}}],["element",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["emit",{"_index":985,"title":{},"body":{"components/AntennasComponent.html":{}}}],["empti",{"_index":1805,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["end",{"_index":2255,"title":{},"body":{"index.html":{}}}],["engin",{"_index":2346,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2321,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":1653,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":481,"title":{},"body":{"classes/Alarm.html":{}}}],["enumer",{"_index":2210,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1397,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":1410,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environments/environ",{"_index":1398,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["error",{"_index":318,"title":{},"body":{"components/AckComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["escap",{"_index":1817,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["etc",{"_index":1464,"title":{},"body":{"classes/Iasio.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["event",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["event.key",{"_index":1876,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["eventemitt",{"_index":757,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["everyon",{"_index":2274,"title":{},"body":{"license.html":{}}}],["everytim",{"_index":815,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["exampl",{"_index":1652,"title":{},"body":{"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["except",{"_index":2308,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":2301,"title":{},"body":{"license.html":{}}}],["execut",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["existsplacemarkdata",{"_index":1001,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["existsplacemarkdata(placemark",{"_index":1013,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["expand",{"_index":752,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":788,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expectedfilteredtablerow",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["expectedtablerow",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":2102,"title":{},"body":{"coverage.html":{}}}],["explain",{"_index":2368,"title":{},"body":{"license.html":{}}}],["export",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extent",{"_index":2361,"title":{},"body":{"license.html":{}}}],["extern",{"_index":1010,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["fab",{"_index":1574,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["facil",{"_index":2314,"title":{},"body":{"license.html":{}}}],["factor",{"_index":1309,"title":{},"body":{"injectables/CdbService.html":{}}}],["fail",{"_index":288,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["faith",{"_index":2319,"title":{},"body":{"license.html":{}}}],["fals",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["favorit",{"_index":1573,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["fewer",{"_index":2335,"title":{},"body":{"license.html":{}}}],["field",{"_index":277,"title":{},"body":{"components/AckComponent.html":{},"modules/IasMaterialModule.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":609,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolor",{"_index":610,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstous",{"_index":626,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.clear",{"_index":646,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.mainten",{"_index":642,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_crit",{"_index":658,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_high",{"_index":655,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_low",{"_index":649,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.set_medium",{"_index":652,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.shelv",{"_index":634,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorstouse.unknown",{"_index":638,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["fillcolorsunreli",{"_index":611,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["filter",{"_index":459,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replac",{"_index":1640,"title":{},"body":{"injectables/RoutingService.html":{}}}],["filter.split",{"_index":1882,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.tolowercas",{"_index":1887,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.trim",{"_index":1886,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterpred",{"_index":1792,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstr",{"_index":1793,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstring.tolowercase().split",{"_index":1834,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalu",{"_index":1869,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalue.replace('_",{"_index":1871,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalueforsetalarm",{"_index":1794,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["find",{"_index":780,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["fix",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":2250,"title":{},"body":{"index.html":{}}}],["flat",{"_index":749,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialSandboxComponent.html":{}}}],["flatnod",{"_index":864,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":870,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":868,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":869,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":782,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":783,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":762,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":809,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flexlayoutmodul",{"_index":1450,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["fo",{"_index":324,"title":{},"body":{"components/AckComponent.html":{}}}],["focu",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focus",{"_index":1563,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["focusmonitor",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":2230,"title":{},"body":{"index.html":{}}}],["follow",{"_index":336,"title":{},"body":{"components/AckComponent.html":{},"index.html":{},"license.html":{}}}],["foreground",{"_index":1565,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["forkjoin",{"_index":1318,"title":{},"body":{"injectables/CdbService.html":{}}}],["form",{"_index":195,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":536,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["formbuild",{"_index":209,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":278,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":1720,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":274,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formsmodul",{"_index":382,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":2271,"title":{},"body":{"license.html":{}}}],["free",{"_index":2269,"title":{},"body":{"license.html":{}}}],["full",{"_index":1282,"title":{},"body":{"modules/AppModule.html":{}}}],["fullheight",{"_index":1064,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["function",{"_index":224,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["further",{"_index":2259,"title":{},"body":{"index.html":{}}}],["futur",{"_index":2382,"title":{},"body":{"license.html":{}}}],["g",{"_index":2235,"title":{},"body":{"index.html":{}}}],["gencolorstyl",{"_index":958,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["gencolorstyle(fillcolor",{"_index":620,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["gener",{"_index":416,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":293,"title":{"index.html":{},"license.html":{}},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["get(url",{"_index":1381,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":1673,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1192,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1200,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":1002,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["getalarm(alarm_id",{"_index":1017,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getalarm(keyword",{"_index":2076,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["getalarmnam",{"_index":710,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["getalarmvalid",{"_index":464,"title":{},"body":{"classes/Alarm.html":{}}}],["getalarmvalu",{"_index":467,"title":{},"body":{"classes/Alarm.html":{}}}],["getantenna",{"_index":1978,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["getantennagroup",{"_index":1003,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getantennanam",{"_index":1114,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(antennaconfig",{"_index":1125,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(this.selectedantenna",{"_index":1164,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennas(st",{"_index":1981,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["getantennasbygroup",{"_index":1115,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennasbygroup(groupid",{"_index":1131,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennasgroup",{"_index":1116,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getbuttontooltiptext",{"_index":1658,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":828,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getclass",{"_index":671,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getcolor",{"_index":621,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["getconfigurationdata",{"_index":1300,"title":{},"body":{"injectables/CdbService.html":{}}}],["getfilt",{"_index":1848,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getimag",{"_index":672,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getlevel",{"_index":824,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":945,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getmissingacksinfo",{"_index":200,"title":{},"body":{"components/AckComponent.html":{}}}],["getnam",{"_index":469,"title":{},"body":{"classes/Alarm.html":{}}}],["getopacityclass",{"_index":1004,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getopacityclass(antennaconfig",{"_index":1020,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getoperationalmod",{"_index":471,"title":{},"body":{"classes/Alarm.html":{}}}],["getpath",{"_index":1948,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getplacemarkobject",{"_index":1005,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getplacemarkobject(placemark",{"_index":1026,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["getrefreshrateparamet",{"_index":1301,"title":{},"body":{"injectables/CdbService.html":{}}}],["getresponsemessagetext",{"_index":201,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitl",{"_index":1674,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getstatu",{"_index":473,"title":{},"body":{"classes/Alarm.html":{}}}],["getsvgpath",{"_index":1525,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":1528,"title":{},"body":{"injectables/MapService.html":{}}}],["getter",{"_index":475,"title":{},"body":{"classes/Alarm.html":{}}}],["gettimestamp",{"_index":477,"title":{},"body":{"classes/Alarm.html":{}}}],["gettitletext",{"_index":1675,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["gettogglestatu",{"_index":1851,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["gettreedata",{"_index":837,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["give",{"_index":2338,"title":{},"body":{"license.html":{}}}],["given",{"_index":823,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["global",{"_index":1360,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["gnu",{"_index":2262,"title":{},"body":{"license.html":{}}}],["go",{"_index":1167,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"index.html":{}}}],["good",{"_index":2318,"title":{},"body":{"license.html":{}}}],["gotoantenna",{"_index":1630,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gototablefilteredbi",{"_index":1117,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1135,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweath",{"_index":1631,"title":{},"body":{"injectables/RoutingService.html":{}}}],["govern",{"_index":2290,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2287,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2390,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":664,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["green",{"_index":660,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["group",{"_index":920,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{}}}],["group.github.io/ia",{"_index":2224,"title":{},"body":{"index.html":{}}}],["groupid",{"_index":1133,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["hammerj",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1372,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1383,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["haschild",{"_index":830,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":835,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["header",{"_index":707,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["header'},{'nam",{"_index":128,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.compon",{"_index":1656,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":709,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":708,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.t",{"_index":706,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:14",{"_index":714,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":720,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":718,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:31",{"_index":713,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:35",{"_index":723,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:41",{"_index":722,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:73",{"_index":724,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:77",{"_index":725,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:81",{"_index":721,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":705,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.t",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["health",{"_index":145,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":1261,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":1251,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":144,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":779,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":2286,"title":{},"body":{"license.html":{}}}],["hide",{"_index":242,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hidespinn",{"_index":202,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["high",{"_index":563,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["highlight",{"_index":1925,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":1567,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["hour",{"_index":1710,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":1559,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["html",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":1296,"title":{},"body":{"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":2242,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":930,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["httpclientmodul",{"_index":1335,"title":{},"body":{"modules/DataModule.html":{}}}],["httpclientservic",{"_index":913,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1396,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httpmodul",{"_index":1275,"title":{},"body":{"modules/AppModule.html":{}}}],["httpoption",{"_index":1404,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1385,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":2273,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":2223,"title":{},"body":{"index.html":{}}}],["hum",{"_index":2017,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humid",{"_index":1989,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["humidityimageset",{"_index":1967,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humidityimageunreliableset",{"_index":1968,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["hunt",{"_index":1594,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["i.",{"_index":1806,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["ia",{"_index":385,"title":{},"body":{"modules/ActionsModule.html":{},"classes/Alarm.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["ias_antenna",{"_index":1215,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1362,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1212,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_tabl",{"_index":1216,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_typ",{"_index":1456,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weath",{"_index":1214,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfigur",{"_index":1297,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasconfigurationdata",{"_index":1325,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":1298,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":2212,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":1322,"title":{"classes/Iasio.html":{}},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodul",{"_index":365,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1299,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":667,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["iconset",{"_index":1348,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1349,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":271,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["identifi",{"_index":412,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"coverage.html":{}}}],["imag",{"_index":675,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":676,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["implement",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":2272,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1538,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["incorpor",{"_index":2279,"title":{},"body":{"license.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indexofset",{"_index":1890,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["indic",{"_index":254,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inform",{"_index":348,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"license.html":{}}}],["init",{"_index":1768,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initi",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":1313,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["inject",{"_index":759,"title":{"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":2333,"title":{},"body":{"license.html":{}}}],["inner",{"_index":264,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{}}}],["input",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instal",{"_index":2228,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":2238,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":406,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":216,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instead",{"_index":802,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["instruct",{"_index":2217,"title":{},"body":{"index.html":{}}}],["integr",{"_index":1220,"title":{},"body":{"components/AppComponent.html":{}}}],["interact",{"_index":2029,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["interfac",{"_index":1716,"title":{"interfaces/TimeoutOption.html":{}},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["intern",{"_index":986,"title":{},"body":{"components/AntennasComponent.html":{}}}],["inu",{"_index":1577,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["invalid",{"_index":231,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["invalid.svg",{"_index":1494,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["invok",{"_index":2317,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":1457,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicon",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["isdis",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isexpand",{"_index":826,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isnavigationcompact",{"_index":1189,"title":{},"body":{"components/AppComponent.html":{}}}],["isol",{"_index":2303,"title":{},"body":{"license.html":{}}}],["isselect",{"_index":1006,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":1144,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(antennaconfig",{"_index":1029,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["isselected(stationconfig",{"_index":2042,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["issu",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isubscript",{"_index":911,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["isvalidalarm",{"_index":401,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidalarm(json",{"_index":454,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidiasio",{"_index":1460,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1469,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":750,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["item.icon",{"_index":1244,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1242,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":1245,"title":{},"body":{"components/AppComponent.html":{}}}],["japan",{"_index":1585,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["join",{"_index":534,"title":{},"body":{"classes/Alarm.html":{}}}],["jqueri",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":452,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["json.hasownproperty('ack",{"_index":510,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_id",{"_index":502,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_timestamp",{"_index":505,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('depend",{"_index":512,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('descript",{"_index":508,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('doc_url",{"_index":1474,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1473,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1471,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('mod",{"_index":504,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('running_id",{"_index":503,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('shelv",{"_index":511,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('short_desc",{"_index":1472,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('state_change_timestamp",{"_index":506,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('url",{"_index":509,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valid",{"_index":507,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valu",{"_index":501,"title":{},"body":{"classes/Alarm.html":{}}}],["json['ack",{"_index":525,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_id",{"_index":517,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_timestamp",{"_index":520,"title":{},"body":{"classes/Alarm.html":{}}}],["json['depend",{"_index":527,"title":{},"body":{"classes/Alarm.html":{}}}],["json['descript",{"_index":523,"title":{},"body":{"classes/Alarm.html":{}}}],["json['doc_url",{"_index":1479,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1478,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1476,"title":{},"body":{"classes/Iasio.html":{}}}],["json['mod",{"_index":519,"title":{},"body":{"classes/Alarm.html":{}}}],["json['running_id",{"_index":518,"title":{},"body":{"classes/Alarm.html":{}}}],["json['shelv",{"_index":526,"title":{},"body":{"classes/Alarm.html":{}}}],["json['short_desc",{"_index":1477,"title":{},"body":{"classes/Iasio.html":{}}}],["json['state_change_timestamp",{"_index":521,"title":{},"body":{"classes/Alarm.html":{}}}],["json['url",{"_index":524,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valid",{"_index":522,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valu",{"_index":516,"title":{},"body":{"classes/Alarm.html":{}}}],["june",{"_index":2265,"title":{},"body":{"license.html":{}}}],["k",{"_index":853,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":2254,"title":{},"body":{"index.html":{}}}],["keep",{"_index":784,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["key",{"_index":330,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["keyword",{"_index":1815,"title":{},"body":{"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["l",{"_index":1958,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["last",{"_index":1894,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["later",{"_index":863,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1452,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{},"license.html":{}}}],["left",{"_index":1219,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":147,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1481,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1482,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":1783,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":146,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":2337,"title":{},"body":{"license.html":{}}}],["lesser",{"_index":2263,"title":{},"body":{"license.html":{}}}],["level",{"_index":753,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":699,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["librari",{"_index":2237,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":2261,"title":{"license.html":{}},"body":{"license.html":{}}}],["lightblu",{"_index":663,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["limit",{"_index":2330,"title":{},"body":{"license.html":{}}}],["line",{"_index":2336,"title":{},"body":{"license.html":{}}}],["link",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linkflat",{"_index":1599,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkicon",{"_index":1600,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkmini",{"_index":1601,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkrais",{"_index":1598,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linux",{"_index":2221,"title":{},"body":{"index.html":{}}}],["list",{"_index":261,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":935,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["liter",{"_index":1107,"title":{},"body":{"injectables/AntennasService.html":{}}}],["load",{"_index":222,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["loadalarmsconfig",{"_index":936,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["loadimag",{"_index":949,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadweatherstationsconfig",{"_index":1979,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["local",{"_index":1854,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["locale.date_format",{"_index":1858,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locale.timezon",{"_index":1860,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locat",{"_index":905,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["look",{"_index":1537,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["low",{"_index":565,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["low.svg",{"_index":1363,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["m",{"_index":1961,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macro",{"_index":2332,"title":{},"body":{"license.html":{}}}],["made",{"_index":2298,"title":{},"body":{"license.html":{}}}],["main",{"_index":907,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["maint.svg",{"_index":1365,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mainten",{"_index":486,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":956,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["make",{"_index":2292,"title":{},"body":{"license.html":{}}}],["manag",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":2354,"title":{},"body":{"license.html":{}}}],["map",{"_index":575,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["map'},{'nam",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map.compon",{"_index":1092,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":992,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["map.component.scss",{"_index":991,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["map.component.t",{"_index":990,"title":{},"body":{"components/AntennasMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:103",{"_index":1018,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:110",{"_index":1019,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:117",{"_index":1021,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:132",{"_index":1027,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:141",{"_index":1030,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:153",{"_index":1034,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:18",{"_index":1011,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:21",{"_index":1012,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:24",{"_index":1039,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:28",{"_index":1044,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:31",{"_index":1045,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:34",{"_index":1042,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:37",{"_index":1047,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:40",{"_index":1037,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:43",{"_index":1035,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:46",{"_index":1008,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:52",{"_index":1046,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:53",{"_index":1036,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:54",{"_index":1041,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:57",{"_index":1032,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:64",{"_index":1028,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.component.ts:90",{"_index":1014,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map.servic",{"_index":1523,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antenna",{"_index":989,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.compon",{"_index":1522,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.modul",{"_index":1095,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/map.servic",{"_index":1050,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["map/weath",{"_index":1939,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapantennaconfig",{"_index":1156,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["mapcompon",{"_index":148,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":994,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["mapdata['placemark",{"_index":1055,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapdata['placemarks']['pad",{"_index":1056,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapdataavail",{"_index":995,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/MapComponent.html":{}}}],["mapdataprocess",{"_index":1526,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroup",{"_index":1530,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodul",{"_index":1089,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["mapplacemark",{"_index":996,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["mapservic",{"_index":997,"title":{"injectables/MapService.html":{}},"body":{"components/AntennasMapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":591,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["marker'},{'nam",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.compon",{"_index":1096,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":592,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":593,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.t",{"_index":578,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:109",{"_index":968,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:12",{"_index":581,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:120",{"_index":969,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:15",{"_index":585,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:178",{"_index":967,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:18",{"_index":586,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:19",{"_index":1926,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":1964,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:21",{"_index":584,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/WeatherBackupWsMarkerComponent.html":{}}}],["marker.component.ts:23",{"_index":1962,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":583,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:27",{"_index":587,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:28",{"_index":1924,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:30",{"_index":582,"title":{},"body":{"classes/AlarmColorsSet.html":{}}}],["marker.component.ts:31",{"_index":1965,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":1907,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:33",{"_index":580,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/WeatherBackupWsMarkerComponent.html":{}}}],["marker.component.ts:36",{"_index":1929,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":1906,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:41",{"_index":1928,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:43",{"_index":1963,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:44",{"_index":1905,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{}}}],["marker.component.ts:48",{"_index":1927,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:55",{"_index":961,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:58",{"_index":964,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:61",{"_index":966,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:64",{"_index":962,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:67",{"_index":963,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:70",{"_index":965,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:73",{"_index":973,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:76",{"_index":974,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:79",{"_index":972,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:82",{"_index":960,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:90",{"_index":975,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:91",{"_index":971,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:99",{"_index":970,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker/antenna",{"_index":577,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weath",{"_index":1899,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markerimageset",{"_index":1969,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markerimageunreliableset",{"_index":1970,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markers/antenna",{"_index":576,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weath",{"_index":1898,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":2226,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":1427,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1430,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":186,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matcheckboxmodul",{"_index":1437,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":150,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.modul",{"_index":387,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.t",{"_index":1412,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":386,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialsandboxcompon",{"_index":149,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":1445,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodul",{"_index":1439,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":1429,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistri",{"_index":1194,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":1415,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1434,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1417,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1419,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodul",{"_index":1441,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1206,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodul",{"_index":1432,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1421,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbar",{"_index":2035,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["matsnackbarmodul",{"_index":1447,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsort",{"_index":1843,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["matsortmodul",{"_index":1423,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattabl",{"_index":1845,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattabledatasourc",{"_index":1827,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattablemodul",{"_index":1425,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1443,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":765,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":811,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":764,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":804,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1436,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":715,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["maxci",{"_index":1534,"title":{},"body":{"injectables/MapService.html":{}}}],["md",{"_index":689,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["mean",{"_index":2300,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":2325,"title":{},"body":{"license.html":{}}}],["meant",{"_index":1650,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":2355,"title":{},"body":{"license.html":{}}}],["medium",{"_index":564,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/LegendComponent.html":{}}}],["medium.svg",{"_index":2027,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mention",{"_index":281,"title":{},"body":{"components/AckComponent.html":{}}}],["menu",{"_index":1218,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":196,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["min",{"_index":1570,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["mini",{"_index":1575,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["minim",{"_index":2299,"title":{},"body":{"license.html":{}}}],["minut",{"_index":1706,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["miscellan",{"_index":2209,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":234,"title":{},"body":{"components/AckComponent.html":{}}}],["missedack",{"_index":197,"title":{},"body":{"components/AckComponent.html":{}}}],["mockalarm",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["mockalarmdata",{"_index":2104,"title":{},"body":{"coverage.html":{}}}],["mockiasio",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["mockimagesset",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":394,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["model",{"_index":700,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"modules/DataModule.html":{}}}],["modif",{"_index":2313,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":781,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["modul",{"_index":354,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["more",{"_index":1611,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountain",{"_index":1591,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["multipl",{"_index":798,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["multipli",{"_index":1308,"title":{},"body":{"injectables/CdbService.html":{}}}],["name",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["navig",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["navigationsidenavitem",{"_index":1190,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":2063,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["nearbi",{"_index":1983,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["necessari",{"_index":2362,"title":{},"body":{"license.html":{}}}],["need",{"_index":446,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nest",{"_index":778,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":786,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["network",{"_index":1617,"title":{},"body":{"components/OverviewComponent.html":{}}}],["new",{"_index":295,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["ng",{"_index":2187,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["ngmodul",{"_index":371,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":801,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ngondestroy",{"_index":203,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":291,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":384,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":214,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["noalarmstoack",{"_index":325,"title":{},"body":{"components/AckComponent.html":{}}}],["node",{"_index":751,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":858,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":827,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":856,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":825,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":2231,"title":{},"body":{"index.html":{}}}],["none",{"_index":2327,"title":{},"body":{"license.html":{}}}],["normal",{"_index":792,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["noselecteddescendants(nod",{"_index":886,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":1624,"title":{},"body":{"modules/OverviewModule.html":{},"index.html":{}}}],["notic",{"_index":2340,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":1315,"title":{},"body":{"injectables/CdbService.html":{}}}],["npm",{"_index":2232,"title":{},"body":{"index.html":{}}}],["null",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":233,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/ShelveComponent.html":{},"license.html":{}}}],["numer",{"_index":2331,"title":{},"body":{"license.html":{}}}],["object",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["object.assign(thi",{"_index":500,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["object.entries(respons",{"_index":331,"title":{},"body":{"components/AckComponent.html":{}}}],["object.keys(this.alarmsconfig",{"_index":1077,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["object.keys(this.antennasservice.antennasconfig",{"_index":1158,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["object.keys(this.placemarks).indexof(placemark_id",{"_index":1075,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["observ",{"_index":768,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/OverviewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["observableforkjoin",{"_index":1319,"title":{},"body":{"injectables/CdbService.html":{}}}],["obtain",{"_index":1040,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["occur",{"_index":1400,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["ofobserv",{"_index":767,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":829,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["on",{"_index":2350,"title":{},"body":{"license.html":{}}}],["on/off",{"_index":1819,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["onchang",{"_index":758,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["onclick",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":1148,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclick(antennaconfig",{"_index":1033,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["onclick(ev",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(stationconfig",{"_index":2044,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["onclos",{"_index":204,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":189,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["onhov",{"_index":1923,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onkeyup",{"_index":1798,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["onkeyup(ev",{"_index":1812,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["opac",{"_index":1022,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["opensnackbar",{"_index":2032,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["opensnackbar(messag",{"_index":2046,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["oper",{"_index":423,"title":{},"body":{"classes/Alarm.html":{},"injectables/HttpClientService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":421,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.mainten",{"_index":640,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode.shuttedown",{"_index":641,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode.unknown",{"_index":637,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operationalmode[this.mod",{"_index":533,"title":{},"body":{"classes/Alarm.html":{}}}],["opt_ci",{"_index":598,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["opt_cx",{"_index":597,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["optionalalarmnam",{"_index":712,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["order",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{}}}],["origin",{"_index":1582,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["ot",{"_index":1803,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["otherwis",{"_index":2293,"title":{},"body":{"license.html":{}}}],["out",{"_index":369,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1202,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["output",{"_index":588,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MapComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["overview",{"_index":153,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":156,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":1613,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1612,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1235,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.compon",{"_index":1625,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":1262,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":1270,"title":{},"body":{"modules/AppModule.html":{}}}],["overviewcardcompon",{"_index":152,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":155,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":1252,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["packag",{"_index":2178,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1130,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["page",{"_index":2085,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["panelclass",{"_index":2062,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panelclick",{"_index":2033,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["param",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["paramet",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["parammap",{"_index":300,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":302,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":425,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["part",{"_index":879,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":2297,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1639,"title":{},"body":{"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["path",{"_index":1043,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules/AppModule.html":{},"injectables/MapService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1281,"title":{},"body":{"modules/AppModule.html":{}}}],["pathsgroup",{"_index":998,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["pathstr",{"_index":1955,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pend",{"_index":685,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":188,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["perman",{"_index":2386,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":2284,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2275,"title":{},"body":{"license.html":{}}}],["persist",{"_index":342,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["pk",{"_index":513,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["place",{"_index":439,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"license.html":{}}}],["placemark",{"_index":594,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["placemark_id",{"_index":1074,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["placemarksgroup",{"_index":999,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["pleas",{"_index":338,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":1454,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.j",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":2302,"title":{},"body":{"license.html":{}}}],["posit",{"_index":601,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{}}}],["possibl",{"_index":493,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["post",{"_index":1373,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1387,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["power",{"_index":1616,"title":{},"body":{"components/OverviewComponent.html":{}}}],["present",{"_index":2356,"title":{},"body":{"license.html":{}}}],["press",{"_index":1814,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["primari",{"_index":175,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["prioriti",{"_index":437,"title":{},"body":{"classes/Alarm.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priorities.indexof(prior",{"_index":566,"title":{},"body":{"classes/Alarm.html":{}}}],["priority_0",{"_index":1485,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":1486,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":1487,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":1488,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":1489,"title":{},"body":{"components/LegendComponent.html":{}}}],["privat",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":341,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["process",{"_index":1395,"title":{},"body":{"injectables/HttpClientService.html":{},"components/StatusViewComponent.html":{}}}],["prod",{"_index":2249,"title":{},"body":{"index.html":{}}}],["produc",{"_index":2296,"title":{},"body":{"license.html":{}}}],["product",{"_index":2251,"title":{},"body":{"index.html":{}}}],["proess",{"_index":1393,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["program",{"_index":2306,"title":{},"body":{"license.html":{}}}],["project",{"_index":2213,"title":{},"body":{"index.html":{}}}],["promin",{"_index":2339,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1386,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1402,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properli",{"_index":2359,"title":{},"body":{"license.html":{}}}],["properti",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["protractor",{"_index":2257,"title":{},"body":{"index.html":{}}}],["provid",{"_index":221,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":918,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/SidenavService.html":{}}}],["proxi",{"_index":2380,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":2384,"title":{},"body":{"license.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":2370,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":460,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":1769,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1374,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1389,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":608,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["radiu",{"_index":607,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["rais",{"_index":1562,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["rate",{"_index":1307,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":383,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":816,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["read_url",{"_index":1375,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":1391,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readm",{"_index":2260,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1734,"title":{},"body":{"components/ShelveComponent.html":{}}}],["receiv",{"_index":450,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"license.html":{}}}],["recombin",{"_index":2352,"title":{},"body":{"license.html":{}}}],["record",{"_index":862,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":790,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":662,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":1137,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":1280,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["refresh",{"_index":1306,"title":{},"body":{"injectables/CdbService.html":{}}}],["refreshr",{"_index":1310,"title":{},"body":{"injectables/CdbService.html":{}}}],["registri",{"_index":1198,"title":{},"body":{"components/AppComponent.html":{}}}],["relat",{"_index":701,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"index.html":{}}}],["releas",{"_index":2222,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":495,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":2353,"title":{},"body":{"license.html":{}}}],["reload",{"_index":205,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["remain",{"_index":2324,"title":{},"body":{"license.html":{}}}],["repres",{"_index":433,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["represent",{"_index":443,"title":{},"body":{"classes/Alarm.html":{}}}],["reproduc",{"_index":2307,"title":{},"body":{"license.html":{}}}],["request",{"_index":219,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["requeststatu",{"_index":198,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requeststatusli",{"_index":284,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requir",{"_index":349,"title":{},"body":{"components/AckComponent.html":{},"modules/IasMaterialModule.html":{},"components/ShelveComponent.html":{},"index.html":{},"license.html":{}}}],["res[0",{"_index":1326,"title":{},"body":{"injectables/CdbService.html":{}}}],["reset",{"_index":368,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["respect",{"_index":1766,"title":{},"body":{"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["respons",{"_index":229,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/HttpClientService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["response[key",{"_index":940,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["restrict",{"_index":2344,"title":{},"body":{"license.html":{}}}],["result",{"_index":185,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["result.push('blu",{"_index":726,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":729,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":728,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('r",{"_index":731,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('unreli",{"_index":727,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":730,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["retriev",{"_index":615,"title":{},"body":{"classes/AlarmColorsSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["retun",{"_index":822,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":1513,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":2345,"title":{},"body":{"license.html":{}}}],["revis",{"_index":2369,"title":{},"body":{"license.html":{}}}],["right",{"_index":1227,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":919,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":141,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":211,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{}}}],["router",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["routermodul",{"_index":1258,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1287,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.servic",{"_index":1339,"title":{},"body":{"modules/DataModule.html":{}}}],["routingservic",{"_index":1121,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["row",{"_index":1837,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["run",{"_index":2239,"title":{},"body":{"index.html":{},"license.html":{}}}],["running_id",{"_index":395,"title":{},"body":{"classes/Alarm.html":{}}}],["rxj",{"_index":770,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":1320,"title":{},"body":{"injectables/CdbService.html":{}}}],["rxjs/rx",{"_index":1321,"title":{},"body":{"injectables/CdbService.html":{}}}],["s",{"_index":334,"title":{},"body":{"components/AckComponent.html":{}}}],["s_low.svg",{"_index":953,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["same",{"_index":785,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sandbox",{"_index":1286,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["sandbox'},{'nam",{"_index":151,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.compon",{"_index":1278,"title":{},"body":{"modules/AppModule.html":{}}}],["sandbox.component.html",{"_index":1541,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.scss",{"_index":1540,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.t",{"_index":1536,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sandbox.component.ts:12",{"_index":1542,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.ts:22",{"_index":1543,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox/materi",{"_index":1277,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sanit",{"_index":1230,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffold",{"_index":2244,"title":{},"body":{"index.html":{}}}],["secondari",{"_index":1568,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["section",{"_index":2309,"title":{},"body":{"license.html":{}}}],["select",{"_index":262,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["select/deselect",{"_index":889,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":898,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":775,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":979,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescend",{"_index":881,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedst",{"_index":1916,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["selectionmodel",{"_index":760,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":797,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["send",{"_index":218,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sent",{"_index":285,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["separ",{"_index":1142,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serv",{"_index":2240,"title":{},"body":{"index.html":{}}}],["server",{"_index":1718,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":435,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set_crit",{"_index":499,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":498,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":1490,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":496,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":497,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":1491,"title":{},"body":{"components/LegendComponent.html":{}}}],["setsidenav",{"_index":1739,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":1743,"title":{},"body":{"injectables/SidenavService.html":{}}}],["shall",{"_index":2383,"title":{},"body":{"license.html":{}}}],["share",{"_index":1595,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":381,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":389,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["shared/statu",{"_index":1784,"title":{},"body":{"modules/TabularModule.html":{}}}],["sharedmodul",{"_index":366,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":686,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{}}}],["shelv",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'nam",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":1669,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":1668,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1285,"title":{},"body":{"modules/AppModule.html":{}}}],["shelve/shelve.compon",{"_index":375,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelv",{"_index":1660,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvebuttoncompon",{"_index":157,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecompon",{"_index":158,"title":{"components/ShelveComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":243,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shiba",{"_index":1576,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["short",{"_index":420,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["short_desc",{"_index":1458,"title":{},"body":{"classes/Iasio.html":{}}}],["show",{"_index":253,"title":{},"body":{"components/AckComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["showactionbadg",{"_index":677,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":673,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showasshelv",{"_index":674,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showspinn",{"_index":206,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shuttedown",{"_index":484,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":2365,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":246,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":137,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.compon",{"_index":1094,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":1113,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1112,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":1111,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:101",{"_index":1136,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:14",{"_index":1123,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:16",{"_index":1122,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:18",{"_index":2069,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2037,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":2036,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":1153,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:25",{"_index":1152,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:26",{"_index":2072,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:27",{"_index":2071,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":1147,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":2050,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":2048,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:33",{"_index":2049,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":1124,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:39",{"_index":2043,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:46",{"_index":2070,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:47",{"_index":1126,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:48",{"_index":2039,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:55",{"_index":1134,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:63",{"_index":1132,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:67",{"_index":2041,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:70",{"_index":1150,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:76",{"_index":2040,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:80",{"_index":1145,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:84",{"_index":2045,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:87",{"_index":1149,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:93",{"_index":2047,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar/antenna",{"_index":1093,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weath",{"_index":1941,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenav.servic",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavservic",{"_index":33,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["similar",{"_index":2371,"title":{},"body":{"license.html":{}}}],["singl",{"_index":2366,"title":{},"body":{"license.html":{}}}],["six",{"_index":1581,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["size",{"_index":678,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["sizeopt",{"_index":670,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["slide",{"_index":1823,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["slider",{"_index":1569,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sm",{"_index":698,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["small",{"_index":1586,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["smallest",{"_index":1580,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["snackbar",{"_index":2030,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["softwar",{"_index":2270,"title":{},"body":{"license.html":{}}}],["sort",{"_index":441,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1141,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["special",{"_index":1175,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":1031,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/OverviewComponent.html":{}}}],["specifi",{"_index":1140,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["speed",{"_index":2002,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["spinner",{"_index":223,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/SharedModule.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":213,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":2372,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":1584,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["src/.../alarm.t",{"_index":2211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.t",{"_index":187,"title":{},"body":{"components/AckComponent.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.ts:106",{"_index":250,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:115",{"_index":249,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:123",{"_index":228,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:147",{"_index":252,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:156",{"_index":241,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:165",{"_index":259,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:172",{"_index":230,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:181",{"_index":232,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:205",{"_index":236,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:22",{"_index":270,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:27",{"_index":268,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:32",{"_index":275,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:37",{"_index":279,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:42",{"_index":272,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:47",{"_index":267,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:52",{"_index":280,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:60",{"_index":215,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:75",{"_index":289,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:83",{"_index":248,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:99",{"_index":247,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/actions.module.t",{"_index":370,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.t",{"_index":1289,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:14",{"_index":1292,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1293,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelv",{"_index":1657,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.t",{"_index":1667,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.ts:100",{"_index":1687,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:117",{"_index":1686,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:124",{"_index":1689,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:134",{"_index":1688,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:141",{"_index":1692,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:152",{"_index":1690,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:178",{"_index":1693,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:204",{"_index":1691,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:213",{"_index":1685,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:222",{"_index":1678,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:230",{"_index":1683,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:245",{"_index":1680,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:256",{"_index":1682,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:268",{"_index":1681,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:34",{"_index":1714,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:46",{"_index":1697,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:51",{"_index":1695,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:56",{"_index":1694,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:61",{"_index":1698,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:66",{"_index":1699,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:71",{"_index":1701,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:79",{"_index":1677,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/shelve/shelve.component.ts:91",{"_index":1700,"title":{},"body":{"components/ShelveComponent.html":{}}}],["src/app/actions/sidenav.service.t",{"_index":1737,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:11",{"_index":1747,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:13",{"_index":1746,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:16",{"_index":1744,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:20",{"_index":1742,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:24",{"_index":1741,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:28",{"_index":1745,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:7",{"_index":1740,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":2083,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antenna",{"_index":574,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.t",{"_index":1090,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.t",{"_index":904,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:103",{"_index":1104,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:15",{"_index":908,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":909,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":906,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:31",{"_index":1108,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:34",{"_index":1109,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:37",{"_index":1110,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:40",{"_index":1105,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:43",{"_index":1106,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:46",{"_index":1100,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:59",{"_index":1102,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:70",{"_index":1103,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:95",{"_index":1101,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.t",{"_index":976,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:12",{"_index":981,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:22",{"_index":982,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":984,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/app.component.t",{"_index":1184,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":1209,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":1221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":1211,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":1217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":1196,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":1210,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":1203,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":1201,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:99",{"_index":1204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":1255,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/data/alarm.service.t",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["src/app/data/alarm.t",{"_index":391,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/alarm.ts:115",{"_index":449,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:139",{"_index":465,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:148",{"_index":468,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:154",{"_index":470,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:159",{"_index":472,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:168",{"_index":474,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:176",{"_index":478,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:187",{"_index":447,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:197",{"_index":457,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:206",{"_index":461,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:215",{"_index":458,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:226",{"_index":444,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:270",{"_index":438,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:43",{"_index":432,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:46",{"_index":411,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:49",{"_index":424,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:52",{"_index":422,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:55",{"_index":431,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:58",{"_index":414,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:61",{"_index":426,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:64",{"_index":417,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:67",{"_index":419,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:70",{"_index":429,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:73",{"_index":410,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:76",{"_index":404,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:92",{"_index":455,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/cdb.service.t",{"_index":1295,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:18",{"_index":1317,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:23",{"_index":1314,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:28",{"_index":1303,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:42",{"_index":1312,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:54",{"_index":1304,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:63",{"_index":1305,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":1334,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1367,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":1453,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":1466,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":1462,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":1461,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":1470,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":1468,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":1465,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/routing.service.t",{"_index":1627,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/data/routing.service.ts:20",{"_index":1638,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:28",{"_index":1635,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:35",{"_index":1636,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:8",{"_index":1634,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/health/health",{"_index":1346,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1344,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":1411,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.t",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.t",{"_index":1521,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.t",{"_index":1524,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":1529,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:43",{"_index":1531,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":1527,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.t",{"_index":1512,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":1515,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":1514,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":1516,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/materi",{"_index":1535,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":1602,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":1622,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":1610,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":1614,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":1615,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":704,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":666,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:12",{"_index":744,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:127",{"_index":695,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:131",{"_index":696,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:135",{"_index":691,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:15",{"_index":745,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:18",{"_index":743,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:21",{"_index":742,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:24",{"_index":746,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:27",{"_index":741,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:30",{"_index":739,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:56",{"_index":680,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:61",{"_index":682,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:66",{"_index":683,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:72",{"_index":688,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:77",{"_index":690,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:79",{"_index":679,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:89",{"_index":694,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:9",{"_index":740,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:98",{"_index":692,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1649,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/statu",{"_index":1752,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":1480,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:12",{"_index":1492,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":1493,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":1497,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:22",{"_index":1495,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:23",{"_index":1511,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":1498,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:25",{"_index":1510,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:26",{"_index":1509,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":1500,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:28",{"_index":1502,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:29",{"_index":1504,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":1506,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:31",{"_index":1508,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/tabular",{"_index":1785,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":1782,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/test_fixtures.t",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weath",{"_index":1897,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":1935,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.t",{"_index":1966,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["src/app/weather/weather.service.ts:105",{"_index":1984,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:115",{"_index":1982,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:122",{"_index":1987,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:134",{"_index":1986,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:16",{"_index":2065,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:19",{"_index":2066,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:22",{"_index":2067,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:25",{"_index":2068,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:28",{"_index":2064,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:47",{"_index":1988,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:50",{"_index":1993,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:53",{"_index":2000,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:56",{"_index":1991,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:59",{"_index":1990,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:62",{"_index":1995,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:65",{"_index":2003,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:68",{"_index":1992,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:71",{"_index":1999,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:75",{"_index":1998,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:78",{"_index":1997,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:80",{"_index":1980,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:93",{"_index":1985,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather/weather.component.t",{"_index":1910,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:15",{"_index":1918,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:26",{"_index":1921,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:29",{"_index":1920,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.t",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":1862,"title":{"index.html":{},"license.html":{}},"body":{"components/TabularViewComponent.html":{}}}],["startup",{"_index":482,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":428,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state_change_timestamp",{"_index":396,"title":{},"body":{"classes/Alarm.html":{}}}],["statement",{"_index":2095,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":399,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["station",{"_index":180,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":1901,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["stationconfig.placemark",{"_index":2058,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["statu",{"_index":161,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":702,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcompon",{"_index":160,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":2322,"title":{},"body":{"license.html":{}}}],["stop",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["storageitem",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":283,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["stream",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":240,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["structur",{"_index":850,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["styleurl",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":851,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subclass",{"_index":2294,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":1178,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{}}}],["subscript",{"_index":1826,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["subscriptionlik",{"_index":910,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/TabularViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["subsubtre",{"_index":847,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":1605,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":789,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":849,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesfulli",{"_index":337,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["successfulli",{"_index":287,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["such",{"_index":2328,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":2233,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":2351,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1169,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":925,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":139,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":1098,"title":{},"body":{"modules/AntennasModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1172,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1171,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1168,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:17",{"_index":1174,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:19",{"_index":1354,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:22",{"_index":1355,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:25",{"_index":1351,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:26",{"_index":1180,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":2079,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:34",{"_index":1177,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":1181,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:48",{"_index":1356,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:50",{"_index":1176,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:52",{"_index":2077,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:55",{"_index":1352,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:57",{"_index":1179,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:59",{"_index":2078,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:88",{"_index":1353,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antenna",{"_index":1097,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1345,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":1938,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":941,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["supplement",{"_index":2282,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":2315,"title":{},"body":{"license.html":{}}}],["support",{"_index":2388,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1048,"title":{},"body":{"components/AntennasMapComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1213,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpath",{"_index":1000,"title":{},"body":{"components/AntennasMapComponent.html":{},"injectables/MapService.html":{}}}],["switch",{"_index":1824,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["system",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.valu",{"_index":1732,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["tabl",{"_index":440,"title":{},"body":{"classes/Alarm.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table'",{"_index":1808,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["table.svg",{"_index":1238,"title":{},"body":{"components/AppComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":1632,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":1637,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":164,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":1283,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular",{"_index":1267,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular.modul",{"_index":1263,"title":{},"body":{"modules/AppModule.html":{}}}],["tabularmodul",{"_index":1253,"title":{"modules/TabularModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":163,"title":{"components/TabularViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":445,"title":{},"body":{"classes/Alarm.html":{},"components/StatusViewComponent.html":{}}}],["tags.join",{"_index":561,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push('ack",{"_index":559,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push('shelv",{"_index":560,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(ord",{"_index":553,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(prior",{"_index":557,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(this.operationalmod",{"_index":554,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(valid",{"_index":558,"title":{},"body":{"classes/Alarm.html":{}}}],["tags.push(valu",{"_index":555,"title":{},"body":{"classes/Alarm.html":{}}}],["taken",{"_index":350,"title":{},"body":{"components/AckComponent.html":{},"license.html":{}}}],["target",{"_index":1380,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["temp",{"_index":2019,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["temperatur",{"_index":1994,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["tempimageset",{"_index":1971,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["tempimageunreliableset",{"_index":1972,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":2334,"title":{},"body":{"license.html":{}}}],["term",{"_index":2280,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":1592,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["test",{"_index":1840,"title":{},"body":{"components/TabularViewComponent.html":{},"index.html":{}}}],["text",{"_index":237,"title":{},"body":{"components/AckComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["textfield",{"_index":1841,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this._getalarmstatusorder(valu",{"_index":552,"title":{},"body":{"classes/Alarm.html":{}}}],["this._getalarmstatustagsstr",{"_index":535,"title":{},"body":{"classes/Alarm.html":{}}}],["this._getsubtree(childalarm",{"_index":848,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":839,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initi",{"_index":932,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this._setfilteractiv",{"_index":1884,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.ack",{"_index":540,"title":{},"body":{"classes/Alarm.html":{}}}],["this.acklist",{"_index":896,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":899,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acknowledgedalarm",{"_index":316,"title":{},"body":{"components/AckComponent.html":{}}}],["this.actionssidenavservice.canclos",{"_index":1241,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1240,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarm",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.core_id",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mod",{"_index":636,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelv",{"_index":633,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.valid",{"_index":630,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valu",{"_index":644,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm_id",{"_index":301,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmiconspriorityset",{"_index":1777,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":1775,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":1776,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmid",{"_index":1359,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmnamemaxs",{"_index":736,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.alarmsconfig",{"_index":1072,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.alarmservice.acknowledgealarm",{"_index":313,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.alarmchangestream.subscribe(notif",{"_index":1868,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservice.alarmsarray",{"_index":1864,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1076,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":846,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":308,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmid",{"_index":1358,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.antennasservice.antennassummaryconfig",{"_index":1182,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.st",{"_index":1909,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.get(this.weatherservice.weathersummaryconfig[keyword",{"_index":2081,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.getmissingacks(this.alarm.core_id).subscrib",{"_index":329,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.initi",{"_index":1239,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.shelvealarm(this.alarm.core_id",{"_index":1726,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":1730,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservicesubscript",{"_index":1867,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmservicesubscription.unsubscrib",{"_index":1875,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmstoack",{"_index":314,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoack.length",{"_index":326,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":900,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmvalid",{"_index":551,"title":{},"body":{"classes/Alarm.html":{}}}],["this.alarmvalue.split('_",{"_index":548,"title":{},"body":{"classes/Alarm.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1160,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":950,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":957,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasconfig[key",{"_index":939,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasmapnam",{"_index":947,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig[groupid",{"_index":1159,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initi",{"_index":1155,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":944,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.applyfilter(event.target.valu",{"_index":1878,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.applyfilter(filtervalu",{"_index":1872,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.applyfilter(this.filterstr",{"_index":1880,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.bordercolor",{"_index":629,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.bordercolorsunreli",{"_index":632,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.bordercolorsunreliable.unknown",{"_index":624,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.buildfiletree(tree_data",{"_index":821,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":859,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":1725,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":894,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":885,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":878,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descend",{"_index":883,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":892,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe(data",{"_index":812,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":897,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":893,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":884,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":891,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.clearfilt",{"_index":1877,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.clickedantennamarker.emit(this.selectedantenna",{"_index":1082,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.clipboardservice.copyfromcontent(result",{"_index":2054,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.coord",{"_index":1957,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.core_id",{"_index":532,"title":{},"body":{"classes/Alarm.html":{}}}],["this.datasourc",{"_index":810,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.data",{"_index":820,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.filt",{"_index":1888,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.filterpred",{"_index":1865,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.sort",{"_index":1873,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.dateformat",{"_index":1857,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.definealarmcolor",{"_index":619,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.definealarmsandicon",{"_index":1357,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":1774,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.descript",{"_index":543,"title":{},"body":{"classes/Alarm.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.fillcolor",{"_index":627,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.fillcolorsunreli",{"_index":631,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.fillcolorsunreliable.unknown",{"_index":623,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.filterpred",{"_index":1866,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstr",{"_index":1879,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstring.split",{"_index":1889,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":871,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":297,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').value).subscrib",{"_index":315,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":312,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":298,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.gencolorstyle(fillcolor",{"_index":625,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.getalarmnam",{"_index":738,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.getantennas(st",{"_index":2052,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.getchildren",{"_index":807,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().subscribe((r",{"_index":1324,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getlevel",{"_index":805,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmissingacksinfo",{"_index":305,"title":{},"body":{"components/AckComponent.html":{}}}],["this.gettreedata",{"_index":819,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.hidespinn",{"_index":317,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":1409,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":1406,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(this.read_url(url",{"_index":1407,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.put(this.read_url(url",{"_index":1408,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(backendurls.weather_summary).subscribe((respons",{"_index":2014,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(backendurls.weather_view).subscribe((respons",{"_index":2012,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(summary_url).subscribe((respons",{"_index":943,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclient.get(url",{"_index":948,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(url).subscribe((respons",{"_index":938,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1329,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.humidityimageset",{"_index":2016,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.humidityimageunreliableset",{"_index":2022,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.iasconfigur",{"_index":1327,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['broadcast_factor",{"_index":1331,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['refresh_r",{"_index":1330,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(tru",{"_index":1328,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1361,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1366,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.initi",{"_index":1051,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.isexpand",{"_index":806,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isnavigationcompact",{"_index":1243,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isselected(antennaconfig",{"_index":1078,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.isvalidalarm(json",{"_index":515,"title":{},"body":{"classes/Alarm.html":{}}}],["this.isvalidiasio(json",{"_index":1475,"title":{},"body":{"classes/Iasio.html":{}}}],["this.loadalarmsconfig",{"_index":933,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.loadimag",{"_index":934,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadweatherstationsconfig",{"_index":2007,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.mapconfig",{"_index":1063,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapdataavailable.next(tru",{"_index":1071,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapplacemark",{"_index":1054,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapservice.getsvgpaths(mapdata['path",{"_index":1070,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.mapservice.mapdataprocessing(this.placemarksgroup",{"_index":1061,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.markerimageset",{"_index":2025,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.markerimageunreliableset",{"_index":2028,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.maticonregistri",{"_index":1231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messag",{"_index":294,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":310,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.valu",{"_index":1723,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.missedack",{"_index":328,"title":{},"body":{"components/AckComponent.html":{}}}],["this.missedacks.push(text",{"_index":335,"title":{},"body":{"components/AckComponent.html":{}}}],["this.nam",{"_index":544,"title":{},"body":{"classes/Alarm.html":{}}}],["this.nestednodemap.get(nod",{"_index":866,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":867,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":865,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":872,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.ngonchang",{"_index":814,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.opensnackbar(messag",{"_index":2055,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.operationalmod",{"_index":545,"title":{},"body":{"classes/Alarm.html":{}}}],["this.optionalalarmnam",{"_index":734,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.panelclicked.emit(this.selectedst",{"_index":2059,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.pathsgroup",{"_index":1062,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.pathsgroups.push(mapdata['path",{"_index":1060,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarks[placemark.nam",{"_index":1057,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarks[placemark_id",{"_index":1079,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarksgroups.push(mapdata['placemarks']['pad",{"_index":1058,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.placemarksgroups.push(mapdata['placemarks']['wst",{"_index":1059,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.reload",{"_index":303,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.requeststatu",{"_index":309,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.route.parammap.subscrib",{"_index":299,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.route.snapshot.parammap.get('filt",{"_index":1870,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.router.navigate(['/tabular",{"_index":1642,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antenna",{"_index":1643,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weath",{"_index":1644,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([{outlet",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.routing.gotoantenna",{"_index":1183,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweath",{"_index":2082,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1162,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.selectedalarm",{"_index":2073,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.st",{"_index":2074,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":988,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm",{"_index":1165,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.antenna",{"_index":1166,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1080,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedst",{"_index":1922,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["this.selectedstation.placemark",{"_index":2057,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.service.antennasconfig",{"_index":1073,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.service.getmapdata().subscribe((mapdata",{"_index":1053,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.service.initi",{"_index":1052,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.shelv",{"_index":541,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.showactionbadg",{"_index":732,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.showspinn",{"_index":311,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenav",{"_index":1748,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.clos",{"_index":1750,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":1749,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggl",{"_index":1751,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavservice.canclos",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.clos",{"_index":307,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.open",{"_index":304,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.s",{"_index":703,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.snackbar.open(messag",{"_index":2060,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.sort",{"_index":1874,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.sort.sort",{"_index":1861,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.spinnerservice.hid",{"_index":321,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":320,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.state_change_timestamp",{"_index":538,"title":{},"body":{"classes/Alarm.html":{}}}],["this.stationconfig.st",{"_index":2075,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.statu",{"_index":542,"title":{},"body":{"classes/Alarm.html":{}}}],["this.svgpath",{"_index":1069,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["this.tempimageset",{"_index":2018,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.tempimageunreliableset",{"_index":2023,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.timeout",{"_index":1719,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":1721,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.valu",{"_index":1724,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalu",{"_index":1733,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":1731,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].valu",{"_index":1696,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.timestamp",{"_index":546,"title":{},"body":{"classes/Alarm.html":{}}}],["this.timezon",{"_index":1859,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.treecontrol",{"_index":808,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":876,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":803,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.unshelv",{"_index":1722,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":813,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.url",{"_index":2091,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.startswith('http",{"_index":2090,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.weathermapnam",{"_index":2008,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weatherservice.getantennas(st",{"_index":2056,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.initi",{"_index":2051,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.weatherservice.weathersummaryconfig",{"_index":2080,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.weatherstationsconfig",{"_index":2013,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weathersummaryconfig",{"_index":2015,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageset",{"_index":2020,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageunreliableset",{"_index":2024,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["thorugh",{"_index":1629,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":1539,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["through",{"_index":226,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AntennasMapComponent.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["time",{"_index":345,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["timeout",{"_index":1671,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["timeout).subscrib",{"_index":1727,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["timeout.viewvalu",{"_index":1735,"title":{},"body":{"components/ShelveComponent.html":{}}}],["timeoutopt",{"_index":1702,"title":{"interfaces/TimeoutOption.html":{}},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timestamp",{"_index":415,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["timezon",{"_index":1795,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["titl",{"_index":1191,"title":{},"body":{"components/AppComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["todo",{"_index":1229,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["togeth",{"_index":2342,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":888,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{}}}],["toggledefault",{"_index":1596,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["togglefilteronlysetalarm",{"_index":1799,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["toggleshelveunshelv",{"_index":1676,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1193,"title":{},"body":{"components/AppComponent.html":{}}}],["togglestatu",{"_index":1850,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["tooltip",{"_index":1661,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["tostringforfilt",{"_index":402,"title":{},"body":{"classes/Alarm.html":{}}}],["transform",{"_index":861,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["transpar",{"_index":622,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":380,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":773,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":774,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":748,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":901,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":902,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":755,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":756,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":754,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":379,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.t",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":818,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":838,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":791,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":793,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":339,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["trigger",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["true",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["ts",{"_index":537,"title":{},"body":{"classes/Alarm.html":{}}}],["type",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["typeof",{"_index":857,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unblock",{"_index":244,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["uncombin",{"_index":2367,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":556,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["under",{"_index":2219,"title":{},"body":{"index.html":{},"license.html":{}}}],["unit",{"_index":2252,"title":{},"body":{"index.html":{}}}],["unkn.svg",{"_index":1364,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unknown",{"_index":491,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":955,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unreli",{"_index":494,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unselect",{"_index":1151,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["unselectantenna",{"_index":1118,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselecteddescend",{"_index":882,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unshelv",{"_index":239,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unsubscrib",{"_index":1810,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["unus",{"_index":800,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updat",{"_index":260,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasComponent.html":{},"index.html":{}}}],["updateacklist",{"_index":895,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatealarmstoack",{"_index":207,"title":{},"body":{"components/AckComponent.html":{}}}],["updatealarmstoack(ev",{"_index":258,"title":{},"body":{"components/AckComponent.html":{}}}],["updateselectedantenna",{"_index":980,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":983,"title":{},"body":{"components/AntennasComponent.html":{}}}],["url",{"_index":220,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":255,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["user'",{"_index":2357,"title":{},"body":{"license.html":{}}}],["usevalu",{"_index":1288,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":2305,"title":{},"body":{"license.html":{}}}],["v",{"_index":854,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":217,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["valid.svg",{"_index":1496,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["validators.requir",{"_index":296,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validform",{"_index":327,"title":{},"body":{"components/AckComponent.html":{}}}],["validity[this.valid",{"_index":529,"title":{},"body":{"classes/Alarm.html":{}}}],["valu",{"_index":266,"title":{},"body":{"components/AckComponent.html":{},"classes/Alarm.html":{},"classes/AlarmColorsSet.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.clear",{"_index":645,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.length",{"_index":333,"title":{},"body":{"components/AckComponent.html":{}}}],["value.set_crit",{"_index":657,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":654,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":648,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":651,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":855,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["value[this.valu",{"_index":531,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tag",{"_index":547,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tags[0",{"_index":549,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tags[1",{"_index":550,"title":{},"body":{"classes/Alarm.html":{}}}],["var",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":1009,"title":{},"body":{"components/AntennasMapComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"coverage.html":{}}}],["verbatim",{"_index":2277,"title":{},"body":{"license.html":{}}}],["veri",{"_index":1589,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["verifi",{"_index":1015,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["version",{"_index":2215,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":2253,"title":{},"body":{"index.html":{}}}],["view",{"_index":1138,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":162,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":1269,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":1754,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":1755,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.scss",{"_index":1787,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.t",{"_index":1753,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:112",{"_index":1807,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:120",{"_index":1809,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:129",{"_index":1813,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:140",{"_index":1804,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:149",{"_index":1802,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:167",{"_index":1818,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:19",{"_index":1762,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:192",{"_index":1849,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:200",{"_index":1852,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:22",{"_index":1764,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:24",{"_index":1846,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:25",{"_index":1773,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:27",{"_index":1844,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:28",{"_index":1771,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":1772,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":1770,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:35",{"_index":1820,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:38",{"_index":1839,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:40",{"_index":1761,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:43",{"_index":1830,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:46",{"_index":1829,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:49",{"_index":1847,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:50",{"_index":1767,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:52",{"_index":1842,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:55",{"_index":1828,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:57",{"_index":1765,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:58",{"_index":1825,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:64",{"_index":1836,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:74",{"_index":1800,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:91",{"_index":1811,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view/fixtures.t",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["view/statu",{"_index":1655,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1268,"title":{},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["viewbox",{"_index":599,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasMapComponent.html":{}}}],["viewbox[0",{"_index":1065,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[1",{"_index":1066,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[2",{"_index":1067,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewbox[3]].join",{"_index":1068,"title":{},"body":{"components/AntennasMapComponent.html":{}}}],["viewchild",{"_index":1208,"title":{},"body":{"components/AppComponent.html":{},"components/TabularViewComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1228,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matsort",{"_index":1856,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewchild(matt",{"_index":1855,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewvalu",{"_index":1704,"title":{},"body":{"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["visual",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":1557,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["warnbas",{"_index":1597,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["weather",{"_index":166,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'nam",{"_index":170,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":1915,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1914,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1908,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1236,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.compon",{"_index":1940,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.modul",{"_index":1264,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.compon",{"_index":1273,"title":{},"body":{"modules/AppModule.html":{}}}],["weather_",{"_index":2026,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherbackupwsmarkercompon",{"_index":165,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercompon",{"_index":169,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercompon",{"_index":171,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":1913,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcompon",{"_index":173,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermapnam",{"_index":1973,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathermodul",{"_index":1254,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcompon",{"_index":174,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercompon",{"_index":177,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservic",{"_index":1900,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherset",{"_index":2004,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["weathersettings.mapkey",{"_index":1996,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathersidebar",{"_index":1912,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcompon",{"_index":178,"title":{"components/WeatherSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherst",{"_index":2005,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationconfig",{"_index":1904,"title":{"classes/WeatherStationConfig.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["weatherstationsconfig",{"_index":1974,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationsidebarcompon",{"_index":179,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":181,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummaryconfig",{"_index":1975,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["webserv",{"_index":931,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennasMapComponent.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/ShelveComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["well",{"_index":1590,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["wether",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatev",{"_index":2323,"title":{},"body":{"license.html":{}}}],["whether",{"_index":873,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["whevenv",{"_index":817,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["wiki",{"_index":183,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncompon",{"_index":182,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wind",{"_index":2001,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["wind_",{"_index":2021,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["window",{"_index":2089,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":2092,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["windsimageset",{"_index":1976,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windsimageunreliableset",{"_index":1977,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windspe",{"_index":2006,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["without",{"_index":2311,"title":{},"body":{"license.html":{}}}],["word",{"_index":1143,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":2289,"title":{},"body":{"license.html":{}}}],["worth",{"_index":1623,"title":{},"body":{"modules/OverviewModule.html":{}}}],["write",{"_index":351,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveComponent.html":{},"components/TabularViewComponent.html":{}}}],["wrong",{"_index":1641,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":168,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasMapComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":602,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":697,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["y",{"_index":605,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["yellow",{"_index":661,"title":{},"body":{"classes/AlarmColorsSet.html":{},"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":2234,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":367,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, router: Router, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system Router to handle navigation\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers the ack modal\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:29\n                            \n                        \n\n                \n                    \n                        Service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Router } from '@angular/router';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * @param {SidenavService} sidenavService Service to manage the Acknowledge and Shelve sidenav\n   * @param {Router} router system Router to handle navigation\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private router: Router,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @returns {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  canAcknowledge() {\n    if (this.alarm != null) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose || !this.canAcknowledge();\n  }\n\n  /**\n  * Handle click on ack button, it triggers the ack modal\n  */\n  onClick(event) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', this.alarm.core_id]}}]);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AckComponent.html":{"url":"components/AckComponent.html","title":"component - AckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack/ack.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to perform acknowledgement of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack\n            \n\n            \n                styleUrls\n                ack.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ack.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledgedAlarms\n                            \n                            \n                                alarm\n                            \n                            \n                                alarm_id\n                            \n                            \n                                alarmsToAck\n                            \n                            \n                                form\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                missedAcks\n                            \n                            \n                                requestStatus\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                disableAcknowledgment\n                            \n                            \n                                getMissingAcksInfo\n                            \n                            \n                                getResponseMessageText\n                            \n                            \n                                    Private\n                                hideSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                reload\n                            \n                            \n                                    Private\n                                showSpinner\n                            \n                            \n                                updateAlarmsToAck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, alarmService: AlarmService, route: ActivatedRoute, sidenavService: SidenavService, spinnerService: NgxSpinnerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack/ack.component.ts:60\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to handle the sidenav where the component is opened\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular Router used to navigate through the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Send the acknowledge request through the method provided by the\nAlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableAcknowledgment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableAcknowledgment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:172\n                            \n                        \n\n\n                \n                    \n                            Method to invalidate ack action\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcksInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcksInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            Get the number of missed acknowledgements of the alarm and its children\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:205\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:156\n                            \n                        \n\n\n                \n                    \n                            Hides the spinner after the Alarm has been shelved/unshelved\nIt also unblocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reload\n                            \n                            \n                        \n                    \n                \n                \n                    \nreload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Cleans the component and reloads the Alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\nIt also blocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAlarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAlarmsToAck(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:165\n                            \n                        \n\n\n                \n                    \n                            Update the list of alarms to ack from the selection on the child component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                event triggered by the inner {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledgedAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        acknowledgedAlarms:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:47\n                            \n                        \n\n                \n                    \n                        List of alarms that were acknowledged by the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:27\n                            \n                        \n\n                \n                    \n                        Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:22\n                            \n                        \n\n                \n                    \n                        Id of the Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsToAck:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:42\n                            \n                        \n\n                \n                    \n                        List of alarms to ack according to selection from child component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:32\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:37\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            missedAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        missedAcks:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:52\n                            \n                        \n\n                \n                    \n                        List of messages to mention the alarms with missed acknowledgments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestStatus:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:60\n                            \n                        \n\n                \n                    \n                        Stores wether or not the action has been executed requestStatusly\nIf requestStatus = 0, the request has not been sent yet\nIf requestStatus = 1, the request was successfully\nIf requestStatus = -1, the request has failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:75\n                            \n                        \n\n                \n                    \n                        Service to handle the sidenav where the component is opened\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Component used to perform acknowledgement of an Alarm\n*/\n@Component({\n  selector: 'app-ack',\n  templateUrl: './ack.component.html',\n  styleUrls: ['./ack.component.scss']\n})\nexport class AckComponent implements OnInit, OnDestroy {\n\n  /**\n   * Id of the Alarm object to be acknowledge/unacknowledge\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be acknowledge/unacknowledge\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * List of alarms to ack according to selection from child component\n  */\n  alarmsToAck: string[] = [];\n\n  /**\n  * List of alarms that were acknowledged by the request\n  */\n  acknowledgedAlarms: string[] = [];\n\n  /**\n  * List of messages to mention the alarms with missed acknowledgments\n  */\n  public missedAcks: string[] = [];\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Router} router Angular Router used to navigate through the application\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) { }\n\n  /*\n  * Initiates the component, by getting the alarm_id from the url.\n  */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n    this.getMissingAcksInfo();\n  }\n\n  /*\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload() {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n  }\n\n  /*\n  * Closes the sidenav\n  */\n  onClose() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the acknowledge request through the method provided by the\n   * {@link AlarmService} and handle the response.\n   */\n  acknowledge(): void {\n    this.showSpinner();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        this.alarmsToAck, this.form.get('message').value).subscribe(\n          (response) => {\n            this.acknowledgedAlarms =  response;\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner() {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner() {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Update the list of alarms to ack from the selection on the child component\n   * @param {Event} event event triggered by the inner {@link AckTree}, containing the IDs fo the alarms to acknowledge\n   */\n  updateAlarmsToAck(event): void {\n    this.alarmsToAck = event;\n  }\n\n  /**\n  * Method to invalidate ack action\n  */\n  disableAcknowledgment() {\n    const noAlarmsToAck = (this.alarmsToAck.length === 0);\n    const validForm = this.form.valid;\n    return (noAlarmsToAck || !validForm);\n  }\n\n  /**\n  * Get the number of missed acknowledgements of the alarm and its children\n  */\n  getMissingAcksInfo(): void {\n    if (this.alarm) {\n      this.missedAcks = [];\n      this.alarmService.getMissingAcks(this.alarm.core_id).subscribe(\n        (response) => {\n          for (const [key, value] of Object.entries(response)) {\n            const count = value.length;\n            if (count > 0) {\n              let text = key + ' has ' + count + ' missed acknowledgement';\n              if (count > 1) {\n                text += 's';\n              }\n              this.missedAcks.push(text);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      response = 'The following alarms have been acknowledged succesfully:';\n\n    } else if (this.requestStatus === -1) {\n      response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been acknowledged.';\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    }\n    return response;\n  }\n}\n\n    \n\n    \n        \n  \n     ALARM ACKNOWLEDGEMENT \n    \n      &times;\n    \n  \n\n  \n    \n\n      \n        \n          \n            Alarm ID\n            {{alarm?.core_id}}\n          \n          \n            Description\n            {{ alarm?.description }}\n          \n        \n      \n\n       \n      \n        \n           Acknowledgement results \n           {{ getResponseMessageText() }} \n          \n            \n              {{ alarm }}\n            \n          \n        \n      \n\n      \n        \n          Information required to acknowledge the Alarm\n          \n             Action to be taken \n            \n             You must write a message in order to Acknowledge \n          \n        \n\n        \n           Select alarms for acknowledgment \n          \n        \n\n         0\" class=\"section missed-acks\">\n           Missed acknowledgements \n          \n            \n              {{text}}\n            \n          \n        \n      \n    \n  \n\n  \n     \n    \n      Close\n    \n\n    \n      Cancel\n      Acknowledge\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       ALARM ACKNOWLEDGEMENT           ×                                                Alarm ID            {{alarm?.core_id}}                                Description            {{ alarm?.description }}                                                        Acknowledgement results            {{ getResponseMessageText() }}                                     {{ alarm }}                                                            Information required to acknowledge the Alarm                       Action to be taken                          You must write a message in order to Acknowledge                                      Select alarms for acknowledgment                            0\" class=\"section missed-acks\">           Missed acknowledgements                                     {{text}}                                                           Close              Cancel      Acknowledge      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AckButtonComponent\n                            \n                            \n                                AckComponent\n                            \n                            \n                                AckTreeComponent\n                            \n                            \n                                ButtonsComponent\n                            \n                            \n                                ShelveButtonComponent\n                            \n                            \n                                ShelveComponent\n                            \n                            \n                                WikiButtonComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SidenavService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AckButtonComponent\n                            \n                            \n                                    AckComponent\n                            \n                            \n                                    ButtonsComponent\n                            \n                            \n                                    ShelveButtonComponent\n                            \n                            \n                                    ShelveComponent\n                            \n                            \n                                    WikiButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { AlarmComponent } from '../shared/alarm/alarm.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarm.html":{"url":"classes/Alarm.html","title":"class - Alarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Alarm objects\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ack\n                            \n                            \n                                core_id\n                            \n                            \n                                core_timestamp\n                            \n                            \n                                dependencies\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                running_id\n                            \n                            \n                                shelved\n                            \n                            \n                                state_change_timestamp\n                            \n                            \n                                url\n                            \n                            \n                                validity\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getAlarmStatusOrder\n                            \n                            \n                                    Private\n                                _getAlarmStatusTagsString\n                            \n                            \n                                acknowledge\n                            \n                            \n                                    Static\n                                asAlarm\n                            \n                            \n                                    Static\n                                isValidAlarm\n                            \n                            \n                                shelve\n                            \n                            \n                                toStringForFiltering\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/alarm.ts:76\n                            \n                        \n\n                \n                    \n                            Builds a new Alarm instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ack:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:73\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:46\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:58\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm was generated by the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dependencies:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:64\n                            \n                        \n\n                \n                    \n                        List of core_id's of dependent alarms *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:67\n                            \n                        \n\n                \n                    \n                        Short description of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     OperationalMode\n\n                    \n                \n                    \n                        \n                            Type :     OperationalMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:52\n                            \n                        \n\n                \n                    \n                        Operational mode of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        running_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:49\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm and its parents in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:76\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state_change_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state_change_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:61\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm changed the state or the mode \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:70\n                            \n                        \n\n                \n                    \n                        Documentation url of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validity:     Validity\n\n                    \n                \n                    \n                        \n                            Type :     Validity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:55\n                            \n                        \n\n                \n                    \n                        Validity of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     Value\n\n                    \n                \n                    \n                        \n                            Type :     Value\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:43\n                            \n                        \n\n                \n                    \n                        Value that represents the state of the Alarm.\nCan be either 0 (CLEARED) or 1 (SET)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getAlarmStatusOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getAlarmStatusOrder(value: string, priority: string, validity: string, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:270\n                            \n                        \n\n\n                \n                    \n                            Returns a string with a number that defines the place where the Alarm should be displayed on the Table according to the\nsorting by \"Status\" column\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the value of the {\n\n                                                        \n                                                \n                                                \n                                                        priority\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the priority of the {\n\n                                                        \n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the validity of the {\n\n                                                        \n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ack status of the {\n\n                                                        \n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    order for the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getAlarmStatusTagsString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getAlarmStatusTagsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:226\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    tags of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:187\n                            \n                        \n\n\n                \n                    \n                            Acknowledges the Alarm and returns the acknowledge status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the acknowledgement status\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:115\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:92\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Alarm object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:197\n                            \n                        \n\n\n                \n                    \n                            Shelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving message\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toStringForFiltering\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoStringForFiltering()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:215\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the Alarm for filtering purposes\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    info of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:206\n                            \n                        \n\n\n                \n                    \n                            Unshelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving status\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarmValidity\n                    \n                \n\n                \n                    \n                        getalarmValidity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:139\n                                \n                            \n                    \n                        \n                                Returns a string representation of the validity of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        alarmValue\n                    \n                \n\n                \n                    \n                        getalarmValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:148\n                                \n                            \n                    \n                        \n                                Returns a string representation of the value of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:154\n                                \n                            \n                    \n                        \n                                Returns the core_id of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        operationalMode\n                    \n                \n\n                \n                    \n                        getoperationalMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:159\n                                \n                            \n                    \n                        \n                                Returns the operational mode of the Alarm as a string\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n\n                \n                    \n                        getstatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:168\n                                \n                            \n                    \n                        \n                                Getter that returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent. Calls {@link _getAlarmStatusTagsString()}\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timestamp\n                    \n                \n\n                \n                    \n                        gettimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:176\n                                \n                            \n                    \n                        \n                                Returns a Date representation of the {@link Alarm.state_change_timestamp} attribute\n\n\n                                \n                                \n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export enum OperationalMode {\n  startup = 0,\n  initialization = 1,\n  closing = 2,\n  shuttedown = 3,\n  maintenance = 4,\n  operational = 5,\n  degraded = 6,\n  unknown = 7,\n}\n\n/**\n* List of the possible Validity values\n*/\nexport enum Validity {\n  unreliable = 0,\n  reliable = 1\n}\n\n/**\n* List of the possible Values of an Alarm\n*/\nexport enum Value {\n  cleared = 0,\n  set_low = 1,\n  set_medium = 2,\n  set_high = 3,\n  set_critical = 4,\n}\n\n/**\n* Class to define Alarm objects\n*/\nexport class Alarm {\n\n  /**\n  * Value that represents the state of the {@link Alarm}.\n  * Can be either 0 (CLEARED) or 1 (SET)\n  */\n  value: Value;\n\n  /** Id used to identify the {@link Alarm} in the IAS Core */\n  core_id: string;\n\n  /** Id used to identify the {@link Alarm} and its parents in the IAS Core */\n  running_id: string;\n\n  /** Operational mode of the {@link Alarm} */\n  mode: OperationalMode;\n\n  /** Validity of the {@link Alarm} */\n  validity: Validity;\n\n  /** Timestamp at which the {@link Alarm} was generated by the IAS Core */\n  core_timestamp: number;\n\n  /** Timestamp at which the {@link Alarm} changed the state or the mode */\n  state_change_timestamp: number;\n\n  /** List of core_id's of dependent alarms **/\n  dependencies: string[];\n\n  /** Short description of the {@link Alarm} */\n  description: string;\n\n  /** Documentation url of the {@link Alarm} */\n  url: string;\n\n  /** Acknowledgement status */\n  ack: boolean;\n\n  /** Acknowledgement status */\n  shelved: boolean;\n\n  /**\n  * Builds a new Alarm instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Alarm object\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Alarm}, false if not\n  */\n  static isValidAlarm(json: any): boolean {\n    return (\n      json.hasOwnProperty('value') &&\n      json.hasOwnProperty('core_id') &&\n      json.hasOwnProperty('running_id') &&\n      json.hasOwnProperty('mode') &&\n      json.hasOwnProperty('core_timestamp') &&\n      json.hasOwnProperty('state_change_timestamp') &&\n      json.hasOwnProperty('validity') &&\n      json.hasOwnProperty('description') &&\n      json.hasOwnProperty('url') &&\n      json.hasOwnProperty('ack') &&\n      json.hasOwnProperty('shelved') &&\n      json.hasOwnProperty('dependencies')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Alarm}\n  * @param {any} json the object to convert to an Alarm\n  * @param {number} pk the primary key of the Alarm in the database\n  * @returns {Alarm} the object as an {@link Alarm} instance\n  */\n  static asAlarm(json: any): Alarm {\n    if (!this.isValidAlarm(json)) {\n      return null;\n    }\n    const value = json['value'];\n    const core_id = json['core_id'];\n    const running_id = json['running_id'];\n    const mode = json['mode'];\n    const core_timestamp = json['core_timestamp'];\n    const state_change_timestamp = json['state_change_timestamp'];\n    const validity = json['validity'];\n    const description = json['description'];\n    const url = json['url'];\n    const ack = json['ack'];\n    const shelved = json['shelved'];\n    const dependencies = json['dependencies'];\n    return new Alarm({ value, core_id, running_id, mode, core_timestamp,\n      state_change_timestamp, validity, description, url, ack, shelved, dependencies });\n  }\n\n  /**\n  * Returns a string representation of the validity of the Alarm\n  * @returns {string} a string representation of the {@link Alarm.mode} attribute\n  */\n  get alarmValidity(): string {\n    return Validity[this.validity];\n  }\n\n  /**\n  * Returns a string representation of the value of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.value} attribute\n  */\n  get alarmValue(): string {\n    return Value[this.value];\n  }\n\n  /**\n  * Returns the core_id of the {@link Alarm}*/\n  get name(): string {\n    return this.core_id;\n  }\n\n  /** Returns the operational mode of the {@link Alarm} as a string*/\n  get operationalMode(): string {\n    return OperationalMode[this.mode];\n  }\n\n  /**\n  * Getter that returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}. Calls {@link _getAlarmStatusTagsString()}\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  get status(): string {\n    return this._getAlarmStatusTagsString();\n  }\n\n  /**\n  * Returns a Date representation of the {@link Alarm.state_change_timestamp} attribute\n  * @returns {Date} a date format representation of the Alarm state_change_timestamp\n  */\n  get timestamp(): Date {\n    const ts = this.state_change_timestamp;\n    const date: Date = new Date(ts);\n    return date;\n  }\n\n  /**\n  * Acknowledges the {@link Alarm} and returns the acknowledge status\n  * @param {message} string string message of the acknowledgement\n  * @returns {boolean} a the acknowledgement status\n  */\n  acknowledge(): boolean {\n    this.ack = true;\n    return this.ack;\n  }\n\n  /**\n  * Shelves the {@link Alarm} and returns the shelve status\n  * @param {message} string string message of the shelving\n  * @returns {boolean} a the shelving message\n  */\n  shelve(): boolean {\n    this.shelved = true;\n    return this.shelved;\n  }\n\n  /**\n  * Unshelves the {@link Alarm} and returns the shelve status\n  * @returns {boolean} a the shelving status\n  */\n  unshelve(): boolean {\n    this.shelved = false;\n    return this.shelved;\n  }\n\n  /**\n  * Returns a string representation of the {@link Alarm} for filtering purposes\n  * @returns {string} info of the {@link Alarm} for filtering purposes, joined by \" \"\n  */\n  toStringForFiltering(): string {\n    return [\n      this.status, this.description, this.name, this.operationalMode, this.timestamp\n    ].join(' ');\n  }\n\n  /**\n  * Returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  private _getAlarmStatusTagsString(): string {\n    const shelved = this.shelved;\n    const value_tags = this.alarmValue.split('_');\n    let value = value_tags[0];\n    let priority = value_tags[1];\n    let validity = this.alarmValidity;\n    let ack = this.ack;\n\n    if (shelved) {\n      value = 'cleared';\n      priority = '';\n      validity = 'reliable';\n      ack = true;\n    }\n\n    const order = this._getAlarmStatusOrder(value, priority, validity, ack, shelved);\n\n    const tags = [];\n    tags.push(order);\n    tags.push(this.operationalMode);\n    tags.push(value);\n    if (priority !== undefined) {\n      tags.push(priority);\n    }\n    tags.push(validity);\n    if (this.ack) {\n      tags.push('ack');\n    }\n    if (this.shelved) {\n      tags.push('shelved');\n    }\n    return tags.join('-');\n  }\n\n  /**\n  * Returns a string with a number that defines the place where the {@link Alarm} should be displayed on the Table according to the\n  * sorting by \"Status\" column\n  *\n  * @param {string} value string representation of the value of the {@link Alarm}\n  * @param {string} priority string representation of the priority of the {@link Alarm}\n  * @param {string} validity string representation of the validity of the {@link Alarm}\n  * @param {boolean} ack the ack status of the {@link Alarm}\n  * @returns {string} order for the {@link Alarm} in the Table\n  */\n  private _getAlarmStatusOrder(\n    value: string, priority: string, validity: string, ack: boolean, shelved: boolean): string {\n    let order = 0;\n    const priorities = ['critical', 'high', 'medium', 'low'];\n\n    // SET:\n    if (value === 'set') {\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = priorities.indexOf(priority);\n        } else {\n          order = 4 + priorities.indexOf(priority);\n        }\n      } else {\n        if (ack === false) {\n          order = 8 + priorities.indexOf(priority);\n        } else {\n          order = 12 + priorities.indexOf(priority);\n        }\n      }\n    } else {\n    // CLEARED:\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = 16;\n        } else {\n          order = 17;\n        }\n      } else {\n        if (ack === false) {\n          order = 18;\n        } else {\n          order = 19;\n        }\n      }\n    }\n    if (order \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmColorsSet.html":{"url":"classes/AlarmColorsSet.html","title":"class - AlarmColorsSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmColorsSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n        \n\n            \n                Description\n            \n            \n                Set of colors to display the antenna based on its alarm status\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                            Builds an instance of the color set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                JSON containing the colors as a dictionary\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:12\n                            \n                        \n\n                \n                    \n                        Color to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:30\n                            \n                        \n\n                \n                    \n                        Color to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:15\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:18\n                            \n                        \n\n                \n                    \n                        Color to use for the \"set-medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Color to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:27\n                            \n                        \n\n                \n                    \n                        Color to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Set of colors to display the antenna based on its alarm status\n */\nexport class AlarmColorsSet {\n\n  /** Color to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** Color to use for the \"set-low\" Alarm value  */\n  public set_low: string;\n\n  /** Color to use for the \"set-medium\" Alarm value  */\n  public set_medium: string;\n\n  /** Color to use for the \"set-high\" Alarm value  */\n  public set_high: string;\n\n  /** Color to use for the \"set-critical\" Alarm value  */\n  public set_critical: string;\n\n  /** Color to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** Color to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** Color to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n   * Builds an instance of the color set\n   * @param {Object} attributes JSON containing the colors as a dictionary\n   */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /** Set of colors to display antennas fill in reliable state */\n  fillColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas fill in unreliable state */\n  fillColorsUnreliable: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in reliable state */\n  borderColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in unreliable state */\n  borderColorsUnreliable: AlarmColorsSet;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Initiates the component.\n   * Initializes the {@link AntennasService} if not already initialized\n   * Defines alarms colors by calling the {@link defineAlarmColors}\n   */\n  ngOnInit() {\n    this.defineAlarmColors();\n  }\n\n  /**\n   * Generates a JSON with the colors to be used\n   * @param {string} fillColor the color to be used for fill\n   * @param {string} borderColor the color to be used for border\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  genColorStyle(fillColor, borderColor) {\n    return {\n      'fillColor': fillColor,\n      'borderColor': borderColor\n    };\n  }\n\n  /**\n   * Returns the colors to be used\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  getColors() {\n\n    let fillColor = 'transparent';\n    let borderColor = 'transparent';\n\n    if (!this.alarm) {\n      fillColor = this.fillColorsUnreliable.unknown;\n      borderColor = this.borderColorsUnreliable.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n    let fillColorsToUse = this.fillColors;\n    let borderColorsToUse = this.borderColors;\n    if (this.alarm.validity === 0) {\n      fillColorsToUse = this.fillColorsUnreliable;\n      borderColorsToUse = this.borderColorsUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      fillColor = fillColorsToUse.shelved;\n      borderColor = borderColorsToUse.shelved;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      fillColor = fillColorsToUse.maintenance;\n      borderColor = borderColorsToUse.maintenance;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.cleared) {\n      fillColor = fillColorsToUse.clear;\n      borderColor = borderColorsToUse.clear;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_low) {\n      fillColor = fillColorsToUse.set_low;\n      borderColor = borderColorsToUse.set_low;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_medium) {\n      fillColor = fillColorsToUse.set_medium;\n      borderColor = borderColorsToUse.set_medium;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_high) {\n      fillColor = fillColorsToUse.set_high;\n      borderColor = borderColorsToUse.set_high;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_critical) {\n      fillColor = fillColorsToUse.set_critical;\n      borderColor = borderColorsToUse.set_critical;\n      return this.genColorStyle(fillColor, borderColor);\n    } else {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n  }\n\n  /**\n   * Defines colors to be used to display the antennas\n   */\n  defineAlarmColors() {\n\n    this.fillColors = new AlarmColorsSet({\n      clear: 'green',\n      set_low: 'yellow',\n      set_medium: 'yellow',\n      set_high: 'red',\n      set_critical: 'red',\n      unknown: 'lightblue',\n      maintenance: 'gray',\n      shelved: 'DarkCyan'\n    });\n\n    this.fillColorsUnreliable = new AlarmColorsSet({\n      clear: 'transparent',\n      set_low: 'transparent',\n      set_medium: 'transparent',\n      set_high: 'transparent',\n      set_critical: 'transparent',\n      unknown: 'transparent',\n      maintenance: 'transparent',\n      shelved: 'transparent',\n    });\n\n    this.borderColors = this.fillColors;\n    this.borderColorsUnreliable = this.fillColors;\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:79\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n\n                        \n                            Default value: 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:77\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n    \n        \n  \n    \n  \n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value: 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and\nin that case the component use the alarm core_id.\n\n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                                Returns :     string[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and\n   * in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the URL of the current image to use depending on the Alarm status\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    return result;\n  }\n\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack;\n  }\n\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  getAlarmName(): string {\n    let alarmName;\n    if (this.alarm) {\n      if (this.optionalAlarmName) {\n        alarmName = this.optionalAlarmName;\n      } else {\n        alarmName = this.alarm.core_id;\n      }\n      if (alarmName.length > this.alarmNameMaxSize) {\n        return alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n      } else {\n        return alarmName;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    {{this.getAlarmName()}}\n\n\n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{this.getAlarmName()}}                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AntennaConfig.html":{"url":"classes/AntennaConfig.html","title":"class - AntennaConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AntennaConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the antennas and location related to an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                            \n                                    Public\n                                antenna\n                            \n                            \n                                    Public\n                                placemark\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antenna:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:15\n                            \n                        \n\n                \n                    \n                        ID of the Antenna associated with the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** Dictionary of Alarm configuration indexed by antennas group ID **/\n  public antennasConfig: {[group: string]: AntennaConfig [] } = {};\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig() {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasConfig[key] = response[key] as AntennaConfig[];\n        }\n      }\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages() {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                borderColors\n                            \n                            \n                                borderColorsUnreliable\n                            \n                            \n                                fillColors\n                            \n                            \n                                fillColorsUnreliable\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmColors\n                            \n                            \n                                genColorStyle\n                            \n                            \n                                getColors\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:82\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        The Alarm to associate to the antenna \n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                    \n                        The position of the antenna in the X axis \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                    \n                        The position of the antenna in the Y axis \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value: {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                    \n                        Radius of the antenna \n\n                        \n                            Default value: 1\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value: '0 0 10 10'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmColors\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmColors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            Defines colors to be used to display the antennas\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genColorStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenColorStyle(fillColor: , borderColor: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Generates a JSON with the colors to be used\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fillColor\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the color to be used for fill\n\n                                                        \n                                                \n                                                \n                                                        borderColor\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the color to be used for border\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'fillColor': any; 'borderColor': any; }\n\n                            \n                                \n                                    a JSON containing the fillColor and the borderColor\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColors\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Returns the colors to be used\n\n\n                            \n                            \n                            \n                                Returns :     { 'fillColor': any; 'borderColor': any; }\n\n                            \n                                \n                                    a JSON containing the fillColor and the borderColor\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Initiates the component.\nInitializes the AntennasService if not already initialized\nDefines alarms colors by calling the {@link defineAlarmColors}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:91\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borderColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        borderColors:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:79\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas border in reliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borderColorsUnreliable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        borderColorsUnreliable:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:82\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas border in unreliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillColors:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:73\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas fill in reliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillColorsUnreliable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillColorsUnreliable:     AlarmColorsSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmColorsSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:76\n                            \n                        \n\n                \n                    \n                        Set of colors to display antennas fill in unreliable state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:90\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Set of colors to display the antenna based on its alarm status\n */\nexport class AlarmColorsSet {\n\n  /** Color to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** Color to use for the \"set-low\" Alarm value  */\n  public set_low: string;\n\n  /** Color to use for the \"set-medium\" Alarm value  */\n  public set_medium: string;\n\n  /** Color to use for the \"set-high\" Alarm value  */\n  public set_high: string;\n\n  /** Color to use for the \"set-critical\" Alarm value  */\n  public set_critical: string;\n\n  /** Color to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** Color to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** Color to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n   * Builds an instance of the color set\n   * @param {Object} attributes JSON containing the colors as a dictionary\n   */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /** Set of colors to display antennas fill in reliable state */\n  fillColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas fill in unreliable state */\n  fillColorsUnreliable: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in reliable state */\n  borderColors: AlarmColorsSet;\n\n  /** Set of colors to display antennas border in unreliable state */\n  borderColorsUnreliable: AlarmColorsSet;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Initiates the component.\n   * Initializes the {@link AntennasService} if not already initialized\n   * Defines alarms colors by calling the {@link defineAlarmColors}\n   */\n  ngOnInit() {\n    this.defineAlarmColors();\n  }\n\n  /**\n   * Generates a JSON with the colors to be used\n   * @param {string} fillColor the color to be used for fill\n   * @param {string} borderColor the color to be used for border\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  genColorStyle(fillColor, borderColor) {\n    return {\n      'fillColor': fillColor,\n      'borderColor': borderColor\n    };\n  }\n\n  /**\n   * Returns the colors to be used\n   * @returns {Object} a JSON containing the fillColor and the borderColor\n   */\n  getColors() {\n\n    let fillColor = 'transparent';\n    let borderColor = 'transparent';\n\n    if (!this.alarm) {\n      fillColor = this.fillColorsUnreliable.unknown;\n      borderColor = this.borderColorsUnreliable.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n    let fillColorsToUse = this.fillColors;\n    let borderColorsToUse = this.borderColors;\n    if (this.alarm.validity === 0) {\n      fillColorsToUse = this.fillColorsUnreliable;\n      borderColorsToUse = this.borderColorsUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      fillColor = fillColorsToUse.shelved;\n      borderColor = borderColorsToUse.shelved;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      fillColor = fillColorsToUse.maintenance;\n      borderColor = borderColorsToUse.maintenance;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.cleared) {\n      fillColor = fillColorsToUse.clear;\n      borderColor = borderColorsToUse.clear;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_low) {\n      fillColor = fillColorsToUse.set_low;\n      borderColor = borderColorsToUse.set_low;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_medium) {\n      fillColor = fillColorsToUse.set_medium;\n      borderColor = borderColorsToUse.set_medium;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_high) {\n      fillColor = fillColorsToUse.set_high;\n      borderColor = borderColorsToUse.set_high;\n      return this.genColorStyle(fillColor, borderColor);\n    } else if (this.alarm.value === Value.set_critical) {\n      fillColor = fillColorsToUse.set_critical;\n      borderColor = borderColorsToUse.set_critical;\n      return this.genColorStyle(fillColor, borderColor);\n    } else {\n      fillColor = fillColorsToUse.unknown;\n      borderColor = borderColorsToUse.unknown;\n      return this.genColorStyle(fillColor, borderColor);\n    }\n  }\n\n  /**\n   * Defines colors to be used to display the antennas\n   */\n  defineAlarmColors() {\n\n    this.fillColors = new AlarmColorsSet({\n      clear: 'green',\n      set_low: 'yellow',\n      set_medium: 'yellow',\n      set_high: 'red',\n      set_critical: 'red',\n      unknown: 'lightblue',\n      maintenance: 'gray',\n      shelved: 'DarkCyan'\n    });\n\n    this.fillColorsUnreliable = new AlarmColorsSet({\n      clear: 'transparent',\n      set_low: 'transparent',\n      set_medium: 'transparent',\n      set_high: 'transparent',\n      set_critical: 'transparent',\n      unknown: 'transparent',\n      maintenance: 'transparent',\n      shelved: 'transparent',\n    });\n\n    this.borderColors = this.fillColors;\n    this.borderColorsUnreliable = this.fillColors;\n\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAntenna:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:12\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AntennaConfig } from '../antennas.service';\n\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components  */\n  updateSelectedAntenna(selectedAntenna: AntennaConfig) {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasMapComponent.html":{"url":"components/AntennasMapComponent.html","title":"component - AntennasMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map/antennas-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-map\n            \n\n            \n                styleUrls\n                antennas-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmsConfig\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                mapdataAvailable\n                            \n                            \n                                    Public\n                                mapPlacemarks\n                            \n                            \n                                    Public\n                                mapService\n                            \n                            \n                                    Public\n                                pathsGroups\n                            \n                            \n                                    Public\n                                placemarks\n                            \n                            \n                                    Public\n                                placemarksGroups\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                svgPaths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                existsPlacemarkData\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaGroups\n                            \n                            \n                                getOpacityClass\n                            \n                            \n                                getPlacemarkObject\n                            \n                            \n                                initialize\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickedAntennaMarker\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService, mapService: MapService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map/antennas-map.component.ts:46\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component and initializes it calling the {@link initialize} method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Variable to manage a placemark selection\nfrom the map, or from an external component \n\n                            \n                            Type:    AntennaConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickedAntennaMarker\n                    \n                    \n                        Variable to manage a placemark selection from the map \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            existsPlacemarkData\n                            \n                            \n                        \n                    \n                \n                \n                    \nexistsPlacemarkData(placemark: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Method to verify if there is data available for the placemark id\nfrom the alarm configuration\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        placemark\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Get alarm from the alarms service using id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Get antenna groups from the alarms configuration\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOpacityClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOpacityClass(antennaConfig: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Opacity class name for each antenna marker\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"opacity-100\" | \"opacity-25\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlacemarkObject\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlacemarkObject(placemark: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Get a placemark object from an id to use position data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        placemark\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Component initialization with the related map data source\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(antennaConfig: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Check if an specific antenna marker was selected\nthrough its related alarm configuration\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(antennaConfig: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:153\n                            \n                        \n\n\n                \n                    \n                            On click action for the antenna markers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:43\n                            \n                        \n\n                \n                    \n                        Alarms Configuration  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:40\n                            \n                        \n\n                \n                    \n                        Map Configuration  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapdataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapdataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:46\n                            \n                        \n\n                \n                    \n                        Variable to check if the data from the webserver is available  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapPlacemarks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapPlacemarks:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:24\n                            \n                        \n\n                \n                    \n                        Placemarks list obtained from the webserver \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapService:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pathsGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathsGroups:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:34\n                            \n                        \n\n                \n                    \n                        Coordinates related with paths, listed by group \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemarks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemarks:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:28\n                            \n                        \n\n                \n                    \n                        Placemarks objects indexed by name to provide the name and coordinates\nof each identified place \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemarksGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemarksGroups:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:31\n                            \n                        \n\n                \n                    \n                        Placemarks listed by group \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            svgPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        svgPaths:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map/antennas-map.component.ts:37\n                            \n                        \n\n                \n                    \n                        SVG defitions for the related paths, listed by group \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { MapService } from '../../map/map.service';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-antennas-map',\n  templateUrl: './antennas-map.component.html',\n  styleUrls: ['./antennas-map.component.scss']\n})\nexport class AntennasMapComponent implements OnInit {\n\n  /** Variable to manage a placemark selection\n   * from the map, or from an external component */\n  @Input() selectedAntenna: AntennaConfig = null;\n\n  /** Variable to manage a placemark selection from the map */\n  @Output() clickedAntennaMarker = new EventEmitter();\n\n  /** Placemarks list obtained from the webserver */\n  public mapPlacemarks = {};\n\n  /** Placemarks objects indexed by name to provide the name and coordinates\n  * of each identified place */\n  public placemarks = {};\n\n  /** Placemarks listed by group */\n  public placemarksGroups = [];\n\n  /** Coordinates related with paths, listed by group */\n  public pathsGroups = [];\n\n  /** SVG defitions for the related paths, listed by group */\n  public svgPaths = [];\n\n  /** Map Configuration  */\n  public mapConfig = {};\n\n  /** Alarms Configuration  */\n  public alarmsConfig = {};\n\n   /** Variable to check if the data from the webserver is available  */\n  public mapdataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Builds an instance of the component and initializes it calling the {@link initialize} method\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n    public mapService: MapService,\n  ) { }\n\n  ngOnInit() {\n    this.initialize();\n  }\n\n  /**\n   * Component initialization with the related map data source\n   */\n  initialize() {\n    this.service.initialize();\n    this.service.getMapData().subscribe((mapdata) => {\n      this.mapPlacemarks = mapdata['placemarks'];\n      for (const placemark of mapdata['placemarks']['pads']) {\n        this.placemarks[placemark.name] = placemark;\n      }\n      this.placemarksGroups.push(mapdata['placemarks']['pads']);\n      this.placemarksGroups.push(mapdata['placemarks']['wstations']);\n      this.pathsGroups.push(mapdata['paths']);\n      const viewbox = this.mapService.mapdataProcessing(this.placemarksGroups, this.pathsGroups);\n      this.mapConfig = {\n        'fullHeight': true,\n        'viewbox':\n          [-100 + viewbox[0], viewbox[1], viewbox[2], viewbox[3]].join(' ')\n      };\n      this.svgPaths = this.mapService.getSVGPaths(mapdata['paths']);\n      this.mapdataAvailable.next(true);\n    });\n    this.alarmsConfig = this.service.antennasConfig;\n  }\n\n  /**\n   * Method to verify if there is data available for the placemark id\n   * from the alarm configuration\n   */\n  existsPlacemarkData(placemark) {\n    const placemark_id = placemark;\n    const index = Object.keys(this.placemarks).indexOf(placemark_id);\n    if (index > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Get alarm from the alarms service using id\n   */\n  getAlarm(alarm_id): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Get antenna groups from the alarms configuration\n   */\n  getAntennaGroups() {\n    return Object.keys(this.alarmsConfig);\n  }\n\n  /**\n   * Opacity class name for each antenna marker\n   */\n  getOpacityClass(antennaConfig) {\n    if (this.selectedAntenna === null) {\n      return 'opacity-100';\n    } else {\n      if ( this.isSelected(antennaConfig) === true ) {\n        return 'opacity-100';\n      } else {\n        return 'opacity-25';\n      }\n    }\n  }\n\n /**\n  * Get a placemark object from an id to use position data\n  */\n  getPlacemarkObject(placemark) {\n    const placemark_id = placemark;\n    return this.placemarks[placemark_id];\n  }\n\n  /**\n   * Check if an specific antenna marker was selected\n   * through its related alarm configuration\n   */\n  isSelected(antennaConfig) {\n    if (this.selectedAntenna === null) {\n      return false;\n    } else {\n      return this.selectedAntenna.placemark === antennaConfig.placemark;\n    }\n\n  }\n\n  /**\n   * On click action for the antenna markers\n   */\n  onClick(antennaConfig) {\n    if (this.isSelected(antennaConfig)) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = antennaConfig;\n    }\n    this.clickedAntennaMarker.emit(this.selectedAntenna);\n  }\n\n}\n\n    \n\n    \n        \n\n   \n\n     \n\n     \n\n     \n       \n         \n\n           \n\n             \n               \n                \n                \n              \n            \n\n          \n\n         \n\n       \n     \n\n\n\n   \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n  Modules\n  AntennasModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AntennaMarkerComponent\n                            \n                            \n                                AntennasComponent\n                            \n                            \n                                AntennasMapComponent\n                            \n                            \n                                AntennasSidebarComponent\n                            \n                            \n                                AntennasSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AntennasService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AntennasSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:46\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the {@link initialize} method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:40\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:43\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasConfig:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:31\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm configuration indexed by antennas group ID *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:34\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasSummaryConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:37\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** Dictionary of Alarm configuration indexed by antennas group ID **/\n  public antennasConfig: {[group: string]: AntennaConfig [] } = {};\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig() {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasConfig[key] = response[key] as AntennaConfig[];\n        }\n      }\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages() {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaName\n                            \n                            \n                                getAntennasByGroup\n                            \n                            \n                                getAntennasGroups\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaName(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the Antenna configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the antenna name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennasByGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennasByGroup(groupID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration by group\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AntennaConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennasGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennasGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas groups Ids defined in the configuration\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    List of groups IDS\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:101\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { RoutingService } from '../../data/routing.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit {\n\n  @Input() selectedAntenna = null;\n\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n   * @param {MapAntennaConfig} antennaConfig the Antenna configuration\n   * @returns {string} the antenna name to display\n   */\n  getAntennaName(antennaConfig: AntennaConfig ): string {\n    return  antennaConfig.antenna + ' (' + antennaConfig.placemark + ')';\n  }\n\n  /**\n  * Return the list of antennas groups Ids defined in the configuration\n  * @returns {list} List of groups IDS\n  */\n  getAntennasGroups(): string [] {\n    return Object.keys(this.antennasService.antennasConfig);\n  }\n\n  /**\n  * Return the list of Alarm configuration by group\n  * @returns {list} list of {@link AntennaConfig}\n  */\n  getAntennasByGroup(groupID: string): AntennaConfig [] {\n    return this.antennasService.antennasConfig[groupID];\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AntennaConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AntennaConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  */\n  onClick(alarmConfig: AntennaConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n     chevron_left  {{getAntennaName(this.selectedAntenna)}}  \n\n\n\n\n  \n     {{group}} \n    \n      \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Alarm ID\n        {{this.selectedAntenna.alarm}}\n      \n      \n        Antenna\n        {{this.selectedAntenna.antenna}}\n      \n      \n        Location (PAD)\n        {{this.selectedAntenna.placemark}}\n      \n    \n  \n  \n    Go to Table\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS      chevron_left  {{getAntennaName(this.selectedAntenna)}}         {{group}}                                                   Alarm ID        {{this.selectedAntenna.alarm}}                    Antenna        {{this.selectedAntenna.antenna}}                    Location (PAD)        {{this.selectedAntenna.placemark}}                  Go to Table  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:41\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.antennasService.antennasSummaryConfig);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              STATUS\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    STATUS                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                            Instantiates the related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { outlets: { primary: any; actions: any; }; } | { outlets: { primary: any; actions?: undefined; }...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Instantiates the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNavigationCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navigationSidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Overview', link: 'overview', icon: 'ias_overview', svgIcon: true},\n    { title: 'Weather', link: 'weather', icon: 'ias_weather', svgIcon: true},\n    { title: 'Antennas', link: 'antennas', icon: 'ias_antenna', svgIcon: true},\n    { title: 'Table', link: 'tabular', icon: 'ias_table', svgIcon: true}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /*\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  // TODO: Use only custom svgIcons\n  navigationSidenavItems = [\n    { title: 'Overview', link: 'overview', icon: 'ias_overview', svgIcon: true},\n    { title: 'Weather', link: 'weather', icon: 'ias_weather', svgIcon: true},\n    { title: 'Antennas', link: 'antennas', icon: 'ias_antenna', svgIcon: true},\n    { title: 'Table', link: 'tabular', icon: 'ias_table', svgIcon: true}\n  ];\n\n  /**\n   * Instantiates the related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Instantiates the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n  }\n\n  getActionsLink(item: any) {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n  \n\n  \n    \n      \n        \n          \n            \n              {{ item.icon }}\n            \n            \n              {{ item.icon }}\n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                                                               {{ item.icon }}                                      {{ item.icon }}                        {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppModule -->\n\nMaterialSandboxComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                MaterialSandboxComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    OverviewModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TabularModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_BASE_HREF } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { HealthModule } from './health/health.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { MapModule } from './map/map.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppComponent } from './app.component';\nimport { TabularViewComponent } from './tabular/tabular-view/tabular-view.component';\nimport { OverviewComponent } from './overview/overview/overview.component';\nimport { AckComponent } from './actions/ack/ack.component';\nimport { ShelveComponent } from './actions/shelve/shelve.component';\nimport { WeatherComponent } from './weather/weather/weather.component';\nimport { AlarmComponent } from './shared/alarm/alarm.component';\nimport { AntennasComponent } from './antennas/antennas/antennas.component';\n\nimport { HttpModule } from '@angular/http';\nimport { MaterialSandboxComponent } from './material-sandbox/material-sandbox.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'overview', component: OverviewComponent },\n  { path: 'tabular', component: TabularViewComponent },\n  { path: 'tabular/:filter', component: TabularViewComponent },\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions'},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions'},\n  { path: 'weather', component: WeatherComponent},\n  { path: 'sandbox', component: MaterialSandboxComponent},\n  { path: 'antennas', component: AntennasComponent},\n];\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent,\n    MaterialSandboxComponent,\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    HttpModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object  associated to the buttons\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object  associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfigurationData\n                            \n                            \n                                getRefreshRateParameters\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRefreshRateParameters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRefreshRateParameters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Get refresh rate parameters from IAS configuration data\nThese are refresh rate value and related multiplier factor\n\n\n                            \n                            \n                            \n                                Returns :     { 'refreshRate': any; 'broadcastFactor': any; }\n\n                            \n                                \n                                    contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:23\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:18\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {forkJoin as observableForkJoin,  BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Rx';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { Iasio } from '../data/iasio';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      const iasConfigurationData = res[0];\n      this.iasConfiguration = iasConfigurationData;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh rate parameters from IAS configuration data\n  * These are refresh rate value and related multiplier factor\n  * @returns {json} contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n  */\n  getRefreshRateParameters() {\n    return {\n      'refreshRate': this.iasConfiguration['refresh_rate'],\n      'broadcastFactor': this.iasConfiguration['broadcast_factor']\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the services and data models\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AlarmService\n                            \n                            \n                                     CdbService\n                            \n                            \n                                     HttpClientService\n                            \n                            \n                                     RoutingService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { RoutingService } from './routing.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    RoutingService,\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n  Modules\n  HealthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the components associated to the health of the IAS\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HealthSummaryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HealthSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:19\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:48\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.alarmId);\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n    this.alarmId = 'IAS-Health-Global';\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-valid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-valid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-valid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-invalid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-invalid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              IAS HEALTH\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    IAS HEALTH                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:13\n                            \n                        \n\n                \n                    \n                            The \"constructor\" \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /** The \"constructor\" */\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    console.log('HTTP GET FROM URL: ', url);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  IasMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for the required Angular Material components\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_0:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_1:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_2:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_3:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_4:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n  set_valid = Assets.ICONS + 'set-valid.svg';\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                    \n                        contains the configuration to draw the map\n\n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                    \n                        Defines wether or no there is data available to draw the map\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n  Modules\n  MapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MapComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: , pathsGroups: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pathsGroups\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup) {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                material-sandbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/material-sandbox/material-sandbox.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Executed when initiating the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that displays some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.component.html',\n  styleUrls: ['./material-sandbox.component.scss']\n})\nexport class MaterialSandboxComponent implements OnInit {\n\n  /**\n  * Constructor of the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when initiating the component\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Primary\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nAccent\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nWarn\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nBackground\n\n   status-bar \n   app-bar \n   background \n   hover \n   card \n   dialog \n   disabled-button \n\n\n   raised-button \n   focused-button \n   selected-button \n   selected-disabled-button \n   disabled-button-toggle \n   unselected-chip \n   disabled-list-option \n\n\nForeground\n\n   base \n   divider \n   dividers \n   disabled \n   disabled-button \n   disabled-text \n\n\n   hint-text \n   secondary-text \n   icon \n   icons \n   text \n   slider-min \n   slider-off \n   slider-off-active \n\n\n\n\n\n\nMaterial Toggle\nDefault \nPrimary \nAccent \nWarn\n\nBasic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\n\n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Primary   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Accent   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Warn   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Background   status-bar    app-bar    background    hover    card    dialog    disabled-button    raised-button    focused-button    selected-button    selected-disabled-button    disabled-button-toggle    unselected-chip    disabled-list-option Foreground   base    divider    dividers    disabled    disabled-button    disabled-text    hint-text    secondary-text    icon    icons    text    slider-min    slider-off    slider-off-active Material ToggleDefault Primary Accent WarnBasic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    Link          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n      \n         POWER \n          \n          \n      \n      \n         OBSERVATIONS \n          \n          \n      \n    \n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n      \n         NETWORK \n          \n        \n\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     ANTENNAS                                                          POWER                                          OBSERVATIONS                                                  WEATHER                                                                  IAS HEALTH                                                          NETWORK                                       '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n  Modules\n  OverviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OverviewCardComponent\n                            \n                            \n                                OverviewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    OverviewCardComponent\n                            \n                            \n                                    OverviewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToAntennas\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TabularViewComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TabularViewComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TabularViewComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TabularViewComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AlarmComponent\n                            \n                            \n                                    AlarmHeaderComponent\n                            \n                            \n                                    StatusViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, router: Router, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system Router to handle navigation\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object  associated to the button\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Router } from '@angular/router';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object  associated to the button\n   */\n  @Input() alarm: Alarm;\n\n\n  /**\n   * @param {SidenavService} sidenavService Service to manage the Acknowledge and Shelve sidenav\n   * @param {Router} router system Router to handle navigation\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private router: Router,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  */\n  onClick(event) {\n    this.router.navigate([{outlets: {actions: ['shelve', this.alarm.core_id]}}]);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveComponent.html":{"url":"components/ShelveComponent.html","title":"component - ShelveComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve/shelve.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to acknowledge alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve\n            \n\n            \n                styleUrls\n                shelve.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shelve.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarm_id\n                            \n                            \n                                defaultTimeout\n                            \n                            \n                                form\n                            \n                            \n                                message\n                            \n                            \n                                requestStatus\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                            \n                                timeout\n                            \n                            \n                                timeouts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSend\n                            \n                            \n                                getActionButtonText\n                            \n                            \n                                getResponseMessageText\n                            \n                            \n                                getResponseMessageTitle\n                            \n                            \n                                getTitleText\n                            \n                            \n                                    Private\n                                hideSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                reload\n                            \n                            \n                                shelve\n                            \n                            \n                                    Private\n                                showSpinner\n                            \n                            \n                                toggleShelveUnshelve\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, alarmService: AlarmService, route: ActivatedRoute, sidenavService: SidenavService, spinnerService: NgxSpinnerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve/shelve.component.ts:79\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canSend\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanSend()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:222\n                            \n                        \n\n\n                \n                    \n                            Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the action can be sent, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionButtonText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionButtonText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:245\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the action button, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:268\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageTitle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:256\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitleText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitleText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:230\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the title\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:213\n                            \n                        \n\n\n                \n                    \n                            Hides the spinner after the Alarm has been shelved/unshelved\nIt also unblocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Get the alarmID from the url, create the form and open the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reload\n                            \n                            \n                        \n                    \n                \n                \n                    \nreload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:124\n                            \n                        \n\n\n                \n                    \n                            Cleans the component and reloads the Alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the shelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:204\n                            \n                        \n\n\n                \n                    \n                            Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\nIt also blocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleShelveUnshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleShelveUnshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Send the shelve/unshelve request through the method provided by the AlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the unshelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:56\n                            \n                        \n\n                \n                    \n                        Alarm object to be shelved/unshelved\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:51\n                            \n                        \n\n                \n                    \n                        Id of the Alarm object to be shelved/unshelved\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTimeout:     \n\n                    \n                \n                    \n                        \n                            Default value : this.timeouts[0].value\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:46\n                            \n                        \n\n                \n                    \n                        Default timeout for shelving\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:61\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:66\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestStatus:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:79\n                            \n                        \n\n                \n                    \n                        Stores wether or not the action has been executed requestStatusly\nIf requestStatus = 0, the request has not been sent yet\nIf requestStatus = 1, the request was successfully\nIf requestStatus = -1, the request has failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:71\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve timeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeouts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeouts:     TimeoutOption[]\n\n                    \n                \n                    \n                        \n                            Type :     TimeoutOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve/shelve.component.ts:34\n                            \n                        \n\n                \n                    \n                        Timeout options for shelving alarms\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /*\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload() {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /*\n  * Closes the sidenav\n  */\n  onClose() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve() {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(this.alarm.core_id, message, timeout).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve() {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner() {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner() {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} true if the action can be sent, false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the action button, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  getResponseMessageTitle(): string {\n    if (!this.alarm.shelved) {\n      return 'Shelving results';\n    } else {\n      return 'Unshelving results';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        return 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        return 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      let response = '';\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n      return response;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n     {{ getTitleText() }} \n    \n      &times;\n    \n  \n\n  \n    \n      \n        \n          \n            Alarm ID\n            {{alarm?.core_id}}\n          \n          \n            Description\n            {{ alarm?.description }}\n          \n        \n      \n\n       \n\n      \n        \n           {{ getResponseMessageTitle() }} \n           {{ getResponseMessageText() }} \n        \n      \n\n      \n        \n          \n\n          \n             Information required to shelve the Alarm \n\n            \n               Reason for shelving \n              \n               You must write a message in order to Shelve \n            \n\n            \n               Time in shelf \n              \n                \n                  {{timeout.viewValue}}\n                \n              \n               You must select a duration in order to Shelve \n            \n          \n\n        \n      \n    \n  \n\n  \n     \n    \n      Close\n    \n\n    \n      Cancel\n      {{ getActionButtonText() }}\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ getTitleText() }}           ×                                                Alarm ID            {{alarm?.core_id}}                                Description            {{ alarm?.description }}                                                        {{ getResponseMessageTitle() }}            {{ getResponseMessageText() }}                                                              Information required to shelve the Alarm                            Reason for shelving                              You must write a message in order to Shelve                                        Time in shelf                                                 {{timeout.viewValue}}                                             You must select a duration in order to Shelve                                                            Close              Cancel      {{ getActionButtonText() }}      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  constructor() { }\n\n  private sidenav: MatSidenav;\n\n  public canClose = true;\n\n\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  public open() {\n    return this.sidenav.open();\n  }\n\n  public close() {\n    return this.sidenav.close();\n  }\n\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the {@link alarmTags}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsPrioritySet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid.svg',\n      set_critical: Assets.ICONS + 'set-valid.svg',\n      unknown: Assets.ICONS + 'unknown-valid.svg',\n      maintenance: Assets.ICONS + 'maintenance-valid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid.svg',\n      set_critical: Assets.ICONS + 'set-invalid.svg',\n      unknown: Assets.ICONS + 'unknown-invalid.svg',\n      maintenance: Assets.ICONS + 'maintenance-invalid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n  Modules\n  TabularModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Table view\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LegendComponent\n                            \n                            \n                                TabularViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TabularViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { StatusViewComponent } from '../shared/status-view/status-view.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TabularViewComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabularViewComponent.html":{"url":"components/TabularViewComponent.html","title":"component - TabularViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabularViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/tabular-view/tabular-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component that dispays all the Alarms in a table\nThe user can change the default sorting by clicking on the headers and filter\nby typing in an input field\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabular-view\n            \n\n            \n                styleUrls\n                tabular-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabular-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _setFilterActivated\n                            \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Private\n                                dateFormat\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                filterPredicate\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Private\n                                filterValueForSetAlarms\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                            \n                                    Private\n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clearFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                toggleFilterOnlySetAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/tabular-view/tabular-view.component.ts:74\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Applies the filter ot the Table\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Clears the filter and applies this empty filtering (i.e. no filtering)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Applies the table's default sorting after its initialization \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from CdbService and AlarmService\nwhen the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Create the table when the component is initializated\nSubscribes to new alarms from the AlarmService\nRetrieves filter values passed by the URL and applies them to the table\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onKeyUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nonKeyUp(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            This function is executed after a key is pressed in the keywords input box\nIf the user pressed \"Escape\", then the filters are cleared by calling {@link clearFilter}, if not, the filters are applied normally\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the event that triggered the function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFilterOnlySetAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFilterOnlySetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Toggle the filtering for only set Alarm objects ON/OFF\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _setFilterActivated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _setFilterActivated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:35\n                            \n                        \n\n                \n                    \n                        Defines wether the filter for only SET Alarm is activated or not.\nWhen the user writes either \"set\", \" set\" or \"set \" this field becomes true\nIf the user deletes \"set\" from the input field then this field becomes false\nThis attribute is binded to the state of the toggle slide switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:58\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     MatTableDataSource\n\n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:55\n                            \n                        \n\n                \n                    \n                        DataSource of the Table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:46\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['status', 'name',  'mode', 'timestamp', 'description', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:43\n                            \n                        \n\n                \n                    \n                        Array that defines which coulmns are going to be displayed and in which order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterPredicate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPredicate:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: Alarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:64\n                            \n                        \n\n                \n                    \n                        Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterString:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:38\n                            \n                        \n\n                \n                    \n                        String that stores the test input in the filter textfield \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterValueForSetAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterValueForSetAlarms:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'set'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:52\n                            \n                        \n\n                \n                    \n                        String to define the keyword to filter SET Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the MatSort, the component that defines the sorting of the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        table:     MatTable\n\n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the MatTable, the component that defines the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:192\n                                \n                            \n                    \n                        \n                                Returns the filters applied to the Table\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toggleStatus\n                    \n                \n\n                \n                    \n                        gettoggleStatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:200\n                                \n                            \n                    \n                        \n                                Returns the status of the Toggle for the filtering of set Alarms\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Injectable, OnInit, ViewChild, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Observable ,  BehaviorSubject ,  SubscriptionLike as ISubscription } from 'rxjs';\nimport { MatTableDataSource, MatSort, MatSortable, MatTable } from '@angular/material';\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { ActivatedRoute } from '@angular/router';\nimport { Alarm, OperationalMode, Validity } from '../../data/alarm';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Locale } from '../../settings';\n\n/**\n* Component that dispays all the Alarms in a table\n*\n* The user can change the default sorting by clicking on the headers and filter\n* by typing in an input field\n*/\n@Component({\n  selector: 'app-tabular-view',\n  templateUrl: './tabular-view.component.html',\n  styleUrls: ['./tabular-view.component.scss']\n})\nexport class TabularViewComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  /** Reference to the MatTable, the component that defines the table */\n  @ViewChild(MatTable) table: MatTable;\n\n  /** Reference to the MatSort, the component that defines the sorting of the table */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n  * Defines wether the filter for only SET {@link Alarm} is activated or not.\n  * When the user writes either \"set\", \" set\" or \"set \" this field becomes true\n  * If the user deletes \"set\" from the input field then this field becomes false\n  * This attribute is binded to the state of the toggle slide switch\n  */\n  public _setFilterActivated = false;\n\n  /** String that stores the test input in the filter textfield */\n  public filterString = '';\n\n  /**\n  * Array that defines which coulmns are going to be displayed and in which order\n  */\n  public displayedColumns = ['status', 'name',  'mode', 'timestamp', 'description', 'actions'];\n\n  /** String to store the formatting of dates, read form the settings */\n  private dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  private timezone: string;\n\n  /** String to define the keyword to filter SET {@link Alarm} */\n  private filterValueForSetAlarms = 'set';\n\n  /** DataSource of the Table */\n  public dataSource: MatTableDataSource;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /**\n  * Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n  * @returns {boolean} true if the row matches the filter, false if not\n  */\n  public filterPredicate: (\n    (data: Alarm, filterString: string) => boolean) = (data: Alarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private route: ActivatedRoute\n  ) {}\n\n  /**\n   * Create the table when the component is initializated\n   * Subscribes to new alarms from the {@link AlarmService}\n   * Retrieves filter values passed by the URL and applies them to the table\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n    this.sort.sort( {\n      id: 'status',\n      start: 'asc'\n    });\n    this.dataSource = new MatTableDataSource();\n    this.dataSource.data = this.alarmService.alarmsArray;\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      this.dataSource.data = this.alarmService.alarmsArray;\n    });\n    let filterValue = this.route.snapshot.paramMap.get('filter');\n    if (filterValue && filterValue !== '') {\n      filterValue = filterValue.replace('_', ' ');\n      this.applyFilter(filterValue);\n    }\n  }\n\n  /** Applies the table's default sorting after its initialization */\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n  * Unsubscribes from {@link CdbService} and {@link AlarmService}\n  * when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n  /**\n  * This function is executed after a key is pressed in the keywords input box\n  * If the user pressed \"Escape\", then the filters are cleared by calling {@link clearFilter}, if not, the filters are applied normally\n  * @param {event} event the event that triggered the function\n  */\n  onKeyUp(event) {\n    if (event.key === 'Escape') {\n      this.clearFilter();\n    } else {\n      this.applyFilter(event.target.value);\n    }\n  }\n\n  /**\n  * Clears the filter and applies this empty filtering (i.e. no filtering)\n  */\n  clearFilter() {\n    this.filterString = '';\n    this.applyFilter(this.filterString);\n  }\n\n  /**\n  * Applies the filter ot the Table\n  * @param {string} filterValue the string containing keywords for filtering\n  */\n  applyFilter(filter: string) {\n    this.filterString = filter;\n    const arrayOfFilters = filter.split(' ');\n    // If \"set\" IS in the array, then it is activated\n    if (arrayOfFilters.indexOf(this.filterValueForSetAlarms) >= 0 ) {\n      this._setFilterActivated = true;\n\n    } else { // If \"set\" NOT in the field, then it is deactivated\n      this._setFilterActivated = false;\n    }\n    filter = filter.trim();\n    filter = filter.toLowerCase();\n    this.dataSource.filter = filter;\n  }\n\n  /**\n  * Toggle the filtering for only set {@link Alarm} objects ON/OFF\n  */\n  toggleFilterOnlySetAlarm() {\n    if (this.filterString == null) {\n      this.filterString = '';\n    }\n    const arrayOfFilters = this.filterString.split(' ');\n    const indexOfSet = arrayOfFilters.indexOf(this.filterValueForSetAlarms);\n\n    // If activated then should deactivate:\n    if (this._setFilterActivated) {\n      if ( indexOfSet >= 0 ) {\n        arrayOfFilters.splice(indexOfSet, 1);\n      }\n    } else { // If deactivated then should activate:\n      if ( indexOfSet \n    \n\n    \n        \n\n  \n    \n  \n\n\n  \n\n    \n      \n        \n        \n          close\n        \n      \n      \n        Show only set alarms\n      \n    \n\n    \n\n      \n      \n        \n           STATUS \n        \n        \n          \n            \n          \n        \n      \n\n      \n      \n        \n           ALARM NAME \n        \n         {{alarm.name}} \n      \n\n      \n      \n        \n           MODE \n        \n         {{alarm.operationalMode}} \n      \n\n      \n      \n        \n           LAST CHANGE TIME \n        \n         {{ alarm.timestamp | date: dateFormat: timezone }} \n      \n\n      \n      \n        \n           DESCRIPTION \n        \n         {{alarm.description}} \n      \n\n      \n      \n        \n           ACTIONS \n        \n        \n          \n        \n      \n\n      \n      \n    \n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              close                            Show only set alarms                                             STATUS                                                                                              ALARM NAME                  {{alarm.name}}                                      MODE                  {{alarm.operationalMode}}                                      LAST CHANGE TIME                  {{ alarm.timestamp | date: dateFormat: timezone }}                                      DESCRIPTION                  {{alarm.description}}                                      ACTIONS                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabularViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '0:15:00', viewValue: '15 minutes'},\n    {value: '0:30:00', viewValue: '30 minutes'},\n    {value: '1:00:00', viewValue: '1 hour'},\n    {value: '2:00:00', viewValue: '2 hours'},\n    {value: '6:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private router: Router\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.form = this.formBuilder.group({\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /*\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.close();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload() {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /*\n  * Closes the sidenav\n  */\n  onClose() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve() {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(this.alarm.core_id, message, timeout).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve() {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner() {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner() {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} true if the action can be sent, false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the action button, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  getResponseMessageTitle(): string {\n    if (!this.alarm.shelved) {\n      return 'Shelving results';\n    } else {\n      return 'Unshelving results';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        return 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        return 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      let response = '';\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n      return response;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\n\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\n\nimport { Assets } from '../../../settings';\n\n\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\nand a map (instantiated by a {@link WeatherMap})\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:15\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStation:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { WeatherStationConfig } from '../weather.service';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  selectedStation: WeatherStationConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  changeSelectedStation(selectedStation: WeatherStationConfig) {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:36\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\n\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\n\n\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n\n  ngOnInit() {  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Weather system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherBackupWsMarkerComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WeatherDataMarkerComponent\n                            \n                            \n                                WeatherMapComponent\n                            \n                            \n                                WeatherPrimaryWsConnectorComponent\n                            \n                            \n                                WeatherPrimaryWsMarkerComponent\n                            \n                            \n                                WeatherSidebarComponent\n                            \n                            \n                                WeatherStationSidebarComponent\n                            \n                            \n                                WeatherSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WeatherSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                    \n                        Array of coordinates for the connector path \n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Value to highlight the connector \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getPath() {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\n\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\n\nimport { Assets } from '../../../settings';\n\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the WeatherModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                markerImageSet\n                            \n                            \n                                    Public\n                                markerImageUnreliableSet\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                weatherMapName\n                            \n                            \n                                    Public\n                                weatherStationsConfig\n                            \n                            \n                                    Public\n                                weatherSummaryConfig\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAntennas\n                            \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadImages\n                            \n                            \n                                loadWeatherStationsConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the {@link initialize} method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:93\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWeatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWeatherStationsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:47\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:59\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:56\n                            \n                        \n\n                \n                    \n                        Set of Marker icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:68\n                            \n                        \n\n                \n                    \n                        Set of Marker Unreliable icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:50\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:62\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:78\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherStationsConfig:     WeatherStationConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:75\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm Ids of the Weather Stations, indexed by placemark *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherSummaryConfig:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:71\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the weather summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:53\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:65\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  // public weatherStationsConfig: {[placemark: string]: WeatherStationConfig } = {};\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return ['A001', 'A002', 'A003'];\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSidebarComponent.html":{"url":"components/WeatherSidebarComponent.html","title":"component - WeatherSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms in an interactive sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-sidebar\n            \n\n            \n                styleUrls\n                weather-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyAntennas\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                panelClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, clipboardService: ClipboardService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        clipboardService\n                                                  \n                                                        \n                                                                    ClipboardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                    \n                            \n                            Type:    WeatherStationConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        panelClicked\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Copy list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the data was copied to the clipboard, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(station: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        station\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string, action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n* Component used to display Weather Alarms in an interactive sidebar\n*/\n@Component({\n  selector: 'app-weather-sidebar',\n  templateUrl: './weather-sidebar.component.html',\n  styleUrls: ['./weather-sidebar.component.scss']\n})\nexport class WeatherSidebarComponent implements OnInit {\n\n  @Input() selectedStation: WeatherStationConfig = null;\n\n  @Output() panelClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private clipboardService: ClipboardService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  /**\n  * Executed after the component is instantiated\n  */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n  * Copy list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {boolean} true if the data was copied to the clipboard, false if not\n  */\n  copyAntennas(station: string): boolean {\n    const antennas = this.getAntennas(station);\n    const result = antennas.join(',');\n    const status = this.clipboardService.copyFromContent(result);\n    let message = '';\n    if (status) {\n      message = 'Antennas copied to clipboard';\n    } else {\n      message = 'ERROR: Antennas were not copied!';\n    }\n    this.openSnackBar(message, 'Done');\n    return status;\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return this.weatherService.getAntennas(station);\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  isSelected(stationConfig: WeatherStationConfig) {\n    return this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark);\n  }\n\n  onClick(stationConfig: WeatherStationConfig) {\n    if ( this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark) ) {\n      this.selectedStation = null;\n    } else {\n      this.selectedStation = stationConfig;\n    }\n    this.panelClicked.emit(this.selectedStation);\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 20000,\n      panelClass: ['snackbar']\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    WEATHER STATIONS\n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n              Station\n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n          \n             Nearby Antennas \n            \n               &nbsp;  Copy antennas \n            \n          \n          \n            \n               {{antenna}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      WEATHER STATIONS                                                                                          Stationearby Antennas                               Copy antennas                                                            {{antenna}}                                           '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherStationConfig.html":{"url":"classes/WeatherStationConfig.html","title":"class - WeatherStationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherStationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the Alarm objects associated to a WeatherStation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                humidity\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                            Builds a new WeatherStationConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                        ID of the humidity Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:16\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:19\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temperature:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:22\n                            \n                        \n\n                \n                    \n                        ID of the temperature Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windspeed:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the windspeed Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  // public weatherStationsConfig: {[placemark: string]: WeatherStationConfig } = {};\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(station: string): string[] {\n    return ['A001', 'A002', 'A003'];\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                    \n                            \n                            Type:    WeatherStationConfig\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                            \n                            Type:    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     \"\" | \"highlighted\"\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:26\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /* Alarms Ids of the weather station */\n  @Input() stationConfig: WeatherStationConfig;\n\n  @Input() selectedAlarm: WeatherStationConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass() {\n    if (this.selectedAlarm && (this.selectedAlarm.station === this.stationConfig.station)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, weatherService: WeatherService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(keyword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the instance of the Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../data/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public weatherService: WeatherService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(keyword: string): Alarm {\n    if (this.weatherService.weatherSummaryConfig) {\n      return this.alarmService.get(this.weatherService.weatherSummaryConfig[keyword]);\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              WIND SPEED\n              \n                \n              \n          \n      \n      \n          \n              HUMIDITY\n              \n                \n              \n          \n      \n      \n          \n              TEMPERATURE\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    WIND SPEED                                                                                          HUMIDITY                                                                                          TEMPERATURE                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick(event) {\n    if (!this.url.startsWith('http://')) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/actions/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedTreeData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarmData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/actions/ack/ack.component.ts\n            \n            \n                component\n            \n            \n                AckComponent\n            \n            \n                86 %\n                (19/22)\n            \n        \n        \n            \n                \n                    src/app/actions/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve/shelve.component.ts\n            \n            \n                component\n            \n            \n                ShelveComponent\n            \n            \n                84 %\n                (21/25)\n            \n        \n        \n            \n                \n                    src/app/actions/shelve/shelve.component.ts\n            \n            \n                interface\n            \n            \n                TimeoutOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/actions/sidenav.service.ts\n            \n            \n                injectable\n            \n            \n                SidenavService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/actions/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                component\n            \n            \n                AntennaMarkerComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                class\n            \n            \n                AlarmColorsSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            \n                component\n            \n            \n                AntennasMapComponent\n            \n            \n                79 %\n                (19/24)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            \n                component\n            \n            \n                AntennasSidebarComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            \n                component\n            \n            \n                AntennasSummaryComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas.service.ts\n            \n            \n                class\n            \n            \n                AntennaConfig\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas.service.ts\n            \n            \n                injectable\n            \n            \n                AntennasService\n            \n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                    src/app/antennas/antennas/antennas.component.ts\n            \n            \n                component\n            \n            \n                AntennasComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/map/fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/app/map/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/material-sandbox/material-sandbox.component.ts\n            \n            \n                component\n            \n            \n                MaterialSandboxComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                AntennasSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                WeatherSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm-header/alarm-header.component.ts\n            \n            \n                component\n            \n            \n                AlarmHeaderComponent\n            \n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm-header/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                alarms_date\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                datepipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                alarm_types\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherStationsConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherBackupWsMarkerComponent\n            \n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherDataMarkerComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsConnectorComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsMarkerComponent\n            \n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-map/weather-map.component.ts\n            \n            \n                component\n            \n            \n                WeatherMapComponent\n            \n            \n                71 %\n                (20/28)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherSidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherStationSidebarComponent\n            \n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather.service.ts\n            \n            \n                class\n            \n            \n                WeatherStationConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                    src/app/weather/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    src/environments/environment.docker.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.2\n        \n            @angular/cdk : ^6.4.3\n        \n            @angular/common : 6.1.2\n        \n            @angular/compiler : 6.1.2\n        \n            @angular/core : 6.1.2\n        \n            @angular/flex-layout : ^6.0.0-beta.17\n        \n            @angular/forms : 6.1.2\n        \n            @angular/http : 6.1.2\n        \n            @angular/material : ^6.4.3\n        \n            @angular/platform-browser : 6.1.2\n        \n            @angular/platform-browser-dynamic : 6.1.2\n        \n            @angular/platform-server : 6.1.2\n        \n            @angular/router : 6.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.0\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.7\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            ngx-clipboard : ^11.1.3\n        \n            ngx-spinner : ^6.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value: 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value: 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: 7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppModule -->\n\nMaterialSandboxComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        32 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
